diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-subgraph-provider.d.ts
new file mode 100644
index 0000000..f0da9e3
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-subgraph-provider.d.ts
@@ -0,0 +1,33 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { SubgraphPool } from '../routers/alpha-router/functions/get-candidate-pools';
+import { ICache } from './cache';
+import { ProviderConfig } from './provider';
+import { V3SubgraphPool } from './v3/subgraph-provider';
+declare type ChainTokenList = {
+    readonly [chainId in ChainId]: Token[];
+};
+export declare const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList;
+export interface IV3SubgraphProvider {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
+}
+export interface ISubgraphProvider<TSubgraphPool extends SubgraphPool> {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+}
+export declare abstract class CachingSubgraphProvider<TSubgraphPool extends SubgraphPool> implements ISubgraphProvider<TSubgraphPool> {
+    private chainId;
+    protected subgraphProvider: ISubgraphProvider<TSubgraphPool>;
+    private cache;
+    private protocol;
+    private SUBGRAPH_KEY;
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     * @param protocol Subgraph protocol version
+     */
+    constructor(chainId: ChainId, subgraphProvider: ISubgraphProvider<TSubgraphPool>, cache: ICache<TSubgraphPool[]>, protocol: Protocol);
+    getPools(): Promise<TSubgraphPool[]>;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-subgraph-provider.js
new file mode 100644
index 0000000..d9d2864
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-subgraph-provider.js
@@ -0,0 +1,130 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.CachingSubgraphProvider = exports.BASES_TO_CHECK_TRADES_AGAINST = void 0;
+const sdk_core_1 = require("@uniswap/sdk-core");
+const util_1 = require("../util");
+const token_provider_1 = require("./token-provider");
+exports.BASES_TO_CHECK_TRADES_AGAINST = {
+    [sdk_core_1.ChainId.MAINNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MAINNET],
+        token_provider_1.DAI_MAINNET,
+        token_provider_1.USDC_MAINNET,
+        token_provider_1.USDT_MAINNET,
+        token_provider_1.WBTC_MAINNET,
+        token_provider_1.WSTETH_MAINNET,
+    ],
+    [sdk_core_1.ChainId.GOERLI]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.GOERLI]],
+    [sdk_core_1.ChainId.SEPOLIA]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SEPOLIA]],
+    //v2 not deployed on [arbitrum, polygon, celo, gnosis, moonbeam, bnb, avalanche] and their testnets
+    [sdk_core_1.ChainId.OPTIMISM]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.OPTIMISM],
+        token_provider_1.USDC_OPTIMISM,
+        token_provider_1.DAI_OPTIMISM,
+        token_provider_1.USDT_OPTIMISM,
+        token_provider_1.WBTC_OPTIMISM,
+        token_provider_1.OP_OPTIMISM,
+    ],
+    [sdk_core_1.ChainId.ARBITRUM_ONE]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ARBITRUM_ONE],
+        token_provider_1.WBTC_ARBITRUM,
+        token_provider_1.DAI_ARBITRUM,
+        token_provider_1.USDC_ARBITRUM,
+        token_provider_1.USDC_NATIVE_ARBITRUM,
+        token_provider_1.USDT_ARBITRUM,
+        token_provider_1.ARB_ARBITRUM,
+    ],
+    [sdk_core_1.ChainId.ARBITRUM_GOERLI]: [],
+    [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: [],
+    [sdk_core_1.ChainId.OPTIMISM_GOERLI]: [],
+    [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: [],
+    [sdk_core_1.ChainId.POLYGON]: [token_provider_1.USDC_POLYGON, token_provider_1.WETH_POLYGON, token_provider_1.WMATIC_POLYGON],
+    [sdk_core_1.ChainId.POLYGON_MUMBAI]: [],
+    [sdk_core_1.ChainId.CELO]: [token_provider_1.CELO, token_provider_1.CUSD_CELO, token_provider_1.CEUR_CELO, token_provider_1.DAI_CELO],
+    [sdk_core_1.ChainId.CELO_ALFAJORES]: [],
+    [sdk_core_1.ChainId.GNOSIS]: [],
+    [sdk_core_1.ChainId.MOONBEAM]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MOONBEAM],
+        token_provider_1.DAI_MOONBEAM,
+        token_provider_1.USDC_MOONBEAM,
+        token_provider_1.WBTC_MOONBEAM,
+    ],
+    [sdk_core_1.ChainId.BNB]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BNB],
+        token_provider_1.BUSD_BNB,
+        token_provider_1.DAI_BNB,
+        token_provider_1.USDC_BNB,
+        token_provider_1.USDT_BNB,
+        token_provider_1.BTC_BNB,
+        token_provider_1.ETH_BNB,
+    ],
+    [sdk_core_1.ChainId.AVALANCHE]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.AVALANCHE],
+        token_provider_1.USDC_AVAX,
+        token_provider_1.DAI_AVAX,
+    ],
+    [sdk_core_1.ChainId.BASE_GOERLI]: [],
+    [sdk_core_1.ChainId.BASE]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BASE], token_provider_1.USDC_BASE],
+    [sdk_core_1.ChainId.ZORA]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZORA]],
+    [sdk_core_1.ChainId.ZORA_SEPOLIA]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZORA_SEPOLIA]],
+    [sdk_core_1.ChainId.ROOTSTOCK]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ROOTSTOCK]],
+    [sdk_core_1.ChainId.BLAST]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BLAST], token_provider_1.USDB_BLAST],
+    [sdk_core_1.ChainId.ZKSYNC]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC],
+        token_provider_1.USDCE_ZKSYNC,
+        token_provider_1.USDC_ZKSYNC,
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_TESTNET],
+        token_provider_1.USDC_ABSTRACT_TESTNET,
+    ],
+    [sdk_core_1.ChainId.ZERO]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZERO], token_provider_1.USDC_ZERO],
+    [sdk_core_1.ChainId.BOB]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BOB], token_provider_1.USDC_BOB],
+    [sdk_core_1.ChainId.CYBER]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.CYBER], token_provider_1.USDC_CYBER],
+    [sdk_core_1.ChainId.SHAPE]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SHAPE], token_provider_1.USDC_SHAPE],
+    [sdk_core_1.ChainId.INK]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.INK], token_provider_1.USDC_INK],
+    [sdk_core_1.ChainId.REDSTONE]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE],
+        token_provider_1.USDC_REDSTONE,
+    ],
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE_GARNET],
+        token_provider_1.USDC_REDSTONE_GARNET,
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_MAINNET],
+        token_provider_1.USDC_ABSTRACT_MAINNET,
+    ],
+    [sdk_core_1.ChainId.ANIME_TESTNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME_TESTNET],
+        token_provider_1.USDC_ANIME_TESTNET,
+    ],
+    [sdk_core_1.ChainId.ANIME]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME], token_provider_1.USDC_ANIME],
+    [sdk_core_1.ChainId.MODE]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MODE], token_provider_1.USDC_MODE],
+};
+class CachingSubgraphProvider {
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     * @param protocol Subgraph protocol version
+     */
+    constructor(chainId, subgraphProvider, cache, protocol) {
+        this.chainId = chainId;
+        this.subgraphProvider = subgraphProvider;
+        this.cache = cache;
+        this.protocol = protocol;
+        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-${this.protocol}-${chainId}`;
+    }
+    async getPools() {
+        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
+        if (cachedPools) {
+            return cachedPools;
+        }
+        const pools = await this.subgraphProvider.getPools();
+        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
+        return pools;
+    }
+}
+exports.CachingSubgraphProvider = CachingSubgraphProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxnREFBbUQ7QUFHbkQsa0NBQWtEO0FBSWxELHFEQW1EMEI7QUFPYixRQUFBLDZCQUE2QixHQUFtQjtJQUMzRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDakIsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUU7UUFDekMsNEJBQVc7UUFDWCw2QkFBWTtRQUNaLDZCQUFZO1FBQ1osNkJBQVk7UUFDWiwrQkFBYztLQUNmO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUUsQ0FBQztJQUM1RCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO0lBQzlELG1HQUFtRztJQUNuRyxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDbEIsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUU7UUFDMUMsOEJBQWE7UUFDYiw2QkFBWTtRQUNaLDhCQUFhO1FBQ2IsOEJBQWE7UUFDYiw0QkFBVztLQUNaO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLFlBQVksQ0FBQyxFQUFFO1FBQ3RCLDhCQUF1QixDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFFO1FBQzlDLDhCQUFhO1FBQ2IsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLHFDQUFvQjtRQUNwQiw4QkFBYTtRQUNiLDZCQUFZO0tBQ2I7SUFDRCxDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsRUFBRTtJQUM3QixDQUFDLGtCQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxFQUFFO0lBQzlCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxFQUFFO0lBQzdCLENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLEVBQUU7SUFDOUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsNkJBQVksRUFBRSw2QkFBWSxFQUFFLCtCQUFjLENBQUM7SUFDL0QsQ0FBQyxrQkFBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUU7SUFDNUIsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMscUJBQUksRUFBRSwwQkFBUyxFQUFFLDBCQUFTLEVBQUUseUJBQVEsQ0FBQztJQUN0RCxDQUFDLGtCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRTtJQUM1QixDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRTtJQUNwQixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDbEIsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUM7UUFDekMsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLDhCQUFhO0tBQ2Q7SUFDRCxDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDYiw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLEdBQUcsQ0FBQztRQUNwQyx5QkFBUTtRQUNSLHdCQUFPO1FBQ1AseUJBQVE7UUFDUix5QkFBUTtRQUNSLHdCQUFPO1FBQ1Asd0JBQU87S0FDUjtJQUNELENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUMsRUFBRTtRQUNuQiw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLFNBQVMsQ0FBQztRQUMxQywwQkFBUztRQUNULHlCQUFRO0tBQ1Q7SUFDRCxDQUFDLGtCQUFPLENBQUMsV0FBVyxDQUFDLEVBQUUsRUFBRTtJQUN6QixDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLDBCQUFTLENBQUM7SUFDbEUsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUUsQ0FBQztJQUN4RCxDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLFlBQVksQ0FBRSxDQUFDO0lBQ3hFLENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLDhCQUF1QixDQUFDLGtCQUFPLENBQUMsU0FBUyxDQUFFLENBQUM7SUFDbEUsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxLQUFLLENBQUUsRUFBRSwyQkFBVSxDQUFDO0lBQ3RFLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNoQiw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBRTtRQUN4Qyw2QkFBWTtRQUNaLDRCQUFXO0tBQ1o7SUFDRCxDQUFDLGtCQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtRQUMxQiw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFFO1FBQ2xELHNDQUFxQjtLQUN0QjtJQUNELENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLDhCQUF1QixDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFFLEVBQUUsMEJBQVMsQ0FBQztJQUNuRSxDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLEdBQUcsQ0FBRSxFQUFFLHlCQUFRLENBQUM7SUFDaEUsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxLQUFLLENBQUUsRUFBRSwyQkFBVSxDQUFDO0lBQ3RFLENBQUMsa0JBQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLDhCQUF1QixDQUFDLGtCQUFPLENBQUMsS0FBSyxDQUFFLEVBQUUsMkJBQVUsQ0FBQztJQUN0RSxDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyw4QkFBdUIsQ0FBQyxrQkFBTyxDQUFDLEdBQUcsQ0FBRSxFQUFFLHlCQUFRLENBQUM7SUFDaEUsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xCLDhCQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFO1FBQzFDLDhCQUFhO0tBQ2Q7SUFDRCxDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7UUFDekIsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUU7UUFDakQscUNBQW9CO0tBQ3JCO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7UUFDMUIsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBRTtRQUNsRCxzQ0FBcUI7S0FDdEI7SUFDRCxDQUFDLGtCQUFPLENBQUMsYUFBYSxDQUFDLEVBQUU7UUFDdkIsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxhQUFhLENBQUU7UUFDL0MsbUNBQWtCO0tBQ25CO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsOEJBQXVCLENBQUMsa0JBQU8sQ0FBQyxLQUFLLENBQUUsRUFBRSwyQkFBVSxDQUFDO0lBQ3RFLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLDhCQUF1QixDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFFLEVBQUUsMEJBQVMsQ0FBQztDQUNwRSxDQUFDO0FBa0JGLE1BQXNCLHVCQUF1QjtJQU8zQzs7Ozs7O09BTUc7SUFDSCxZQUNVLE9BQWdCLEVBQ2QsZ0JBQWtELEVBQ3BELEtBQThCLEVBQzlCLFFBQWtCO1FBSGxCLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDZCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtDO1FBQ3BELFVBQUssR0FBTCxLQUFLLENBQXlCO1FBQzlCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFkcEIsaUJBQVksR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRSxDQUMxQyxrQkFBa0IsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLEVBQUUsQ0FBQztJQWM1QyxDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVE7UUFDbkIsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBRTFFLElBQUksV0FBVyxFQUFFO1lBQ2YsT0FBTyxXQUFXLENBQUM7U0FDcEI7UUFFRCxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVyRCxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRTdELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztDQUNGO0FBbENELDBEQWtDQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-provider.js
index ab03b8d..24a34bc 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-provider.js
@@ -113,6 +113,42 @@ exports.CACHE_SEED_TOKENS = {
     [sdk_core_1.ChainId.ZKSYNC]: {
         WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC],
     },
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_TESTNET],
+    },
+    [sdk_core_1.ChainId.ZERO]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZERO],
+    },
+    [sdk_core_1.ChainId.BOB]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BOB],
+    },
+    [sdk_core_1.ChainId.CYBER]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.CYBER],
+    },
+    [sdk_core_1.ChainId.SHAPE]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SHAPE],
+    },
+    [sdk_core_1.ChainId.INK]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.INK],
+    },
+    [sdk_core_1.ChainId.REDSTONE]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE],
+    },
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE_GARNET],
+    },
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_MAINNET],
+    },
+    [sdk_core_1.ChainId.ANIME_TESTNET]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME_TESTNET],
+    },
+    [sdk_core_1.ChainId.ANIME]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME],
+    },
+    [sdk_core_1.ChainId.MODE]: {
+        WETH: util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MODE],
+    },
     // Currently we do not have providers for Moonbeam mainnet or Gnosis testnet
 };
 /**
@@ -204,4 +240,4 @@ class CachingTokenProviderWithFallback {
     }
 }
 exports.CachingTokenProviderWithFallback = CachingTokenProviderWithFallback;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts
index 3747ebc..7d66d71 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts
@@ -1,7 +1,7 @@
 import { Protocol } from '@uniswap/router-sdk';
 import { Token } from '@uniswap/sdk-core';
-import { MixedRoute, V2Route, V3Route } from '../../../../routers';
-interface CachedRouteParams<Route extends V3Route | V2Route | MixedRoute> {
+import { SupportedRoutes } from '../../../../routers';
+interface CachedRouteParams<Route extends SupportedRoutes> {
     route: Route;
     percent: number;
 }
@@ -11,7 +11,7 @@ interface CachedRouteParams<Route extends V3Route | V2Route | MixedRoute> {
  * @export
  * @class CachedRoute
  */
-export declare class CachedRoute<Route extends V3Route | V2Route | MixedRoute> {
+export declare class CachedRoute<Route extends SupportedRoutes> {
     readonly route: Route;
     readonly percent: number;
     private hashCode;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js
index a85d6cb..cc07f8f 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js
@@ -2,7 +2,9 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.CachedRoute = void 0;
 const router_sdk_1 = require("@uniswap/router-sdk");
+const v2_sdk_1 = require("@uniswap/v2-sdk");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
 /**
  * Class defining the route to cache
  *
@@ -24,37 +26,53 @@ class CachedRoute {
     get protocol() {
         return this.route.protocol;
     }
+    // TODO: ROUTE-217 - Support native currency routing in V4
     get tokenIn() {
-        return this.route.input;
+        return this.route.input.wrapped;
     }
+    // TODO: ROUTE-217 - Support native currency routing in V4
     get tokenOut() {
-        return this.route.output;
+        return this.route.output.wrapped;
     }
     get routePath() {
-        if (this.protocol == router_sdk_1.Protocol.V3) {
-            const route = this.route;
-            return route.pools
-                .map((pool) => `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`)
-                .join('->');
-        }
-        else if (this.protocol == router_sdk_1.Protocol.V2) {
-            const route = this.route;
-            return route.pairs
-                .map((pair) => `[V2]${pair.token0.address}/${pair.token1.address}`)
-                .join('->');
-        }
-        else {
-            const route = this.route;
-            return route.pools
-                .map((pool) => {
-                if (pool instanceof v3_sdk_1.Pool) {
-                    return `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`;
-                }
-                else {
-                    return `[V2]${pool.token0.address}/${pool.token1.address}`;
-                }
-            })
-                .join('->');
+        switch (this.protocol) {
+            case router_sdk_1.Protocol.V4:
+                // TODO: ROUTE-217 - Support native currency routing in V4
+                return this.route.pools
+                    .map((pool) => `[V4]${pool.token0.wrapped.address}/${pool.token1.wrapped.address}`)
+                    .join('->');
+            case router_sdk_1.Protocol.V3:
+                return this.route.pools
+                    .map((pool) => `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`)
+                    .join('->');
+            case router_sdk_1.Protocol.V2:
+                return this.route.pairs
+                    .map((pair) => `[V2]${pair.token0.address}/${pair.token1.address}`)
+                    .join('->');
+            case router_sdk_1.Protocol.MIXED:
+                return this.route.pools
+                    .map((pool) => {
+                    if (pool instanceof v4_sdk_1.Pool) {
+                        // TODO: ROUTE-217 - Support native currency routing in V4
+                        return `[V4]${pool.token0.isToken
+                            ? pool.token0.wrapped.address
+                            : pool.token0.symbol}/${pool.token1.isToken
+                            ? pool.token1.wrapped.address
+                            : pool.token1.symbol}`;
+                    }
+                    else if (pool instanceof v3_sdk_1.Pool) {
+                        return `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`;
+                    }
+                    else if (pool instanceof v2_sdk_1.Pair) {
+                        return `[V2]${pool.token0.address}/${pool.token1.address}`;
+                    }
+                    else {
+                        throw new Error(`Unsupported pool type ${JSON.stringify(pool)}`);
+                    }
+                })
+                    .join('->');
+            default:
+                throw new Error(`Unsupported protocol ${this.protocol}`);
         }
     }
     get routeId() {
@@ -62,4 +80,4 @@ class CachedRoute {
     }
 }
 exports.CachedRoute = CachedRoute;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFFL0MsNENBQXVDO0FBU3ZDOzs7OztHQUtHO0FBQ0gsTUFBYSxXQUFXO0lBUXRCOzs7T0FHRztJQUNILFlBQVksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUE0QjtRQVR4RCx3RUFBd0U7UUFDeEUsb0lBQW9JO1FBQzVILGFBQVEsR0FBRyxDQUFDLEdBQVcsRUFBRSxFQUFFLENBQ2pDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFPdkUsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDekIsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDM0IsQ0FBQztJQUVELElBQVcsU0FBUztRQUNsQixJQUFJLElBQUksQ0FBQyxRQUFRLElBQUkscUJBQVEsQ0FBQyxFQUFFLEVBQUU7WUFDaEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQWdCLENBQUM7WUFDcEMsT0FBTyxLQUFLLENBQUMsS0FBSztpQkFDZixHQUFHLENBQ0YsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUNsRTtpQkFDQSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDZjthQUFNLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxxQkFBUSxDQUFDLEVBQUUsRUFBRTtZQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBZ0IsQ0FBQztZQUNwQyxPQUFPLEtBQUssQ0FBQyxLQUFLO2lCQUNmLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUNsRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDZjthQUFNO1lBQ0wsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQW1CLENBQUM7WUFDdkMsT0FBTyxLQUFLLENBQUMsS0FBSztpQkFDZixHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDWixJQUFJLElBQUksWUFBWSxhQUFJLEVBQUU7b0JBQ3hCLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7aUJBQ3hFO3FCQUFNO29CQUNMLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUM1RDtZQUNILENBQUMsQ0FBQztpQkFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDZjtJQUNILENBQUM7SUFFRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUE1REQsa0NBNERDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFFL0MsNENBQXVDO0FBQ3ZDLDRDQUFpRDtBQUNqRCw0Q0FBaUQ7QUFlakQ7Ozs7O0dBS0c7QUFDSCxNQUFhLFdBQVc7SUFRdEI7OztPQUdHO0lBQ0gsWUFBWSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQTRCO1FBVHhELHdFQUF3RTtRQUN4RSxvSUFBb0k7UUFDNUgsYUFBUSxHQUFHLENBQUMsR0FBVyxFQUFFLEVBQUUsQ0FDakMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQU92RSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUVELDBEQUEwRDtJQUMxRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7SUFDbEMsQ0FBQztJQUVELDBEQUEwRDtJQUMxRCxJQUFXLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQVcsU0FBUztRQUNsQixRQUFR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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts
index 88ad569..32acb4e 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts
@@ -1,12 +1,12 @@
 import { Protocol } from '@uniswap/router-sdk';
-import { ChainId, Token, TradeType } from '@uniswap/sdk-core';
-import { MixedRoute, RouteWithValidQuote, V2Route, V3Route } from '../../../../routers';
+import { ChainId, Currency, TradeType } from '@uniswap/sdk-core';
+import { RouteWithValidQuote, SupportedRoutes } from '../../../../routers';
 import { CachedRoute } from './cached-route';
 interface CachedRoutesParams {
-    routes: CachedRoute<V3Route | V2Route | MixedRoute>[];
+    routes: CachedRoute<SupportedRoutes>[];
     chainId: ChainId;
-    tokenIn: Token;
-    tokenOut: Token;
+    currencyIn: Currency;
+    currencyOut: Currency;
     protocolsCovered: Protocol[];
     blockNumber: number;
     tradeType: TradeType;
@@ -20,10 +20,10 @@ interface CachedRoutesParams {
  * @class CachedRoute
  */
 export declare class CachedRoutes {
-    readonly routes: CachedRoute<V3Route | V2Route | MixedRoute>[];
+    readonly routes: CachedRoute<SupportedRoutes>[];
     readonly chainId: ChainId;
-    readonly tokenIn: Token;
-    readonly tokenOut: Token;
+    readonly currencyIn: Currency;
+    readonly currencyOut: Currency;
     readonly protocolsCovered: Protocol[];
     readonly blockNumber: number;
     readonly tradeType: TradeType;
@@ -32,15 +32,15 @@ export declare class CachedRoutes {
     /**
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      * @param blocksToLive
      */
-    constructor({ routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive, }: CachedRoutesParams);
+    constructor({ routes, chainId, currencyIn, currencyOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive, }: CachedRoutesParams);
     /**
      * Factory method that creates a `CachedRoutes` object from an array of RouteWithValidQuote.
      *
@@ -48,14 +48,14 @@ export declare class CachedRoutes {
      * @static
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      */
-    static fromRoutesWithValidQuotes(routes: RouteWithValidQuote[], chainId: ChainId, tokenIn: Token, tokenOut: Token, protocolsCovered: Protocol[], blockNumber: number, tradeType: TradeType, originalAmount: string): CachedRoutes | undefined;
+    static fromRoutesWithValidQuotes(routes: RouteWithValidQuote[], chainId: ChainId, currencyIn: Currency, currencyOut: Currency, protocolsCovered: Protocol[], blockNumber: number, tradeType: TradeType, originalAmount: string): CachedRoutes | undefined;
     /**
      * Function to determine if, given a block number, the CachedRoute is expired or not.
      *
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js
index 8300aee..2dc4257 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js
@@ -16,19 +16,19 @@ class CachedRoutes {
     /**
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      * @param blocksToLive
      */
-    constructor({ routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive = 0, }) {
+    constructor({ routes, chainId, currencyIn, currencyOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive = 0, }) {
         this.routes = routes;
         this.chainId = chainId;
-        this.tokenIn = tokenIn;
-        this.tokenOut = tokenOut;
+        this.currencyIn = currencyIn;
+        this.currencyOut = currencyOut;
         this.protocolsCovered = protocolsCovered;
         this.blockNumber = blockNumber;
         this.tradeType = tradeType;
@@ -42,22 +42,22 @@ class CachedRoutes {
      * @static
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      */
-    static fromRoutesWithValidQuotes(routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType, originalAmount) {
+    static fromRoutesWithValidQuotes(routes, chainId, currencyIn, currencyOut, protocolsCovered, blockNumber, tradeType, originalAmount) {
         if (routes.length == 0)
             return undefined;
         const cachedRoutes = lodash_1.default.map(routes, (route) => new cached_route_1.CachedRoute({ route: route.route, percent: route.percent }));
         return new CachedRoutes({
             routes: cachedRoutes,
             chainId,
-            tokenIn,
-            tokenOut,
+            currencyIn,
+            currencyOut,
             protocolsCovered,
             blockNumber,
             tradeType,
@@ -78,4 +78,4 @@ class CachedRoutes {
     }
 }
 exports.CachedRoutes = CachedRoutes;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLG9EQUF1QjtBQVN2QixpREFBNkM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFhLFlBQVk7SUFZdkI7Ozs7Ozs7Ozs7T0FVRztJQUNILFlBQVksRUFDVixNQUFNLEVBQ04sT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsZ0JBQWdCLEVBQ2hCLFdBQVcsRUFDWCxTQUFTLEVBQ1QsY0FBYyxFQUNkLFlBQVksR0FBRyxDQUFDLEdBQ0c7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0ksTUFBTSxDQUFDLHlCQUF5QixDQUNyQyxNQUE2QixFQUM3QixPQUFnQixFQUNoQixPQUFjLEVBQ2QsUUFBZSxFQUNmLGdCQUE0QixFQUM1QixXQUFtQixFQUNuQixTQUFvQixFQUNwQixjQUFzQjtRQUV0QixJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBRXpDLE1BQU0sWUFBWSxHQUFHLGdCQUFDLENBQUMsR0FBRyxDQUN4QixNQUFNLEVBQ04sQ0FBQyxLQUEwQixFQUFFLEVBQUUsQ0FDN0IsSUFBSSwwQkFBVyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUNsRSxDQUFDO1FBRUYsT0FBTyxJQUFJLFlBQVksQ0FBQztZQUN0QixNQUFNLEVBQUUsWUFBWTtZQUNwQixPQUFPO1lBQ1AsT0FBTztZQUNQLFFBQVE7WUFDUixnQkFBZ0I7WUFDaEIsV0FBVztZQUNYLFNBQVM7WUFDVCxjQUFjO1NBQ2YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksVUFBVSxDQUFDLGtCQUEwQixFQUFFLFVBQVUsR0FBRyxLQUFLO1FBQzlELDJFQUEyRTtRQUMzRSxNQUFNLFlBQVksR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4RCxNQUFNLGdCQUFnQixHQUFHLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFFL0QsT0FBTyxnQkFBZ0IsSUFBSSxZQUFZLENBQUM7SUFDMUMsQ0FBQztDQUNGO0FBdEdELG9DQXNHQyJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLG9EQUF1QjtBQUl2QixpREFBNkM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFhLFlBQVk7SUFZdkI7Ozs7Ozs7Ozs7T0FVRztJQUNILFlBQVksRUFDVixNQUFNLEVBQ04sT0FBTyxFQUNQLFVBQVUsRUFDVixXQUFXLEVBQ1gsZ0JBQWdCLEVBQ2hCLFdBQVcsRUFDWCxTQUFTLEVBQ1QsY0FBYyxFQUNkLFlBQVksR0FBRyxDQUFDLEdBQ0c7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0ksTUFBTSxDQUFDLHlCQUF5QixDQUNyQyxNQUE2QixFQUM3QixPQUFnQixFQUNoQixVQUFvQixFQUNwQixXQUFxQixFQUNyQixnQkFBNEIsRUFDNUIsV0FBbUIsRUFDbkIsU0FBb0IsRUFDcEIsY0FBc0I7UUFFdEIsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUM7WUFBRSxPQUFPLFNBQVMsQ0FBQztRQUV6QyxNQUFNLFlBQVksR0FBRyxnQkFBQyxDQUFDLEdBQUcsQ0FDeEIsTUFBTSxFQUNOLENBQUMsS0FBMEIsRUFBRSxFQUFFLENBQzdCLElBQUksMEJBQVcsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FDbEUsQ0FBQztRQUVGLE9BQU8sSUFBSSxZQUFZLENBQUM7WUFDdEIsTUFBTSxFQUFFLFlBQVk7WUFDcEIsT0FBTztZQUNQLFVBQVU7WUFDVixXQUFXO1lBQ1gsZ0JBQWdCO1lBQ2hCLFdBQVc7WUFDWCxTQUFTO1lBQ1QsY0FBYztTQUNmLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLFVBQVUsQ0FBQyxrQkFBMEIsRUFBRSxVQUFVLEdBQUcsS0FBSztRQUM5RCwyRUFBMkU7UUFDM0UsTUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEQsTUFBTSxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBRS9ELE9BQU8sZ0JBQWdCLElBQUksWUFBWSxDQUFDO0lBQzFDLENBQUM7Q0FDRjtBQXRHRCxvQ0FzR0MifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts
index 8321a2d..2f1087c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts
@@ -1,11 +1,11 @@
 /**
- * Provider for getting token data from a Token List.
+ * Provider for getting currency data from a currency List.
  *
  * @export
  * @interface IRouteCachingProvider
  */
 import { Protocol } from '@uniswap/router-sdk';
-import { ChainId, Currency, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core';
+import { ChainId, Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core';
 import { CacheMode } from './model';
 import { CachedRoutes } from './model/cached-routes';
 /**
@@ -20,12 +20,12 @@ export declare abstract class IRouteCachingProvider {
      * @readonly
      * @param chainId
      * @param amount
-     * @param quoteToken
+     * @param quoteCurrency
      * @param tradeType
      * @param protocols
      * @param blockNumber
      */
-    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], blockNumber: number, optimistic?: boolean) => Promise<CachedRoutes | undefined>;
+    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteCurrency: Currency, tradeType: TradeType, protocols: Protocol[], blockNumber: number, optimistic?: boolean) => Promise<CachedRoutes | undefined>;
     /**
      * Final implementation of the public `setCachedRoute` method.
      * This method will set the blockToLive in the CachedRoutes object before calling the internal method to insert in cache.
@@ -44,17 +44,15 @@ export declare abstract class IRouteCachingProvider {
      */
     getCacheModeFromCachedRoutes(cachedRoutes: CachedRoutes, amount: CurrencyAmount<Currency>): Promise<CacheMode>;
     /**
-     * Returns the CacheMode for the given combination of chainId, tokenIn, tokenOut and tradetype
+     * Returns the CacheMode for the given combination of chainId, currencyIn, currencyOut and tradetype
      *
      * @public
      * @abstract
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
-     * @param tradeType
      * @param amount
+     * @param tradeType
      */
-    abstract getCacheMode(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[]): Promise<CacheMode>;
+    abstract getCacheMode(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteCurrency: Currency, tradeType: TradeType, protocols: Protocol[]): Promise<CacheMode>;
     protected filterExpiredCachedRoutes(cachedRoutes: CachedRoutes | undefined, blockNumber: number, optimistic: boolean): CachedRoutes | undefined;
     /**
      * Internal function to fetch the CachedRoute from the cache.
@@ -62,12 +60,12 @@ export declare abstract class IRouteCachingProvider {
      *
      * @param chainId
      * @param amount
-     * @param quoteToken
+     * @param quoteCurrency
      * @param tradeType
      * @param protocols
      * @protected
      */
-    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], currentBlockNumber: number, optimistic: boolean): Promise<CachedRoutes | undefined>;
+    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteCurrency: Currency, tradeType: TradeType, protocols: Protocol[], currentBlockNumber: number, optimistic: boolean): Promise<CachedRoutes | undefined>;
     /**
      * Internal function to insert the CachedRoute into cache.
      * Must be implemented.
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js
index fa19407..6a82a30 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js
@@ -16,18 +16,18 @@ class IRouteCachingProvider {
          * @readonly
          * @param chainId
          * @param amount
-         * @param quoteToken
+         * @param quoteCurrency
          * @param tradeType
          * @param protocols
          * @param blockNumber
          */
         this.getCachedRoute = async (
         // Defined as a readonly member instead of a regular function to make it final.
-        chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic = false) => {
-            if ((await this.getCacheMode(chainId, amount, quoteToken, tradeType, protocols)) == model_1.CacheMode.Darkmode) {
+        chainId, amount, quoteCurrency, tradeType, protocols, blockNumber, optimistic = false) => {
+            if ((await this.getCacheMode(chainId, amount, quoteCurrency, tradeType, protocols)) == model_1.CacheMode.Darkmode) {
                 return undefined;
             }
-            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic);
+            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteCurrency, tradeType, protocols, blockNumber, optimistic);
             return this.filterExpiredCachedRoutes(cachedRoute, blockNumber, optimistic);
         };
         /**
@@ -57,10 +57,10 @@ class IRouteCachingProvider {
      * @param amount
      */
     getCacheModeFromCachedRoutes(cachedRoutes, amount) {
-        const quoteToken = cachedRoutes.tradeType == sdk_core_1.TradeType.EXACT_INPUT
-            ? cachedRoutes.tokenOut
-            : cachedRoutes.tokenIn;
-        return this.getCacheMode(cachedRoutes.chainId, amount, quoteToken, cachedRoutes.tradeType, cachedRoutes.protocolsCovered);
+        const quoteCurrency = cachedRoutes.tradeType == sdk_core_1.TradeType.EXACT_INPUT
+            ? cachedRoutes.currencyOut
+            : cachedRoutes.currencyIn;
+        return this.getCacheMode(cachedRoutes.chainId, amount, quoteCurrency, cachedRoutes.tradeType, cachedRoutes.protocolsCovered);
     }
     filterExpiredCachedRoutes(cachedRoutes, blockNumber, optimistic) {
         return (cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.notExpired(blockNumber, optimistic))
@@ -69,4 +69,4 @@ class IRouteCachingProvider {
     }
 }
 exports.IRouteCachingProvider = IRouteCachingProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9BLGdEQU0yQjtBQUUzQixtQ0FBb0M7QUFHcEM7OztHQUdHO0FBQ0gsTUFBc0IscUJBQXFCO0lBQTNDO1FBQ0U7Ozs7Ozs7Ozs7O1dBV0c7UUFDYSxtQkFBYyxHQUFHLEtBQUs7UUFDcEMsK0VBQStFO1FBQy9FLE9BQWUsRUFDZixNQUFnQyxFQUNoQyxVQUFpQixFQUNqQixTQUFvQixFQUNwQixTQUFxQixFQUNyQixXQUFtQixFQUNuQixVQUFVLEdBQUcsS0FBSyxFQUNpQixFQUFFO1lBQ3JDLElBQ0UsQ0FBQyxNQUFNLElBQUksQ0FBQyxZQUFZLENBQ3RCLE9BQU8sRUFDUCxNQUFNLEVBQ04sVUFBVSxFQUNWLFNBQVMsRUFDVCxTQUFTLENBQ1YsQ0FBQyxJQUFJLGlCQUFTLENBQUMsUUFBUSxFQUN4QjtnQkFDQSxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FDNUMsT0FBTyxFQUNQLE1BQU0sRUFDTixVQUFVLEVBQ1YsU0FBUyxFQUNULFNBQVMsRUFDVCxXQUFXLEVBQ1gsVUFBVSxDQUNYLENBQUM7WUFFRixPQUFPLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzlFLENBQUMsQ0FBQztRQUVGOzs7Ozs7OztXQVFHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLO1FBQ3BDLCtFQUErRTtRQUMvRSxZQUEwQixFQUMxQixNQUFnQyxFQUNkLEVBQUU7WUFDcEIsSUFDRSxDQUFDLE1BQU0sSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztnQkFDL0QsaUJBQVMsQ0FBQyxRQUFRLEVBQ2xCO2dCQUNBLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCxZQUFZLENBQUMsWUFBWSxHQUFHLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUNyRCxZQUFZLEVBQ1osTUFBTSxDQUNQLENBQUM7WUFFRixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3BELENBQUMsQ0FBQztJQXNHSixDQUFDO0lBcEdDOzs7OztPQUtHO0lBQ0ksNEJBQTRCLENBQ2pDLFlBQTBCLEVBQzFCLE1BQWdDO1FBRWhDLE1BQU0sVUFBVSxHQUNkLFlBQVksQ0FBQyxTQUFTLElBQUksb0JBQVMsQ0FBQyxXQUFXO1lBQzdDLENBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUTtZQUN2QixDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztRQUUzQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQ3RCLFlBQVksQ0FBQyxPQUFPLEVBQ3BCLE1BQU0sRUFDTixVQUFVLEVBQ1YsWUFBWSxDQUFDLFNBQVMsRUFDdEIsWUFBWSxDQUFDLGdCQUFnQixDQUM5QixDQUFDO0lBQ0osQ0FBQztJQXFCUyx5QkFBeUIsQ0FDakMsWUFBc0MsRUFDdEMsV0FBbUIsRUFDbkIsVUFBbUI7UUFFbkIsT0FBTyxDQUFBLFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FBRSxVQUFVLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQztZQUN0RCxDQUFDLENBQUMsWUFBWTtZQUNkLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDaEIsQ0FBQztDQWlERjtBQWpMRCxzREFpTEMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9BLGdEQUsyQjtBQUUzQixtQ0FBb0M7QUFHcEM7OztHQUdHO0FBQ0gsTUFBc0IscUJBQXFCO0lBQTNDO1FBQ0U7Ozs7Ozs7Ozs7O1dBV0c7UUFDYSxtQkFBYyxHQUFHLEtBQUs7UUFDcEMsK0VBQStFO1FBQy9FLE9BQWUsRUFDZixNQUFnQyxFQUNoQyxhQUF1QixFQUN2QixTQUFvQixFQUNwQixTQUFxQixFQUNyQixXQUFtQixFQUNuQixVQUFVLEdBQUcsS0FBSyxFQUNpQixFQUFFO1lBQ3JDLElBQ0UsQ0FBQyxNQUFNLElBQUksQ0FBQyxZQUFZLENBQ3RCLE9BQU8sRUFDUCxNQUFNLEVBQ04sYUFBYSxFQUNiLFNBQVMsRUFDVCxTQUFTLENBQ1YsQ0FBQyxJQUFJLGlCQUFTLENBQUMsUUFBUSxFQUN4QjtnQkFDQSxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FDNUMsT0FBTyxFQUNQLE1BQU0sRUFDTixhQUFhLEVBQ2IsU0FBUyxFQUNULFNBQVMsRUFDVCxXQUFXLEVBQ1gsVUFBVSxDQUNYLENBQUM7WUFFRixPQUFPLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzlFLENBQUMsQ0FBQztRQUVGOzs7Ozs7OztXQVFHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLO1FBQ3BDLCtFQUErRTtRQUMvRSxZQUEwQixFQUMxQixNQUFnQyxFQUNkLEVBQUU7WUFDcEIsSUFDRSxDQUFDLE1BQU0sSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztnQkFDL0QsaUJBQVMsQ0FBQyxRQUFRLEVBQ2xCO2dCQUNBLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCxZQUFZLENBQUMsWUFBWSxHQUFHLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUNyRCxZQUFZLEVBQ1osTUFBTSxDQUNQLENBQUM7WUFFRixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3BELENBQUMsQ0FBQztJQW9HSixDQUFDO0lBbEdDOzs7OztPQUtHO0lBQ0ksNEJBQTRCLENBQ2pDLFlBQTBCLEVBQzFCLE1BQWdDO1FBRWhDLE1BQU0sYUFBYSxHQUNqQixZQUFZLENBQUMsU0FBUyxJQUFJLG9CQUFTLENBQUMsV0FBVztZQUM3QyxDQUFDLENBQUMsWUFBWSxDQUFDLFdBQVc7WUFDMUIsQ0FBQyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUM7UUFFOUIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUN0QixZQUFZLENBQUMsT0FBTyxFQUNwQixNQUFNLEVBQ04sYUFBYSxFQUNiLFlBQVksQ0FBQyxTQUFTLEVBQ3RCLFlBQVksQ0FBQyxnQkFBZ0IsQ0FDOUIsQ0FBQztJQUNKLENBQUM7SUFtQlMseUJBQXlCLENBQ2pDLFlBQXNDLEVBQ3RDLFdBQW1CLEVBQ25CLFVBQW1CO1FBRW5CLE9BQU8sQ0FBQSxZQUFZLGFBQVosWUFBWSx1QkFBWixZQUFZLENBQUUsVUFBVSxDQUFDLFdBQVcsRUFBRSxVQUFVLENBQUM7WUFDdEQsQ0FBQyxDQUFDLFlBQVk7WUFDZCxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQ2hCLENBQUM7Q0FpREY7QUEvS0Qsc0RBK0tDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.d.ts
index 0ba6372..e2adb6a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.d.ts
@@ -6,11 +6,13 @@ import { ProviderConfig } from './provider';
 import { Simulator } from './simulation-provider';
 import { IV2PoolProvider } from './v2/pool-provider';
 import { IV3PoolProvider } from './v3/pool-provider';
+import { IV4PoolProvider } from './v4/pool-provider';
 export declare class EthEstimateGasSimulator extends Simulator {
     v2PoolProvider: IV2PoolProvider;
     v3PoolProvider: IV3PoolProvider;
+    v4PoolProvider: IV4PoolProvider;
     private overrideEstimateMultiplier;
-    constructor(chainId: ChainId, provider: JsonRpcProvider, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
+    constructor(chainId: ChainId, provider: JsonRpcProvider, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, v4PoolProvider: IV4PoolProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
         [chainId in ChainId]?: number;
     });
     ethEstimateGas(fromAddress: string, swapOptions: SwapOptions, route: SwapRoute, providerConfig?: ProviderConfig): Promise<SwapRoute>;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.js
index c24b60b..0cea93c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/eth-estimate-gas-provider.js
@@ -10,10 +10,11 @@ const simulation_provider_1 = require("./simulation-provider");
 // We multiply eth estimate gas by this to add a buffer for gas limits
 const DEFAULT_ESTIMATE_MULTIPLIER = 1.2;
 class EthEstimateGasSimulator extends simulation_provider_1.Simulator {
-    constructor(chainId, provider, v2PoolProvider, v3PoolProvider, portionProvider, overrideEstimateMultiplier) {
+    constructor(chainId, provider, v2PoolProvider, v3PoolProvider, v4PoolProvider, portionProvider, overrideEstimateMultiplier) {
         super(provider, portionProvider, chainId);
         this.v2PoolProvider = v2PoolProvider;
         this.v3PoolProvider = v3PoolProvider;
+        this.v4PoolProvider = v4PoolProvider;
         this.overrideEstimateMultiplier = overrideEstimateMultiplier !== null && overrideEstimateMultiplier !== void 0 ? overrideEstimateMultiplier : {};
     }
     async ethEstimateGas(fromAddress, swapOptions, route, providerConfig) {
@@ -63,7 +64,7 @@ class EthEstimateGasSimulator extends simulation_provider_1.Simulator {
             estimatedGasUsed: estimatedGasUsed.toString(),
         }, 'Simulated using eth_estimateGas on SwapRouter02');
         const { estimatedGasUsedUSD, estimatedGasUsedQuoteToken, estimatedGasUsedGasToken, quoteGasAdjusted, } = await (0, gas_factory_helpers_1.calculateGasUsed)(route.quote.currency.chainId, route, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, this.provider, providerConfig);
-        return Object.assign(Object.assign({}, (0, gas_factory_helpers_1.initSwapRouteFromExisting)(route, this.v2PoolProvider, this.v3PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken)), { simulationStatus: simulation_provider_1.SimulationStatus.Succeeded });
+        return Object.assign(Object.assign({}, (0, gas_factory_helpers_1.initSwapRouteFromExisting)(route, this.v2PoolProvider, this.v3PoolProvider, this.v4PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken, providerConfig)), { simulationStatus: simulation_provider_1.SimulationStatus.Succeeded });
     }
     adjustGasEstimate(gasLimit) {
         var _a;
@@ -86,4 +87,4 @@ class EthEstimateGasSimulator extends simulation_provider_1.Simulator {
     }
 }
 exports.EthEstimateGasSimulator = EthEstimateGasSimulator;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3REFBcUQ7QUFFckQsZ0RBQTRDO0FBRTVDLHdDQUtvQjtBQUNwQixrQ0FBNEQ7QUFDNUQscUVBR3FDO0FBSXJDLCtEQUFvRTtBQUlwRSxzRUFBc0U7QUFDdEUsTUFBTSwyQkFBMkIsR0FBRyxHQUFHLENBQUM7QUFFeEMsTUFBYSx1QkFBd0IsU0FBUSwrQkFBUztJQUtwRCxZQUNFLE9BQWdCLEVBQ2hCLFFBQXlCLEVBQ3pCLGNBQStCLEVBQy9CLGNBQStCLEVBQy9CLGVBQWlDLEVBQ2pDLDBCQUE4RDtRQUU5RCxLQUFLLENBQUMsUUFBUSxFQUFFLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsMEJBQTBCLEdBQUcsMEJBQTBCLGFBQTFCLDBCQUEwQixjQUExQiwwQkFBMEIsR0FBSSxFQUFFLENBQUM7SUFDckUsQ0FBQztJQUVELEtBQUssQ0FBQyxjQUFjLENBQ2xCLFdBQW1CLEVBQ25CLFdBQXdCLEVBQ3hCLEtBQWdCLEVBQ2hCLGNBQStCO1FBRS9CLE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztRQUNwRCxJQUFJLGdCQUEyQixDQUFDO1FBQ2hDLElBQUksV0FBVyxDQUFDLElBQUksSUFBSSxrQkFBUSxDQUFDLGdCQUFnQixFQUFFO1lBQ2pELElBQUksVUFBVSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLGtCQUFPLENBQUMsT0FBTyxFQUFFO2dCQUMxRCwwRkFBMEY7Z0JBQzFGLHNE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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3REFBcUQ7QUFFckQsZ0RBQTRDO0FBRTVDLHdDQUtvQjtBQUNwQixrQ0FBNEQ7QUFDNUQscUVBR3FDO0FBSXJDLCtEQUFvRTtBQUtwRSxzRUFBc0U7QUFDdEUsTUFBTSwyQkFBMkIsR0FBRyxHQUFHLENBQUM7QUFFeEMsTUFBYSx1QkFBd0IsU0FBUSwrQkFBUztJQU1wRCxZQUNFLE9BQWdCLEVBQ2hCLFFBQXlCLEVBQ3pCLGNBQStCLEVBQy9CLGNBQStCLEVBQy9CLGNBQStCLEVBQy9CLGVBQWlDLEVBQ2pDLDBCQUE4RDtRQUU5RCxLQUFLLENBQUMsUUFBUSxFQUFFLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsMEJBQTBCLEdBQUcsMEJBQTBCLGFBQTFCLDBCQUEwQixjQUExQiwwQkFBMEIsR0FBSSxFQUFFLENBQUM7SUFDckUsQ0FBQztJQUVELEtBQUssQ0FBQyxjQUFjLENBQ2xCLFdBQW1CLEVBQ25CLFdBQXdCLEVBQ3hCLEtBQWdCLEVBQ2hCLGNBQStCO1FBRS9CLE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztRQUNwRCxJQUFJLGdCQUEyQixDQUFDO1FBQ2hDLElBQUksV0FBVyxDQUFDLElBQUksSUFBSSxrQkFBUSxDQUFDLGdCQUFnQixFQUFFO1lBQ2pELElBQUksVUFBVSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsT0FBTyxJ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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts
index 7973a3e..8f1e24b 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts
@@ -13,6 +13,7 @@ export * from './multicall-provider';
 export * from './multicall-uniswap-provider';
 export * from './on-chain-gas-price-provider';
 export * from './on-chain-quote-provider';
+export * from './pool-provider';
 export * from './simulation-provider';
 export * from './static-gas-price-provider';
 export * from './swap-router-provider';
@@ -36,3 +37,10 @@ export * from './v3/static-subgraph-provider';
 export * from './v3/subgraph-provider';
 export * from './v3/subgraph-provider-with-fallback';
 export * from './v3/uri-subgraph-provider';
+export * from './v4/caching-pool-provider';
+export * from './v4/caching-subgraph-provider';
+export * from './v4/pool-provider';
+export * from './v4/static-subgraph-provider';
+export * from './v4/subgraph-provider';
+export * from './v4/subgraph-provider-with-fallback';
+export * from './v4/uri-subgraph-provider';
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/index.js b/node_modules/@uniswap/smart-order-router/build/main/providers/index.js
index 7c9fb48..8e54467 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/index.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/index.js
@@ -29,6 +29,7 @@ __exportStar(require("./multicall-provider"), exports);
 __exportStar(require("./multicall-uniswap-provider"), exports);
 __exportStar(require("./on-chain-gas-price-provider"), exports);
 __exportStar(require("./on-chain-quote-provider"), exports);
+__exportStar(require("./pool-provider"), exports);
 __exportStar(require("./simulation-provider"), exports);
 __exportStar(require("./static-gas-price-provider"), exports);
 __exportStar(require("./swap-router-provider"), exports);
@@ -52,4 +53,11 @@ __exportStar(require("./v3/static-subgraph-provider"), exports);
 __exportStar(require("./v3/subgraph-provider"), exports);
 __exportStar(require("./v3/subgraph-provider-with-fallback"), exports);
 __exportStar(require("./v3/uri-subgraph-provider"), exports);
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwQ0FBd0I7QUFDeEIsK0NBQTZCO0FBQzdCLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsMkRBQXlDO0FBQ3pDLGtEQUFnQztBQUNoQyxnRUFBOEM7QUFDOUMsOERBQTRDO0FBQzVDLDRFQUEwRDtBQUMxRCx1REFBcUM7QUFDckMsOERBQTRDO0FBQzVDLHVEQUFxQztBQUNyQywrREFBNkM7QUFDN0MsZ0VBQThDO0FBQzlDLDREQUEwQztBQUMxQyx3REFBc0M7QUFDdEMsOERBQTRDO0FBQzVDLHlEQUF1QztBQUN2QyxpRUFBK0M7QUFDL0MsOERBQTRDO0FBQzVDLG1EQUFpQztBQUNqQyw2REFBMkM7QUFDM0MsMERBQXdDO0FBQ3hDLDZEQUEyQztBQUMzQyxpRUFBK0M7QUFDL0MscURBQW1DO0FBQ25DLHNEQUFvQztBQUNwQyxnRUFBOEM7QUFDOUMseURBQXVDO0FBQ3ZDLHVFQUFxRDtBQUNyRCw2REFBMkM7QUFDM0MsNkRBQTJDO0FBQzNDLGlFQUErQztBQUMvQyxxREFBbUM7QUFDbkMsZ0VBQThDO0FBQzlDLHlEQUF1QztBQUN2Qyx1RUFBcUQ7QUFDckQsNkRBQTJDIn0=
\ No newline at end of file
+__exportStar(require("./v4/caching-pool-provider"), exports);
+__exportStar(require("./v4/caching-subgraph-provider"), exports);
+__exportStar(require("./v4/pool-provider"), exports);
+__exportStar(require("./v4/static-subgraph-provider"), exports);
+__exportStar(require("./v4/subgraph-provider"), exports);
+__exportStar(require("./v4/subgraph-provider-with-fallback"), exports);
+__exportStar(require("./v4/uri-subgraph-provider"), exports);
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwQ0FBd0I7QUFDeEIsK0NBQTZCO0FBQzdCLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsMkRBQXlDO0FBQ3pDLGtEQUFnQztBQUNoQyxnRUFBOEM7QUFDOUMsOERBQTRDO0FBQzVDLDRFQUEwRDtBQUMxRCx1REFBcUM7QUFDckMsOERBQTRDO0FBQzVDLHVEQUFxQztBQUNyQywrREFBNkM7QUFDN0MsZ0VBQThDO0FBQzlDLDREQUEwQztBQUMxQyxrREFBZ0M7QUFDaEMsd0RBQXNDO0FBQ3RDLDhEQUE0QztBQUM1Qyx5REFBdUM7QUFDdkMsaUVBQStDO0FBQy9DLDhEQUE0QztBQUM1QyxtREFBaUM7QUFDakMsNkRBQTJDO0FBQzNDLDBEQUF3QztBQUN4Qyw2REFBMkM7QUFDM0MsaUVBQStDO0FBQy9DLHFEQUFtQztBQUNuQyxzREFBb0M7QUFDcEMsZ0VBQThDO0FBQzlDLHlEQUF1QztBQUN2Qyx1RUFBcUQ7QUFDckQsNkRBQTJDO0FBQzNDLDZEQUEyQztBQUMzQyxpRUFBK0M7QUFDL0MscURBQW1DO0FBQ25DLGdFQUE4QztBQUM5Qyx5REFBdUM7QUFDdkMsdUVBQXFEO0FBQ3JELDZEQUEyQztBQUMzQyw2REFBMkM7QUFDM0MsaUVBQStDO0FBQy9DLHFEQUFtQztBQUNuQyxnRUFBOEM7QUFDOUMseURBQXVDO0FBQ3ZDLHVFQUFxRDtBQUNyRCw2REFBMkMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-gas-price-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-gas-price-provider.js
index c670ea5..fa5ee1e 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-gas-price-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-gas-price-provider.js
@@ -2,11 +2,14 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.OnChainGasPriceProvider = void 0;
 const sdk_core_1 = require("@uniswap/sdk-core");
+const l2FeeChains_1 = require("../util/l2FeeChains");
 const gas_price_provider_1 = require("./gas-price-provider");
 const DEFAULT_EIP_1559_SUPPORTED_CHAINS = [
     sdk_core_1.ChainId.MAINNET,
     sdk_core_1.ChainId.GOERLI,
     sdk_core_1.ChainId.POLYGON_MUMBAI,
+    sdk_core_1.ChainId.ARBITRUM_ONE,
+    ...l2FeeChains_1.opStackChains,
 ];
 /**
  * Gets gas prices on chain. If the chain supports EIP-1559 and has the feeHistory API,
@@ -31,4 +34,4 @@ class OnChainGasPriceProvider extends gas_price_provider_1.IGasPriceProvider {
     }
 }
 exports.OnChainGasPriceProvider = OnChainGasPriceProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tY2hhaW4tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9vbi1jaGFpbi1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0RBQTRDO0FBRzVDLDZEQUFtRTtBQUduRSxNQUFNLGlDQUFpQyxHQUFHO0lBQ3hDLGtCQUFPLENBQUMsT0FBTztJQUNmLGtCQUFPLENBQUMsTUFBTTtJQUNkLGtCQUFPLENBQUMsY0FBYztDQUN2QixDQUFDO0FBRUY7Ozs7OztHQU1HO0FBQ0gsTUFBYSx1QkFBd0IsU0FBUSxzQ0FBaUI7SUFDNUQsWUFDWSxPQUFnQixFQUNoQix1QkFBZ0QsRUFDaEQsc0JBQThDLEVBQzlDLFlBQXVCLGlDQUFpQztRQUVsRSxLQUFLLEVBQUUsQ0FBQztRQUxFLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUF5QjtRQUNoRCwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBQzlDLGNBQVMsR0FBVCxTQUFTLENBQStDO0lBR3BFLENBQUM7SUFFZSxLQUFLLENBQUMsV0FBVyxDQUMvQixpQkFBeUIsRUFDekIsa0JBQTJCO1FBRTNCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3pDLE9BQU8sSUFBSSxDQUFDLHVCQUF1QixDQUFDLFdBQVcsQ0FDN0MsaUJBQWlCLEVBQ2pCLGtCQUFrQixDQUNuQixDQUFDO1NBQ0g7UUFFRCxPQUFPLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLENBQzVDLGlCQUFpQixFQUNqQixrQkFBa0IsQ0FDbkIsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQTFCRCwwREEwQkMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tY2hhaW4tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9vbi1jaGFpbi1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0RBQTRDO0FBRTVDLHFEQUFvRDtBQUVwRCw2REFBbUU7QUFHbkUsTUFBTSxpQ0FBaUMsR0FBRztJQUN4QyxrQkFBTyxDQUFDLE9BQU87SUFDZixrQkFBTyxDQUFDLE1BQU07SUFDZCxrQkFBTyxDQUFDLGNBQWM7SUFDdEIsa0JBQU8sQ0FBQyxZQUFZO0lBQ3BCLEdBQUcsMkJBQWE7Q0FDakIsQ0FBQztBQUVGOzs7Ozs7R0FNRztBQUNILE1BQWEsdUJBQXdCLFNBQVEsc0NBQWlCO0lBQzVELFlBQ1ksT0FBZ0IsRUFDaEIsdUJBQWdELEVBQ2hELHNCQUE4QyxFQUM5QyxZQUF1QixpQ0FBaUM7UUFFbEUsS0FBSyxFQUFFLENBQUM7UUFMRSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7UUFDaEQsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtRQUM5QyxjQUFTLEdBQVQsU0FBUyxDQUErQztJQUdwRSxDQUFDO0lBRWUsS0FBSyxDQUFDLFdBQVcsQ0FDL0IsaUJBQXlCLEVBQ3pCLGtCQUEyQjtRQUUzQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUN6QyxPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxXQUFXLENBQzdDLGlCQUFpQixFQUNqQixrQkFBa0IsQ0FDbkIsQ0FBQztTQUNIO1FBRUQsT0FBTyxJQUFJLENBQUMsc0JBQXNCLENBQUMsV0FBVyxDQUM1QyxpQkFBaUIsRUFDakIsa0JBQWtCLENBQ25CLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUExQkQsMERBMEJDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.d.ts
index 6299e86..7dcba35 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.d.ts
@@ -1,12 +1,43 @@
-import { BigNumber } from '@ethersproject/bignumber';
+import { BigNumber, BigNumberish } from '@ethersproject/bignumber';
+import { BytesLike } from '@ethersproject/bytes';
 import { BaseProvider } from '@ethersproject/providers';
+import { Protocol } from '@uniswap/router-sdk';
 import { ChainId } from '@uniswap/sdk-core';
 import { Options as RetryOptions } from 'async-retry';
-import { MixedRoute, V2Route, V3Route } from '../routers/router';
+import { SupportedRoutes, V3Route, V4Route } from '../routers/router';
 import { CurrencyAmount } from '../util/amounts';
 import { Result } from './multicall-provider';
 import { UniswapMulticallProvider } from './multicall-uniswap-provider';
 import { ProviderConfig } from './provider';
+/**
+ * Emulate on-chain [PathKey](https://github.com/Uniswap/v4-periphery/blob/main/src/libraries/PathKey.sol#L8) struct
+ */
+export declare type PathKey = {
+    intermediateCurrency: string;
+    fee: BigNumberish;
+    tickSpacing: BigNumberish;
+    hooks: string;
+    hookData: BytesLike;
+};
+export declare type SupportedPath = string | PathKey[];
+/**
+ * Emulate on-chain [QuoteExactParams](https://github.com/Uniswap/v4-periphery/blob/main/src/interfaces/IQuoter.sol#L34) struct
+ */
+export declare type QuoteExactParams = {
+    exactCurrency: string;
+    path: PathKey[];
+    exactAmount: BigNumberish;
+};
+/**
+ * Emulate on-chain [ExtraQuoteExactInputParams](https://github.com/Uniswap/mixed-quoter/blob/main/src/interfaces/IMixedRouteQuoterV2.sol#L44C12-L44C38) struct
+ */
+declare type NonEncodableData = {
+    hookData: BytesLike;
+};
+export declare type ExtraQuoteExactInputParams = {
+    nonEncodableData: NonEncodableData[];
+};
+export declare type QuoteInputType = QuoteExactParams[] | [string, string] | [string, ExtraQuoteExactInputParams, string];
 /**
  * An on chain quote for a swap.
  */
@@ -64,17 +95,18 @@ export declare type QuoteRetryOptions = RetryOptions;
 /**
  * The V3 route and a list of quotes for that route.
  */
-export declare type RouteWithQuotes<TRoute extends V3Route | V2Route | MixedRoute> = [
+export declare type RouteWithQuotes<TRoute extends SupportedRoutes> = [
     TRoute,
     AmountQuote[]
 ];
 /**
  * Final consolidated return type of all on-chain quotes.
  */
-export declare type OnChainQuotes<TRoute extends V3Route | V2Route | MixedRoute> = {
+export declare type OnChainQuotes<TRoute extends SupportedRoutes> = {
     routesWithQuotes: RouteWithQuotes<TRoute>[];
     blockNumber: BigNumber;
 };
+export declare type SupportedExactOutRoutes = V4Route | V3Route;
 /**
  * Provider for getting on chain quotes using routes containing V3 pools or V2 pools.
  *
@@ -92,7 +124,7 @@ export interface IOnChainQuoteProvider {
      * @returns For each route returns a RouteWithQuotes object that contains all the quotes.
      * @returns The blockNumber used when generating the quotes.
      */
-    getQuotesManyExactIn<TRoute extends V3Route | V2Route | MixedRoute>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactIn<TRoute extends SupportedRoutes>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
     /**
      * For every route, gets ane exactOut quote for every amount provided.
      * @notice This does not support quotes for MixedRoutes (routes with both V3 and V2 pools/pairs) or pure V2 routes
@@ -103,7 +135,7 @@ export interface IOnChainQuoteProvider {
      * @returns For each route returns a RouteWithQuotes object that contains all the quotes.
      * @returns The blockNumber used when generating the quotes.
      */
-    getQuotesManyExactOut<TRoute extends V3Route>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactOut<TRoute extends SupportedExactOutRoutes>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
 }
 /**
  * The parameters for the multicalls we make.
@@ -186,7 +218,7 @@ export declare class OnChainQuoteProvider implements IOnChainQuoteProvider {
     protected gasErrorFailureOverride: FailureOverrides;
     protected successRateFailureOverrides: FailureOverrides;
     protected blockNumberConfig: BlockNumberConfig;
-    protected quoterAddressOverride?: ((useMixedRouteQuoter: boolean) => string | undefined) | undefined;
+    protected quoterAddressOverride?: ((useMixedRouteQuoter: boolean, mixedRouteContainsV4Pool: boolean, protocol: Protocol) => string | undefined) | undefined;
     protected metricsPrefix: (chainId: ChainId, useMixedRouteQuoter: boolean, optimisticCachedRoutes: boolean) => string;
     /**
      * Creates an instance of OnChainQuoteProvider.
@@ -203,10 +235,14 @@ export declare class OnChainQuoteProvider implements IOnChainQuoteProvider {
      * @param [quoterAddressOverride] Overrides the address of the quoter contract to use.
      * @param metricsPrefix metrics prefix to differentiate between different instances of the quote provider.
      */
-    constructor(chainId: ChainId, provider: BaseProvider, multicall2Provider: UniswapMulticallProvider, retryOptions?: QuoteRetryOptions, batchParams?: (optimisticCachedRoutes: boolean, useMixedRouteQuoter: boolean) => BatchParams, gasErrorFailureOverride?: FailureOverrides, successRateFailureOverrides?: FailureOverrides, blockNumberConfig?: BlockNumberConfig, quoterAddressOverride?: ((useMixedRouteQuoter: boolean) => string | undefined) | undefined, metricsPrefix?: (chainId: ChainId, useMixedRouteQuoter: boolean, optimisticCachedRoutes: boolean) => string);
+    constructor(chainId: ChainId, provider: BaseProvider, multicall2Provider: UniswapMulticallProvider, retryOptions?: QuoteRetryOptions, batchParams?: (optimisticCachedRoutes: boolean, useMixedRouteQuoter: boolean) => BatchParams, gasErrorFailureOverride?: FailureOverrides, successRateFailureOverrides?: FailureOverrides, blockNumberConfig?: BlockNumberConfig, quoterAddressOverride?: ((useMixedRouteQuoter: boolean, mixedRouteContainsV4Pool: boolean, protocol: Protocol) => string | undefined) | undefined, metricsPrefix?: (chainId: ChainId, useMixedRouteQuoter: boolean, optimisticCachedRoutes: boolean) => string);
     private getQuoterAddress;
-    getQuotesManyExactIn<TRoute extends V3Route | V2Route | MixedRoute>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
-    getQuotesManyExactOut<TRoute extends V3Route>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactIn<TRoute extends SupportedRoutes>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactOut<TRoute extends SupportedExactOutRoutes>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    private encodeRouteToPath;
+    convertV4RouteToPathKey(route: V4Route, exactOut: boolean): PathKey[];
+    private getContractInterface;
+    private consolidateResults;
     private getQuotesManyData;
     private partitionQuotes;
     private processQuoteResults;
@@ -218,5 +254,6 @@ export declare class OnChainQuoteProvider implements IOnChainQuoteProvider {
      * @param functionName
      * @param useMixedRouteQuoter true if there are ANY V2Routes or MixedRoutes in the routes parameter
      */
-    protected validateRoutes(routes: (V3Route | V2Route | MixedRoute)[], functionName: string, useMixedRouteQuoter: boolean): void;
+    protected validateRoutes(routes: SupportedRoutes[], functionName: string, useMixedRouteQuoter: boolean): void;
 }
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
index a42a5a6..099f57c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
@@ -8,14 +8,16 @@ const bignumber_1 = require("@ethersproject/bignumber");
 const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
 const async_retry_1 = __importDefault(require("async-retry"));
 const lodash_1 = __importDefault(require("lodash"));
 const stats_lite_1 = __importDefault(require("stats-lite"));
 const router_1 = require("../routers/router");
 const IMixedRouteQuoterV1__factory_1 = require("../types/other/factories/IMixedRouteQuoterV1__factory");
+const MixedRouteQuoterV2__factory_1 = require("../types/other/factories/MixedRouteQuoterV2__factory");
+const V4Quoter__factory_1 = require("../types/other/factories/V4Quoter__factory");
 const IQuoterV2__factory_1 = require("../types/v3/factories/IQuoterV2__factory");
 const util_1 = require("../util");
-const addresses_1 = require("../util/addresses");
 const log_1 = require("../util/log");
 const onchainQuoteProviderConfigs_1 = require("../util/onchainQuoteProviderConfigs");
 const routes_1 = require("../util/routes");
@@ -141,17 +143,22 @@ class OnChainQuoteProvider {
         this.quoterAddressOverride = quoterAddressOverride;
         this.metricsPrefix = metricsPrefix;
     }
-    getQuoterAddress(useMixedRouteQuoter) {
+    getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol) {
+        var _a;
         if (this.quoterAddressOverride) {
-            const quoterAddress = this.quoterAddressOverride(useMixedRouteQuoter);
+            const quoterAddress = this.quoterAddressOverride(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol);
             if (!quoterAddress) {
                 throw new Error(`No address for the quoter contract on chain id: ${this.chainId}`);
             }
             return quoterAddress;
         }
         const quoterAddress = useMixedRouteQuoter
-            ? addresses_1.MIXED_ROUTE_QUOTER_V1_ADDRESSES[this.chainId]
-            : addresses_1.NEW_QUOTER_V2_ADDRESSES[this.chainId];
+            ? mixedRouteContainsV4Pool
+                ? util_1.MIXED_ROUTE_QUOTER_V2_ADDRESSES[this.chainId]
+                : util_1.MIXED_ROUTE_QUOTER_V1_ADDRESSES[this.chainId]
+            : protocol === router_sdk_1.Protocol.V3
+                ? (_a = util_1.NEW_QUOTER_V2_ADDRESSES[this.chainId]) !== null && _a !== void 0 ? _a : util_1.QUOTER_V2_ADDRESSES[this.chainId]
+                : util_1.PROTOCOL_V4_QUOTER_ADDRESSES[this.chainId];
         if (!quoterAddress) {
             throw new Error(`No address for the quoter contract on chain id: ${this.chainId}`);
         }
@@ -163,10 +170,181 @@ class OnChainQuoteProvider {
     async getQuotesManyExactOut(amountOuts, routes, providerConfig) {
         return this.getQuotesManyData(amountOuts, routes, 'quoteExactOutput', providerConfig);
     }
+    encodeRouteToPath(route, functionName) {
+        switch (route.protocol) {
+            case router_sdk_1.Protocol.V3:
+                return (0, v3_sdk_1.encodeRouteToPath)(route, functionName == 'quoteExactOutput' // For exactOut must be true to ensure the routes are reversed.
+                );
+            case router_sdk_1.Protocol.V4:
+                return this.convertV4RouteToPathKey(route, functionName == 'quoteExactOutput');
+            // We don't have onchain V2 quoter, but we do have a mixed quoter that can quote against v2 routes onchain
+            // Hence in case of V2 or mixed, we explicitly encode into mixed routes.
+            case router_sdk_1.Protocol.V2:
+            case router_sdk_1.Protocol.MIXED:
+                return (0, router_sdk_1.encodeMixedRouteToPath)(route instanceof router_1.V2Route
+                    ? new router_sdk_1.MixedRouteSDK(route.pairs, route.input, route.output)
+                    : route);
+            default:
+                throw new Error(`Unsupported protocol for the route: ${JSON.stringify(route)}`);
+        }
+    }
+    convertV4RouteToPathKey(route, exactOut) {
+        const firstInputToken = route.input.wrapped;
+        const { path } = route.pools.reduce(({ inputToken, path }, pool, index) => {
+            const outputToken = pool.token0.equals(inputToken)
+                ? pool.token1
+                : pool.token0;
+            const pathKey = Object.assign({ intermediateCurrency: exactOut
+                    ? inputToken.wrapped.address
+                    : outputToken.wrapped.address, hookData: '0x' }, pool);
+            if (index === 0) {
+                return {
+                    inputToken: outputToken,
+                    path: [pathKey],
+                };
+            }
+            else {
+                return {
+                    inputToken: outputToken,
+                    path: [...path, pathKey],
+                };
+            }
+        }, { inputToken: firstInputToken, path: [] });
+        return path;
+    }
+    getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol) {
+        if (useMixedRouteQuoter) {
+            if (mixedRouteContainsV4Pool) {
+                return MixedRouteQuoterV2__factory_1.MixedRouteQuoterV2__factory.createInterface();
+            }
+            else {
+                return IMixedRouteQuoterV1__factory_1.IMixedRouteQuoterV1__factory.createInterface();
+            }
+        }
+        switch (protocol) {
+            case router_sdk_1.Protocol.V3:
+                return IQuoterV2__factory_1.IQuoterV2__factory.createInterface();
+            case router_sdk_1.Protocol.V4:
+                return V4Quoter__factory_1.V4Quoter__factory.createInterface();
+            default:
+                throw new Error(`Unsupported protocol: ${protocol}`);
+        }
+    }
+    async consolidateResults(protocol, useMixedRouteQuoter, mixedRouteContainsV4Pool, functionName, inputs, providerConfig, gasLimitOverride) {
+        if (protocol === router_sdk_1.Protocol.MIXED && mixedRouteContainsV4Pool) {
+            const mixedQuote = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: this.getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                contractInterface: this.getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                functionName,
+                functionParams: inputs,
+                providerConfig,
+                additionalConfig: {
+                    gasLimitPerCallOverride: gasLimitOverride,
+                },
+            });
+            return {
+                blockNumber: mixedQuote.blockNumber,
+                approxGasUsedPerSuccessCall: mixedQuote.approxGasUsedPerSuccessCall,
+                results: mixedQuote.results.map((result) => {
+                    if (result.success) {
+                        switch (functionName) {
+                            case 'quoteExactInput':
+                                return {
+                                    success: true,
+                                    result: [
+                                        result.result[0],
+                                        Array(inputs.length),
+                                        Array(inputs.length),
+                                        result.result[1],
+                                    ],
+                                };
+                            case 'quoteExactOutput':
+                            default:
+                                throw new Error(`Unsupported function name: ${functionName}`);
+                        }
+                    }
+                    else {
+                        return result;
+                    }
+                }),
+            };
+        }
+        else if (protocol === router_sdk_1.Protocol.V4) {
+            const results = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: this.getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                contractInterface: this.getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                functionName,
+                functionParams: inputs,
+                providerConfig,
+                additionalConfig: {
+                    gasLimitPerCallOverride: gasLimitOverride,
+                },
+            });
+            return {
+                blockNumber: results.blockNumber,
+                approxGasUsedPerSuccessCall: results.approxGasUsedPerSuccessCall,
+                results: results.results.map((result) => {
+                    var _a;
+                    if (result.success) {
+                        let deltaAmountsSum = bignumber_1.BigNumber.from(0);
+                        result.result[0].forEach((result) => {
+                            deltaAmountsSum = deltaAmountsSum.add(result);
+                        });
+                        switch (functionName) {
+                            case 'quoteExactInput':
+                                return {
+                                    success: true,
+                                    result: [
+                                        (_a = result.result[0][result.result[0].length - 1]) === null || _a === void 0 ? void 0 : _a.mul(-1),
+                                        result.result[1],
+                                        result.result[2],
+                                        bignumber_1.BigNumber.from(0),
+                                    ],
+                                };
+                            case 'quoteExactOutput':
+                                return {
+                                    success: true,
+                                    result: [
+                                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                                        result.result[0][0],
+                                        result.result[1],
+                                        result.result[2],
+                                        bignumber_1.BigNumber.from(0),
+                                    ],
+                                };
+                            default:
+                                throw new Error(`Unsupported function name: ${functionName}`);
+                        }
+                    }
+                    else {
+                        return result;
+                    }
+                }),
+            };
+        }
+        else {
+            return await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: this.getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                contractInterface: this.getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                functionName,
+                functionParams: inputs,
+                providerConfig,
+                additionalConfig: {
+                    gasLimitPerCallOverride: gasLimitOverride,
+                },
+            });
+        }
+    }
     async getQuotesManyData(amounts, routes, functionName, _providerConfig) {
         var _a, _b;
         const useMixedRouteQuoter = routes.some((route) => route.protocol === router_sdk_1.Protocol.V2) ||
             routes.some((route) => route.protocol === router_sdk_1.Protocol.MIXED);
+        const useV4RouteQuoter = routes.some((route) => route.protocol === router_sdk_1.Protocol.V4) &&
+            !useMixedRouteQuoter;
+        const mixedRouteContainsV4Pool = useMixedRouteQuoter
+            ? routes.some((route) => route.protocol === router_sdk_1.Protocol.MIXED &&
+                route.pools.some((pool) => pool instanceof v4_sdk_1.Pool))
+            : false;
         const optimisticCachedRoutes = (_a = _providerConfig === null || _providerConfig === void 0 ? void 0 : _providerConfig.optimisticCachedRoutes) !== null && _a !== void 0 ? _a : false;
         /// Validate that there are no incorrect routes / function combinations
         this.validateRoutes(routes, functionName, useMixedRouteQuoter);
@@ -178,16 +356,41 @@ class OnChainQuoteProvider {
         const providerConfig = Object.assign(Object.assign({}, _providerConfig), { blockNumber: (_b = _providerConfig === null || _providerConfig === void 0 ? void 0 : _providerConfig.blockNumber) !== null && _b !== void 0 ? _b : originalBlockNumber + baseBlockOffset });
         const inputs = (0, lodash_1.default)(routes)
             .flatMap((route) => {
-            const encodedRoute = route.protocol === router_sdk_1.Protocol.V3
-                ? (0, v3_sdk_1.encodeRouteToPath)(route, functionName == 'quoteExactOutput' // For exactOut must be true to ensure the routes are reversed.
-                )
-                : (0, router_sdk_1.encodeMixedRouteToPath)(route instanceof router_1.V2Route
-                    ? new router_sdk_1.MixedRouteSDK(route.pairs, route.input, route.output)
-                    : route);
-            const routeInputs = amounts.map((amount) => [
-                encodedRoute,
-                `0x${amount.quotient.toString(16)}`,
-            ]);
+            const encodedRoute = this.encodeRouteToPath(route, functionName);
+            const routeInputs = amounts.map((amount) => {
+                switch (route.protocol) {
+                    case router_sdk_1.Protocol.V4:
+                        return [
+                            {
+                                exactCurrency: amount.currency.wrapped.address,
+                                path: encodedRoute,
+                                exactAmount: amount.quotient.toString(),
+                            },
+                        ];
+                    case router_sdk_1.Protocol.MIXED:
+                        if (mixedRouteContainsV4Pool) {
+                            return [
+                                encodedRoute,
+                                {
+                                    nonEncodableData: route.pools.map((_) => {
+                                        return {
+                                            hookData: '0x',
+                                        };
+                                    }),
+                                },
+                                amount.quotient.toString(),
+                            ];
+                        }
+                        else {
+                            return [encodedRoute, amount.quotient.toString()];
+                        }
+                    default:
+                        return [
+                            encodedRoute,
+                            `0x${amount.quotient.toString(16)}`,
+                        ];
+                }
+            });
             return routeInputs;
         })
             .value();
@@ -232,18 +435,12 @@ class OnChainQuoteProvider {
                 const { inputs } = quoteState;
                 try {
                     totalCallsMade = totalCallsMade + 1;
-                    const results = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
-                        address: this.getQuoterAddress(useMixedRouteQuoter),
-                        contractInterface: useMixedRouteQuoter
-                            ? IMixedRouteQuoterV1__factory_1.IMixedRouteQuoterV1__factory.createInterface()
-                            : IQuoterV2__factory_1.IQuoterV2__factory.createInterface(),
-                        functionName,
-                        functionParams: inputs,
-                        providerConfig,
-                        additionalConfig: {
-                            gasLimitPerCallOverride: gasLimitOverride,
-                        },
-                    });
+                    const protocol = useMixedRouteQuoter
+                        ? router_sdk_1.Protocol.MIXED
+                        : useV4RouteQuoter
+                            ? router_sdk_1.Protocol.V4
+                            : router_sdk_1.Protocol.V3;
+                    const results = await this.consolidateResults(protocol, useMixedRouteQuoter, mixedRouteContainsV4Pool, functionName, inputs, providerConfig, gasLimitOverride);
                     const successRateError = this.validateSuccessRate(results.results, haveRetriedForSuccessRate, useMixedRouteQuoter, optimisticCachedRoutes);
                     if (successRateError) {
                         return {
@@ -547,4 +744,4 @@ class OnChainQuoteProvider {
     }
 }
 exports.OnChainQuoteProvider = OnChainQuoteProvider;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/pool-provider.d.ts
new file mode 100644
index 0000000..8f8cb90
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/pool-provider.d.ts
@@ -0,0 +1,45 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { ChainId, Currency } from '@uniswap/sdk-core';
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
+import { Options as RetryOptions } from 'async-retry';
+import { IMulticallProvider, Result } from './multicall-provider';
+import { ProviderConfig } from './provider';
+export declare type PoolConstruct<TCurrency extends Currency> = [
+    TCurrency,
+    TCurrency,
+    ...Array<string | number>
+];
+export declare type Pool = V3Pool | V4Pool;
+export declare type ISlot0 = {
+    sqrtPriceX96: BigNumber;
+    tick: number;
+};
+export declare type ILiquidity = {
+    liquidity: BigNumber;
+};
+export declare abstract class PoolProvider<TCurrency extends Currency, TPoolConstruct extends PoolConstruct<TCurrency>, TISlot0 extends ISlot0, TILiquidity extends ILiquidity, TPoolAccessor> {
+    protected chainId: ChainId;
+    protected multicall2Provider: IMulticallProvider;
+    protected retryOptions: RetryOptions;
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId: ChainId, multicall2Provider: IMulticallProvider, retryOptions?: RetryOptions);
+    protected getPoolsInternal(poolConstructs: TPoolConstruct[], providerConfig?: ProviderConfig): Promise<TPoolAccessor>;
+    protected abstract getLiquidityFunctionName(): string;
+    protected abstract getSlot0FunctionName(): string;
+    protected abstract getPoolsData<TReturn>(poolIdentifiers: string[], functionName: string, providerConfig?: ProviderConfig): Promise<Result<TReturn>[]>;
+    protected abstract getPoolIdentifier(pool: TPoolConstruct): {
+        poolIdentifier: string;
+        currency0: TCurrency;
+        currency1: TCurrency;
+    };
+    protected abstract instantiatePool(pool: TPoolConstruct, slot0: TISlot0, liquidity: TILiquidity): Pool;
+    protected abstract instantiatePoolAccessor(poolIdentifierToPool: {
+        [poolId: string]: Pool;
+    }): TPoolAccessor;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/pool-provider.js
new file mode 100644
index 0000000..e98c9af
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/pool-provider.js
@@ -0,0 +1,73 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.PoolProvider = void 0;
+const lodash_1 = __importDefault(require("lodash"));
+const util_1 = require("../util");
+class PoolProvider {
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId, multicall2Provider, retryOptions = {
+        retries: 2,
+        minTimeout: 50,
+        maxTimeout: 500,
+    }) {
+        this.chainId = chainId;
+        this.multicall2Provider = multicall2Provider;
+        this.retryOptions = retryOptions;
+    }
+    async getPoolsInternal(poolConstructs, providerConfig) {
+        const poolIdentifierSet = new Set();
+        const sortedCurrencyPairs = [];
+        const sortedPoolIdentifiers = [];
+        for (const poolConstruct of poolConstructs) {
+            const { poolIdentifier: poolIdentifier, currency0, currency1, } = this.getPoolIdentifier(poolConstruct);
+            if (poolIdentifierSet.has(poolIdentifier)) {
+                continue;
+            }
+            // It's the easiest way to change the pool construct in place, since we don't know the entire pool construct at compiling time.
+            poolConstruct[0] = currency0;
+            poolConstruct[1] = currency1;
+            poolIdentifierSet.add(poolIdentifier);
+            sortedCurrencyPairs.push(poolConstruct);
+            sortedPoolIdentifiers.push(poolIdentifier);
+        }
+        util_1.log.debug(`getPools called with ${poolConstructs.length} token pairs. Deduped down to ${poolIdentifierSet.size}`);
+        const [slot0Results, liquidityResults] = await Promise.all([
+            this.getPoolsData(sortedPoolIdentifiers, this.getSlot0FunctionName(), providerConfig),
+            this.getPoolsData(sortedPoolIdentifiers, this.getLiquidityFunctionName(), providerConfig),
+        ]);
+        util_1.log.info(`Got liquidity and slot0s for ${poolIdentifierSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
+            ? `as of block: ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}.`
+            : ``}`);
+        const poolIdentifierToPool = {};
+        const invalidPools = [];
+        for (let i = 0; i < sortedPoolIdentifiers.length; i++) {
+            const slot0Result = slot0Results[i];
+            const liquidityResult = liquidityResults[i];
+            // These properties tell us if a pool is valid and initialized or not.
+            if (!(slot0Result === null || slot0Result === void 0 ? void 0 : slot0Result.success) ||
+                !(liquidityResult === null || liquidityResult === void 0 ? void 0 : liquidityResult.success) ||
+                slot0Result.result.sqrtPriceX96.eq(0)) {
+                invalidPools.push(sortedCurrencyPairs[i]);
+                continue;
+            }
+            const slot0 = slot0Result.result;
+            const liquidity = liquidityResult.result[0];
+            const pool = this.instantiatePool(sortedCurrencyPairs[i], slot0, liquidity);
+            const poolIdentifier = sortedPoolIdentifiers[i];
+            poolIdentifierToPool[poolIdentifier] = pool;
+        }
+        const poolStrs = lodash_1.default.map(Object.values(poolIdentifierToPool), util_1.poolToString);
+        util_1.log.debug({ poolStrs }, `Found ${poolStrs.length} valid pools`);
+        return this.instantiatePoolAccessor(poolIdentifierToPool);
+    }
+}
+exports.PoolProvider = PoolProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFLQSxvREFBdUI7QUFFdkIsa0NBQTRDO0FBbUI1QyxNQUFzQixZQUFZO0lBT2hDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNoQixrQkFBc0MsRUFDdEMsZUFBNkI7UUFDckMsT0FBTyxFQUFFLENBQUM7UUFDVixVQUFVLEVBQUUsRUFBRTtRQUNkLFVBQVUsRUFBRSxHQUFHO0tBQ2hCO1FBTlMsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQ3RDLGlCQUFZLEdBQVosWUFBWSxDQUlyQjtJQUNBLENBQUM7SUFFTSxLQUFLLENBQUMsZ0JBQWdCLENBQzlCLGNBQWdDLEVBQ2hDLGNBQStCO1FBRS9CLE1BQU0saUJBQWlCLEdBQWdCLElBQUksR0FBRyxFQUFVLENBQUM7UUFDekQsTUFBTSxtQkFBbUIsR0FBMEIsRUFBRSxDQUFDO1FBQ3RELE1BQU0scUJBQXFCLEdBQWEsRUFBRSxDQUFDO1FBRTNDLEtBQUssTUFBTSxhQUFhLElBQUksY0FBYyxFQUFFO1lBQzFDLE1BQU0sRUFDSixjQUFjLEVBQUUsY0FBYyxFQUM5QixTQUFTLEVBQ1QsU0FBUyxHQUNWLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBRTFDLElBQUksaUJBQWlCLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxFQUFFO2dCQUN6QyxTQUFTO2FBQ1Y7WUFFRCwrSEFBK0g7WUFDL0gsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQztZQUM3QixhQUFhLENBQUMsQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDO1lBQzdCLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUN0Qyxt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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.d.ts
index 837e241..9262da7 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.d.ts
@@ -1,6 +1,7 @@
 import { TradeType } from '@uniswap/sdk-core';
 import { RouteWithValidQuote, SwapOptions } from '../routers';
 import { CurrencyAmount } from '../util';
+import { ProviderConfig } from './provider';
 export interface IPortionProvider {
     /**
      * Get the portion amount for the given token out amount.
@@ -8,9 +9,11 @@ export interface IPortionProvider {
      *
      * @param tokenOutAmount the token out amount, either the quote for exact in, or the swapper requested amount for exact out
      * @param tradeType the trade type, exact in or exact out
+     * @param externalTransferFailed fees charged on token transfers where the to or from address is NOT the uniswap V2 pair address
+     * @param feeTakenOnTransfer double fee taken on transfer as part of universal router custody
      * @param swapConfig swap config, containing the portion related data
      */
-    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, tokenOutHasFot?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
+    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, externalTransferFailed?: boolean, feeTakenOnTransfer?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
     /**
      * Get the portion quote amount for the given portion amount.
      * Only applicable for exact out. For exact out, will return zero amount.
@@ -33,8 +36,9 @@ export interface IPortionProvider {
      * @param tradeType the trade type, exact in or exact out
      * @param routeWithQuotes the route with quotes
      * @param swapConfig swap config, containing the portion related data
+     * @param providerConfig provider config, for the FOT fee related data
      */
-    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions): RouteWithValidQuote[];
+    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions, providerConfig?: ProviderConfig): RouteWithValidQuote[];
     /**
      * Get the quote gas adjusted amount for exact in and exact out.
      * For exact in, quote amount is the same as the best swap quote.
@@ -73,9 +77,9 @@ export interface IPortionProvider {
     getQuoteGasAndPortionAdjusted(tradeType: TradeType, quoteGasAdjusted: CurrencyAmount, portionAmount?: CurrencyAmount): CurrencyAmount | undefined;
 }
 export declare class PortionProvider implements IPortionProvider {
-    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, tokenOutHasFot?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
+    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, externalTransferFailed?: boolean, feeTakenOnTransfer?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
     getPortionQuoteAmount(tradeType: TradeType, quote: CurrencyAmount, portionAdjustedAmount: CurrencyAmount, portionAmount?: CurrencyAmount): CurrencyAmount | undefined;
-    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions): RouteWithValidQuote[];
+    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions, providerConfig?: ProviderConfig): RouteWithValidQuote[];
     getQuote(tradeType: TradeType, quote: CurrencyAmount, portionQuoteAmount?: CurrencyAmount): CurrencyAmount;
     getQuoteGasAdjusted(tradeType: TradeType, quoteGasAdjusted: CurrencyAmount, portionQuoteAmount?: CurrencyAmount): CurrencyAmount;
     getQuoteGasAndPortionAdjusted(tradeType: TradeType, quoteGasAdjusted: CurrencyAmount, portionAmount?: CurrencyAmount): CurrencyAmount | undefined;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.js
index df0c3cd..4804ca5 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/portion-provider.js
@@ -7,8 +7,10 @@ const sdk_core_1 = require("@uniswap/sdk-core");
 const routers_1 = require("../routers");
 const util_1 = require("../util");
 class PortionProvider {
-    getPortionAmount(tokenOutAmount, tradeType, tokenOutHasFot, swapConfig) {
-        if (tokenOutHasFot || (swapConfig === null || swapConfig === void 0 ? void 0 : swapConfig.type) !== routers_1.SwapType.UNIVERSAL_ROUTER) {
+    getPortionAmount(tokenOutAmount, tradeType, externalTransferFailed, feeTakenOnTransfer, swapConfig) {
+        if (externalTransferFailed ||
+            feeTakenOnTransfer ||
+            (swapConfig === null || swapConfig === void 0 ? void 0 : swapConfig.type) !== routers_1.SwapType.UNIVERSAL_ROUTER) {
             return undefined;
         }
         const swapConfigUniversalRouter = swapConfig;
@@ -49,7 +51,7 @@ class PortionProvider {
         //    because the portion amount calculated from the exact out has no way to account for the gas units.
         return util_1.CurrencyAmount.fromRawAmount(quote.currency, portionToPortionAdjustedAmountRatio.multiply(quote).quotient);
     }
-    getRouteWithQuotePortionAdjusted(tradeType, routeWithQuotes, swapConfig) {
+    getRouteWithQuotePortionAdjusted(tradeType, routeWithQuotes, swapConfig, providerConfig) {
         // the route with quote portion adjustment is only needed for exact in routes with quotes
         // because the route with quotes does not know the output amount needs to subtract the portion amount
         if (tradeType !== sdk_core_1.TradeType.EXACT_INPUT) {
@@ -61,10 +63,7 @@ class PortionProvider {
             return routeWithQuotes;
         }
         return routeWithQuotes.map((routeWithQuote) => {
-            var _a;
-            const tokenOut = routeWithQuote.tokenPath[routeWithQuote.tokenPath.length - 1];
-            const tokenOutHasFot = tokenOut && ((_a = tokenOut.buyFeeBps) === null || _a === void 0 ? void 0 : _a.gt(0));
-            const portionAmount = this.getPortionAmount(routeWithQuote.quote, tradeType, tokenOutHasFot, swapConfig);
+            const portionAmount = this.getPortionAmount(routeWithQuote.quote, tradeType, providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.externalTransferFailed, providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.feeTakenOnTransfer, swapConfig);
             // This is a sub-optimal solution agreed among the teams to work around the exact in
             // portion amount issue for universal router.
             // The most optimal solution is to update router-sdk https://github.com/Uniswap/router-sdk/blob/main/src/entities/trade.ts#L215
@@ -116,4 +115,4 @@ class PortionProvider {
     }
 }
 exports.PortionProvider = PortionProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9ydGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvcG9ydGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3REFBcUQ7QUFDckQsb0RBQTJDO0FBQzNDLGdEQUF3RDtBQUV4RCx3Q0FLb0I7QUFDcEIsa0NBQXlDO0FBeUd6QyxNQUFhLGVBQWU7SUFDMUIsZ0JBQWdCLENBQ2QsY0FBOEIsRUFDOUIsU0FBb0IsRUFDcEIsY0FBd0IsRUFDeEIsVUFBd0I7UUFFeEIsSUFBSSxjQUFjLElBQUksQ0FBQSxVQUFVLGFBQVYsVUFBVSx1QkFBVixVQUFVLENBQUUsSUFBSSxNQUFLLGtCQUFRLENBQUMsZ0JBQWdCLEVBQUU7WUFDcEUsT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFFRCxNQUFNLHlCQUF5QixHQUFHLFVBQXdDLENBQUM7UUFDM0UsUUFBUSxTQUFTLEVBQUU7WUFDakIsS0FBSyxvQkFBUyxDQUFDLFdBQVc7Z0JBQ3hCLElBQ0UseUJBQXlCLENBQUMsR0FBRztvQkFDN0IseUJBQXlCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsaUJBQUksQ0FBQyxFQUNuRDtvQkFDQSxPQUFPLGNBQWMsQ0FBQyxRQUFRLENBQUMseUJBQXlCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUNuRTtnQkFFRCxPQUFPLFNBQVMsQ0FBQztZQUNuQixLQUFLLG9CQUFTLENBQUMsWUFBWTtnQkFDekIsSUFDRSx5QkFBeUIsQ0FBQyxPQUFPO29CQUNqQyx5QkFBeUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUM1RDtvQkFDQSxPQUFPLHFCQUFjLENBQUMsYUFBYSxDQUNqQyxjQUFjLENBQUMsUUFBUSxFQUN2Qix5QkFBeUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9ydGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvcG9ydGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3REFBcUQ7QUFDckQsb0RBQTJDO0FBQzNDLGdEQUF3RDtBQUV4RCx3Q0FLb0I7QUFDcEIsa0NBQXlDO0FBZ0h6QyxNQUFhLGVBQWU7SUFDMUIsZ0JBQWdCLENBQ2QsY0FBOEIsRUFDOUIsU0FBb0IsRUFDcEIsc0JBQWdDLEVBQ2hDLGtCQUE0QixFQUM1QixVQUF3QjtRQUV4QixJQUNFLHNCQUFzQjtZQUN0QixrQkFBa0I7WUFDbEIsQ0FBQSxVQUFVLGFBQVYsVUFBVSx1QkFBVixVQUFVLENBQUUsSUFBSSxNQUFLLGtCQUFRLENBQUMsZ0JBQWdCLEVBQzlDO1lBQ0EsT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFFRCxNQUFNLHlCQUF5QixHQUFHLFVBQXdDLENBQUM7UUFDM0UsUUFBUSxTQUFTLEVBQUU7WUFDakIsS0FBSyxvQkFBUyxDQUFDLFdBQVc7Z0JBQ3hCLElBQ0UseUJBQXlCLENBQUMsR0FBRztvQkFDN0IseUJBQXlCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsaUJBQUksQ0FBQyxFQUNuRDtvQkFDQSxPQUFPLGNBQWMsQ0FBQyxRQUFRLENBQUMseUJBQXlCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUNuRTtnQkFFRCxPQUFPLFNBQVMsQ0FBQztZQUNuQixLQUFLLG9CQUFTLENBQUMsWUFBWTtnQkFDekIsSUFDRSx5QkFBeUIsQ0FBQyxPQUFPO29CQUNqQyx5QkFBeUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUM1RDtvQkFDQSxPQUFPLHFCQUFjLENBQUMsYUFBYSxDQUNqQyxjQUFjLENBQUMsUUFBUSxFQUN2Qix5QkFBeUIsQ0FBQyxP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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts
index 735f4b9..e545b20 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts
@@ -1,3 +1,4 @@
+import { UniversalRouterVersion } from '@uniswap/universal-router-sdk';
 export declare type ProviderConfig = {
     /**
      * The block number to use when getting data on-chain.
@@ -18,6 +19,18 @@ export declare type ProviderConfig = {
      * Optimistic mode means that we will allow blocksToLive greater than 1.
      */
     optimisticCachedRoutes?: boolean;
+    /**
+     * FOT fees charged on token transfers where the to or from address is NOT the uniswap V2 pair address
+     */
+    externalTransferFailed?: boolean;
+    /**
+     * double FOT fee taken on transfer as part of universal router custody
+     */
+    feeTakenOnTransfer?: boolean;
+    /**
+     * The version of the universal router to use.
+     */
+    universalRouterVersion?: UniversalRouterVersion;
 };
 export declare type LocalCacheEntry<T> = {
     entry: T;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/simulation-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/simulation-provider.js
index 8df421e..b9ba81a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/simulation-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/simulation-provider.js
@@ -2,12 +2,12 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.Simulator = exports.SimulationStatus = void 0;
 const sdk_core_1 = require("@uniswap/sdk-core");
-const universal_router_sdk_1 = require("@uniswap/universal-router-sdk");
 const ethers_1 = require("ethers/lib/ethers");
 const routers_1 = require("../routers");
 const Erc20__factory_1 = require("../types/other/factories/Erc20__factory");
 const Permit2__factory_1 = require("../types/other/factories/Permit2__factory");
 const util_1 = require("../util");
+const permit2_sdk_1 = require("@uniswap/permit2-sdk");
 var SimulationStatus;
 (function (SimulationStatus) {
     SimulationStatus[SimulationStatus["NotSupported"] = 0] = "NotSupported";
@@ -34,7 +34,9 @@ class Simulator {
     }
     async simulate(fromAddress, swapOptions, swapRoute, amount, quote, providerConfig) {
         const neededBalance = swapRoute.trade.tradeType == sdk_core_1.TradeType.EXACT_INPUT ? amount : quote;
-        if ((neededBalance.currency.isNative && this.chainId == sdk_core_1.ChainId.MAINNET) ||
+        if (
+        // we assume we always have enough eth mainnet balance because we use beacon address later
+        (neededBalance.currency.isNative && this.chainId == sdk_core_1.ChainId.MAINNET) ||
             (await this.userHasSufficientBalance(fromAddress, swapRoute.trade.tradeType, amount, quote))) {
             util_1.log.info('User has sufficient balance to simulate. Simulating transaction.');
             try {
@@ -80,7 +82,7 @@ class Simulator {
         // Check token has approved Permit2 more than expected amount.
         const tokenContract = Erc20__factory_1.Erc20__factory.connect(inputAmount.currency.wrapped.address, provider);
         if (swapOptions.type == routers_1.SwapType.UNIVERSAL_ROUTER) {
-            const permit2Allowance = await tokenContract.allowance(fromAddress, universal_router_sdk_1.PERMIT2_ADDRESS);
+            const permit2Allowance = await tokenContract.allowance(fromAddress, (0, permit2_sdk_1.permit2Address)(this.chainId));
             // If a permit has been provided we don't need to check if UR has already been allowed.
             if (swapOptions.inputTokenPermit) {
                 util_1.log.info({
@@ -90,7 +92,7 @@ class Simulator {
                 return permit2Allowance.gte(ethers_1.BigNumber.from(inputAmount.quotient.toString()));
             }
             // Check UR has been approved from Permit2.
-            const permit2Contract = Permit2__factory_1.Permit2__factory.connect(universal_router_sdk_1.PERMIT2_ADDRESS, provider);
+            const permit2Contract = Permit2__factory_1.Permit2__factory.connect((0, permit2_sdk_1.permit2Address)(this.chainId), provider);
             const { amount: universalRouterAllowance, expiration: tokenExpiration } = await permit2Contract.allowance(fromAddress, inputAmount.currency.wrapped.address, (0, util_1.SWAP_ROUTER_02_ADDRESSES)(this.chainId));
             const nowTimestampS = Math.round(Date.now() / 1000);
             const inputAmountBN = ethers_1.BigNumber.from(inputAmount.quotient.toString());
@@ -130,4 +132,4 @@ class Simulator {
     }
 }
 exports.Simulator = Simulator;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltdWxhdGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc2ltdWxhdGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxnREFBdUQ7QUFDdkQsd0VBQWdFO0FBQ2hFLDhDQUE4QztBQUU5Qyx3Q0FLb0I7QUFDcEIsNEVBQXlFO0FBQ3pFLGdGQUE2RTtBQUM3RSxrQ0FBd0U7QUFjeEUsSUFBWSxnQkFNWDtBQU5ELFdBQVksZ0JBQWdCO0lBQzFCLHVFQUFnQixDQUFBO0lBQ2hCLDJEQUFVLENBQUE7SUFDVixpRUFBYSxDQUFBO0lBQ2IscUZBQXVCLENBQUE7SUFDdkIscUVBQWUsQ0FBQTtBQUNqQixDQUFDLEVBTlcsZ0JBQWdCLEdBQWhCLHdCQUFnQixLQUFoQix3QkFBZ0IsUUFNM0I7QUFFRDs7Ozs7R0FLRztBQUNILE1BQXNCLFNBQVM7SUFJN0I7OztPQUdHO0lBQ0gsWUFDRSxRQUF5QixFQUN6QixlQUFpQyxFQUN2QixPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBRTFCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxLQUFLLENBQUMsUUFBUSxDQUNuQixXQUFtQixFQUNuQixXQUF3QixFQUN4QixTQUFvQixFQUNwQixNQUFzQixFQUN0QixLQUFxQixFQUNyQixjQUF1QztRQUV2QyxNQUFNLGFBQWEsR0FDakIsU0FBUyxDQUFDLEtBQUssQ0FBQyxTQUFTLElBQUksb0JBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3RFLElBQ0UsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLGtCQUFPLENBQUMsT0FBTyxDQUFDO1lBQ3BF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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltdWxhdGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc2ltdWxhdGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxnREFBdUQ7QUFDdkQsOENBQThDO0FBRTlDLHdDQUtvQjtBQUNwQiw0RUFBeUU7QUFDekUsZ0ZBQTZFO0FBQzdFLGtDQUF3RTtBQUV4RSxzREFBc0Q7QUFhdEQsSUFBWSxnQkFNWDtBQU5ELFdBQVksZ0JBQWdCO0lBQzFCLHVFQUFnQixDQUFBO0lBQ2hCLDJEQUFVLENBQUE7SUFDVixpRUFBYSxDQUFBO0lBQ2IscUZBQXVCLENBQUE7SUFDdkIscUVBQWUsQ0FBQTtBQUNqQixDQUFDLEVBTlcsZ0JBQWdCLEdBQWhCLHdCQUFnQixLQUFoQix3QkFBZ0IsUUFNM0I7QUFFRDs7Ozs7R0FLRztBQUNILE1BQXNCLFNBQVM7SUFJN0I7OztPQUdHO0lBQ0gsWUFDRSxRQUF5QixFQUN6QixlQUFpQyxFQUN2QixPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBRTFCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxLQUFLLENBQUMsUUFBUSxDQUNuQixXQUFtQixFQUNuQixXQUF3QixFQUN4QixTQUFvQixFQUNwQixNQUFzQixFQUN0QixLQUFxQixFQUNyQixjQUF1QztRQUV2QyxNQUFNLGFBQWEsR0FDakIsU0FBUyxDQUFDLEtBQUssQ0FBQyxTQUFTLElBQUksb0JBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3RFO1FBQ0UsMEZBQTBGO1FBQzFGLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxrQkFBTyxDQUFDLE9B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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider-with-fallback.d.ts
new file mode 100644
index 0000000..a61c15b
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider-with-fallback.d.ts
@@ -0,0 +1,11 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { Token } from '@uniswap/sdk-core';
+import { SubgraphPool } from '../routers/alpha-router/functions/get-candidate-pools';
+import { ProviderConfig } from './provider';
+import { ISubgraphProvider } from './subgraph-provider';
+export declare abstract class SubgraphProviderWithFallBacks<TSubgraphPool extends SubgraphPool> implements ISubgraphProvider<TSubgraphPool> {
+    private fallbacks;
+    private protocol;
+    protected constructor(fallbacks: ISubgraphProvider<TSubgraphPool>[], protocol: Protocol);
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider-with-fallback.js
new file mode 100644
index 0000000..cff59b0
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider-with-fallback.js
@@ -0,0 +1,25 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.SubgraphProviderWithFallBacks = void 0;
+const util_1 = require("../util");
+class SubgraphProviderWithFallBacks {
+    constructor(fallbacks, protocol) {
+        this.fallbacks = fallbacks;
+        this.protocol = protocol;
+    }
+    async getPools(tokenIn, tokenOut, providerConfig) {
+        for (let i = 0; i < this.fallbacks.length; i++) {
+            const provider = this.fallbacks[i];
+            try {
+                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);
+                return pools;
+            }
+            catch (err) {
+                util_1.log.info(`Failed to get subgraph pools for ${this.protocol} from fallback #${i}`);
+            }
+        }
+        throw new Error('Failed to get subgraph pools from any providers');
+    }
+}
+exports.SubgraphProviderWithFallBacks = SubgraphProviderWithFallBacks;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSxrQ0FBOEI7QUFJOUIsTUFBc0IsNkJBQTZCO0lBSWpELFlBQ1UsU0FBNkMsRUFDN0MsUUFBa0I7UUFEbEIsY0FBUyxHQUFULFNBQVMsQ0FBb0M7UUFDN0MsYUFBUSxHQUFSLFFBQVEsQ0FBVTtJQUN6QixDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsT0FBZSxFQUNmLFFBQWdCLEVBQ2hCLGNBQStCO1FBRS9CLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM5QyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBQ3BDLElBQUk7Z0JBQ0YsTUFBTSxLQUFLLEdBQUcsTUFBTSxRQUFRLENBQUMsUUFBUSxDQUNuQyxPQUFPLEVBQ1AsUUFBUSxFQUNSLGNBQWMsQ0FDZixDQUFDO2dCQUNGLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFBQyxPQUFPLEdBQUcsRUFBRTtnQkFDWixVQUFHLENBQUMsSUFBSSxDQUNOLG9DQUFvQyxJQUFJLENBQUMsUUFBUSxtQkFBbUIsQ0FBQyxFQUFFLENBQ3hFLENBQUM7YUFDSDtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRjtBQWhDRCxzRUFnQ0MifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider.d.ts
new file mode 100644
index 0000000..a262d5d
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider.d.ts
@@ -0,0 +1,51 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { SubgraphPool } from '../routers/alpha-router/functions/get-candidate-pools';
+import { ProviderConfig } from './provider';
+export interface ISubgraphProvider<TSubgraphPool extends SubgraphPool> {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+}
+export declare type V3V4SubgraphPool = {
+    id: string;
+    feeTier: string;
+    liquidity: string;
+    token0: {
+        id: string;
+    };
+    token1: {
+        id: string;
+    };
+    tvlETH: number;
+    tvlUSD: number;
+};
+export declare type V3V4RawSubgraphPool = {
+    id: string;
+    feeTier: string;
+    liquidity: string;
+    token0: {
+        symbol: string;
+        id: string;
+    };
+    token1: {
+        symbol: string;
+        id: string;
+    };
+    totalValueLockedUSD: string;
+    totalValueLockedETH: string;
+    totalValueLockedUSDUntracked: string;
+};
+export declare abstract class SubgraphProvider<TRawSubgraphPool extends V3V4RawSubgraphPool, TSubgraphPool extends V3V4SubgraphPool> {
+    private protocol;
+    private chainId;
+    private retries;
+    private timeout;
+    private rollback;
+    private trackedEthThreshold;
+    private untrackedUsdThreshold;
+    private subgraphUrl?;
+    private client;
+    constructor(protocol: Protocol, chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrl?: string | undefined);
+    getPools(_tokenIn?: Token, _tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+    protected abstract subgraphQuery(blockNumber?: number): string;
+    protected abstract mapSubgraphPool(rawSubgraphPool: TRawSubgraphPool): TSubgraphPool;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider.js
new file mode 100644
index 0000000..b93cafc
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/subgraph-provider.js
@@ -0,0 +1,120 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.SubgraphProvider = void 0;
+const async_retry_1 = __importDefault(require("async-retry"));
+const await_timeout_1 = __importDefault(require("await-timeout"));
+const graphql_request_1 = require("graphql-request");
+const lodash_1 = __importDefault(require("lodash"));
+const util_1 = require("../util");
+const PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.
+class SubgraphProvider {
+    constructor(protocol, chainId, retries = 2, timeout = 30000, rollback = true, trackedEthThreshold = 0.01, untrackedUsdThreshold = Number.MAX_VALUE, subgraphUrl) {
+        this.protocol = protocol;
+        this.chainId = chainId;
+        this.retries = retries;
+        this.timeout = timeout;
+        this.rollback = rollback;
+        this.trackedEthThreshold = trackedEthThreshold;
+        this.untrackedUsdThreshold = untrackedUsdThreshold;
+        this.subgraphUrl = subgraphUrl;
+        this.protocol = protocol;
+        if (!this.subgraphUrl) {
+            throw new Error(`No subgraph url for chain id: ${this.chainId}`);
+        }
+        this.client = new graphql_request_1.GraphQLClient(this.subgraphUrl);
+    }
+    async getPools(_tokenIn, _tokenOut, providerConfig) {
+        const beforeAll = Date.now();
+        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
+            ? await providerConfig.blockNumber
+            : undefined;
+        const query = (0, graphql_request_1.gql) `
+      ${this.subgraphQuery(blockNumber)}
+    `;
+        let pools = [];
+        util_1.log.info(`Getting ${this.protocol} pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
+            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`
+            : ''}.`);
+        let retries = 0;
+        await (0, async_retry_1.default)(async () => {
+            const timeout = new await_timeout_1.default();
+            const getPools = async () => {
+                let lastId = '';
+                let pools = [];
+                let poolsPage = [];
+                // metrics variables
+                let totalPages = 0;
+                do {
+                    totalPages += 1;
+                    const poolsResult = await this.client.request(query, {
+                        pageSize: PAGE_SIZE,
+                        id: lastId,
+                    });
+                    poolsPage = poolsResult.pools;
+                    pools = pools.concat(poolsPage);
+                    lastId = pools[pools.length - 1].id;
+                    util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.paginate.pageSize`, poolsPage.length);
+                } while (poolsPage.length > 0);
+                util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.paginate`, totalPages);
+                util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.pools.length`, pools.length);
+                return pools;
+            };
+            try {
+                const getPoolsPromise = getPools();
+                const timerPromise = timeout.set(this.timeout).then(() => {
+                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);
+                });
+                pools = await Promise.race([getPoolsPromise, timerPromise]);
+                return;
+            }
+            catch (err) {
+                util_1.log.error({ err }, `Error fetching ${this.protocol} Subgraph Pools.`);
+                throw err;
+            }
+            finally {
+                timeout.clear();
+            }
+        }, {
+            retries: this.retries,
+            onRetry: (err, retry) => {
+                retries += 1;
+                if (this.rollback &&
+                    blockNumber &&
+                    lodash_1.default.includes(err.message, 'indexed up to')) {
+                    util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.indexError`, 1);
+                    blockNumber = blockNumber - 10;
+                    util_1.log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);
+                }
+                util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.timeout`, 1);
+                pools = [];
+                util_1.log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);
+            },
+        });
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.retries`, retries);
+        const untrackedPools = pools.filter((pool) => parseInt(pool.liquidity) > 0 ||
+            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold ||
+            parseFloat(pool.totalValueLockedUSDUntracked) >
+                this.untrackedUsdThreshold);
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.untracked.length`, untrackedPools.length);
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.untracked.percent`, (untrackedPools.length / pools.length) * 100);
+        const beforeFilter = Date.now();
+        const poolsSanitized = pools
+            .filter((pool) => parseInt(pool.liquidity) > 0 ||
+            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold)
+            .map((pool) => {
+            return this.mapSubgraphPool(pool);
+        });
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.filter.latency`, Date.now() - beforeFilter);
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.filter.length`, poolsSanitized.length);
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.filter.percent`, (poolsSanitized.length / pools.length) * 100);
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools`, 1);
+        util_1.metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.latency`, Date.now() - beforeAll);
+        util_1.log.info(`Got ${pools.length} ${this.protocol} pools from the subgraph. ${poolsSanitized.length} after filtering`);
+        return poolsSanitized;
+    }
+}
+exports.SubgraphProvider = SubgraphProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLDhEQUFnQztBQUNoQyxrRUFBb0M7QUFDcEMscURBQXFEO0FBQ3JELG9EQUF1QjtBQUV2QixrQ0FBc0M7QUFhdEMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsK0NBQStDO0FBaUN2RSxNQUFzQixnQkFBZ0I7SUFNcEMsWUFDVSxRQUFrQixFQUNsQixPQUFnQixFQUNoQixVQUFVLENBQUMsRUFDWCxVQUFVLEtBQUssRUFDZixXQUFXLElBQUksRUFDZixzQkFBc0IsSUFBSSxFQUMxQix3QkFBd0IsTUFBTSxDQUFDLFNBQVMsRUFDeEMsV0FBb0I7UUFQcEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQUk7UUFDWCxZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQ2YsYUFBUSxHQUFSLFFBQVEsQ0FBTztRQUNmLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBTztRQUMxQiwwQkFBcUIsR0FBckIscUJBQXFCLENBQW1CO1FBQ3hDLGdCQUFXLEdBQVgsV0FBVyxDQUFTO1FBRTVCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3JCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1NBQ2xFO1FBQ0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLCtCQUFhLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBUSxDQUNuQixRQUFnQixFQUNoQixTQUFpQixFQUNqQixjQUErQjtRQUUv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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.d.ts
index 94b6b2f..8d8fc6b 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.d.ts
@@ -6,6 +6,7 @@ import { IPortionProvider } from './portion-provider';
 import { SimulationResult, Simulator } from './simulation-provider';
 import { IV2PoolProvider } from './v2/pool-provider';
 import { IV3PoolProvider } from './v3/pool-provider';
+import { IV4PoolProvider } from './v4/pool-provider';
 export declare type TenderlyResponseUniversalRouter = {
     config: {
         url: string;
@@ -26,11 +27,19 @@ export declare type GasBody = {
     gas: string;
     gasUsed: string;
 };
+export declare type JsonRpcError = {
+    error: {
+        code: number;
+        message: string;
+        data: string;
+    };
+};
 export declare type TenderlyResponseEstimateGasBundle = {
     id: number;
     jsonrpc: string;
-    result: GasBody[];
+    result: Array<JsonRpcError | GasBody>;
 };
+export declare const TENDERLY_NOT_SUPPORTED_CHAINS: ChainId[];
 export declare class FallbackTenderlySimulator extends Simulator {
     private tenderlySimulator;
     private ethEstimateGasSimulator;
@@ -45,15 +54,16 @@ export declare class TenderlySimulator extends Simulator {
     private tenderlyNodeApiKey;
     private v2PoolProvider;
     private v3PoolProvider;
+    private v4PoolProvider;
     private overrideEstimateMultiplier;
     private tenderlyRequestTimeout?;
-    private tenderlyNodeApiSamplingPercent?;
+    private tenderlyNodeApiMigrationPercent?;
     private tenderlyNodeApiEnabledChains?;
     private tenderlyServiceInstance;
-    constructor(chainId: ChainId, tenderlyBaseUrl: string, tenderlyUser: string, tenderlyProject: string, tenderlyAccessKey: string, tenderlyNodeApiKey: string, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, provider: JsonRpcProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
+    constructor(chainId: ChainId, tenderlyBaseUrl: string, tenderlyUser: string, tenderlyProject: string, tenderlyAccessKey: string, tenderlyNodeApiKey: string, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, v4PoolProvider: IV4PoolProvider, provider: JsonRpcProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
         [chainId in ChainId]?: number;
-    }, tenderlyRequestTimeout?: number, tenderlyNodeApiSamplingPercent?: number, tenderlyNodeApiEnabledChains?: ChainId[]);
+    }, tenderlyRequestTimeout?: number, tenderlyNodeApiMigrationPercent?: number, tenderlyNodeApiEnabledChains?: ChainId[]);
     simulateTransaction(fromAddress: string, swapOptions: SwapOptions, swapRoute: SwapRoute, providerConfig?: GasModelProviderConfig): Promise<SwapRoute>;
     private logTenderlyErrorResponse;
-    private sampleNodeEndpoint;
+    private requestNodeSimulation;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.js
index 604fa03..4346b60 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/tenderly-simulation-provider.js
@@ -3,10 +3,11 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.TenderlySimulator = exports.FallbackTenderlySimulator = void 0;
+exports.TenderlySimulator = exports.FallbackTenderlySimulator = exports.TENDERLY_NOT_SUPPORTED_CHAINS = void 0;
 const http_1 = __importDefault(require("http"));
 const https_1 = __importDefault(require("https"));
 const constants_1 = require("@ethersproject/constants");
+const permit2_sdk_1 = require("@uniswap/permit2-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const universal_router_sdk_1 = require("@uniswap/universal-router-sdk");
 const axios_1 = __importDefault(require("axios"));
@@ -33,6 +34,23 @@ const TENDERLY_NODE_API = (chainId, tenderlyNodeApiKey) => {
             throw new Error(`ChainId ${chainId} does not correspond to a tenderly node endpoint`);
     }
 };
+exports.TENDERLY_NOT_SUPPORTED_CHAINS = [
+    sdk_core_1.ChainId.CELO,
+    sdk_core_1.ChainId.CELO_ALFAJORES,
+    sdk_core_1.ChainId.ZKSYNC,
+    sdk_core_1.ChainId.ABSTRACT_TESTNET,
+    sdk_core_1.ChainId.ZERO,
+    sdk_core_1.ChainId.BOB,
+    sdk_core_1.ChainId.CYBER,
+    sdk_core_1.ChainId.SHAPE,
+    sdk_core_1.ChainId.INK,
+    sdk_core_1.ChainId.REDSTONE,
+    sdk_core_1.ChainId.REDSTONE_GARNET,
+    sdk_core_1.ChainId.ABSTRACT_MAINNET,
+    sdk_core_1.ChainId.ANIME_TESTNET,
+    sdk_core_1.ChainId.ANIME,
+    sdk_core_1.ChainId.MODE,
+];
 // We multiply tenderly gas limit by this to overestimate gas limit
 const DEFAULT_ESTIMATE_MULTIPLIER = 1.3;
 class FallbackTenderlySimulator extends simulation_provider_1.Simulator {
@@ -45,7 +63,7 @@ class FallbackTenderlySimulator extends simulation_provider_1.Simulator {
         // Make call to eth estimate gas if possible
         // For erc20s, we must check if the token allowance is sufficient
         const inputAmount = swapRoute.trade.inputAmount;
-        if ((inputAmount.currency.isNative && this.chainId == sdk_core_1.ChainId.MAINNET) ||
+        if (inputAmount.currency.isNative ||
             (await this.checkTokenApproved(fromAddress, inputAmount, swapOptions, this.provider))) {
             util_1.log.info('Simulating with eth_estimateGas since token is native or approved.');
             try {
@@ -54,7 +72,8 @@ class FallbackTenderlySimulator extends simulation_provider_1.Simulator {
             }
             catch (err) {
                 util_1.log.info({ err: err }, 'Error simulating using eth_estimateGas');
-                return Object.assign(Object.assign({}, swapRoute), { simulationStatus: simulation_provider_1.SimulationStatus.Failed });
+                // If it fails, we should still try to simulate using Tenderly
+                // return { ...swapRoute, simulationStatus: SimulationStatus.Failed };
             }
         }
         try {
@@ -71,7 +90,7 @@ class FallbackTenderlySimulator extends simulation_provider_1.Simulator {
 }
 exports.FallbackTenderlySimulator = FallbackTenderlySimulator;
 class TenderlySimulator extends simulation_provider_1.Simulator {
-    constructor(chainId, tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, tenderlyNodeApiKey, v2PoolProvider, v3PoolProvider, provider, portionProvider, overrideEstimateMultiplier, tenderlyRequestTimeout, tenderlyNodeApiSamplingPercent, tenderlyNodeApiEnabledChains) {
+    constructor(chainId, tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, tenderlyNodeApiKey, v2PoolProvider, v3PoolProvider, v4PoolProvider, provider, portionProvider, overrideEstimateMultiplier, tenderlyRequestTimeout, tenderlyNodeApiMigrationPercent, tenderlyNodeApiEnabledChains) {
         super(provider, portionProvider, chainId);
         this.tenderlyNodeApiEnabledChains = [];
         this.tenderlyServiceInstance = axios_1.default.create({
@@ -87,18 +106,19 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
         this.tenderlyNodeApiKey = tenderlyNodeApiKey;
         this.v2PoolProvider = v2PoolProvider;
         this.v3PoolProvider = v3PoolProvider;
+        this.v4PoolProvider = v4PoolProvider;
         this.overrideEstimateMultiplier = overrideEstimateMultiplier !== null && overrideEstimateMultiplier !== void 0 ? overrideEstimateMultiplier : {};
         this.tenderlyRequestTimeout = tenderlyRequestTimeout;
-        this.tenderlyNodeApiSamplingPercent = tenderlyNodeApiSamplingPercent;
+        this.tenderlyNodeApiMigrationPercent = tenderlyNodeApiMigrationPercent;
         this.tenderlyNodeApiEnabledChains = tenderlyNodeApiEnabledChains;
     }
     async simulateTransaction(fromAddress, swapOptions, swapRoute, providerConfig) {
-        var _a;
+        var _a, _b, _c;
         const currencyIn = swapRoute.trade.inputAmount.currency;
         const tokenIn = currencyIn.wrapped;
         const chainId = this.chainId;
-        if ([sdk_core_1.ChainId.CELO, sdk_core_1.ChainId.CELO_ALFAJORES].includes(chainId)) {
-            const msg = 'Celo not supported by Tenderly!';
+        if (exports.TENDERLY_NOT_SUPPORTED_CHAINS.includes(chainId)) {
+            const msg = `${exports.TENDERLY_NOT_SUPPORTED_CHAINS.toString()} not supported by Tenderly!`;
             util_1.log.info(msg);
             return Object.assign(Object.assign({}, swapRoute), { simulationStatus: simulation_provider_1.SimulationStatus.NotSupported });
         }
@@ -125,13 +145,13 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
             }
             // Do initial onboarding approval of Permit2.
             const erc20Interface = Erc20__factory_1.Erc20__factory.createInterface();
-            const approvePermit2Calldata = erc20Interface.encodeFunctionData('approve', [universal_router_sdk_1.PERMIT2_ADDRESS, constants_1.MaxUint256]);
+            const approvePermit2Calldata = erc20Interface.encodeFunctionData('approve', [(0, permit2_sdk_1.permit2Address)(this.chainId), constants_1.MaxUint256]);
             // We are unsure if the users calldata contains a permit or not. We just
             // max approve the Universal Router from Permit2 instead, which will cover both cases.
             const permit2Interface = Permit2__factory_1.Permit2__factory.createInterface();
             const approveUniversalRouterCallData = permit2Interface.encodeFunctionData('approve', [
                 tokenIn.address,
-                (0, universal_router_sdk_1.UNIVERSAL_ROUTER_ADDRESS)(this.chainId),
+                (0, universal_router_sdk_1.UNIVERSAL_ROUTER_ADDRESS)(swapOptions.version, this.chainId),
                 util_1.MAX_UINT160,
                 Math.floor(new Date().getTime() / 1000) + 10000000,
             ]);
@@ -142,6 +162,7 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
                 to: tokenIn.address,
                 value: '0',
                 from: fromAddress,
+                block_number: blockNumber,
                 simulation_type: TenderlySimulationType.QUICK,
                 save_if_fails: providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.saveTenderlySimulationIfFailed,
             };
@@ -149,9 +170,10 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
                 network_id: chainId,
                 estimate_gas: true,
                 input: approveUniversalRouterCallData,
-                to: universal_router_sdk_1.PERMIT2_ADDRESS,
+                to: (0, permit2_sdk_1.permit2Address)(this.chainId),
                 value: '0',
                 from: fromAddress,
+                block_number: blockNumber,
                 simulation_type: TenderlySimulationType.QUICK,
                 save_if_fails: providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.saveTenderlySimulationIfFailed,
             };
@@ -159,7 +181,7 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
                 network_id: chainId,
                 input: calldata,
                 estimate_gas: true,
-                to: (0, universal_router_sdk_1.UNIVERSAL_ROUTER_ADDRESS)(this.chainId),
+                to: (0, universal_router_sdk_1.UNIVERSAL_ROUTER_ADDRESS)(swapOptions.version, this.chainId),
                 value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',
                 from: fromAddress,
                 block_number: blockNumber,
@@ -179,42 +201,75 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
             const url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);
             routers_1.metric.putMetric('TenderlySimulationUniversalRouterRequests', 1, routers_1.MetricLoggerUnit.Count);
             const before = Date.now();
-            const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance
-                .post(url, body, opts)
-                .finally(() => {
-                routers_1.metric.putMetric('TenderlySimulationLatencies', Date.now() - before, routers_1.MetricLoggerUnit.Milliseconds);
-            });
-            // fire tenderly node endpoint sampling and forget
-            this.sampleNodeEndpoint(approvePermit2, approveUniversalRouter, swap, resp);
-            const latencies = Date.now() - before;
-            util_1.log.info(`Tenderly simulation universal router request body: ${JSON.stringify(body, null, 2)} with result ${JSON.stringify(resp, null, 2)}, having latencies ${latencies} in milliseconds.`);
-            routers_1.metric.putMetric('TenderlySimulationUniversalRouterLatencies', Date.now() - before, routers_1.MetricLoggerUnit.Milliseconds);
-            routers_1.metric.putMetric(`TenderlySimulationUniversalRouterResponseStatus${httpStatus}`, 1, routers_1.MetricLoggerUnit.Count);
-            // Validate tenderly response body
-            if (!resp ||
-                resp.simulation_results.length < 3 ||
-                !resp.simulation_results[2].transaction ||
-                resp.simulation_results[2].transaction.error_message) {
-                this.logTenderlyErrorResponse(resp);
-                return Object.assign(Object.assign({}, swapRoute), { simulationStatus: simulation_provider_1.SimulationStatus.Failed });
+            if (Math.random() * 100 < ((_b = this.tenderlyNodeApiMigrationPercent) !== null && _b !== void 0 ? _b : 0) &&
+                ((_c = this.tenderlyNodeApiEnabledChains) !== null && _c !== void 0 ? _c : []).find((chainId) => chainId === this.chainId)) {
+                const { data: resp, status: httpStatus } = await this.requestNodeSimulation(approvePermit2, approveUniversalRouter, swap);
+                // We will maintain the original metrics TenderlySimulationUniversalRouterLatencies and TenderlySimulationUniversalRouterResponseStatus
+                // so that they don't provide the existing tenderly dashboard as well as simulation alerts
+                // In the meanwhile, we also add tenderly node metrics to distinguish from the tenderly api metrics
+                // Once we migrate to node endpoint 100%, original metrics TenderlySimulationUniversalRouterLatencies and TenderlySimulationUniversalRouterResponseStatus
+                // will work as is
+                routers_1.metric.putMetric('TenderlySimulationUniversalRouterLatencies', Date.now() - before, routers_1.MetricLoggerUnit.Milliseconds);
+                routers_1.metric.putMetric('TenderlyNodeSimulationUniversalRouterLatencies', Date.now() - before, routers_1.MetricLoggerUnit.Milliseconds);
+                routers_1.metric.putMetric(`TenderlySimulationUniversalRouterResponseStatus${httpStatus}`, 1, routers_1.MetricLoggerUnit.Count);
+                routers_1.metric.putMetric(`TenderlyNodeSimulationUniversalRouterResponseStatus${httpStatus}`, 1, routers_1.MetricLoggerUnit.Count);
+                // Validate tenderly response body
+                if (!resp ||
+                    !resp.result ||
+                    resp.result.length < 3 ||
+                    resp.result[2].error) {
+                    util_1.log.error({ resp }, `Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}.`);
+                    return Object.assign(Object.assign({}, swapRoute), { simulationStatus: simulation_provider_1.SimulationStatus.Failed });
+                }
+                // Parse the gas used in the simulation response object, and then pad it so that we overestimate.
+                estimatedGasUsed = ethers_1.BigNumber.from((Number(resp.result[2].gas) * estimateMultiplier).toFixed(0));
+                util_1.log.info({
+                    body,
+                    approvePermit2GasUsed: resp.result[0].gasUsed,
+                    approveUniversalRouterGasUsed: resp.result[1].gasUsed,
+                    swapGasUsed: resp.result[2].gasUsed,
+                    approvePermit2Gas: resp.result[0].gas,
+                    approveUniversalRouterGas: resp.result[1].gas,
+                    swapGas: resp.result[2].gas,
+                    swapWithMultiplier: estimatedGasUsed.toString(),
+                }, 'Successfully Simulated Approvals + Swap via Tenderly node endpoint for Universal Router. Gas used.');
+            }
+            else {
+                const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance
+                    .post(url, body, opts)
+                    .finally(() => {
+                    routers_1.metric.putMetric('TenderlySimulationLatencies', Date.now() - before, routers_1.MetricLoggerUnit.Milliseconds);
+                });
+                routers_1.metric.putMetric('TenderlySimulationUniversalRouterLatencies', Date.now() - before, routers_1.MetricLoggerUnit.Milliseconds);
+                routers_1.metric.putMetric('TenderlyApiSimulationUniversalRouterLatencies', Date.now() - before, routers_1.MetricLoggerUnit.Milliseconds);
+                routers_1.metric.putMetric(`TenderlySimulationUniversalRouterResponseStatus${httpStatus}`, 1, routers_1.MetricLoggerUnit.Count);
+                routers_1.metric.putMetric(`TenderlyApiSimulationUniversalRouterResponseStatus${httpStatus}`, 1, routers_1.MetricLoggerUnit.Count);
+                // Validate tenderly response body
+                if (!resp ||
+                    resp.simulation_results.length < 3 ||
+                    !resp.simulation_results[2].transaction ||
+                    resp.simulation_results[2].transaction.error_message) {
+                    this.logTenderlyErrorResponse(resp);
+                    return Object.assign(Object.assign({}, swapRoute), { simulationStatus: simulation_provider_1.SimulationStatus.Failed });
+                }
+                // Parse the gas used in the simulation response object, and then pad it so that we overestimate.
+                estimatedGasUsed = ethers_1.BigNumber.from((resp.simulation_results[2].transaction.gas * estimateMultiplier).toFixed(0));
+                util_1.log.info({
+                    body,
+                    approvePermit2GasUsed: resp.simulation_results[0].transaction.gas_used,
+                    approveUniversalRouterGasUsed: resp.simulation_results[1].transaction.gas_used,
+                    swapGasUsed: resp.simulation_results[2].transaction.gas_used,
+                    approvePermit2Gas: resp.simulation_results[0].transaction.gas,
+                    approveUniversalRouterGas: resp.simulation_results[1].transaction.gas,
+                    swapGas: resp.simulation_results[2].transaction.gas,
+                    swapWithMultiplier: estimatedGasUsed.toString(),
+                }, 'Successfully Simulated Approvals + Swap via Tenderly Api endpoint for Universal Router. Gas used.');
+                util_1.log.info({
+                    body,
+                    swapSimulation: resp.simulation_results[2].simulation,
+                    swapTransaction: resp.simulation_results[2].transaction,
+                }, 'Successful Tenderly Api endpoint Swap Simulation for Universal Router');
             }
-            // Parse the gas used in the simulation response object, and then pad it so that we overestimate.
-            estimatedGasUsed = ethers_1.BigNumber.from((resp.simulation_results[2].transaction.gas * estimateMultiplier).toFixed(0));
-            util_1.log.info({
-                body,
-                approvePermit2GasUsed: resp.simulation_results[0].transaction.gas_used,
-                approveUniversalRouterGasUsed: resp.simulation_results[1].transaction.gas_used,
-                swapGasUsed: resp.simulation_results[2].transaction.gas_used,
-                approvePermit2Gas: resp.simulation_results[0].transaction.gas,
-                approveUniversalRouterGas: resp.simulation_results[1].transaction.gas,
-                swapGas: resp.simulation_results[2].transaction.gas,
-                swapWithMultiplier: estimatedGasUsed.toString(),
-            }, 'Successfully Simulated Approvals + Swap via Tenderly for Universal Router. Gas used.');
-            util_1.log.info({
-                body,
-                swapSimulation: resp.simulation_results[2].simulation,
-                swapTransaction: resp.simulation_results[2].transaction,
-            }, 'Successful Tenderly Swap Simulation for Universal Router');
         }
         else if (swapOptions.type == routers_1.SwapType.SWAP_ROUTER_02) {
             const approve = {
@@ -280,7 +335,7 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
             throw new Error(`Unsupported swap type: ${swapOptions}`);
         }
         const { estimatedGasUsedUSD, estimatedGasUsedQuoteToken, estimatedGasUsedGasToken, quoteGasAdjusted, } = await (0, gas_factory_helpers_1.calculateGasUsed)(chainId, swapRoute, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, this.provider, providerConfig);
-        return Object.assign(Object.assign({}, (0, gas_factory_helpers_1.initSwapRouteFromExisting)(swapRoute, this.v2PoolProvider, this.v3PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken)), { simulationStatus: simulation_provider_1.SimulationStatus.Succeeded });
+        return Object.assign(Object.assign({}, (0, gas_factory_helpers_1.initSwapRouteFromExisting)(swapRoute, this.v2PoolProvider, this.v3PoolProvider, this.v4PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken, providerConfig)), { simulationStatus: simulation_provider_1.SimulationStatus.Succeeded });
     }
     logTenderlyErrorResponse(resp) {
         util_1.log.info({
@@ -317,77 +372,55 @@ class TenderlySimulator extends simulation_provider_1.Simulator {
                 : {},
         }, 'Failed to Simulate on Tenderly #3 Simulation');
     }
-    async sampleNodeEndpoint(approvePermit2, approveUniversalRouter, swap, gatewayResp) {
-        var _a, _b;
-        if (Math.random() * 100 < ((_a = this.tenderlyNodeApiSamplingPercent) !== null && _a !== void 0 ? _a : 0) &&
-            ((_b = this.tenderlyNodeApiEnabledChains) !== null && _b !== void 0 ? _b : []).find((chainId) => chainId === this.chainId)) {
-            const nodeEndpoint = TENDERLY_NODE_API(this.chainId, this.tenderlyNodeApiKey);
-            const body = {
-                id: 1,
-                jsonrpc: '2.0',
-                method: 'tenderly_estimateGasBundle',
-                params: [
-                    [
-                        {
-                            from: approvePermit2.from,
-                            to: approvePermit2.to,
-                            data: approvePermit2.input,
-                        },
-                        {
-                            from: approveUniversalRouter.from,
-                            to: approveUniversalRouter.to,
-                            data: approveUniversalRouter.input,
-                        },
-                        { from: swap.from, to: swap.to, data: swap.input },
-                    ],
-                    swap.block_number
-                        ? ethers_1.BigNumber.from(swap.block_number)
-                            .toHexString()
-                            .replace('0x0', '0x')
-                        : 'latest',
+    async requestNodeSimulation(approvePermit2, approveUniversalRouter, swap) {
+        const nodeEndpoint = TENDERLY_NODE_API(this.chainId, this.tenderlyNodeApiKey);
+        const blockNumber = swap.block_number
+            ? ethers_1.BigNumber.from(swap.block_number).toHexString().replace('0x0', '0x')
+            : 'latest';
+        const body = {
+            id: 1,
+            jsonrpc: '2.0',
+            method: 'tenderly_estimateGasBundle',
+            params: [
+                [
+                    {
+                        from: approvePermit2.from,
+                        to: approvePermit2.to,
+                        data: approvePermit2.input,
+                    },
+                    {
+                        from: approveUniversalRouter.from,
+                        to: approveUniversalRouter.to,
+                        data: approveUniversalRouter.input,
+                    },
+                    { from: swap.from, to: swap.to, data: swap.input },
                 ],
-            };
-            util_1.log.info(`About to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}.`);
-            const before = Date.now();
-            try {
-                // For now, we don't timeout tenderly node endpoint, but we should before we live switch to node endpoint
-                const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance.post(nodeEndpoint, body);
-                const latencies = Date.now() - before;
-                routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleLatencies', latencies, routers_1.MetricLoggerUnit.Milliseconds);
-                routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleSuccess', 1, routers_1.MetricLoggerUnit.Count);
-                util_1.log.info(`Tenderly estimate gas bundle request body: ${JSON.stringify(body, null, 2)} with http status ${httpStatus} result ${JSON.stringify(resp, null, 2)}, having latencies ${latencies} in milliseconds.`);
-                if (gatewayResp.simulation_results.length !== resp.result.length) {
-                    routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleLengthMismatch', 1, routers_1.MetricLoggerUnit.Count);
-                    return;
-                }
-                let gasEstimateMismatch = false;
-                for (let i = 0; i <
-                    Math.min(gatewayResp.simulation_results.length, resp.result.length); i++) {
-                    const gatewayGas = gatewayResp.simulation_results[i].transaction.gas;
-                    const nodeGas = Number(resp.result[i].gas);
-                    const gatewayGasUsed = gatewayResp.simulation_results[i].transaction.gas_used;
-                    const nodeGasUsed = Number(resp.result[i].gasUsed);
-                    if (gatewayGas !== nodeGas) {
-                        util_1.log.error(`Gateway gas and node gas estimates do not match for index ${i}`, { gatewayGas, nodeGas });
-                        routers_1.metric.putMetric(`TenderlyNodeGasEstimateBundleGasMismatch${i}`, 1, routers_1.MetricLoggerUnit.Count);
-                        gasEstimateMismatch = true;
-                    }
-                    if (gatewayGasUsed !== nodeGasUsed) {
-                        util_1.log.error(`Gateway gas and node gas used estimates do not match for index ${i}`, { gatewayGasUsed, nodeGasUsed });
-                        routers_1.metric.putMetric(`TenderlyNodeGasEstimateBundleGasUsedMismatch${i}`, 1, routers_1.MetricLoggerUnit.Count);
-                        gasEstimateMismatch = true;
-                    }
-                }
-                if (!gasEstimateMismatch) {
-                    routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleMatch', 1, routers_1.MetricLoggerUnit.Count);
-                }
-            }
-            catch (err) {
-                util_1.log.error(`Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}. Error: ${err}`);
-                routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleFailure', 1, routers_1.MetricLoggerUnit.Count);
+                blockNumber,
+            ],
+        };
+        const opts = {
+            timeout: this.tenderlyRequestTimeout,
+        };
+        const before = Date.now();
+        try {
+            // For now, we don't timeout tenderly node endpoint, but we should before we live switch to node endpoint
+            const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance.post(nodeEndpoint, body, opts);
+            const latencies = Date.now() - before;
+            routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleLatencies', latencies, routers_1.MetricLoggerUnit.Milliseconds);
+            routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleSuccess', 1, routers_1.MetricLoggerUnit.Count);
+            if (httpStatus !== 200) {
+                util_1.log.error(`Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}. HTTP Status: ${httpStatus}`, { resp });
+                return { data: resp, status: httpStatus };
             }
+            return { data: resp, status: httpStatus };
+        }
+        catch (err) {
+            util_1.log.error({ err }, `Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}. Error: ${err}`);
+            routers_1.metric.putMetric('TenderlyNodeGasEstimateBundleFailure', 1, routers_1.MetricLoggerUnit.Count);
+            // we will have to re-throw the error, so that simulation-provider can catch the error, and return simulation status = failed
+            throw err;
         }
     }
 }
 exports.TenderlySimulator = TenderlySimulator;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.d.ts
index 6fdb25a..ab8b712 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.d.ts
@@ -10,6 +10,9 @@ declare type Address = string;
 export declare type TokenFeeResult = {
     buyFeeBps?: BigNumber;
     sellFeeBps?: BigNumber;
+    feeTakenOnTransfer?: boolean;
+    externalTransferFailed?: boolean;
+    sellReverted?: boolean;
 };
 export declare type TokenFeeMap = Record<Address, TokenFeeResult>;
 export interface ITokenFeeFetcher {
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.js
index 3a62cda..9fbe400 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.js
@@ -16,24 +16,24 @@ exports.DEFAULT_TOKEN_FEE_RESULT = {
 const FEE_DETECTOR_ADDRESS = (chainId) => {
     switch (chainId) {
         case sdk_core_1.ChainId.MAINNET:
-            return '0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f';
+            return '0xbc708B192552e19A088b4C4B8772aEeA83bCf760';
         case sdk_core_1.ChainId.OPTIMISM:
-            return '0xa7c17505B43955A474fb6AFE61E093907a7567c9';
+            return '0x95aDC98A949dCD94645A8cD56830D86e4Cf34Eff';
         case sdk_core_1.ChainId.BNB:
-            return '0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB';
+            return '0xCF6220e4496B091a6b391D48e770f1FbaC63E740';
         case sdk_core_1.ChainId.POLYGON:
-            return '0x92bCCCb6c8c199AAcA38408621E38Ab6dBfA00B5';
+            return '0xC988e19819a63C0e487c6Ad8d6668Ac773923BF2';
         case sdk_core_1.ChainId.BASE:
-            return '0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB';
+            return '0xCF6220e4496B091a6b391D48e770f1FbaC63E740';
         case sdk_core_1.ChainId.ARBITRUM_ONE:
-            return '0x64CF365CC5CCf5E64380bc05Acd5df7D0618c118';
+            return '0x37324D81e318260DC4f0fCb68035028eFdE6F50e';
         case sdk_core_1.ChainId.CELO:
-            return '0x3dfF0145E68a5880EAbE8F56b6Bc30C4AdCF3413';
+            return '0x8eEa35913DdeD795001562f9bA5b282d3ac04B60';
         case sdk_core_1.ChainId.AVALANCHE:
-            return '0xBF2B9F6A6eCc4541b31ab2dCF8156D33644Ca3F3';
+            return '0x8269d47c4910B8c87789aA0eC128C11A8614dfC8';
         default:
             // just default to mainnet contract
-            return '0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f';
+            return '0xbc708B192552e19A088b4C4B8772aEeA83bCf760';
     }
 };
 // Amount has to be big enough to avoid rounding errors, but small enough that
@@ -78,16 +78,29 @@ class OnChainTokenFeeFetcher {
                 // in case of FOT token fee fetch failure, we return null
                 // so that they won't get returned from the token-fee-fetcher
                 // and thus no fee will be applied, and the cache won't cache on FOT tokens with failed fee fetching
-                return { address, buyFeeBps: undefined, sellFeeBps: undefined };
+                return {
+                    address,
+                    buyFeeBps: undefined,
+                    sellFeeBps: undefined,
+                    feeTakenOnTransfer: false,
+                    externalTransferFailed: false,
+                    sellReverted: false,
+                };
             }
         }));
-        results.forEach(({ address, buyFeeBps, sellFeeBps }) => {
+        results.forEach(({ address, buyFeeBps, sellFeeBps, feeTakenOnTransfer, externalTransferFailed, sellReverted, }) => {
             if (buyFeeBps || sellFeeBps) {
-                tokenToResult[address] = { buyFeeBps, sellFeeBps };
+                tokenToResult[address] = {
+                    buyFeeBps,
+                    sellFeeBps,
+                    feeTakenOnTransfer,
+                    externalTransferFailed,
+                    sellReverted,
+                };
             }
         });
         return tokenToResult;
     }
 }
 exports.OnChainTokenFeeFetcher = OnChainTokenFeeFetcher;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tZmVlLWZldGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Rva2VuLWZlZS1mZXRjaGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUVyRCxnREFBNEM7QUFFNUMsa0dBQStGO0FBRS9GLGtDQUtpQjtBQUlqQixNQUFNLHlCQUF5QixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELE1BQU0sMEJBQTBCLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFckQscUNBQXFDO0FBQ3hCLFFBQUEsd0JBQXdCLEdBQUc7SUFDdEMsU0FBUyxFQUFFLHlCQUF5QjtJQUNwQyxVQUFVLEVBQUUsMEJBQTBCO0NBQ3ZDLENBQUM7QUFVRixvREFBb0Q7QUFDcEQsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRTtJQUNoRCxRQUFRLE9BQU8sRUFBRTtRQUNmLEtBQUssa0JBQU8sQ0FBQyxPQUFPO1lBQ2xCLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLFFBQVE7WUFDbkIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLGtCQUFPLENBQUMsR0FBRztZQUNkLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLE9BQU87WUFDbEIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLGtCQUFPLENBQUMsSUFBSTtZQUNmLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLFlBQVk7WUFDdkIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLGtCQUFPLENBQUMsSUFBSTtZQUNmLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLFNBQVM7WUFDcEIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RDtZQUNFLG1DQUFtQztZQUNu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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tZmVlLWZldGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Rva2VuLWZlZS1mZXRjaGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUVyRCxnREFBNEM7QUFFNUMsa0dBQStGO0FBRS9GLGtDQUtpQjtBQUlqQixNQUFNLHlCQUF5QixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELE1BQU0sMEJBQTBCLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFckQscUNBQXFDO0FBQ3hCLFFBQUEsd0JBQXdCLEdBQUc7SUFDdEMsU0FBUyxFQUFFLHlCQUF5QjtJQUNwQyxVQUFVLEVBQUUsMEJBQTBCO0NBQ3ZDLENBQUM7QUFhRixvREFBb0Q7QUFDcEQsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRTtJQUNoRCxRQUFRLE9BQU8sRUFBRTtRQUNmLEtBQUssa0JBQU8sQ0FBQyxPQUFPO1lBQ2xCLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLFFBQVE7WUFDbkIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLGtCQUFPLENBQUMsR0FBRztZQUNkLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLE9BQU87WUFDbEIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLGtCQUFPLENBQUMsSUFBSTtZQUNmLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLFlBQVk7WUFDdkIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLGtCQUFPLENBQUMsSUFBSTtZQUNmLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxrQkFBTyxDQUFDLFNBQVM7WUFDcEIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RDtZQUNFLG1DQUFtQztZQUNu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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.d.ts
index 52e4d4f..6c6518f 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.d.ts
@@ -1,11 +1,11 @@
-import { ChainId, Token } from '@uniswap/sdk-core';
+import { ChainId, Currency } from '@uniswap/sdk-core';
 import { ICache } from './cache';
 import { ProviderConfig } from './provider';
 import { ITokenFeeFetcher, TokenFeeResult } from './token-fee-fetcher';
 import { TokenValidationResult } from './token-validator-provider';
 export declare const DEFAULT_TOKEN_PROPERTIES_RESULT: TokenPropertiesResult;
-export declare const POSITIVE_CACHE_ENTRY_TTL = 600;
-export declare const NEGATIVE_CACHE_ENTRY_TTL = 600;
+export declare const POSITIVE_CACHE_ENTRY_TTL = 1200;
+export declare const NEGATIVE_CACHE_ENTRY_TTL = 1200;
 declare type Address = string;
 export declare type TokenPropertiesResult = {
     tokenFeeResult?: TokenFeeResult;
@@ -13,7 +13,7 @@ export declare type TokenPropertiesResult = {
 };
 export declare type TokenPropertiesMap = Record<Address, TokenPropertiesResult>;
 export interface ITokenPropertiesProvider {
-    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+    getTokensProperties(currencies: Currency[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
 }
 export declare class TokenPropertiesProvider implements ITokenPropertiesProvider {
     private chainId;
@@ -24,7 +24,8 @@ export declare class TokenPropertiesProvider implements ITokenPropertiesProvider
     private negativeCacheEntryTTL;
     private CACHE_KEY;
     constructor(chainId: ChainId, tokenPropertiesCache: ICache<TokenPropertiesResult>, tokenFeeFetcher: ITokenFeeFetcher, allowList?: Set<string>, positiveCacheEntryTTL?: number, negativeCacheEntryTTL?: number);
-    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+    getTokensProperties(currencies: Currency[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
     private buildAddressesRaw;
+    private buildAddressesCacheKeys;
 }
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.js
index ca89c44..fb751c6 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.js
@@ -1,15 +1,14 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.TokenPropertiesProvider = exports.NEGATIVE_CACHE_ENTRY_TTL = exports.POSITIVE_CACHE_ENTRY_TTL = exports.DEFAULT_TOKEN_PROPERTIES_RESULT = void 0;
-const sdk_core_1 = require("@uniswap/sdk-core");
 const util_1 = require("../util");
 const token_fee_fetcher_1 = require("./token-fee-fetcher");
 const token_validator_provider_1 = require("./token-validator-provider");
 exports.DEFAULT_TOKEN_PROPERTIES_RESULT = {
     tokenFeeResult: token_fee_fetcher_1.DEFAULT_TOKEN_FEE_RESULT,
 };
-exports.POSITIVE_CACHE_ENTRY_TTL = 600; // 10 minutes in seconds
-exports.NEGATIVE_CACHE_ENTRY_TTL = 600; // 10 minutes in seconds
+exports.POSITIVE_CACHE_ENTRY_TTL = 1200; // 20 minutes in seconds
+exports.NEGATIVE_CACHE_ENTRY_TTL = 1200; // 20 minutes in seconds
 class TokenPropertiesProvider {
     constructor(chainId, tokenPropertiesCache, tokenFeeFetcher, allowList = token_validator_provider_1.DEFAULT_ALLOWLIST, positiveCacheEntryTTL = exports.POSITIVE_CACHE_ENTRY_TTL, negativeCacheEntryTTL = exports.NEGATIVE_CACHE_ENTRY_TTL) {
         this.chainId = chainId;
@@ -20,18 +19,18 @@ class TokenPropertiesProvider {
         this.negativeCacheEntryTTL = negativeCacheEntryTTL;
         this.CACHE_KEY = (chainId, address) => `token-properties-${chainId}-${address}`;
     }
-    async getTokensProperties(tokens, providerConfig) {
+    async getTokensProperties(currencies, providerConfig) {
         const tokenToResult = {};
-        if (!(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.enableFeeOnTransferFeeFetching) ||
-            this.chainId !== sdk_core_1.ChainId.MAINNET) {
+        if (!(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.enableFeeOnTransferFeeFetching)) {
             return tokenToResult;
         }
         const addressesToFetchFeesOnchain = [];
-        const addressesRaw = this.buildAddressesRaw(tokens);
-        const tokenProperties = await this.tokenPropertiesCache.batchGet(addressesRaw);
+        const addressesRaw = this.buildAddressesRaw(currencies);
+        const addressesCacheKeys = this.buildAddressesCacheKeys(currencies);
+        const tokenProperties = await this.tokenPropertiesCache.batchGet(addressesCacheKeys);
         // Check if we have cached token validation results for any tokens.
         for (const address of addressesRaw) {
-            const cachedValue = tokenProperties[address];
+            const cachedValue = tokenProperties[this.CACHE_KEY(this.chainId, address.toLowerCase())];
             if (cachedValue) {
                 util_1.metric.putMetric('TokenPropertiesProviderBatchGetCacheHit', 1, util_1.MetricLoggerUnit.Count);
                 const tokenFee = cachedValue.tokenFeeResult;
@@ -94,16 +93,26 @@ class TokenPropertiesProvider {
         }
         return tokenToResult;
     }
-    buildAddressesRaw(tokens) {
+    buildAddressesRaw(currencies) {
         const addressesRaw = new Set();
-        for (const token of tokens) {
-            const address = token.address.toLowerCase();
+        for (const currency of currencies) {
+            const address = (0, util_1.getAddressLowerCase)(currency);
             if (!addressesRaw.has(address)) {
                 addressesRaw.add(address);
             }
         }
         return addressesRaw;
     }
+    buildAddressesCacheKeys(currencies) {
+        const addressesCacheKeys = new Set();
+        for (const currency of currencies) {
+            const addressCacheKey = this.CACHE_KEY(this.chainId, (0, util_1.getAddressLowerCase)(currency));
+            if (!addressesCacheKeys.has(addressCacheKey)) {
+                addressesCacheKeys.add(addressCacheKey);
+            }
+        }
+        return addressesCacheKeys;
+    }
 }
 exports.TokenPropertiesProvider = TokenPropertiesProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tcHJvcGVydGllcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdG9rZW4tcHJvcGVydGllcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxnREFBbUQ7QUFFbkQsa0NBQXdEO0FBSXhELDJEQUs2QjtBQUM3Qix5RUFHb0M7QUFFdkIsUUFBQSwrQkFBK0IsR0FBMEI7SUFDcEUsY0FBYyxFQUFFLDRDQUF3QjtDQUN6QyxDQUFDO0FBQ1csUUFBQSx3QkFBd0IsR0FBRyxHQUFHLENBQUMsQ0FBQyx3QkFBd0I7QUFDeEQsUUFBQSx3QkFBd0IsR0FBRyxHQUFHLENBQUMsQ0FBQyx3QkFBd0I7QUFnQnJFLE1BQWEsdUJBQXVCO0lBSWxDLFlBQ1UsT0FBZ0IsRUFDaEIsb0JBQW1ELEVBQ25ELGVBQWlDLEVBQ2pDLFlBQVksNENBQWlCLEVBQzdCLHdCQUF3QixnQ0FBd0IsRUFDaEQsd0JBQXdCLGdDQUF3QjtRQUxoRCxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBK0I7UUFDbkQsb0JBQWUsR0FBZixlQUFlLENBQWtCO1FBQ2pDLGNBQVMsR0FBVCxTQUFTLENBQW9CO1FBQzdCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBMkI7UUFDaEQsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEyQjtRQVRsRCxjQUFTLEdBQUcsQ0FBQyxPQUFnQixFQUFFLE9BQWUsRUFBRSxFQUFFLENBQ3hELG9CQUFvQixPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFTeEMsQ0FBQztJQUVHLEtBQUssQ0FBQyxtQkFBbUIsQ0FDOUIsTUFBZSxFQUNmLGNBQStCO1FBRS9CLE1BQU0sYUFBYSxHQUF1QixFQUFFLENBQUM7UUFFN0MsSUFDRSxDQUFDLENBQUEsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLDhCQUE4QixDQUFBO1lBQy9DLElBQUks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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tcHJvcGVydGllcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdG9rZW4tcHJvcGVydGllcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSxrQ0FBNkU7QUFJN0UsMkRBSzZCO0FBQzdCLHlFQUdvQztBQUV2QixRQUFBLCtCQUErQixHQUEwQjtJQUNwRSxjQUFjLEVBQUUsNENBQXdCO0NBQ3pDLENBQUM7QUFDVyxRQUFBLHdCQUF3QixHQUFHLElBQUksQ0FBQyxDQUFDLHdCQUF3QjtBQUN6RCxRQUFBLHdCQUF3QixHQUFHLElBQUksQ0FBQyxDQUFDLHdCQUF3QjtBQWdCdEUsTUFBYSx1QkFBdUI7SUFJbEMsWUFDVSxPQUFnQixFQUNoQixvQkFBbUQsRUFDbkQsZUFBaUMsRUFDakMsWUFBWSw0Q0FBaUIsRUFDN0Isd0JBQXdCLGdDQUF3QixFQUNoRCx3QkFBd0IsZ0NBQXdCO1FBTGhELFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUErQjtRQUNuRCxvQkFBZSxHQUFmLGVBQWUsQ0FBa0I7UUFDakMsY0FBUyxHQUFULFNBQVMsQ0FBb0I7UUFDN0IsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEyQjtRQUNoRCwwQkFBcUIsR0FBckIscUJBQXFCLENBQTJCO1FBVGxELGNBQVMsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDeEQsb0JBQW9CLE9BQU8sSUFBSSxPQUFPLEVBQUUsQ0FBQztJQVN4QyxDQUFDO0lBRUcsS0FBSyxDQUFDLG1CQUFtQixDQUM5QixVQUFzQixFQUN0QixjQUErQjtRQUUvQixNQUFNLGFBQWEsR0FBdUIsRUFBRSxDQUFDO1FBRTdDLElBQUksQ0FBQyxDQUFBLGNBQWMsYUFBZCxjQUFjLHVCQUFkLGNBQWMsQ0FBRSw4QkFBOEIsQ0FBQSxFQUFFO1lBQ25ELE9BQU8sYUFBYSxD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
index 74ce338..38900b4 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
@@ -30,6 +30,7 @@ export declare const FEI_MAINNET: Token;
 export declare const UNI_MAINNET: Token;
 export declare const AAVE_MAINNET: Token;
 export declare const LIDO_MAINNET: Token;
+export declare const WSTETH_MAINNET: Token;
 export declare const USDC_SEPOLIA: Token;
 export declare const DAI_SEPOLIA: Token;
 export declare const USDC_GOERLI: Token;
@@ -106,6 +107,18 @@ export declare const USDC_ZORA: Token;
 export declare const USDC_ZKSYNC: Token;
 export declare const USDCE_ZKSYNC: Token;
 export declare const DAI_ZKSYNC: Token;
+export declare const USDC_ABSTRACT_TESTNET: Token;
+export declare const USDC_ZERO: Token;
+export declare const USDC_BOB: Token;
+export declare const USDC_CYBER: Token;
+export declare const USDC_SHAPE: Token;
+export declare const USDC_INK: Token;
+export declare const USDC_REDSTONE_GARNET: Token;
+export declare const USDC_REDSTONE: Token;
+export declare const USDC_ABSTRACT_MAINNET: Token;
+export declare const USDC_ANIME: Token;
+export declare const USDC_ANIME_TESTNET: Token;
+export declare const USDC_MODE: Token;
 export declare class TokenProvider implements ITokenProvider {
     private chainId;
     protected multicall2Provider: IMulticallProvider;
@@ -118,3 +131,5 @@ export declare const DAI_ON: (chainId: ChainId) => Token;
 export declare const USDT_ON: (chainId: ChainId) => Token;
 export declare const USDC_ON: (chainId: ChainId) => Token;
 export declare const WNATIVE_ON: (chainId: ChainId) => Token;
+export declare const V4_SEPOLIA_TEST_A: Token;
+export declare const V4_SEPOLIA_TEST_B: Token;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
index e00a182..65cdaa6 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
@@ -3,8 +3,9 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.BUSD_BNB = exports.BTC_BNB = exports.WETH_POLYGON_MUMBAI = exports.DAI_POLYGON_MUMBAI = exports.USDC_POLYGON_MUMBAI = exports.WMATIC_POLYGON_MUMBAI = exports.DAI_POLYGON = exports.USDC_NATIVE_POLYGON = exports.USDC_POLYGON = exports.WETH_POLYGON = exports.WMATIC_POLYGON = exports.USDC_ARBITRUM_SEPOLIA = exports.USDC_ARBITRUM_GOERLI = exports.DAI_ARBITRUM_SEPOLIA = exports.DAI_ARBITRUM_GOERLI = exports.ARB_ARBITRUM = exports.DAI_ARBITRUM = exports.WBTC_ARBITRUM = exports.USDT_ARBITRUM = exports.USDC_NATIVE_ARBITRUM = exports.USDC_ARBITRUM = exports.DAI_OPTIMISM_SEPOLIA = exports.WBTC_OPTIMISM_SEPOLIA = exports.USDT_OPTIMISM_SEPOLIA = exports.USDC_OPTIMISM_SEPOLIA = exports.DAI_OPTIMISM_GOERLI = exports.WBTC_OPTIMISM_GOERLI = exports.USDT_OPTIMISM_GOERLI = exports.USDC_OPTIMISM_GOERLI = exports.OP_OPTIMISM = exports.DAI_OPTIMISM = exports.WBTC_OPTIMISM = exports.USDT_OPTIMISM = exports.USDC_NATIVE_OPTIMISM = exports.USDC_OPTIMISM = exports.UNI_GOERLI = exports.DAI_GOERLI = exports.WBTC_GOERLI = exports.USDT_GOERLI = exports.USDC_GOERLI = exports.DAI_SEPOLIA = exports.USDC_SEPOLIA = exports.LIDO_MAINNET = exports.AAVE_MAINNET = exports.UNI_MAINNET = exports.FEI_MAINNET = exports.DAI_MAINNET = exports.WBTC_MAINNET = exports.USDT_MAINNET = exports.USDC_MAINNET = void 0;
-exports.WNATIVE_ON = exports.USDC_ON = exports.USDT_ON = exports.DAI_ON = exports.TokenProvider = exports.DAI_ZKSYNC = exports.USDCE_ZKSYNC = exports.USDC_ZKSYNC = exports.USDC_ZORA = exports.USDB_BLAST = exports.WBTC_MOONBEAM = exports.DAI_MOONBEAM = exports.WGLMR_MOONBEAM = exports.USDC_MOONBEAM = exports.WBTC_GNOSIS = exports.WXDAI_GNOSIS = exports.USDC_ETHEREUM_GNOSIS = exports.USDC_BASE_GOERLI = exports.USDC_NATIVE_BASE = exports.USDC_BASE = exports.USDC_NATIVE_AVAX = exports.USDC_BRIDGED_AVAX = exports.USDC_AVAX = exports.DAI_AVAX = exports.CEUR_CELO_ALFAJORES = exports.CUSD_CELO_ALFAJORES = exports.DAI_CELO_ALFAJORES = exports.CELO_ALFAJORES = exports.CEUR_CELO = exports.USDC_NATIVE_CELO = exports.USDC_WORMHOLE_CELO = exports.USDC_CELO = exports.CUSD_CELO = exports.DAI_CELO = exports.CELO = exports.USDT_BNB = exports.USDC_BNB = exports.ETH_BNB = exports.DAI_BNB = void 0;
+exports.BTC_BNB = exports.WETH_POLYGON_MUMBAI = exports.DAI_POLYGON_MUMBAI = exports.USDC_POLYGON_MUMBAI = exports.WMATIC_POLYGON_MUMBAI = exports.DAI_POLYGON = exports.USDC_NATIVE_POLYGON = exports.USDC_POLYGON = exports.WETH_POLYGON = exports.WMATIC_POLYGON = exports.USDC_ARBITRUM_SEPOLIA = exports.USDC_ARBITRUM_GOERLI = exports.DAI_ARBITRUM_SEPOLIA = exports.DAI_ARBITRUM_GOERLI = exports.ARB_ARBITRUM = exports.DAI_ARBITRUM = exports.WBTC_ARBITRUM = exports.USDT_ARBITRUM = exports.USDC_NATIVE_ARBITRUM = exports.USDC_ARBITRUM = exports.DAI_OPTIMISM_SEPOLIA = exports.WBTC_OPTIMISM_SEPOLIA = exports.USDT_OPTIMISM_SEPOLIA = exports.USDC_OPTIMISM_SEPOLIA = exports.DAI_OPTIMISM_GOERLI = exports.WBTC_OPTIMISM_GOERLI = exports.USDT_OPTIMISM_GOERLI = exports.USDC_OPTIMISM_GOERLI = exports.OP_OPTIMISM = exports.DAI_OPTIMISM = exports.WBTC_OPTIMISM = exports.USDT_OPTIMISM = exports.USDC_NATIVE_OPTIMISM = exports.USDC_OPTIMISM = exports.UNI_GOERLI = exports.DAI_GOERLI = exports.WBTC_GOERLI = exports.USDT_GOERLI = exports.USDC_GOERLI = exports.DAI_SEPOLIA = exports.USDC_SEPOLIA = exports.WSTETH_MAINNET = exports.LIDO_MAINNET = exports.AAVE_MAINNET = exports.UNI_MAINNET = exports.FEI_MAINNET = exports.DAI_MAINNET = exports.WBTC_MAINNET = exports.USDT_MAINNET = exports.USDC_MAINNET = void 0;
+exports.USDT_ON = exports.DAI_ON = exports.TokenProvider = exports.USDC_MODE = exports.USDC_ANIME_TESTNET = exports.USDC_ANIME = exports.USDC_ABSTRACT_MAINNET = exports.USDC_REDSTONE = exports.USDC_REDSTONE_GARNET = exports.USDC_INK = exports.USDC_SHAPE = exports.USDC_CYBER = exports.USDC_BOB = exports.USDC_ZERO = exports.USDC_ABSTRACT_TESTNET = exports.DAI_ZKSYNC = exports.USDCE_ZKSYNC = exports.USDC_ZKSYNC = exports.USDC_ZORA = exports.USDB_BLAST = exports.WBTC_MOONBEAM = exports.DAI_MOONBEAM = exports.WGLMR_MOONBEAM = exports.USDC_MOONBEAM = exports.WBTC_GNOSIS = exports.WXDAI_GNOSIS = exports.USDC_ETHEREUM_GNOSIS = exports.USDC_BASE_GOERLI = exports.USDC_NATIVE_BASE = exports.USDC_BASE = exports.USDC_NATIVE_AVAX = exports.USDC_BRIDGED_AVAX = exports.USDC_AVAX = exports.DAI_AVAX = exports.CEUR_CELO_ALFAJORES = exports.CUSD_CELO_ALFAJORES = exports.DAI_CELO_ALFAJORES = exports.CELO_ALFAJORES = exports.CEUR_CELO = exports.USDC_NATIVE_CELO = exports.USDC_WORMHOLE_CELO = exports.USDC_CELO = exports.CUSD_CELO = exports.DAI_CELO = exports.CELO = exports.USDT_BNB = exports.USDC_BNB = exports.ETH_BNB = exports.DAI_BNB = exports.BUSD_BNB = void 0;
+exports.V4_SEPOLIA_TEST_B = exports.V4_SEPOLIA_TEST_A = exports.WNATIVE_ON = exports.USDC_ON = void 0;
 const abi_1 = require("@ethersproject/abi");
 const strings_1 = require("@ethersproject/strings");
 const sdk_core_1 = require("@uniswap/sdk-core");
@@ -20,6 +21,7 @@ exports.FEI_MAINNET = new sdk_core_1.Token(sdk_core_1.ChainId.MAINNET, '0x956F47
 exports.UNI_MAINNET = new sdk_core_1.Token(sdk_core_1.ChainId.MAINNET, '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984', 18, 'UNI', 'Uniswap');
 exports.AAVE_MAINNET = new sdk_core_1.Token(sdk_core_1.ChainId.MAINNET, '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', 18, 'AAVE', 'Aave Token');
 exports.LIDO_MAINNET = new sdk_core_1.Token(sdk_core_1.ChainId.MAINNET, '0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32', 18, 'LDO', 'Lido DAO Token');
+exports.WSTETH_MAINNET = new sdk_core_1.Token(sdk_core_1.ChainId.MAINNET, '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0', 18, 'wstETH', 'Wrapped liquid staked Ether');
 exports.USDC_SEPOLIA = new sdk_core_1.Token(sdk_core_1.ChainId.SEPOLIA, '0x6f14C02Fc1F78322cFd7d707aB90f18baD3B54f5', 18, 'USDC', 'USDC Token');
 exports.DAI_SEPOLIA = new sdk_core_1.Token(sdk_core_1.ChainId.SEPOLIA, '0x7AF17A48a6336F7dc1beF9D485139f7B6f4FB5C8', 18, 'DAI', 'DAI Token');
 exports.USDC_GOERLI = new sdk_core_1.Token(sdk_core_1.ChainId.GOERLI, '0x07865c6e87b9f70255377e024ace6630c1eaa37f', 6, 'USDC', 'USD//C');
@@ -110,6 +112,18 @@ exports.USDC_ZORA = new sdk_core_1.Token(sdk_core_1.ChainId.ZORA, '0xCccCCccc702
 exports.USDC_ZKSYNC = new sdk_core_1.Token(sdk_core_1.ChainId.ZKSYNC, '0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4', 6, 'USDC', 'USDC');
 exports.USDCE_ZKSYNC = new sdk_core_1.Token(sdk_core_1.ChainId.ZKSYNC, '0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4', 6, 'USDC.e', 'Bridged USDC (zkSync)');
 exports.DAI_ZKSYNC = new sdk_core_1.Token(sdk_core_1.ChainId.ZKSYNC, '0x4B9eb6c0b6ea15176BBF62841C6B2A8a398cb656', 18, 'DAI', 'Dai Stablecoin');
+exports.USDC_ABSTRACT_TESTNET = new sdk_core_1.Token(sdk_core_1.ChainId.ABSTRACT_TESTNET, '0xe4C7fBB0a626ed208021ccabA6Be1566905E2dFc', 6, 'USDC', 'USDC');
+exports.USDC_ZERO = new sdk_core_1.Token(sdk_core_1.ChainId.ZERO, '0x6a6394F47DD0BAF794808F2749C09bd4Ee874E70', 6, 'USDC', 'USDC');
+exports.USDC_BOB = new sdk_core_1.Token(sdk_core_1.ChainId.BOB, '0xe75D0fB2C24A55cA1e3F96781a2bCC7bdba058F0', 6, 'USDC', 'USDC');
+exports.USDC_CYBER = new sdk_core_1.Token(sdk_core_1.ChainId.CYBER, '0x81759adbf5520ad94da10991dfa29ff147d3337b', 6, 'USDC', 'USDC');
+exports.USDC_SHAPE = new sdk_core_1.Token(sdk_core_1.ChainId.SHAPE, '0xdb7DD8B00EdC5778Fe00B2408bf35C7c054f8BBe', 6, 'USDC', 'USDC');
+exports.USDC_INK = new sdk_core_1.Token(sdk_core_1.ChainId.INK, '0xF1815bd50389c46847f0Bda824eC8da914045D14', 6, 'USDC.e', 'Bridged USDC (Stargate)');
+exports.USDC_REDSTONE_GARNET = new sdk_core_1.Token(sdk_core_1.ChainId.REDSTONE_GARNET, '0xD2cA61F265a2dA2d2CD7607F05C26eBfA18AD5F6', 6, 'mUSDC', 'Mock USDC');
+exports.USDC_REDSTONE = new sdk_core_1.Token(sdk_core_1.ChainId.REDSTONE, '0xD5d59fC063e7548b6015A36fEb10B875924A19be', 6, 'USDC.e', 'Bridged USDC (Lattice)');
+exports.USDC_ABSTRACT_MAINNET = new sdk_core_1.Token(sdk_core_1.ChainId.ABSTRACT_MAINNET, '0x84A71ccD554Cc1b02749b35d22F684CC8ec987e1', 6, 'USDC.e', 'Bridged USDC');
+exports.USDC_ANIME = new sdk_core_1.Token(sdk_core_1.ChainId.ANIME, '0x401eCb1D350407f13ba348573E5630B83638E30D', 6, 'USDC', 'USDC');
+exports.USDC_ANIME_TESTNET = new sdk_core_1.Token(sdk_core_1.ChainId.ANIME_TESTNET, '0x69D30A49fcbaB7142d604635772B7Eef958aE0bd', 6, 'USDC', 'USDC');
+exports.USDC_MODE = new sdk_core_1.Token(sdk_core_1.ChainId.MODE, '0xd988097fb8612cc24eec14542bc03424c656005f', 6, 'USDC', 'USDC');
 class TokenProvider {
     constructor(chainId, multicall2Provider) {
         this.chainId = chainId;
@@ -321,6 +335,26 @@ const USDC_ON = (chainId) => {
             return exports.USDC_ZORA;
         case sdk_core_1.ChainId.ZKSYNC:
             return exports.USDCE_ZKSYNC;
+        case sdk_core_1.ChainId.ABSTRACT_TESTNET:
+            return exports.USDC_ABSTRACT_TESTNET;
+        case sdk_core_1.ChainId.ZERO:
+            return exports.USDC_ZERO;
+        case sdk_core_1.ChainId.BOB:
+            return exports.USDC_BOB;
+        case sdk_core_1.ChainId.CYBER:
+            return exports.USDC_CYBER;
+        case sdk_core_1.ChainId.SHAPE:
+            return exports.USDC_SHAPE;
+        case sdk_core_1.ChainId.INK:
+            return exports.USDC_INK;
+        case sdk_core_1.ChainId.REDSTONE_GARNET:
+            return exports.USDC_REDSTONE_GARNET;
+        case sdk_core_1.ChainId.REDSTONE:
+            return exports.USDC_REDSTONE;
+        case sdk_core_1.ChainId.ABSTRACT_MAINNET:
+            return exports.USDC_ABSTRACT_MAINNET;
+        case sdk_core_1.ChainId.ANIME_TESTNET:
+            return exports.USDC_ANIME_TESTNET;
         default:
             throw new Error(`Chain id: ${chainId} not supported`);
     }
@@ -330,4 +364,6 @@ const WNATIVE_ON = (chainId) => {
     return util_1.WRAPPED_NATIVE_CURRENCY[chainId];
 };
 exports.WNATIVE_ON = WNATIVE_ON;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+exports.V4_SEPOLIA_TEST_A = new sdk_core_1.Token(sdk_core_1.ChainId.SEPOLIA, '0x0275C79896215a790dD57F436E1103D4179213be', 18, 'A', 'MockA');
+exports.V4_SEPOLIA_TEST_B = new sdk_core_1.Token(sdk_core_1.ChainId.SEPOLIA, '0x1a6990c77cfbba398beb230dd918e28aab71eec2', 18, 'B', 'MockB');
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.d.ts
index e854240..3237ca3 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.d.ts
@@ -1,4 +1,5 @@
 import { ChainId } from '@uniswap/sdk-core';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
 import { ICache } from './../cache';
 import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
 /**
@@ -7,11 +8,7 @@ import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
  * @export
  * @class CachingV2SubgraphProvider
  */
-export declare class CachingV2SubgraphProvider implements IV2SubgraphProvider {
-    private chainId;
-    protected subgraphProvider: IV2SubgraphProvider;
-    private cache;
-    private SUBGRAPH_KEY;
+export declare class CachingV2SubgraphProvider extends CachingSubgraphProvider<V2SubgraphPool> implements IV2SubgraphProvider {
     /**
      * Creates an instance of CachingV2SubgraphProvider.
      * @param chainId The chain id to use.
@@ -19,5 +16,4 @@ export declare class CachingV2SubgraphProvider implements IV2SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId: ChainId, subgraphProvider: IV2SubgraphProvider, cache: ICache<V2SubgraphPool[]>);
-    getPools(): Promise<V2SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.js
index fad76ec..f3015ed 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-subgraph-provider.js
@@ -1,13 +1,15 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.CachingV2SubgraphProvider = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const caching_subgraph_provider_1 = require("../caching-subgraph-provider");
 /**
  * Provider for getting V2 pools, with functionality for caching the results.
  *
  * @export
  * @class CachingV2SubgraphProvider
  */
-class CachingV2SubgraphProvider {
+class CachingV2SubgraphProvider extends caching_subgraph_provider_1.CachingSubgraphProvider {
     /**
      * Creates an instance of CachingV2SubgraphProvider.
      * @param chainId The chain id to use.
@@ -15,20 +17,8 @@ class CachingV2SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId, subgraphProvider, cache) {
-        this.chainId = chainId;
-        this.subgraphProvider = subgraphProvider;
-        this.cache = cache;
-        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-v2-${chainId}`;
-    }
-    async getPools() {
-        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
-        if (cachedPools) {
-            return cachedPools;
-        }
-        const pools = await this.subgraphProvider.getPools();
-        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
-        return pools;
+        super(chainId, subgraphProvider, cache, router_sdk_1.Protocol.V2);
     }
 }
 exports.CachingV2SubgraphProvider = CachingV2SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFLQTs7Ozs7R0FLRztBQUNILE1BQWEseUJBQXlCO0lBR3BDOzs7OztPQUtHO0lBQ0gsWUFDVSxPQUFnQixFQUNkLGdCQUFxQyxFQUN2QyxLQUErQjtRQUYvQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2QscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFxQjtRQUN2QyxVQUFLLEdBQUwsS0FBSyxDQUEwQjtRQVhqQyxpQkFBWSxHQUFHLENBQUMsT0FBZ0IsRUFBRSxFQUFFLENBQUMscUJBQXFCLE9BQU8sRUFBRSxDQUFDO0lBWXpFLENBQUM7SUFFRyxLQUFLLENBQUMsUUFBUTtRQUNuQixNQUFNLFdBQVcsR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFMUUsSUFBSSxXQUFXLEVBQUU7WUFDZixPQUFPLFdBQVcsQ0FBQztTQUNwQjtRQUVELE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRXJELE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFN0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0NBQ0Y7QUE1QkQsOERBNEJDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFHL0MsNEVBQXVFO0FBS3ZFOzs7OztHQUtHO0FBQ0gsTUFBYSx5QkFDWCxTQUFRLG1EQUF1QztJQUcvQzs7Ozs7T0FLRztJQUNILFlBQ0UsT0FBZ0IsRUFDaEIsZ0JBQXFDLEVBQ3JDLEtBQStCO1FBRS9CLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLHFCQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGO0FBakJELDhEQWlCQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
index 3ed4e7d..96de02c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
@@ -17,6 +17,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
         token_provider_1.USDC_MAINNET,
         token_provider_1.USDT_MAINNET,
         token_provider_1.WBTC_MAINNET,
+        token_provider_1.WSTETH_MAINNET,
     ],
     [sdk_core_1.ChainId.GOERLI]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.GOERLI]],
     [sdk_core_1.ChainId.SEPOLIA]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SEPOLIA]],
@@ -73,7 +74,38 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [sdk_core_1.ChainId.ZORA_SEPOLIA]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZORA_SEPOLIA]],
     [sdk_core_1.ChainId.ROOTSTOCK]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ROOTSTOCK]],
     [sdk_core_1.ChainId.BLAST]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BLAST], token_provider_1.USDB_BLAST],
-    [sdk_core_1.ChainId.ZKSYNC]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC], token_provider_1.USDCE_ZKSYNC, token_provider_1.USDC_ZKSYNC],
+    [sdk_core_1.ChainId.ZKSYNC]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC],
+        token_provider_1.USDCE_ZKSYNC,
+        token_provider_1.USDC_ZKSYNC,
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_TESTNET],
+        token_provider_1.USDC_ABSTRACT_TESTNET,
+    ],
+    [sdk_core_1.ChainId.ZERO]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZERO], token_provider_1.USDC_ZERO],
+    [sdk_core_1.ChainId.BOB]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BOB], token_provider_1.USDC_BOB],
+    [sdk_core_1.ChainId.CYBER]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.CYBER], token_provider_1.USDC_CYBER],
+    [sdk_core_1.ChainId.SHAPE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SHAPE], token_provider_1.USDC_SHAPE],
+    [sdk_core_1.ChainId.INK]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.INK], token_provider_1.USDC_INK],
+    [sdk_core_1.ChainId.REDSTONE]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE],
+        token_provider_1.USDC_REDSTONE,
+    ],
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE_GARNET],
+        token_provider_1.USDC_REDSTONE_GARNET,
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_MAINNET],
+        token_provider_1.USDC_ABSTRACT_MAINNET,
+    ],
+    [sdk_core_1.ChainId.ANIME_TESTNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME_TESTNET],
+        token_provider_1.USDC_ANIME_TESTNET,
+    ],
+    [sdk_core_1.ChainId.ANIME]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME], token_provider_1.USDC_ANIME],
+    [sdk_core_1.ChainId.MODE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MODE], token_provider_1.USDC_MODE],
 };
 /**
  * Provider that does not get data from an external source and instead returns
@@ -133,4 +165,4 @@ class StaticV2SubgraphProvider {
     }
 }
 exports.StaticV2SubgraphProvider = StaticV2SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0RBQW1EO0FBQ25ELDRDQUF1QztBQUN2QyxvREFBdUI7QUFFdkIsOENBQTREO0FBQzVELHdDQUFxQztBQUNyQyxzREFxQzJCO0FBUTNCLE1BQU0sNkJBQTZCLEdBQW1CO0lBQ3BELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6Qyw0QkFBVztRQUNYLDZCQUFZO1FBQ1osNkJBQVk7UUFDWiw2QkFBWTtLQUNiO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUUsQ0FBQztJQUM1RCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO0lBQzlELG1HQUFtRztJQUNuRyxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDbEIsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUU7UUFDMUMsOEJBQWE7UUFDYiw2QkFBWTtRQUNaLDhCQUFhO1FBQ2IsOEJBQWE7UUFDYiw0QkFBVztLQUNaO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLFlBQVksQ0FBQyxFQUFFO1FBQ3RCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFFO1FBQzlDLDhCQUFhO1FBQ2IsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLHFDQUFvQjtRQUNwQiw4QkFBYTtRQUNiLDZCQUFZO0tBQ2I7SUFDRCxDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsRUFBRTtJQUM3QixD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0RBQW1EO0FBQ25ELDRDQUF1QztBQUN2QyxvREFBdUI7QUFFdkIsOENBQTREO0FBQzVELHdDQUFxQztBQUNyQyxzREFtRDJCO0FBUTNCLE1BQU0sNkJBQTZCLEdBQW1CO0lBQ3BELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6Qyw0QkFBVztRQUNYLDZCQUFZO1FBQ1osNkJBQVk7UUFDWiw2QkFBWTtRQUNaLCtCQUFjO0tBQ2Y7SUFDRCxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBRSxDQUFDO0lBQzVELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7SUFDOUQsbUdBQW1HO0lBQ25HLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUNsQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBRTtRQUMxQyw4QkFBYTtRQUNiLDZCQUFZO1FBQ1osOEJBQWE7UUFDYiw4QkFBYTtRQUNiLDRCQUFXO0tBQ1o7SUFDRCxDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDdEIsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUU7UUFDOUMsOEJBQWE7UUFDYiw2QkFBWTtRQUNaLDhCQUFhO1FBQ2IscUNBQW9CO1FBQ3BCLDhCQUFhO1FBQ2IsNkJBQVk7S0FDYjtJQUNELENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxFQUFFO0lBQzdCLENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLEVBQUU7SUFDOUIsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLEVBQUU7SUFDN0IsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsRUFBRTtJQUM5QixDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyw2QkFBWSxFQUFFLDZCQUFZLEVBQUUsK0JBQWMsQ0FBQztJQUMvRCxDQUFDLGtCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRTtJQUM1QixDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxxQkFBSSxFQUFFLDBCQUFTLEVBQUUsMEJBQVMsRUFBRSx5QkFBUSxDQUFDO0lBQ3RELENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFO0lBQzVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO0lBQ3BCLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUNsQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBQztRQUN6Qyw2QkFBWTtRQUNaLDhCQUFhO1FBQ2IsOEJBQWE7S0FDZDtJQUNELENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNiLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDO1FBQ3BDLHlCQUFRO1FBQ1Isd0JBQU87UUFDUCx5QkFBUTtRQUNSLHlCQUFRO1FBQ1Isd0JBQU87UUFDUCx3QkFBTztLQUNSO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQ25CLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsU0FBUyxDQUFDO1FBQzFDLDBCQUFTO1FBQ1QseUJBQVE7S0FDVDtJQUNELENBQUMsa0JBQU8sQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFFO0lBQ3pCLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsMEJBQVMsQ0FBQztJQUNsRSxDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBRSxDQUFDO0lBQ3hELENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFFLENBQUM7SUFDeEUsQ0FBQyxrQkFBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUUsQ0FBQztJQUNsRSxDQUFDLGtCQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBRSxFQUFFLDJCQUFVLENBQUM7SUFDdEUsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ2hCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFFO1FBQ3hDLDZCQUFZO1FBQ1osNEJBQVc7S0FDWjtJQUNELENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1FBQzFCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsZ0JBQWdCLENBQUU7UUFDbEQsc0NBQXFCO0tBQ3RCO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUUsRUFBRSwwQkFBUyxDQUFDO0lBQ25FLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFFLEVBQUUseUJBQVEsQ0FBQztJQUNoRSxDQUFDLGtCQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBRSxFQUFFLDJCQUFVLENBQUM7SUFDdEUsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxLQUFLLENBQUUsRUFBRSwyQkFBVSxDQUFDO0lBQ3RFLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFFLEVBQUUseUJBQVEsQ0FBQztJQUNoRSxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDbEIsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUU7UUFDMUMsOEJBQWE7S0FDZDtJQUNELENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUN6QixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBRTtRQUNqRCxxQ0FBb0I7S0FDckI7SUFDRCxDQUFDLGtCQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtRQUMxQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFFO1FBQ2xELHNDQUFxQjtLQUN0QjtJQUNELENBQUMsa0JBQU8sQ0FBQyxhQUFhLENBQUMsRUFBRTtRQUN2QixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLGFBQWEsQ0FBRTtRQUMvQyxtQ0FBa0I7S0FDbkI7SUFDRCxDQUFDLGtCQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBRSxFQUFFLDJCQUFVLENBQUM7SUFDdEUsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUUsRUFBRSwwQkFBUyxDQUFDO0NBQ3BFLENBQUM7QUFFRjs7Ozs7Ozs7Ozs7R0FXRztBQUNILE1BQWEsd0JBQXdCO0lBQ25DLFlBQW9CLE9BQWdCO1FBQWhCLFlBQU8sR0FBUCxPQUFPLENBQVM7SUFBRyxDQUFDO0lBRWpDLEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQjtRQUVoQixTQUFHLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7UUFDL0MsTUFBTSxLQUFLLEdBQUcsNkJBQTZCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTFELE1BQU0sU0FBUyxHQUFxQixnQkFBQyxDQUFDLE9BQU8sQ0FDM0MsS0FBSyxFQUNMLENBQUMsSUFBSSxFQUFvQixFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FDeEUsQ0FBQztRQUVGLElBQUksT0FBTyxJQUFJLFFBQVEsRUFBRTtZQUN2QixTQUFTLENBQUMsSUFBSSxDQUNaLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxFQUNuQixHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQWtCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUN2RCxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQWtCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUN6RCxDQUFDO1NBQ0g7UUFFRCxNQUFNLEtBQUssR0FBcUIsSUFBQSxnQkFBQyxFQUFDLFNBQVMsQ0FBQzthQUN6QyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQTRCLEVBQUUsQ0FDM0MsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDaEM7YUFDQSxNQUFNLENBQ0wsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQ25CLE1BQU0sQ0FBQyxPQUFPLEtBQUssTUFBTSxDQUFDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQzlEO2FBQ0EsS0FBSyxFQUFFLENBQUM7UUFFWCxNQUFNLGNBQWMsR0FBRyxJQUFJLEdBQUcsRUFBVSxDQUFDO1FBRXpDLE1BQU0sYUFBYSxHQUFxQixJQUFBLGdCQUFDLEVBQUMsS0FBSyxDQUFDO2FBQzdDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFLEVBQUU7WUFDeEIsTUFBTSxXQUFXLEdBQUcsYUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFcEQsSUFBSSxjQUFjLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFO2dCQUNuQyxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUNELGNBQWMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7WUFFaEMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQztnQkFDakQsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQztnQkFDbEIsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBRXJCLE9BQU87Z0JBQ0wsRUFBRSxFQUFFLFdBQVc7Z0JBQ2YsU0FBUyxFQUFFLEtBQUs7Z0JBQ2hCLE1BQU0sRUFBRTtvQkFDTixFQUFFLEVBQUUsTUFBTSxDQUFDLE9BQU87aUJBQ25CO2dCQUNELE1BQU0sRUFBRTtvQkFDTixFQUFFLEVBQUUsTUFBTSxDQUFDLE9BQU87aUJBQ25CO2dCQUNELE1BQU0sRUFBRSxHQUFHO2dCQUNYLE9BQU8sRUFBRSxHQUFHO2dCQUNaLFVBQVUsRUFBRSxHQUFHO2FBQ2hCLENBQUM7UUFDSixDQUFDLENBQUM7YUFDRCxPQUFPLEVBQUU7YUFDVCxLQUFLLEVBQUUsQ0FBQztRQUVYLE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRjtBQW5FRCw0REFtRUMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.d.ts
index 2321341..cf61ac1 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.d.ts
@@ -1,5 +1,4 @@
-import { Token } from '@uniswap/sdk-core';
-import { ProviderConfig } from '../provider';
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
 import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
 /**
  * Provider for getting V2 subgraph pools that falls back to a different provider
@@ -8,12 +7,10 @@ import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
  * @export
  * @class V2SubgraphProviderWithFallBacks
  */
-export declare class V2SubgraphProviderWithFallBacks implements IV2SubgraphProvider {
-    private fallbacks;
+export declare class V2SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks<V2SubgraphPool> implements IV2SubgraphProvider {
     /**
      * Creates an instance of V2SubgraphProviderWithFallBacks.
      * @param fallbacks Ordered list of `IV2SubgraphProvider` to try to get pools from.
      */
     constructor(fallbacks: IV2SubgraphProvider[]);
-    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V2SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.js
index 8862ede..d15eb5c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider-with-fallback.js
@@ -1,7 +1,8 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.V2SubgraphProviderWithFallBacks = void 0;
-const util_1 = require("../../util");
+const router_sdk_1 = require("@uniswap/router-sdk");
+const subgraph_provider_with_fallback_1 = require("../subgraph-provider-with-fallback");
 /**
  * Provider for getting V2 subgraph pools that falls back to a different provider
  * in the event of failure.
@@ -9,27 +10,14 @@ const util_1 = require("../../util");
  * @export
  * @class V2SubgraphProviderWithFallBacks
  */
-class V2SubgraphProviderWithFallBacks {
+class V2SubgraphProviderWithFallBacks extends subgraph_provider_with_fallback_1.SubgraphProviderWithFallBacks {
     /**
      * Creates an instance of V2SubgraphProviderWithFallBacks.
      * @param fallbacks Ordered list of `IV2SubgraphProvider` to try to get pools from.
      */
     constructor(fallbacks) {
-        this.fallbacks = fallbacks;
-    }
-    async getPools(tokenIn, tokenOut, providerConfig) {
-        for (let i = 0; i < this.fallbacks.length; i++) {
-            const provider = this.fallbacks[i];
-            try {
-                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);
-                return pools;
-            }
-            catch (err) {
-                util_1.log.info(`Failed to get subgraph pools for V2 from fallback #${i}`);
-            }
-        }
-        throw new Error('Failed to get subgraph pools from any providers');
+        super(fallbacks, router_sdk_1.Protocol.V2);
     }
 }
 exports.V2SubgraphProviderWithFallBacks = V2SubgraphProviderWithFallBacks;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxxQ0FBaUM7QUFLakM7Ozs7OztHQU1HO0FBQ0gsTUFBYSwrQkFBK0I7SUFDMUM7OztPQUdHO0lBQ0gsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osVUFBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRjtBQTVCRCwwRUE0QkMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFDL0Msd0ZBQW1GO0FBR25GOzs7Ozs7R0FNRztBQUNILE1BQWEsK0JBQ1gsU0FBUSwrREFBNkM7SUFHckQ7OztPQUdHO0lBQ0gsWUFBWSxTQUFnQztRQUMxQyxLQUFLLENBQUMsU0FBUyxFQUFFLHFCQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGO0FBWEQsMEVBV0MifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider.js
index a3af224..63b591f 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/subgraph-provider.js
@@ -87,7 +87,7 @@ class V2SubgraphProvider {
                         onRetry: (err, retry) => {
                             pools = [];
                             retries += 1;
-                            log_1.log.info({ err }, `Failed request for page of pools from subgraph. Retry attempt: ${retry}`);
+                            log_1.log.error({ err, lastId }, `Failed request for page of pools from subgraph. Retry attempt: ${retry}. LastId: ${lastId}`);
                         },
                     });
                 } while (pairsPage.length > 0);
@@ -96,7 +96,6 @@ class V2SubgraphProvider {
                 metric_1.metric.putMetric(`V2SubgraphProvider.chain_${this.chainId}.getPools.paginate.retries`, retries);
                 return pairs;
             };
-            /* eslint-disable no-useless-catch */
             try {
                 const getPoolsPromise = getPools();
                 const timerPromise = timeout.set(this.timeout).then(() => {
@@ -106,12 +105,12 @@ class V2SubgraphProvider {
                 return;
             }
             catch (err) {
+                log_1.log.error({ err }, 'Error fetching V2 Subgraph Pools.');
                 throw err;
             }
             finally {
                 timeout.clear();
             }
-            /* eslint-enable no-useless-catch */
         }, {
             retries: this.retries,
             onRetry: (err, retry) => {
@@ -135,7 +134,7 @@ class V2SubgraphProvider {
         // Which helps filter pools with manipulated prices/liquidity.
         // TODO: Remove. Temporary fix to ensure tokens without trackedReserveETH are in the list.
         const FEI = '0x956f47f50a910163d8bf957cf5846d573e7f87ca';
-        const tracked = pools.filter(pool => pool.token0.id == FEI ||
+        const tracked = pools.filter((pool) => pool.token0.id == FEI ||
             pool.token1.id == FEI ||
             parseFloat(pool.trackedReserveETH) > this.trackedEthThreshold);
         metric_1.metric.putMetric(`V2SubgraphProvider.chain_${this.chainId}.getPools.filter.length`, tracked.length);
@@ -172,4 +171,4 @@ class V2SubgraphProvider {
     }
 }
 exports.V2SubgraphProvider = V2SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.d.ts
index 8c30a1a..0c5c027 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.d.ts
@@ -1,4 +1,5 @@
 import { ChainId } from '@uniswap/sdk-core';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
 import { ICache } from './../cache';
 import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
 /**
@@ -7,11 +8,7 @@ import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
  * @export
  * @class CachingV3SubgraphProvider
  */
-export declare class CachingV3SubgraphProvider implements IV3SubgraphProvider {
-    private chainId;
-    protected subgraphProvider: IV3SubgraphProvider;
-    private cache;
-    private SUBGRAPH_KEY;
+export declare class CachingV3SubgraphProvider extends CachingSubgraphProvider<V3SubgraphPool> implements IV3SubgraphProvider {
     /**
      * Creates an instance of CachingV3SubgraphProvider.
      * @param chainId The chain id to use.
@@ -19,5 +16,4 @@ export declare class CachingV3SubgraphProvider implements IV3SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId: ChainId, subgraphProvider: IV3SubgraphProvider, cache: ICache<V3SubgraphPool[]>);
-    getPools(): Promise<V3SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.js
index d46cf13..1b72462 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-subgraph-provider.js
@@ -1,13 +1,15 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.CachingV3SubgraphProvider = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const caching_subgraph_provider_1 = require("../caching-subgraph-provider");
 /**
  * Provider for getting V3 pools, with functionality for caching the results.
  *
  * @export
  * @class CachingV3SubgraphProvider
  */
-class CachingV3SubgraphProvider {
+class CachingV3SubgraphProvider extends caching_subgraph_provider_1.CachingSubgraphProvider {
     /**
      * Creates an instance of CachingV3SubgraphProvider.
      * @param chainId The chain id to use.
@@ -15,20 +17,8 @@ class CachingV3SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId, subgraphProvider, cache) {
-        this.chainId = chainId;
-        this.subgraphProvider = subgraphProvider;
-        this.cache = cache;
-        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-${chainId}`;
-    }
-    async getPools() {
-        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
-        if (cachedPools) {
-            return cachedPools;
-        }
-        const pools = await this.subgraphProvider.getPools();
-        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
-        return pools;
+        super(chainId, subgraphProvider, cache, router_sdk_1.Protocol.V3);
     }
 }
 exports.CachingV3SubgraphProvider = CachingV3SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFLQTs7Ozs7R0FLRztBQUNILE1BQWEseUJBQXlCO0lBR3BDOzs7OztPQUtHO0lBQ0gsWUFDVSxPQUFnQixFQUNkLGdCQUFxQyxFQUN2QyxLQUErQjtRQUYvQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2QscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFxQjtRQUN2QyxVQUFLLEdBQUwsS0FBSyxDQUEwQjtRQVhqQyxpQkFBWSxHQUFHLENBQUMsT0FBZ0IsRUFBRSxFQUFFLENBQUMsa0JBQWtCLE9BQU8sRUFBRSxDQUFDO0lBWXRFLENBQUM7SUFFRyxLQUFLLENBQUMsUUFBUTtRQUNuQixNQUFNLFdBQVcsR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFMUUsSUFBSSxXQUFXLEVBQUU7WUFDZixPQUFPLFdBQVcsQ0FBQztTQUNwQjtRQUVELE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRXJELE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFN0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0NBQ0Y7QUE1QkQsOERBNEJDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxvREFBK0M7QUFDL0MsNEVBQXVFO0FBSXZFOzs7OztHQUtHO0FBQ0gsTUFBYSx5QkFDWCxTQUFRLG1EQUF1QztJQUcvQzs7Ozs7T0FLRztJQUNILFlBQ0UsT0FBZ0IsRUFDaEIsZ0JBQXFDLEVBQ3JDLEtBQStCO1FBRS9CLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLHFCQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGO0FBakJELDhEQWlCQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.d.ts
index c5aba29..930f2ce 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.d.ts
@@ -1,8 +1,15 @@
+import { BigNumber } from '@ethersproject/bignumber';
 import { ChainId, Token } from '@uniswap/sdk-core';
 import { FeeAmount, Pool } from '@uniswap/v3-sdk';
 import { Options as RetryOptions } from 'async-retry';
-import { IMulticallProvider } from '../multicall-provider';
+import { IMulticallProvider, Result } from '../multicall-provider';
+import { ILiquidity, ISlot0, PoolProvider } from '../pool-provider';
 import { ProviderConfig } from '../provider';
+declare type V3ISlot0 = ISlot0 & {
+    sqrtPriceX96: BigNumber;
+    tick: number;
+};
+declare type V3ILiquidity = ILiquidity;
 /**
  * Provider or getting V3 pools.
  *
@@ -38,23 +45,33 @@ export declare type V3PoolAccessor = {
     getAllPools: () => Pool[];
 };
 export declare type V3PoolRetryOptions = RetryOptions;
-export declare class V3PoolProvider implements IV3PoolProvider {
-    protected chainId: ChainId;
-    protected multicall2Provider: IMulticallProvider;
-    protected retryOptions: V3PoolRetryOptions;
+export declare type V3PoolConstruct = [Token, Token, FeeAmount];
+export declare class V3PoolProvider extends PoolProvider<Token, V3PoolConstruct, V3ISlot0, V3ILiquidity, V3PoolAccessor> implements IV3PoolProvider {
     private POOL_ADDRESS_CACHE;
     /**
-     * Creates an instance of V3PoolProvider.
+     * Creates an instance of V4PoolProvider.
      * @param chainId The chain id to use.
      * @param multicall2Provider The multicall provider to use to get the pools.
      * @param retryOptions The retry options for each call to the multicall.
      */
     constructor(chainId: ChainId, multicall2Provider: IMulticallProvider, retryOptions?: V3PoolRetryOptions);
-    getPools(tokenPairs: [Token, Token, FeeAmount][], providerConfig?: ProviderConfig): Promise<V3PoolAccessor>;
+    getPools(tokenPairs: V3PoolConstruct[], providerConfig?: ProviderConfig): Promise<V3PoolAccessor>;
     getPoolAddress(tokenA: Token, tokenB: Token, feeAmount: FeeAmount): {
         poolAddress: string;
         token0: Token;
         token1: Token;
     };
-    private getPoolsData;
+    protected getLiquidityFunctionName(): string;
+    protected getSlot0FunctionName(): string;
+    protected getPoolsData<TReturn>(poolAddresses: string[], functionName: string, providerConfig?: ProviderConfig): Promise<Result<TReturn>[]>;
+    protected getPoolIdentifier(pool: V3PoolConstruct): {
+        poolIdentifier: string;
+        currency0: Token;
+        currency1: Token;
+    };
+    protected instantiatePool(pool: V3PoolConstruct, slot0: V3ISlot0, liquidity: V3ILiquidity): Pool;
+    protected instantiatePoolAccessor(poolIdentifierToPool: {
+        [p: string]: Pool;
+    }): V3PoolAccessor;
 }
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.js
index 425a796..b1fda65 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/pool-provider.js
@@ -6,14 +6,13 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.V3PoolProvider = void 0;
 const v3_sdk_1 = require("@uniswap/v3-sdk");
 const async_retry_1 = __importDefault(require("async-retry"));
-const lodash_1 = __importDefault(require("lodash"));
 const IUniswapV3PoolState__factory_1 = require("../../types/v3/factories/IUniswapV3PoolState__factory");
 const addresses_1 = require("../../util/addresses");
 const log_1 = require("../../util/log");
-const routes_1 = require("../../util/routes");
-class V3PoolProvider {
+const pool_provider_1 = require("../pool-provider");
+class V3PoolProvider extends pool_provider_1.PoolProvider {
     /**
-     * Creates an instance of V3PoolProvider.
+     * Creates an instance of V4PoolProvider.
      * @param chainId The chain id to use.
      * @param multicall2Provider The multicall provider to use to get the pools.
      * @param retryOptions The retry options for each call to the multicall.
@@ -23,79 +22,57 @@ class V3PoolProvider {
         minTimeout: 50,
         maxTimeout: 500,
     }) {
-        this.chainId = chainId;
-        this.multicall2Provider = multicall2Provider;
-        this.retryOptions = retryOptions;
+        super(chainId, multicall2Provider, retryOptions);
         // Computing pool addresses is slow as it requires hashing, encoding etc.
         // Addresses never change so can always be cached.
         this.POOL_ADDRESS_CACHE = {};
     }
     async getPools(tokenPairs, providerConfig) {
-        const poolAddressSet = new Set();
-        const sortedTokenPairs = [];
-        const sortedPoolAddresses = [];
-        for (const tokenPair of tokenPairs) {
-            const [tokenA, tokenB, feeAmount] = tokenPair;
-            const { poolAddress, token0, token1 } = this.getPoolAddress(tokenA, tokenB, feeAmount);
-            if (poolAddressSet.has(poolAddress)) {
-                continue;
-            }
-            poolAddressSet.add(poolAddress);
-            sortedTokenPairs.push([token0, token1, feeAmount]);
-            sortedPoolAddresses.push(poolAddress);
-        }
-        log_1.log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);
-        const [slot0Results, liquidityResults] = await Promise.all([
-            this.getPoolsData(sortedPoolAddresses, 'slot0', providerConfig),
-            this.getPoolsData(sortedPoolAddresses, 'liquidity', providerConfig),
+        return await super.getPoolsInternal(tokenPairs, providerConfig);
+    }
+    getPoolAddress(tokenA, tokenB, feeAmount) {
+        const { poolIdentifier, currency0, currency1 } = this.getPoolIdentifier([
+            tokenA,
+            tokenB,
+            feeAmount,
         ]);
-        log_1.log.info(`Got liquidity and slot0s for ${poolAddressSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
-            ? `as of block: ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}.`
-            : ``}`);
-        const poolAddressToPool = {};
-        const invalidPools = [];
-        for (let i = 0; i < sortedPoolAddresses.length; i++) {
-            const slot0Result = slot0Results[i];
-            const liquidityResult = liquidityResults[i];
-            // These properties tell us if a pool is valid and initialized or not.
-            if (!(slot0Result === null || slot0Result === void 0 ? void 0 : slot0Result.success) ||
-                !(liquidityResult === null || liquidityResult === void 0 ? void 0 : liquidityResult.success) ||
-                slot0Result.result.sqrtPriceX96.eq(0)) {
-                const [token0, token1, fee] = sortedTokenPairs[i];
-                invalidPools.push([token0, token1, fee]);
-                continue;
-            }
-            const [token0, token1, fee] = sortedTokenPairs[i];
-            const slot0 = slot0Result.result;
-            const liquidity = liquidityResult.result[0];
-            const pool = new v3_sdk_1.Pool(token0, token1, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick);
-            const poolAddress = sortedPoolAddresses[i];
-            poolAddressToPool[poolAddress] = pool;
-        }
-        if (invalidPools.length > 0) {
-            log_1.log.info({
-                invalidPools: lodash_1.default.map(invalidPools, ([token0, token1, fee]) => `${token0.symbol}/${token1.symbol}/${fee / 10000}%`),
-            }, `${invalidPools.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);
-        }
-        const poolStrs = lodash_1.default.map(Object.values(poolAddressToPool), routes_1.poolToString);
-        log_1.log.debug({ poolStrs }, `Found ${poolStrs.length} valid pools`);
         return {
-            getPool: (tokenA, tokenB, feeAmount) => {
-                const { poolAddress } = this.getPoolAddress(tokenA, tokenB, feeAmount);
-                return poolAddressToPool[poolAddress];
-            },
-            getPoolByAddress: (address) => poolAddressToPool[address],
-            getAllPools: () => Object.values(poolAddressToPool),
+            poolAddress: poolIdentifier,
+            token0: currency0,
+            token1: currency1,
         };
     }
-    getPoolAddress(tokenA, tokenB, feeAmount) {
+    getLiquidityFunctionName() {
+        return 'liquidity';
+    }
+    getSlot0FunctionName() {
+        return 'slot0';
+    }
+    async getPoolsData(poolAddresses, functionName, providerConfig) {
+        const { results, blockNumber } = await (0, async_retry_1.default)(async () => {
+            return this.multicall2Provider.callSameFunctionOnMultipleContracts({
+                addresses: poolAddresses,
+                contractInterface: IUniswapV3PoolState__factory_1.IUniswapV3PoolState__factory.createInterface(),
+                functionName: functionName,
+                providerConfig,
+            });
+        }, this.retryOptions);
+        log_1.log.debug(`Pool data fetched as of block ${blockNumber}`);
+        return results;
+    }
+    getPoolIdentifier(pool) {
+        const [tokenA, tokenB, feeAmount] = pool;
         const [token0, token1] = tokenA.sortsBefore(tokenB)
             ? [tokenA, tokenB]
             : [tokenB, tokenA];
         const cacheKey = `${this.chainId}/${token0.address}/${token1.address}/${feeAmount}`;
         const cachedAddress = this.POOL_ADDRESS_CACHE[cacheKey];
         if (cachedAddress) {
-            return { poolAddress: cachedAddress, token0, token1 };
+            return {
+                poolIdentifier: cachedAddress,
+                currency0: token0,
+                currency1: token1,
+            };
         }
         const poolAddress = (0, v3_sdk_1.computePoolAddress)({
             factoryAddress: addresses_1.V3_CORE_FACTORY_ADDRESSES[this.chainId],
@@ -106,20 +83,26 @@ class V3PoolProvider {
             chainId: this.chainId,
         });
         this.POOL_ADDRESS_CACHE[cacheKey] = poolAddress;
-        return { poolAddress, token0, token1 };
+        return {
+            poolIdentifier: poolAddress,
+            currency0: token0,
+            currency1: token1,
+        };
     }
-    async getPoolsData(poolAddresses, functionName, providerConfig) {
-        const { results, blockNumber } = await (0, async_retry_1.default)(async () => {
-            return this.multicall2Provider.callSameFunctionOnMultipleContracts({
-                addresses: poolAddresses,
-                contractInterface: IUniswapV3PoolState__factory_1.IUniswapV3PoolState__factory.createInterface(),
-                functionName: functionName,
-                providerConfig,
-            });
-        }, this.retryOptions);
-        log_1.log.debug(`Pool data fetched as of block ${blockNumber}`);
-        return results;
+    instantiatePool(pool, slot0, liquidity) {
+        const [token0, token1, feeAmount] = pool;
+        return new v3_sdk_1.Pool(token0, token1, feeAmount, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick);
+    }
+    instantiatePoolAccessor(poolIdentifierToPool) {
+        return {
+            getPool: (tokenA, tokenB, feeAmount) => {
+                const { poolAddress } = this.getPoolAddress(tokenA, tokenB, feeAmount);
+                return poolIdentifierToPool[poolAddress];
+            },
+            getPoolByAddress: (address) => poolIdentifierToPool[address],
+            getAllPools: () => Object.values(poolIdentifierToPool),
+        };
     }
 }
 exports.V3PoolProvider = V3PoolProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSw0Q0FBc0U7QUFDdEUsOERBQTZEO0FBQzdELG9EQUF1QjtBQUV2Qix3R0FBcUc7QUFDckcsb0RBQWlFO0FBQ2pFLHdDQUFxQztBQUNyQyw4Q0FBaUQ7QUE4RGpELE1BQWEsY0FBYztJQUt6Qjs7Ozs7T0FLRztJQUNILFlBQ1ksT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLGVBQW1DO1FBQzNDLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsR0FBRztLQUNoQjtRQU5TLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxpQkFBWSxHQUFaLFlBQVksQ0FJckI7UUFqQkgseUVBQXlFO1FBQ3pFLGtEQUFrRDtRQUMxQyx1QkFBa0IsR0FBOEIsRUFBRSxDQUFDO0lBZ0J4RCxDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsVUFBdUMsRUFDdkMsY0FBK0I7UUFFL0IsTUFBTSxjQUFjLEdBQWdCLElBQUksR0FBRyxFQUFVLENBQUM7UUFDdEQsTUFBTSxnQkFBZ0IsR0FBcUMsRUFBRSxDQUFDO1FBQzlELE1BQU0sbUJBQW1CLEdBQWEsRUFBRSxDQUFDO1FBRXpDLEtBQUssTUFBTSxTQUFTLElBQUksVUFBVSxFQUFFO1lBQ2xDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxHQUFHLFNBQVMsQ0FBQztZQUU5QyxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUN6RCxNQUFNLEVBQ04sTUFBTSxFQUNOLFNBQVMsQ0FDVixDQUFDO1lBRUYsSUFBSSxjQUFjLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSw0Q0FBc0U7QUFDdEUsOERBQTZEO0FBRTdELHdHQUFxRztBQUNyRyxvREFBaUU7QUFDakUsd0NBQXFDO0FBRXJDLG9EQUFvRTtBQXlEcEUsTUFBYSxjQUNYLFNBQVEsNEJBTVA7SUFPRDs7Ozs7T0FLRztJQUNILFlBQ0UsT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLGVBQW1DO1FBQ2pDLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsR0FBRztLQUNoQjtRQUVELEtBQUssQ0FBQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFuQm5ELHlFQUF5RTtRQUN6RSxrREFBa0Q7UUFDMUMsdUJBQWtCLEdBQThCLEVBQUUsQ0FBQztJQWtCM0QsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQTZCLEVBQzdCLGNBQStCO1FBRS9CLE9BQU8sTUFBTSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFTSxjQUFjLENBQ25CLE1BQWEsRUFDYixNQUFhLEVBQ2IsU0FBb0I7UUFFcEIsTUFBTSxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ3RFLE1BQU07WUFDTixNQUFNO1lBQ04sU0FBUztTQUNWLENBQUMsQ0FBQztRQUNILE9BQU87WUFDTCxXQUFXLEVBQUUsY0FBYztZQUMzQixNQUFNLEVBQUUsU0FBUztZQUNqQixNQUFNLEVBQUUsU0FBUztTQUNsQixDQUFDO0lBQ0osQ0FBQztJQUVrQix3QkFBd0I7UUFDekMsT0FBTyxXQUFXLENBQUM7SUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
index 6ebe2d9..0486303 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
@@ -20,6 +20,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
         token_provider_1.USDC_MAINNET,
         token_provider_1.USDT_MAINNET,
         token_provider_1.WBTC_MAINNET,
+        token_provider_1.WSTETH_MAINNET,
     ],
     [sdk_core_1.ChainId.GOERLI]: [
         chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.GOERLI],
@@ -108,7 +109,38 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [sdk_core_1.ChainId.ZORA_SEPOLIA]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZORA_SEPOLIA]],
     [sdk_core_1.ChainId.ROOTSTOCK]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ROOTSTOCK]],
     [sdk_core_1.ChainId.BLAST]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BLAST], token_provider_1.USDB_BLAST],
-    [sdk_core_1.ChainId.ZKSYNC]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC], token_provider_1.USDCE_ZKSYNC, token_provider_1.USDC_ZKSYNC],
+    [sdk_core_1.ChainId.ZKSYNC]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC],
+        token_provider_1.USDCE_ZKSYNC,
+        token_provider_1.USDC_ZKSYNC,
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_TESTNET],
+        token_provider_1.USDC_ABSTRACT_TESTNET,
+    ],
+    [sdk_core_1.ChainId.ZERO]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZERO], token_provider_1.USDC_ZERO],
+    [sdk_core_1.ChainId.BOB]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BOB], token_provider_1.USDC_BOB],
+    [sdk_core_1.ChainId.CYBER]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.CYBER], token_provider_1.USDC_CYBER],
+    [sdk_core_1.ChainId.SHAPE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SHAPE], token_provider_1.USDC_SHAPE],
+    [sdk_core_1.ChainId.INK]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.INK], token_provider_1.USDC_INK],
+    [sdk_core_1.ChainId.REDSTONE]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE],
+        token_provider_1.USDC_REDSTONE,
+    ],
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE_GARNET],
+        token_provider_1.USDC_REDSTONE_GARNET,
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_MAINNET],
+        token_provider_1.USDC_ABSTRACT_MAINNET,
+    ],
+    [sdk_core_1.ChainId.ANIME_TESTNET]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME_TESTNET],
+        token_provider_1.USDC_ANIME_TESTNET,
+    ],
+    [sdk_core_1.ChainId.ANIME]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME], token_provider_1.USDC_ANIME],
+    [sdk_core_1.ChainId.MODE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MODE], token_provider_1.USDC_MODE],
 };
 /**
  * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.
@@ -179,4 +211,4 @@ class StaticV3SubgraphProvider {
     }
 }
 exports.StaticV3SubgraphProvider = StaticV3SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNkRBQTZEO0FBQzdELGdEQUFtRDtBQUNuRCw0Q0FBa0Q7QUFDbEQsZ0RBQXdCO0FBQ3hCLG9EQUF1QjtBQUV2QixnREFBc0Q7QUFDdEQsOENBQTREO0FBQzVELHdDQUFxQztBQUVyQyxzREFzRDJCO0FBUzNCLE1BQU0sNkJBQTZCLEdBQW1CO0lBQ3BELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6Qyw0QkFBVztRQUNYLDZCQUFZO1FBQ1osNkJBQVk7UUFDWiw2QkFBWTtLQUNiO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ2hCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFFO1FBQ3hDLDRCQUFXO1FBQ1gsNEJBQVc7UUFDWCw0QkFBVztRQUNYLDJCQUFVO0tBQ1g7SUFDRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxFQUFFLDZCQUFZLENBQUM7SUFDNUUsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFO1FBQzFDLDhCQUFhO1FBQ2IsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLDhCQUFhO1FBQ2IsNEJBQVc7S0FDWjtJQUNELGlDQUFpQztJQUNqQyxDQUFDLGtCQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtJQUMxQix3REFBd0Q7S0FDekQ7SUFDRCxDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDdEIsZ0NB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.d.ts
index 9a70262..1875038 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.d.ts
@@ -1,5 +1,4 @@
-import { Token } from '@uniswap/sdk-core';
-import { ProviderConfig } from '../provider';
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
 import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
 /**
  * Provider for getting V3 subgraph pools that falls back to a different provider
@@ -8,8 +7,6 @@ import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
  * @export
  * @class V3SubgraphProviderWithFallBacks
  */
-export declare class V3SubgraphProviderWithFallBacks implements IV3SubgraphProvider {
-    private fallbacks;
+export declare class V3SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks<V3SubgraphPool> implements IV3SubgraphProvider {
     constructor(fallbacks: IV3SubgraphProvider[]);
-    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.js
index 2aebe34..288de13 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider-with-fallback.js
@@ -1,7 +1,8 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.V3SubgraphProviderWithFallBacks = void 0;
-const util_1 = require("../../util");
+const router_sdk_1 = require("@uniswap/router-sdk");
+const subgraph_provider_with_fallback_1 = require("../subgraph-provider-with-fallback");
 /**
  * Provider for getting V3 subgraph pools that falls back to a different provider
  * in the event of failure.
@@ -9,23 +10,10 @@ const util_1 = require("../../util");
  * @export
  * @class V3SubgraphProviderWithFallBacks
  */
-class V3SubgraphProviderWithFallBacks {
+class V3SubgraphProviderWithFallBacks extends subgraph_provider_with_fallback_1.SubgraphProviderWithFallBacks {
     constructor(fallbacks) {
-        this.fallbacks = fallbacks;
-    }
-    async getPools(tokenIn, tokenOut, providerConfig) {
-        for (let i = 0; i < this.fallbacks.length; i++) {
-            const provider = this.fallbacks[i];
-            try {
-                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);
-                return pools;
-            }
-            catch (err) {
-                util_1.log.info(`Failed to get subgraph pools for V3 from fallback #${i}`);
-            }
-        }
-        throw new Error('Failed to get subgraph pools from any providers');
+        super(fallbacks, router_sdk_1.Protocol.V3);
     }
 }
 exports.V3SubgraphProviderWithFallBacks = V3SubgraphProviderWithFallBacks;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxxQ0FBaUM7QUFLakM7Ozs7OztHQU1HO0FBQ0gsTUFBYSwrQkFBK0I7SUFDMUMsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osVUFBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRjtBQXhCRCwwRUF3QkMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFDL0Msd0ZBQW1GO0FBR25GOzs7Ozs7R0FNRztBQUNILE1BQWEsK0JBQ1gsU0FBUSwrREFBNkM7SUFHckQsWUFBWSxTQUFnQztRQUMxQyxLQUFLLENBQUMsU0FBUyxFQUFFLHFCQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGO0FBUEQsMEVBT0MifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.d.ts
index 5dc70a2..0cb4ed0 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.d.ts
@@ -1,6 +1,6 @@
 import { ChainId, Token } from '@uniswap/sdk-core';
 import { ProviderConfig } from '../provider';
-import { V2SubgraphPool } from '../v2/subgraph-provider';
+import { SubgraphProvider } from '../subgraph-provider';
 export interface V3SubgraphPool {
     id: string;
     feeTier: string;
@@ -14,8 +14,22 @@ export interface V3SubgraphPool {
     tvlETH: number;
     tvlUSD: number;
 }
-export declare const printV3SubgraphPool: (s: V3SubgraphPool) => string;
-export declare const printV2SubgraphPool: (s: V2SubgraphPool) => string;
+export declare type V3RawSubgraphPool = {
+    id: string;
+    feeTier: string;
+    liquidity: string;
+    token0: {
+        symbol: string;
+        id: string;
+    };
+    token1: {
+        symbol: string;
+        id: string;
+    };
+    totalValueLockedUSD: string;
+    totalValueLockedETH: string;
+    totalValueLockedUSDUntracked: string;
+};
 /**
  * Provider for getting V3 pools from the Subgraph
  *
@@ -25,15 +39,8 @@ export declare const printV2SubgraphPool: (s: V2SubgraphPool) => string;
 export interface IV3SubgraphProvider {
     getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
 }
-export declare class V3SubgraphProvider implements IV3SubgraphProvider {
-    private chainId;
-    private retries;
-    private timeout;
-    private rollback;
-    private trackedEthThreshold;
-    private untrackedUsdThreshold;
-    private subgraphUrlOverride?;
-    private client;
-    constructor(chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrlOverride?: string | undefined);
-    getPools(_tokenIn?: Token, _tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
+export declare class V3SubgraphProvider extends SubgraphProvider<V3RawSubgraphPool, V3SubgraphPool> implements IV3SubgraphProvider {
+    constructor(chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrlOverride?: string);
+    protected subgraphQuery(blockNumber?: number): string;
+    protected mapSubgraphPool(rawPool: V3RawSubgraphPool): V3SubgraphPool;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js
index d6d8c3c..6bc14bb 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js
@@ -1,19 +1,9 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.V3SubgraphProvider = exports.printV2SubgraphPool = exports.printV3SubgraphPool = void 0;
+exports.V3SubgraphProvider = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
-const async_retry_1 = __importDefault(require("async-retry"));
-const await_timeout_1 = __importDefault(require("await-timeout"));
-const graphql_request_1 = require("graphql-request");
-const lodash_1 = __importDefault(require("lodash"));
-const util_1 = require("../../util");
-const printV3SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}/${s.feeTier}`;
-exports.printV3SubgraphPool = printV3SubgraphPool;
-const printV2SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}`;
-exports.printV2SubgraphPool = printV2SubgraphPool;
+const subgraph_provider_1 = require("../subgraph-provider");
 const SUBGRAPH_URL_BY_CHAIN = {
     [sdk_core_1.ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',
     [sdk_core_1.ChainId.OPTIMISM]: 'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis',
@@ -30,33 +20,16 @@ const SUBGRAPH_URL_BY_CHAIN = {
     [sdk_core_1.ChainId.BASE]: 'https://api.studio.thegraph.com/query/48211/uniswap-v3-base/version/latest',
     [sdk_core_1.ChainId.BLAST]: 'https://gateway-arbitrum.network.thegraph.com/api/0ae45f0bf40ae2e73119b44ccd755967/subgraphs/id/2LHovKznvo8YmKC9ZprPjsYAZDCc4K5q4AYz8s3cnQn1',
 };
-const PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.
-class V3SubgraphProvider {
+class V3SubgraphProvider extends subgraph_provider_1.SubgraphProvider {
     constructor(chainId, retries = 2, timeout = 30000, rollback = true, trackedEthThreshold = 0.01, untrackedUsdThreshold = Number.MAX_VALUE, subgraphUrlOverride) {
-        var _a;
-        this.chainId = chainId;
-        this.retries = retries;
-        this.timeout = timeout;
-        this.rollback = rollback;
-        this.trackedEthThreshold = trackedEthThreshold;
-        this.untrackedUsdThreshold = untrackedUsdThreshold;
-        this.subgraphUrlOverride = subgraphUrlOverride;
-        const subgraphUrl = (_a = this.subgraphUrlOverride) !== null && _a !== void 0 ? _a : SUBGRAPH_URL_BY_CHAIN[this.chainId];
-        if (!subgraphUrl) {
-            throw new Error(`No subgraph url for chain id: ${this.chainId}`);
-        }
-        this.client = new graphql_request_1.GraphQLClient(subgraphUrl);
+        super(router_sdk_1.Protocol.V3, chainId, retries, timeout, rollback, trackedEthThreshold, untrackedUsdThreshold, subgraphUrlOverride !== null && subgraphUrlOverride !== void 0 ? subgraphUrlOverride : SUBGRAPH_URL_BY_CHAIN[chainId]);
     }
-    async getPools(_tokenIn, _tokenOut, providerConfig) {
-        const beforeAll = Date.now();
-        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
-            ? await providerConfig.blockNumber
-            : undefined;
-        const query = (0, graphql_request_1.gql) `
-      query getPools($pageSize: Int!, $id: String) {
-        pools(
-          first: $pageSize
-          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}
+    subgraphQuery(blockNumber) {
+        return `
+    query getPools($pageSize: Int!, $id: String) {
+      pools(
+        first: $pageSize
+        ${blockNumber ? `block: { number: ${blockNumber} }` : ``}
           where: { id_gt: $id }
         ) {
           id
@@ -75,101 +48,23 @@ class V3SubgraphProvider {
           totalValueLockedUSDUntracked
         }
       }
-    `;
-        let pools = [];
-        util_1.log.info(`Getting V3 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
-            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`
-            : ''}.`);
-        let retries = 0;
-        await (0, async_retry_1.default)(async () => {
-            const timeout = new await_timeout_1.default();
-            const getPools = async () => {
-                let lastId = '';
-                let pools = [];
-                let poolsPage = [];
-                // metrics variables
-                let totalPages = 0;
-                do {
-                    totalPages += 1;
-                    const poolsResult = await this.client.request(query, {
-                        pageSize: PAGE_SIZE,
-                        id: lastId,
-                    });
-                    poolsPage = poolsResult.pools;
-                    pools = pools.concat(poolsPage);
-                    lastId = pools[pools.length - 1].id;
-                    util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.paginate.pageSize`, poolsPage.length);
-                } while (poolsPage.length > 0);
-                util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.paginate`, totalPages);
-                util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.pools.length`, pools.length);
-                return pools;
-            };
-            /* eslint-disable no-useless-catch */
-            try {
-                const getPoolsPromise = getPools();
-                const timerPromise = timeout.set(this.timeout).then(() => {
-                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);
-                });
-                pools = await Promise.race([getPoolsPromise, timerPromise]);
-                return;
-            }
-            catch (err) {
-                throw err;
-            }
-            finally {
-                timeout.clear();
-            }
-            /* eslint-enable no-useless-catch */
-        }, {
-            retries: this.retries,
-            onRetry: (err, retry) => {
-                retries += 1;
-                if (this.rollback &&
-                    blockNumber &&
-                    lodash_1.default.includes(err.message, 'indexed up to')) {
-                    util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.indexError`, 1);
-                    blockNumber = blockNumber - 10;
-                    util_1.log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);
-                }
-                util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.timeout`, 1);
-                pools = [];
-                util_1.log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);
+   `;
+    }
+    mapSubgraphPool(rawPool) {
+        return {
+            id: rawPool.id,
+            feeTier: rawPool.feeTier,
+            liquidity: rawPool.liquidity,
+            token0: {
+                id: rawPool.token0.id,
+            },
+            token1: {
+                id: rawPool.token1.id,
             },
-        });
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.retries`, retries);
-        const untrackedPools = pools.filter(pool => parseInt(pool.liquidity) > 0 ||
-            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold ||
-            parseFloat(pool.totalValueLockedUSDUntracked) > this.untrackedUsdThreshold);
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.untracked.length`, untrackedPools.length);
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.untracked.percent`, (untrackedPools.length / pools.length) * 100);
-        const beforeFilter = Date.now();
-        const poolsSanitized = pools
-            .filter((pool) => parseInt(pool.liquidity) > 0 ||
-            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold)
-            .map((pool) => {
-            const { totalValueLockedETH, totalValueLockedUSD } = pool;
-            return {
-                id: pool.id.toLowerCase(),
-                feeTier: pool.feeTier,
-                token0: {
-                    id: pool.token0.id.toLowerCase(),
-                },
-                token1: {
-                    id: pool.token1.id.toLowerCase(),
-                },
-                liquidity: pool.liquidity,
-                tvlETH: parseFloat(totalValueLockedETH),
-                tvlUSD: parseFloat(totalValueLockedUSD),
-            };
-        });
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.filter.latency`, Date.now() - beforeFilter);
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.filter.length`, poolsSanitized.length);
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.filter.percent`, (poolsSanitized.length / pools.length) * 100);
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools`, 1);
-        util_1.metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.latency`, Date.now() - beforeAll);
-        util_1.log.info(`Got ${pools.length} V3 pools from the subgraph. ${poolsSanitized.length} after filtering`);
-        return poolsSanitized;
+            tvlETH: parseFloat(rawPool.totalValueLockedETH),
+            tvlUSD: parseFloat(rawPool.totalValueLockedUSD),
+        };
     }
 }
 exports.V3SubgraphProvider = V3SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG9EQUErQztBQUMvQyxnREFBbUQ7QUFHbkQsNERBQXdEO0FBaUN4RCxNQUFNLHFCQUFxQixHQUFzQztJQUMvRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQ2YsNERBQTREO0lBQzlELENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEIsMkVBQTJFO0lBQzdFLGtDQUFrQztJQUNsQyxDQUFDLGtCQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxFQUFFO0lBQzlCLENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFDcEIsb0VBQW9FO0lBQ3RFLGtDQUFrQztJQUNsQyxDQUFDLGtCQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxFQUFFO0lBQzlCLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFDZixzRUFBc0U7SUFDeEUsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUNaLGlFQUFpRTtJQUNuRSxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQ2Qsb0VBQW9FO0lBQ3RFLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFDWCx1RUFBdUU7SUFDekUsQ0FBQyxrQkFBTyxDQUFDLFNBQVMsQ0FBQyxFQUNqQixvRUFBb0U7SUFDdEUsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUNaLDRFQUE0RTtJQUM5RSxDQUFDLGtCQUFPLENBQUMsS0FBSyxDQUFDLEVBQ2IsOElBQThJO0NBQ2pKLENBQUM7QUFnQkYsTUFBYSxrQkFDWCxTQUFRLG9DQUFtRDtJQUczRCxZQUNFLE9BQWdCLEVBQ2hCLE9BQU8sR0FBRyxDQUFDLEVBQ1gsT0FBTyxHQUFHLEtBQUssRUFDZixRQUFRLEdBQUcsSUFBSSxFQUNmLG1CQUFtQixHQUFHLElBQUksRUFDMUIscUJBQXFCLEdBQUcsTUFBTSxDQUFDLFNBQVMsRUFDeEMsbUJBQTRCO1FBRTVCLEtBQUssQ0FDSCxxQkFBUSxDQUFDLEVBQUUsRUFDWCxPQUFPLEVBQ1AsT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsbUJBQW1CLEVBQ25CLHFCQUFxQixFQUNyQixtQkFBbUIsYUFBbkIsbUJBQW1CLGNBQW5CLG1CQUFtQixHQUFJLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxDQUN0RCxDQUFDO0lBQ0osQ0FBQztJQUVrQixhQUFhLENBQUMsV0FBb0I7UUFDbkQsT0FBTzs7OztVQUlELFdBQVcsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLFdBQVcsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUI1RCxDQUFDO0lBQ0gsQ0FBQztJQUVrQixlQUFlLENBQ2hDLE9BQTBCO1FBRTFCLE9BQU87WUFDTCxFQUFFLEVBQUUsT0FBTyxDQUFDLEVBQUU7WUFDZCxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87WUFDeEIsU0FBUyxFQUFFLE9BQU8sQ0FBQyxTQUFTO1lBQzVCLE1BQU0sRUFBRTtnQkFDTixFQUFFLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2FBQ3RCO1lBQ0QsTUFBTSxFQUFFO2dCQUNOLEVBQUUsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7YUFDdEI7WUFDRCxNQUFNLEVBQUUsVUFBVSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztZQUMvQyxNQUFNLEVBQUUsVUFBVSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztTQUNoRCxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBckVELGdEQXFFQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-pool-provider.d.ts
new file mode 100644
index 0000000..52106f2
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-pool-provider.d.ts
@@ -0,0 +1,24 @@
+import { ChainId, Currency } from '@uniswap/sdk-core';
+import { Pool } from '@uniswap/v4-sdk';
+import { ICache } from '../cache';
+import { ProviderConfig } from '../provider';
+import { IV4PoolProvider, V4PoolAccessor } from './pool-provider';
+export declare class CachingV4PoolProvider implements IV4PoolProvider {
+    protected chainId: ChainId;
+    protected poolProvider: IV4PoolProvider;
+    private cache;
+    private POOL_KEY;
+    /**
+     * Creates an instance of CachingV4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param poolProvider The provider to use to get the pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId: ChainId, poolProvider: IV4PoolProvider, cache: ICache<Pool>);
+    getPools(currencyPairs: [Currency, Currency, number, number, string][], providerConfig?: ProviderConfig): Promise<V4PoolAccessor>;
+    getPoolId(currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string): {
+        poolId: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-pool-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-pool-provider.js
new file mode 100644
index 0000000..6f8a4c6
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-pool-provider.js
@@ -0,0 +1,81 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.CachingV4PoolProvider = void 0;
+const lodash_1 = __importDefault(require("lodash"));
+const util_1 = require("../../util");
+class CachingV4PoolProvider {
+    /**
+     * Creates an instance of CachingV4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param poolProvider The provider to use to get the pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId, poolProvider, cache) {
+        this.chainId = chainId;
+        this.poolProvider = poolProvider;
+        this.cache = cache;
+        this.POOL_KEY = (chainId, address, blockNumber) => blockNumber
+            ? `pool-${chainId}-${address}-${blockNumber}`
+            : `pool-${chainId}-${address}`;
+    }
+    async getPools(currencyPairs, providerConfig) {
+        const poolIdSet = new Set();
+        const poolsToGetCurrencyPairs = [];
+        const poolsToGetIds = [];
+        const poolIdToPool = {};
+        const blockNumber = await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber);
+        for (const [currencyA, currencyB, feeAmount, tickSpacing, hooks,] of currencyPairs) {
+            const { poolId, currency0, currency1 } = this.getPoolId(currencyA, currencyB, feeAmount, tickSpacing, hooks);
+            if (poolIdSet.has(poolId)) {
+                continue;
+            }
+            poolIdSet.add(poolId);
+            const cachedPool = await this.cache.get(this.POOL_KEY(this.chainId, poolId, blockNumber));
+            if (cachedPool) {
+                util_1.metric.putMetric('V4_INMEMORY_CACHING_POOL_HIT_IN_MEMORY', 1, util_1.MetricLoggerUnit.None);
+                poolIdToPool[poolId] = cachedPool;
+                continue;
+            }
+            util_1.metric.putMetric('V4_INMEMORY_CACHING_POOL_MISS_NOT_IN_MEMORY', 1, util_1.MetricLoggerUnit.None);
+            poolsToGetCurrencyPairs.push([
+                currency0,
+                currency1,
+                feeAmount,
+                tickSpacing,
+                hooks,
+            ]);
+            poolsToGetIds.push(poolId);
+        }
+        util_1.log.info({
+            poolsFound: lodash_1.default.map(Object.values(poolIdToPool), (p) => `${p.token0.symbol} ${p.token1.symbol} ${p.fee}`),
+            poolsToGetTokenPairs: lodash_1.default.map(poolsToGetCurrencyPairs, (t) => `${t[0].symbol} ${t[1].symbol} ${t[2]}`),
+        }, `Found ${Object.keys(poolIdToPool).length} V4 pools already in local cache. About to get liquidity and slot0s for ${poolsToGetCurrencyPairs.length} pools.`);
+        if (poolsToGetCurrencyPairs.length > 0) {
+            const poolAccessor = await this.poolProvider.getPools(poolsToGetCurrencyPairs, providerConfig);
+            for (const address of poolsToGetIds) {
+                const pool = poolAccessor.getPoolById(address);
+                if (pool) {
+                    poolIdToPool[address] = pool;
+                    // We don't want to wait for this caching to complete before returning the pools.
+                    this.cache.set(this.POOL_KEY(this.chainId, address, blockNumber), pool);
+                }
+            }
+        }
+        return {
+            getPool: (currencyA, currencyB, fee, tickSpacing, hooks) => {
+                const { poolId } = this.poolProvider.getPoolId(currencyA, currencyB, fee, tickSpacing, hooks);
+                return poolIdToPool[poolId];
+            },
+            getPoolById: (poolId) => poolIdToPool[poolId],
+            getAllPools: () => Object.values(poolIdToPool),
+        };
+    }
+    getPoolId(currencyA, currencyB, fee, tickSpacing, hooks) {
+        return this.poolProvider.getPoolId(currencyA, currencyB, fee, tickSpacing, hooks);
+    }
+}
+exports.CachingV4PoolProvider = CachingV4PoolProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92NC9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsb0RBQXVCO0FBQ3ZCLHFDQUEyRDtBQUszRCxNQUFhLHFCQUFxQjtJQVVoQzs7Ozs7T0FLRztJQUNILFlBQ1ksT0FBZ0IsRUFDaEIsWUFBNkIsRUFDL0IsS0FBbUI7UUFGakIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQixpQkFBWSxHQUFaLFlBQVksQ0FBaUI7UUFDL0IsVUFBSyxHQUFMLEtBQUssQ0FBYztRQWxCckIsYUFBUSxHQUFHLENBQ2pCLE9BQWdCLEVBQ2hCLE9BQWUsRUFDZixXQUFvQixFQUNwQixFQUFFLENBQ0YsV0FBVztZQUNULENBQUMsQ0FBQyxRQUFRLE9BQU8sSUFBSSxPQUFPLElBQUksV0FBVyxFQUFFO1lBQzdDLENBQUMsQ0FBQyxRQUFRLE9BQU8sSUFBSSxPQUFPLEVBQUUsQ0FBQztJQVloQyxDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsYUFBNkQsRUFDN0QsY0FBK0I7UUFFL0IsTUFBTSxTQUFTLEdBQWdCLElBQUksR0FBRyxFQUFVLENBQUM7UUFDakQsTUFBTSx1QkFBdUIsR0FFekIsRUFBRSxDQUFDO1FBQ1AsTUFBTSxhQUFhLEdBQWEsRUFBRSxDQUFDO1FBQ25DLE1BQU0sWUFBWSxHQUErQixFQUFFLENBQUM7UUFDcEQsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFBLGNBQWMsYUFBZCxjQUFjLHVCQUFkLGNBQWMsQ0FBRSxXQUFXLENBQUEsQ0FBQztRQUV0RCxLQUFLLE1BQU0sQ0FDVCxTQUFTLEVBQ1QsU0FBUyxFQUNULFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNOLElBQUksYUFBYSxFQUFFO1lBQ2xCLE1BQU0sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQ3JELFNBQVMsRUFDVCxTQUFTLEVBQ1QsU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLENBQ04sQ0FBQztZQUVGLElBQUksU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDekIsU0FBUzthQUNWO1lBRUQsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUV0QixNQUFNLFVBQVUsR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUNyQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUNqRCxDQUFDO1lBQ0YsSUFBSSxVQUFVLEVBQUU7Z0JBQ2QsYUFBTSxDQUFDLFNBQVMsQ0FDZCx3Q0FBd0MsRUFDeEMsQ0FBQyxFQUNELHVCQUFnQixDQUFDLElBQUksQ0FDdEIsQ0FBQztnQkFDRixZQUFZLENBQUMsTUFBTSxDQUFDLEdBQUcsVUFBVSxDQUFDO2dCQUNsQyxTQUFTO2FBQ1Y7WUFFRCxhQUFNLENBQUMsU0FBUyxDQUNkLDZDQUE2QyxFQUM3QyxDQUFDLEVBQ0QsdUJBQWdCLENBQUMsSUFBSSxDQUN0QixDQUFDO1lBQ0YsdUJBQXVCLENBQUMsSUFBSSxDQUFDO2dCQUMzQixTQUFTO2dCQUNULFNBQVM7Z0JBQ1QsU0FBUztnQkFDVCxXQUFXO2dCQUNYLEtBQUs7YUFDTixDQUFDLENBQUM7WUFDSCxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzVCO1FBRUQsVUFBRyxDQUFDLElBQUksQ0FDTjtZQUNFLFVBQVUsRUFBRSxnQkFBQyxDQUFDLEdBQUcsQ0FDZixNQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxFQUMzQixDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQ3hEO1lBQ0Qsb0JBQW9CLEVBQUUsZ0JBQUMsQ0FBQyxHQUFHLENBQ3pCLHVCQUF1QixFQUN2QixDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQy9DO1NBQ0YsRUFDRCxTQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsTUFDNUIsMkVBQ0UsdUJBQXVCLENBQUMsTUFDMUIsU0FBUyxDQUNWLENBQUM7UUFFRixJQUFJLHVCQUF1QixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdEMsTUFBTSxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FDbkQsdUJBQXVCLEVBQ3ZCLGNBQWMsQ0FDZixDQUFDO1lBQ0YsS0FBSyxNQUFNLE9BQU8sSUFBSSxhQUFhLEVBQUU7Z0JBQ25DLE1BQU0sSUFBSSxHQUFHLFlBQVksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQy9DLElBQUksSUFBSSxFQUFFO29CQUNSLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUM7b0JBQzdCLGlGQUFpRjtvQkFDakYsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQ1osSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsRUFDakQsSUFBSSxDQUNMLENBQUM7aUJBQ0g7YUFDRjtTQUNGO1FBRUQsT0FBTztZQUNMLE9BQU8sRUFBRSxDQUNQLFNBQW1CLEVBQ25CLFNBQW1CLEVBQ25CLEdBQVcsRUFDWCxXQUFtQixFQUNuQixLQUFhLEVBQ2IsRUFBRTtnQkFDRixNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQzVDLFNBQVMsRUFDVCxTQUFTLEVBQ1QsR0FBRyxFQUNILFdBQVcsRUFDWCxLQUFLLENBQ04sQ0FBQztnQkFDRixPQUFPLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM5QixDQUFDO1lBQ0QsV0FBVyxFQUFFLENBQUMsTUFBYyxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDO1lBQ3JELFdBQVcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQztTQUMvQyxDQUFDO0lBQ0osQ0FBQztJQUVNLFNBQVMsQ0FDZCxTQUFtQixFQUNuQixTQUFtQixFQUNuQixHQUFXLEVBQ1gsV0FBbUIsRUFDbkIsS0FBYTtRQUViLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQ2hDLFNBQVMsRUFDVCxTQUFTLEVBQ1QsR0FBRyxFQUNILFdBQVcsRUFDWCxLQUFLLENBQ04sQ0FBQztJQUNKLENBQUM7Q0FDRjtBQTVKRCxzREE0SkMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-subgraph-provider.d.ts
new file mode 100644
index 0000000..eaf3167
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-subgraph-provider.d.ts
@@ -0,0 +1,19 @@
+import { ChainId } from '@uniswap/sdk-core';
+import { ICache } from '../cache';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+/**
+ * Provider for getting V4 pools, with functionality for caching the results.
+ *
+ * @export
+ * @class CachingV4SubgraphProvider
+ */
+export declare class CachingV4SubgraphProvider extends CachingSubgraphProvider<V4SubgraphPool> implements IV4SubgraphProvider {
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId: ChainId, subgraphProvider: IV4SubgraphProvider, cache: ICache<V4SubgraphPool[]>);
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-subgraph-provider.js
new file mode 100644
index 0000000..7d7972f
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/caching-subgraph-provider.js
@@ -0,0 +1,24 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.CachingV4SubgraphProvider = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const caching_subgraph_provider_1 = require("../caching-subgraph-provider");
+/**
+ * Provider for getting V4 pools, with functionality for caching the results.
+ *
+ * @export
+ * @class CachingV4SubgraphProvider
+ */
+class CachingV4SubgraphProvider extends caching_subgraph_provider_1.CachingSubgraphProvider {
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId, subgraphProvider, cache) {
+        super(chainId, subgraphProvider, cache, router_sdk_1.Protocol.V4);
+    }
+}
+exports.CachingV4SubgraphProvider = CachingV4SubgraphProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjQvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFHL0MsNEVBQXVFO0FBR3ZFOzs7OztHQUtHO0FBQ0gsTUFBYSx5QkFDWCxTQUFRLG1EQUF1QztJQUcvQzs7Ozs7T0FLRztJQUNILFlBQ0UsT0FBZ0IsRUFDaEIsZ0JBQXFDLEVBQ3JDLEtBQStCO1FBRS9CLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLHFCQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGO0FBakJELDhEQWlCQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/pool-provider.d.ts
new file mode 100644
index 0000000..01a380e
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/pool-provider.d.ts
@@ -0,0 +1,57 @@
+import { ChainId, Currency } from '@uniswap/sdk-core';
+import { Pool } from '@uniswap/v4-sdk';
+import { Options as RetryOptions } from 'async-retry';
+import { IMulticallProvider, Result } from '../multicall-provider';
+import { ProviderConfig } from '../provider';
+import { ILiquidity, ISlot0, PoolProvider } from '../pool-provider';
+declare type V4ISlot0 = ISlot0 & {
+    poolId: string;
+    protocolFee: number;
+    lpFee: number;
+};
+declare type V4ILiquidity = ILiquidity;
+export interface IV4PoolProvider {
+    getPools(currencyPairs: V4PoolConstruct[], providerConfig?: ProviderConfig): Promise<V4PoolAccessor>;
+    getPoolId(currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string): {
+        poolId: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+}
+export declare type V4PoolAccessor = {
+    getPool: (currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string) => Pool | undefined;
+    getPoolById: (poolId: string) => Pool | undefined;
+    getAllPools: () => Pool[];
+};
+export declare type V4PoolRetryOptions = RetryOptions;
+export declare type V4PoolConstruct = [Currency, Currency, number, number, string];
+export declare function sortsBefore(currencyA: Currency, currencyB: Currency): boolean;
+export declare class V4PoolProvider extends PoolProvider<Currency, V4PoolConstruct, V4ISlot0, V4ILiquidity, V4PoolAccessor> implements IV4PoolProvider {
+    private POOL_ID_CACHE;
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId: ChainId, multicall2Provider: IMulticallProvider, retryOptions?: V4PoolRetryOptions);
+    getPools(currencyPairs: V4PoolConstruct[], providerConfig?: ProviderConfig): Promise<V4PoolAccessor>;
+    getPoolId(currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string): {
+        poolId: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+    protected getLiquidityFunctionName(): string;
+    protected getSlot0FunctionName(): string;
+    protected getPoolsData<TReturn>(poolIds: string[], functionName: string, providerConfig?: ProviderConfig): Promise<Result<TReturn>[]>;
+    protected getPoolIdentifier(pool: V4PoolConstruct): {
+        poolIdentifier: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+    protected instantiatePool(pool: V4PoolConstruct, slot0: V4ISlot0, liquidity: V4ILiquidity): Pool;
+    protected instantiatePoolAccessor(poolIdentifierToPool: {
+        [p: string]: Pool;
+    }): V4PoolAccessor;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/pool-provider.js
new file mode 100644
index 0000000..213f54f
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/pool-provider.js
@@ -0,0 +1,116 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.V4PoolProvider = exports.sortsBefore = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
+const async_retry_1 = __importDefault(require("async-retry"));
+const util_1 = require("../../util");
+const StateView__factory_1 = require("../../types/other/factories/StateView__factory");
+const pool_provider_1 = require("../pool-provider");
+// TODO: export sortsBefore from v4-sdk https://github.com/Uniswap/sdks/tree/main/sdks/v4-sdk/src/utils to avoid duplication
+function sortsBefore(currencyA, currencyB) {
+    if (currencyA.isNative)
+        return true;
+    if (currencyB.isNative)
+        return false;
+    return currencyA.wrapped.sortsBefore(currencyB.wrapped);
+}
+exports.sortsBefore = sortsBefore;
+class V4PoolProvider extends pool_provider_1.PoolProvider {
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId, multicall2Provider, retryOptions = {
+        retries: 2,
+        minTimeout: 50,
+        maxTimeout: 500,
+    }) {
+        super(chainId, multicall2Provider, retryOptions);
+        // Computing pool id is slow as it requires hashing, encoding etc.
+        // Addresses never change so can always be cached.
+        this.POOL_ID_CACHE = {};
+    }
+    async getPools(currencyPairs, providerConfig) {
+        return await super.getPoolsInternal(currencyPairs, providerConfig);
+    }
+    getPoolId(currencyA, currencyB, fee, tickSpacing, hooks) {
+        const { poolIdentifier, currency0, currency1 } = this.getPoolIdentifier([
+            currencyA,
+            currencyB,
+            fee,
+            tickSpacing,
+            hooks,
+        ]);
+        return { poolId: poolIdentifier, currency0, currency1 };
+    }
+    getLiquidityFunctionName() {
+        return 'getLiquidity';
+    }
+    getSlot0FunctionName() {
+        return 'getSlot0';
+    }
+    async getPoolsData(poolIds, functionName, providerConfig) {
+        const { results, blockNumber } = await (0, async_retry_1.default)(async () => {
+            // NOTE: V4 pools are a singleton living under PoolsManager.
+            // We have to retrieve the pool data from the state view contract.
+            // To begin with, we will be consistent with how v4 subgraph retrieves the pool state - via state view.
+            return this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: util_1.STATE_VIEW_ADDRESSES[this.chainId],
+                contractInterface: StateView__factory_1.StateView__factory.createInterface(),
+                functionName: functionName,
+                functionParams: poolIds.map((poolId) => [poolId]),
+                providerConfig,
+            });
+        }, this.retryOptions);
+        util_1.log.debug(`Pool data fetched as of block ${blockNumber}`);
+        return results;
+    }
+    getPoolIdentifier(pool) {
+        const [currencyA, currencyB, fee, tickSpacing, hooks] = pool;
+        const [currency0, currency1] = sortsBefore(currencyA, currencyB)
+            ? [currencyA, currencyB]
+            : [currencyB, currencyA];
+        const currency0Addr = currency0.isNative
+            ? router_sdk_1.ADDRESS_ZERO
+            : currency0.wrapped.address;
+        const currency1Addr = currency1.isNative
+            ? router_sdk_1.ADDRESS_ZERO
+            : currency1.wrapped.address;
+        const cacheKey = `${this.chainId}/${currency0Addr}/${currency1Addr}/${fee}/${tickSpacing}/${hooks}`;
+        const cachedId = this.POOL_ID_CACHE[cacheKey];
+        if (cachedId) {
+            return { poolIdentifier: cachedId, currency0, currency1 };
+        }
+        const poolId = v4_sdk_1.Pool.getPoolId(currency0, currency1, fee, tickSpacing, hooks);
+        this.POOL_ID_CACHE[cacheKey] = poolId;
+        return { poolIdentifier: poolId, currency0, currency1 };
+    }
+    instantiatePool(pool, slot0, liquidity) {
+        const [currency0, currency1, fee, tickSpacing, hooks] = pool;
+        return new v4_sdk_1.Pool(currency0, currency1, fee, tickSpacing, hooks, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick);
+    }
+    instantiatePoolAccessor(poolIdentifierToPool) {
+        return {
+            getPool: (currencyA, currencyB, fee, tickSpacing, hooks) => {
+                const { poolIdentifier } = this.getPoolIdentifier([
+                    currencyA,
+                    currencyB,
+                    fee,
+                    tickSpacing,
+                    hooks,
+                ]);
+                return poolIdentifierToPool[poolIdentifier];
+            },
+            getPoolById: (poolId) => poolIdentifierToPool[poolId],
+            getAllPools: () => Object.values(poolIdentifierToPool),
+        };
+    }
+}
+exports.V4PoolProvider = V4PoolProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjQvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxvREFBbUQ7QUFFbkQsNENBQXVDO0FBQ3ZDLDhEQUE2RDtBQUM3RCxxQ0FBdUQ7QUFJdkQsdUZBQW9GO0FBQ3BGLG9EQUFvRTtBQXdDcEUsNEhBQTRIO0FBQzVILFNBQWdCLFdBQVcsQ0FBQyxTQUFtQixFQUFFLFNBQW1CO0lBQ2xFLElBQUksU0FBUyxDQUFDLFFBQVE7UUFBRSxPQUFPLElBQUksQ0FBQztJQUNwQyxJQUFJLFNBQVMsQ0FBQyxRQUFRO1FBQUUsT0FBTyxLQUFLLENBQUM7SUFDckMsT0FBTyxTQUFTLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQUpELGtDQUlDO0FBRUQsTUFBYSxjQUNYLFNBQVEsNEJBTVA7SUFPRDs7Ozs7T0FLRztJQUNILFlBQ0UsT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLGVBQW1DO1FBQ2pDLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsR0FBRztLQUNoQjtRQUVELEtBQUssQ0FBQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFuQm5ELGtFQUFrRTtRQUNsRSxrREFBa0Q7UUFDMUMsa0JBQWEsR0FBOEIsRUFBRSxDQUFDO0lBa0J0RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQVEsQ0FDbkIsYUFBZ0MsRUFDaEMsY0FBK0I7UUFFL0IsT0FBTyxNQUFNLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVNLFNBQVMsQ0FDZCxTQUFtQixFQUNuQixTQUFtQixFQUNuQixHQUFXLEVBQ1gsV0FBbUIsRUFDbkIs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/static-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/static-subgraph-provider.d.ts
new file mode 100644
index 0000000..45f7180
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/static-subgraph-provider.d.ts
@@ -0,0 +1,10 @@
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { ProviderConfig } from '../provider';
+import { IV4PoolProvider } from './pool-provider';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+export declare class StaticV4SubgraphProvider implements IV4SubgraphProvider {
+    private chainId;
+    private poolProvider;
+    constructor(chainId: ChainId, poolProvider: IV4PoolProvider);
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V4SubgraphPool[]>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/static-subgraph-provider.js
new file mode 100644
index 0000000..9530888
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/static-subgraph-provider.js
@@ -0,0 +1,74 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.StaticV4SubgraphProvider = void 0;
+const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
+const lodash_1 = __importDefault(require("lodash"));
+const util_1 = require("../../util");
+const caching_subgraph_provider_1 = require("../caching-subgraph-provider");
+const jsbi_1 = __importDefault(require("jsbi"));
+class StaticV4SubgraphProvider {
+    constructor(chainId, poolProvider) {
+        this.chainId = chainId;
+        this.poolProvider = poolProvider;
+    }
+    async getPools(tokenIn, tokenOut, providerConfig) {
+        util_1.log.info('In static subgraph provider for V4');
+        const bases = caching_subgraph_provider_1.BASES_TO_CHECK_TRADES_AGAINST[this.chainId];
+        const basePairs = lodash_1.default.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));
+        if (tokenIn && tokenOut) {
+            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));
+        }
+        const pairs = (0, lodash_1.default)(basePairs)
+            .filter((tokens) => Boolean(tokens[0] && tokens[1]))
+            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))
+            .flatMap(([tokenA, tokenB]) => {
+            // TODO: we will follow up with expanding the fee tiers and tick spacing from just hard-coding from v3 for now.
+            return [
+                [tokenA, tokenB, v3_sdk_1.FeeAmount.LOWEST, 1, v3_sdk_1.ADDRESS_ZERO],
+                [tokenA, tokenB, v3_sdk_1.FeeAmount.LOW, 10, v3_sdk_1.ADDRESS_ZERO],
+                [tokenA, tokenB, v3_sdk_1.FeeAmount.MEDIUM, 60, v3_sdk_1.ADDRESS_ZERO],
+                [tokenA, tokenB, v3_sdk_1.FeeAmount.HIGH, 200, v3_sdk_1.ADDRESS_ZERO],
+            ];
+        })
+            .value();
+        util_1.log.info(`V4 Static subgraph provider about to get ${pairs.length} pools on-chain`);
+        const poolAccessor = await this.poolProvider.getPools(pairs, providerConfig);
+        const pools = poolAccessor.getAllPools();
+        const poolAddressSet = new Set();
+        const subgraphPools = (0, lodash_1.default)(pools)
+            .map((pool) => {
+            const { token0, token1, fee, tickSpacing, hooks, liquidity } = pool;
+            const poolAddress = v4_sdk_1.Pool.getPoolId(token0, token1, fee, tickSpacing, hooks);
+            if (poolAddressSet.has(poolAddress)) {
+                return undefined;
+            }
+            poolAddressSet.add(poolAddress);
+            const liquidityNumber = jsbi_1.default.toNumber(liquidity);
+            return {
+                id: poolAddress,
+                feeTier: (0, util_1.unparseFeeAmount)(fee),
+                tickSpacing: tickSpacing.toString(),
+                hooks: hooks,
+                liquidity: liquidity.toString(),
+                token0: {
+                    id: token0.wrapped.address,
+                },
+                token1: {
+                    id: token1.wrapped.address,
+                },
+                // As a very rough proxy we just use liquidity for TVL.
+                tvlETH: liquidityNumber,
+                tvlUSD: liquidityNumber,
+            };
+        })
+            .compact()
+            .value();
+        return subgraphPools;
+    }
+}
+exports.StaticV4SubgraphProvider = StaticV4SubgraphProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92NC9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsNENBQTBEO0FBQzFELDRDQUF1QztBQUN2QyxvREFBdUI7QUFFdkIscUNBQW1EO0FBQ25ELDRFQUE2RTtBQUU3RSxnREFBd0I7QUFLeEIsTUFBYSx3QkFBd0I7SUFDbkMsWUFDVSxPQUFnQixFQUNoQixZQUE2QjtRQUQ3QixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtJQUNwQyxDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsT0FBZSxFQUNmLFFBQWdCLEVBQ2hCLGNBQStCO1FBRS9CLFVBQUcsQ0FBQyxJQUFJLENBQUMsb0NBQW9DLENBQUMsQ0FBQztRQUMvQyxNQUFNLEtBQUssR0FBRyx5REFBNkIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFMUQsTUFBTSxTQUFTLEdBQXFCLGdCQUFDLENBQUMsT0FBTyxDQUMzQyxLQUFLLEVBQ0wsQ0FBQyxJQUFJLEVBQW9CLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUN4RSxDQUFDO1FBRUYsSUFBSSxPQUFPLElBQUksUUFBUSxFQUFFO1lBQ3ZCLFNBQVMsQ0FBQyxJQUFJLENBQ1osQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLEVBQ25CLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBa0IsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDLEVBQ3ZELEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBa0IsRUFBRSxDQUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider-with-fallback.d.ts
new file mode 100644
index 0000000..db8e671
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider-with-fallback.d.ts
@@ -0,0 +1,5 @@
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+export declare class V4SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks<V4SubgraphPool> implements IV4SubgraphProvider {
+    constructor(fallbacks: IV4SubgraphProvider[]);
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider-with-fallback.js
new file mode 100644
index 0000000..ae66452
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider-with-fallback.js
@@ -0,0 +1,12 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.V4SubgraphProviderWithFallBacks = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const subgraph_provider_with_fallback_1 = require("../subgraph-provider-with-fallback");
+class V4SubgraphProviderWithFallBacks extends subgraph_provider_with_fallback_1.SubgraphProviderWithFallBacks {
+    constructor(fallbacks) {
+        super(fallbacks, router_sdk_1.Protocol.V4);
+    }
+}
+exports.V4SubgraphProviderWithFallBacks = V4SubgraphProviderWithFallBacks;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjQvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFDL0Msd0ZBQW1GO0FBR25GLE1BQWEsK0JBQ1gsU0FBUSwrREFBNkM7SUFHckQsWUFBWSxTQUFnQztRQUMxQyxLQUFLLENBQUMsU0FBUyxFQUFFLHFCQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGO0FBUEQsMEVBT0MifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider.d.ts
new file mode 100644
index 0000000..38dd11a
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider.d.ts
@@ -0,0 +1,50 @@
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { ProviderConfig } from '../provider';
+import { SubgraphProvider } from '../subgraph-provider';
+export interface V4SubgraphPool {
+    id: string;
+    feeTier: string;
+    tickSpacing: string;
+    hooks: string;
+    liquidity: string;
+    token0: {
+        id: string;
+    };
+    token1: {
+        id: string;
+    };
+    tvlETH: number;
+    tvlUSD: number;
+}
+export declare type V4RawSubgraphPool = {
+    id: string;
+    feeTier: string;
+    tickSpacing: string;
+    hooks: string;
+    liquidity: string;
+    token0: {
+        symbol: string;
+        id: string;
+    };
+    token1: {
+        symbol: string;
+        id: string;
+    };
+    totalValueLockedUSD: string;
+    totalValueLockedETH: string;
+    totalValueLockedUSDUntracked: string;
+};
+/**
+ * Provider for getting V4 pools from the Subgraph
+ *
+ * @export
+ * @interface IV4SubgraphProvider
+ */
+export interface IV4SubgraphProvider {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V4SubgraphPool[]>;
+}
+export declare class V4SubgraphProvider extends SubgraphProvider<V4RawSubgraphPool, V4SubgraphPool> implements IV4SubgraphProvider {
+    constructor(chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrlOverride?: string);
+    protected subgraphQuery(blockNumber?: number): string;
+    protected mapSubgraphPool(rawPool: V4RawSubgraphPool): V4SubgraphPool;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider.js
new file mode 100644
index 0000000..5145f99
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/subgraph-provider.js
@@ -0,0 +1,61 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.V4SubgraphProvider = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const sdk_core_1 = require("@uniswap/sdk-core");
+const subgraph_provider_1 = require("../subgraph-provider");
+const SUBGRAPH_URL_BY_CHAIN = {
+    [sdk_core_1.ChainId.SEPOLIA]: '',
+};
+class V4SubgraphProvider extends subgraph_provider_1.SubgraphProvider {
+    constructor(chainId, retries = 2, timeout = 30000, rollback = true, trackedEthThreshold = 0.01, untrackedUsdThreshold = Number.MAX_VALUE, subgraphUrlOverride) {
+        super(router_sdk_1.Protocol.V4, chainId, retries, timeout, rollback, trackedEthThreshold, untrackedUsdThreshold, subgraphUrlOverride !== null && subgraphUrlOverride !== void 0 ? subgraphUrlOverride : SUBGRAPH_URL_BY_CHAIN[chainId]);
+    }
+    subgraphQuery(blockNumber) {
+        return `
+    query getPools($pageSize: Int!, $id: String) {
+      pools(
+        first: $pageSize
+        ${blockNumber ? `block: { number: ${blockNumber} }` : ``}
+          where: { id_gt: $id }
+        ) {
+          id
+          token0 {
+            symbol
+            id
+          }
+          token1 {
+            symbol
+            id
+          }
+          feeTier
+          tickSpacing
+          hooks
+          liquidity
+          totalValueLockedUSD
+          totalValueLockedETH
+          totalValueLockedUSDUntracked
+        }
+      }
+   `;
+    }
+    mapSubgraphPool(rawPool) {
+        return {
+            id: rawPool.id,
+            feeTier: rawPool.feeTier,
+            tickSpacing: rawPool.tickSpacing,
+            hooks: rawPool.hooks,
+            liquidity: rawPool.liquidity,
+            token0: {
+                id: rawPool.token0.id,
+            },
+            token1: {
+                id: rawPool.token1.id,
+            },
+            tvlETH: parseFloat(rawPool.totalValueLockedETH),
+            tvlUSD: parseFloat(rawPool.totalValueLockedUSD),
+        };
+    }
+}
+exports.V4SubgraphProvider = V4SubgraphProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Y0L3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG9EQUErQztBQUMvQyxnREFBbUQ7QUFHbkQsNERBQXdEO0FBcUN4RCxNQUFNLHFCQUFxQixHQUFzQztJQUMvRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRTtDQUN0QixDQUFDO0FBZ0JGLE1BQWEsa0JBQ1gsU0FBUSxvQ0FBbUQ7SUFHM0QsWUFDRSxPQUFnQixFQUNoQixPQUFPLEdBQUcsQ0FBQyxFQUNYLE9BQU8sR0FBRyxLQUFLLEVBQ2YsUUFBUSxHQUFHLElBQUksRUFDZixtQkFBbUIsR0FBRyxJQUFJLEVBQzFCLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQ3hDLG1CQUE0QjtRQUU1QixLQUFLLENBQ0gscUJBQVEsQ0FBQyxFQUFFLEVBQ1gsT0FBTyxFQUNQLE9BQU8sRUFDUCxPQUFPLEVBQ1AsUUFBUSxFQUNSLG1CQUFtQixFQUNuQixxQkFBcUIsRUFDckIsbUJBQW1CLGFBQW5CLG1CQUFtQixjQUFuQixtQkFBbUIsR0FBSSxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsQ0FDdEQsQ0FBQztJQUNKLENBQUM7SUFFa0IsYUFBYSxDQUFDLFdBQW9CO1FBQ25ELE9BQU87Ozs7VUFJRCxXQUFXLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixXQUFXLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBcUI1RCxDQUFDO0lBQ0gsQ0FBQztJQUVrQixlQUFlLENBQ2hDLE9BQTBCO1FBRTFCLE9BQU87WUFDTCxFQUFFLEVBQUUsT0FBTyxDQUFDLEVBQUU7WUFDZCxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87WUFDeEIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxXQUFXO1lBQ2hDLEtBQUssRUFBRSxPQUFPLENBQUMsS0FBSztZQUNwQixTQUFTLEVBQUUsT0FBTyxDQUFDLFNBQVM7WUFDNUIsTUFBTSxFQUFFO2dCQUNOLEVBQUUsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7YUFDdEI7WUFDRCxNQUFNLEVBQUU7Z0JBQ04sRUFBRSxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTthQUN0QjtZQUNELE1BQU0sRUFBRSxVQUFVLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO1lBQy9DLE1BQU0sRUFBRSxVQUFVLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO1NBQ2hELENBQUM7SUFDSixDQUFDO0NBQ0Y7QUF6RUQsZ0RBeUVDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/uri-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/uri-subgraph-provider.d.ts
new file mode 100644
index 0000000..aa5347c
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/uri-subgraph-provider.d.ts
@@ -0,0 +1,4 @@
+import { URISubgraphProvider } from '../uri-subgraph-provider';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+export declare class V4URISubgraphProvider extends URISubgraphProvider<V4SubgraphPool> implements IV4SubgraphProvider {
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v4/uri-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/uri-subgraph-provider.js
new file mode 100644
index 0000000..39692b9
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v4/uri-subgraph-provider.js
@@ -0,0 +1,8 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.V4URISubgraphProvider = void 0;
+const uri_subgraph_provider_1 = require("../uri-subgraph-provider");
+class V4URISubgraphProvider extends uri_subgraph_provider_1.URISubgraphProvider {
+}
+exports.V4URISubgraphProvider = V4URISubgraphProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJpLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92NC91cmktc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0VBQStEO0FBRy9ELE1BQWEscUJBQ1gsU0FBUSwyQ0FBbUM7Q0FDVjtBQUZuQyxzREFFbUMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts
index fd25a6a..24e246b 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts
@@ -2,7 +2,7 @@ import { BaseProvider } from '@ethersproject/providers';
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, TradeType } from '@uniswap/sdk-core';
 import { Position } from '@uniswap/v3-sdk';
-import { CacheMode, IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, ITokenPropertiesProvider, IV2QuoteProvider, IV2SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
+import { CacheMode, IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, ITokenPropertiesProvider, IV2QuoteProvider, IV2SubgraphProvider, IV4SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
 import { ITokenListProvider } from '../../providers/caching-token-list-provider';
 import { IGasPriceProvider } from '../../providers/gas-price-provider';
 import { IPortionProvider } from '../../providers/portion-provider';
@@ -14,8 +14,12 @@ import { IV3PoolProvider } from '../../providers/v3/pool-provider';
 import { IV3SubgraphProvider } from '../../providers/v3/subgraph-provider';
 import { CurrencyAmount } from '../../util/amounts';
 import { IRouter, ISwapToRatio, SwapAndAddConfig, SwapAndAddOptions, SwapOptions, SwapRoute, SwapToRatioResponse } from '../router';
+import { UniversalRouterVersion } from '@uniswap/universal-router-sdk';
+import { IV4PoolProvider } from '../../providers/v4/pool-provider';
+import { MixedRouteWithValidQuote, V3RouteWithValidQuote, V4RouteWithValidQuote } from './entities/route-with-valid-quote';
 import { IOnChainGasModelFactory, IV2GasModelFactory } from './gas-models/gas-model';
 import { MixedQuoter, V2Quoter, V3Quoter } from './quoters';
+import { V4Quoter } from './quoters/v4-quoter';
 export declare type AlphaRouterParams = {
     /**
      * The chain id for this instance of the Alpha Router.
@@ -30,6 +34,15 @@ export declare type AlphaRouterParams = {
      * like pools, tokens, quotes in batch.
      */
     multicall2Provider?: UniswapMulticallProvider;
+    /**
+     * The provider for getting all pools that exist on V4 from the Subgraph. The pools
+     * from this provider are filtered during the algorithm to a set of candidate pools.
+     */
+    v4SubgraphProvider?: IV4SubgraphProvider;
+    /**
+     * The provider for getting data about V4 pools.
+     */
+    v4PoolProvider?: IV4PoolProvider;
     /**
      * The provider for getting all pools that exist on V3 from the Subgraph. The pools
      * from this provider are filtered during the algorithm to a set of candidate pools.
@@ -65,11 +78,16 @@ export declare type AlphaRouterParams = {
      * algorithm.
      */
     gasPriceProvider?: IGasPriceProvider;
+    /**
+     * A factory for generating a gas model that is used when estimating the gas used by
+     * V4 routes.
+     */
+    v4GasModelFactory?: IOnChainGasModelFactory<V4RouteWithValidQuote>;
     /**
      * A factory for generating a gas model that is used when estimating the gas used by
      * V3 routes.
      */
-    v3GasModelFactory?: IOnChainGasModelFactory;
+    v3GasModelFactory?: IOnChainGasModelFactory<V3RouteWithValidQuote>;
     /**
      * A factory for generating a gas model that is used when estimating the gas used by
      * V2 routes.
@@ -79,7 +97,7 @@ export declare type AlphaRouterParams = {
      * A factory for generating a gas model that is used when estimating the gas used by
      * V3 routes.
      */
-    mixedRouteGasModelFactory?: IOnChainGasModelFactory;
+    mixedRouteGasModelFactory?: IOnChainGasModelFactory<MixedRouteWithValidQuote>;
     /**
      * A token list that specifies Token that should be blocked from routing through.
      * Defaults to Uniswap's unsupported token list.
@@ -118,6 +136,14 @@ export declare type AlphaRouterParams = {
      * All the supported v2 chains configuration
      */
     v2Supported?: ChainId[];
+    /**
+     * All the supported v4 chains configuration
+     */
+    v4Supported?: ChainId[];
+    /**
+     * The version of the universal router to use.
+     */
+    universalRouterVersion?: UniversalRouterVersion;
 };
 export declare class MapWithLowerCaseKey<V> extends Map<string, V> {
     set(key: string, value: V): this;
@@ -196,6 +222,10 @@ export declare type AlphaRouterConfig = {
      * will be used.
      */
     protocols?: Protocol[];
+    /**
+     * The protocols-version pools to be excluded from the mixed routes.
+     */
+    excludedProtocolsFromMixed?: Protocol[];
     /**
      * Config for selecting which pools to consider routing via on V2.
      */
@@ -204,6 +234,10 @@ export declare type AlphaRouterConfig = {
      * Config for selecting which pools to consider routing via on V3.
      */
     v3PoolSelection: ProtocolPoolSelection;
+    /**
+     * Config for selecting which pools to consider routing via on V4.
+     */
+    v4PoolSelection: ProtocolPoolSelection;
     /**
      * For each route, the maximum number of hops to consider. More hops will increase latency of the algorithm.
      */
@@ -274,11 +308,17 @@ export declare type AlphaRouterConfig = {
      * This requires a suitable Native/GasToken pool to exist on V3. If one does not exist this field will return null.
      */
     gasToken?: string;
+    /**
+     * The version of the universal router to use.
+     */
+    universalRouterVersion?: UniversalRouterVersion;
 };
 export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToRatio<AlphaRouterConfig, SwapAndAddConfig> {
     protected chainId: ChainId;
     protected provider: BaseProvider;
     protected multicall2Provider: UniswapMulticallProvider;
+    protected v4SubgraphProvider: IV4SubgraphProvider;
+    protected v4PoolProvider: IV4PoolProvider;
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
@@ -288,21 +328,25 @@ export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToR
     protected tokenProvider: ITokenProvider;
     protected gasPriceProvider: IGasPriceProvider;
     protected swapRouterProvider: ISwapRouterProvider;
-    protected v3GasModelFactory: IOnChainGasModelFactory;
+    protected v4GasModelFactory: IOnChainGasModelFactory<V4RouteWithValidQuote>;
+    protected v3GasModelFactory: IOnChainGasModelFactory<V3RouteWithValidQuote>;
     protected v2GasModelFactory: IV2GasModelFactory;
-    protected mixedRouteGasModelFactory: IOnChainGasModelFactory;
+    protected mixedRouteGasModelFactory: IOnChainGasModelFactory<MixedRouteWithValidQuote>;
     protected tokenValidatorProvider?: ITokenValidatorProvider;
     protected blockedTokenListProvider?: ITokenListProvider;
     protected l2GasDataProvider?: IL2GasDataProvider<ArbitrumGasData>;
     protected simulator?: Simulator;
     protected v2Quoter: V2Quoter;
     protected v3Quoter: V3Quoter;
+    protected v4Quoter: V4Quoter;
     protected mixedQuoter: MixedQuoter;
     protected routeCachingProvider?: IRouteCachingProvider;
     protected tokenPropertiesProvider: ITokenPropertiesProvider;
     protected portionProvider: IPortionProvider;
     protected v2Supported?: ChainId[];
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, }: AlphaRouterParams);
+    protected v4Supported?: ChainId[];
+    protected universalRouterVersion?: UniversalRouterVersion;
+    constructor({ chainId, provider, multicall2Provider, v4SubgraphProvider, v4PoolProvider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v4GasModelFactory, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, v4Supported, universalRouterVersion, }: AlphaRouterParams);
     routeToRatio(token0Balance: CurrencyAmount, token1Balance: CurrencyAmount, position: Position, swapAndAddConfig: SwapAndAddConfig, swapAndAddOptions?: SwapAndAddOptions, routingConfig?: Partial<AlphaRouterConfig>): Promise<SwapToRatioResponse>;
     /**
      * @inheritdoc IRouter
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
index 3b50067..2e98ba3 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
@@ -34,15 +34,20 @@ const metric_1 = require("../../util/metric");
 const onchainQuoteProviderConfigs_1 = require("../../util/onchainQuoteProviderConfigs");
 const unsupported_tokens_1 = require("../../util/unsupported-tokens");
 const router_1 = require("../router");
+const universal_router_sdk_1 = require("@uniswap/universal-router-sdk");
+const caching_pool_provider_1 = require("../../providers/v4/caching-pool-provider");
+const pool_provider_3 = require("../../providers/v4/pool-provider");
 const config_1 = require("./config");
 const best_swap_route_1 = require("./functions/best-swap-route");
 const calculate_ratio_amount_in_1 = require("./functions/calculate-ratio-amount-in");
 const get_candidate_pools_1 = require("./functions/get-candidate-pools");
+const gas_costs_1 = require("./gas-models/gas-costs");
 const mixed_route_heuristic_gas_model_1 = require("./gas-models/mixedRoute/mixed-route-heuristic-gas-model");
 const v2_heuristic_gas_model_1 = require("./gas-models/v2/v2-heuristic-gas-model");
-const gas_costs_1 = require("./gas-models/v3/gas-costs");
 const v3_heuristic_gas_model_1 = require("./gas-models/v3/v3-heuristic-gas-model");
+const v4_heuristic_gas_model_1 = require("./gas-models/v4/v4-heuristic-gas-model");
 const quoters_1 = require("./quoters");
+const v4_quoter_1 = require("./quoters/v4-quoter");
 class MapWithLowerCaseKey extends Map {
     set(key, value) {
         return super.set(key.toLowerCase(), value);
@@ -57,11 +62,13 @@ class LowerCaseStringArray extends Array {
 }
 exports.LowerCaseStringArray = LowerCaseStringArray;
 class AlphaRouter {
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, }) {
+    constructor({ chainId, provider, multicall2Provider, v4SubgraphProvider, v4PoolProvider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v4GasModelFactory, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, v4Supported, universalRouterVersion, }) {
         this.chainId = chainId;
         this.provider = provider;
         this.multicall2Provider =
             multicall2Provider !== null && multicall2Provider !== void 0 ? multicall2Provider : new providers_2.UniswapMulticallProvider(chainId, provider, 375000);
+        this.v4PoolProvider =
+            v4PoolProvider !== null && v4PoolProvider !== void 0 ? v4PoolProvider : new caching_pool_provider_1.CachingV4PoolProvider(this.chainId, new pool_provider_3.V4PoolProvider((0, chains_1.ID_TO_CHAIN_ID)(chainId), this.multicall2Provider), new providers_2.NodeJSCache(new node_cache_1.default({ stdTTL: 360, useClones: false })));
         this.v3PoolProvider =
             v3PoolProvider !== null && v3PoolProvider !== void 0 ? v3PoolProvider : new providers_2.CachingV3PoolProvider(this.chainId, new pool_provider_2.V3PoolProvider((0, chains_1.ID_TO_CHAIN_ID)(chainId), this.multicall2Provider), new providers_2.NodeJSCache(new node_cache_1.default({ stdTTL: 360, useClones: false })));
         this.simulator = simulator;
@@ -103,6 +110,15 @@ class AlphaRouter {
                 case sdk_core_1.ChainId.BLAST:
                 case sdk_core_1.ChainId.ZORA:
                 case sdk_core_1.ChainId.BASE_GOERLI:
+                case sdk_core_1.ChainId.BOB:
+                case sdk_core_1.ChainId.CYBER:
+                case sdk_core_1.ChainId.SHAPE:
+                case sdk_core_1.ChainId.INK:
+                case sdk_core_1.ChainId.REDSTONE:
+                case sdk_core_1.ChainId.REDSTONE_GARNET:
+                case sdk_core_1.ChainId.ANIME_TESTNET:
+                case sdk_core_1.ChainId.MODE:
+                case sdk_core_1.ChainId.ANIME:
                     this.onChainQuoteProvider = new providers_2.OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
                         retries: 2,
                         minTimeout: 100,
@@ -129,6 +145,9 @@ class AlphaRouter {
                     });
                     break;
                 case sdk_core_1.ChainId.ZKSYNC:
+                case sdk_core_1.ChainId.ABSTRACT_TESTNET:
+                case sdk_core_1.ChainId.ABSTRACT_MAINNET:
+                case sdk_core_1.ChainId.ZERO:
                     this.onChainQuoteProvider = new providers_2.OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
                         retries: 2,
                         minTimeout: 100,
@@ -246,6 +265,15 @@ class AlphaRouter {
                 new providers_2.StaticV3SubgraphProvider(chainId, this.v3PoolProvider),
             ]);
         }
+        if (v4SubgraphProvider) {
+            this.v4SubgraphProvider = v4SubgraphProvider;
+        }
+        else {
+            this.v4SubgraphProvider = new providers_2.V4SubgraphProviderWithFallBacks([
+                new providers_2.CachingV4SubgraphProvider(chainId, new providers_2.URISubgraphProvider(chainId, `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v4/${chainName}.json`, undefined, 0), new providers_2.NodeJSCache(new node_cache_1.default({ stdTTL: 300, useClones: false }))),
+                new providers_2.StaticV4SubgraphProvider(chainId, this.v4PoolProvider),
+            ]);
+        }
         let gasPriceProviderInstance;
         if (providers_1.JsonRpcProvider.isProvider(this.provider)) {
             gasPriceProviderInstance = new providers_2.OnChainGasPriceProvider(chainId, new providers_2.EIP1559GasPriceProvider(this.provider), new providers_2.LegacyGasPriceProvider(this.provider));
@@ -255,6 +283,8 @@ class AlphaRouter {
         }
         this.gasPriceProvider =
             gasPriceProvider !== null && gasPriceProvider !== void 0 ? gasPriceProvider : new providers_2.CachingGasStationProvider(chainId, gasPriceProviderInstance, new providers_2.NodeJSCache(new node_cache_1.default({ stdTTL: 7, useClones: false })));
+        this.v4GasModelFactory =
+            v4GasModelFactory !== null && v4GasModelFactory !== void 0 ? v4GasModelFactory : new v4_heuristic_gas_model_1.V4HeuristicGasModelFactory(this.provider);
         this.v3GasModelFactory =
             v3GasModelFactory !== null && v3GasModelFactory !== void 0 ? v3GasModelFactory : new v3_heuristic_gas_model_1.V3HeuristicGasModelFactory(this.provider);
         this.v2GasModelFactory =
@@ -272,8 +302,12 @@ class AlphaRouter {
         // Quoters are an abstraction encapsulating the business logic of fetching routes and quotes.
         this.v2Quoter = new quoters_1.V2Quoter(this.v2SubgraphProvider, this.v2PoolProvider, this.v2QuoteProvider, this.v2GasModelFactory, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider, this.l2GasDataProvider);
         this.v3Quoter = new quoters_1.V3Quoter(this.v3SubgraphProvider, this.v3PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
-        this.mixedQuoter = new quoters_1.MixedQuoter(this.v3SubgraphProvider, this.v3PoolProvider, this.v2SubgraphProvider, this.v2PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
+        this.v4Quoter = new v4_quoter_1.V4Quoter(this.v4SubgraphProvider, this.v4PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
+        this.mixedQuoter = new quoters_1.MixedQuoter(this.v4SubgraphProvider, this.v4PoolProvider, this.v3SubgraphProvider, this.v3PoolProvider, this.v2SubgraphProvider, this.v2PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
         this.v2Supported = v2Supported !== null && v2Supported !== void 0 ? v2Supported : chains_1.V2_SUPPORTED;
+        this.v4Supported = v4Supported !== null && v4Supported !== void 0 ? v4Supported : util_1.V4_SUPPORTED;
+        this.universalRouterVersion =
+            universalRouterVersion !== null && universalRouterVersion !== void 0 ? universalRouterVersion : universal_router_sdk_1.UniversalRouterVersion.V1_2;
     }
     async routeToRatio(token0Balance, token1Balance, position, swapAndAddConfig, swapAndAddOptions, routingConfig = (0, config_1.DEFAULT_ROUTING_CONFIG_BY_CHAIN)(this.chainId)) {
         if (token1Balance.currency.wrapped.sortsBefore(token0Balance.currency.wrapped)) {
@@ -399,16 +433,35 @@ class AlphaRouter {
      * @inheritdoc IRouter
      */
     async route(amount, quoteCurrency, tradeType, swapConfig, partialRoutingConfig = {}) {
-        var _a, _c, _d, _e, _f, _g;
+        var _a, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
         const originalAmount = amount;
         const { currencyIn, currencyOut } = this.determineCurrencyInOutFromTradeType(tradeType, amount, quoteCurrency);
         const tokenIn = currencyIn.wrapped;
         const tokenOut = currencyOut.wrapped;
-        const tokenOutProperties = await this.tokenPropertiesProvider.getTokensProperties([tokenOut], partialRoutingConfig);
-        const buyFeeBps = (_c = (_a = tokenOutProperties[tokenOut.address.toLowerCase()]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.buyFeeBps;
-        const tokenOutHasFot = buyFeeBps && buyFeeBps.gt(0);
+        const tokenOutProperties = await this.tokenPropertiesProvider.getTokensProperties([currencyOut], partialRoutingConfig);
+        const feeTakenOnTransfer = (_c = (_a = tokenOutProperties[(0, util_1.getAddressLowerCase)(currencyOut)]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.feeTakenOnTransfer;
+        const externalTransferFailed = (_e = (_d = tokenOutProperties[(0, util_1.getAddressLowerCase)(currencyOut)]) === null || _d === void 0 ? void 0 : _d.tokenFeeResult) === null || _e === void 0 ? void 0 : _e.externalTransferFailed;
+        // We want to log the fee on transfer output tokens that we are taking fee or not
+        // Ideally the trade size (normalized in USD) would be ideal to log here, but we don't have spot price of output tokens here.
+        // We have to make sure token out is FOT with either buy/sell fee bps > 0
+        if (((_h = (_g = (_f = tokenOutProperties[(0, util_1.getAddressLowerCase)(currencyOut)]) === null || _f === void 0 ? void 0 : _f.tokenFeeResult) === null || _g === void 0 ? void 0 : _g.buyFeeBps) === null || _h === void 0 ? void 0 : _h.gt(0)) ||
+            ((_l = (_k = (_j = tokenOutProperties[(0, util_1.getAddressLowerCase)(currencyOut)]) === null || _j === void 0 ? void 0 : _j.tokenFeeResult) === null || _k === void 0 ? void 0 : _k.sellFeeBps) === null || _l === void 0 ? void 0 : _l.gt(0))) {
+            if (feeTakenOnTransfer || externalTransferFailed) {
+                // also to be extra safe, in case of FOT with feeTakenOnTransfer or externalTransferFailed,
+                // we nullify the fee and flat fee to avoid any potential issues.
+                // although neither web nor wallet should use the calldata returned from routing/SOR
+                if ((swapConfig === null || swapConfig === void 0 ? void 0 : swapConfig.type) === router_1.SwapType.UNIVERSAL_ROUTER) {
+                    swapConfig.fee = undefined;
+                    swapConfig.flatFee = undefined;
+                }
+                metric_1.metric.putMetric('TokenOutFeeOnTransferNotTakingFee', 1, metric_1.MetricLoggerUnit.Count);
+            }
+            else {
+                metric_1.metric.putMetric('TokenOutFeeOnTransferTakingFee', 1, metric_1.MetricLoggerUnit.Count);
+            }
+        }
         if (tradeType === sdk_core_1.TradeType.EXACT_OUTPUT) {
-            const portionAmount = this.portionProvider.getPortionAmount(amount, tradeType, tokenOutHasFot, swapConfig);
+            const portionAmount = this.portionProvider.getPortionAmount(amount, tradeType, feeTakenOnTransfer, externalTransferFailed, swapConfig);
             if (portionAmount && portionAmount.greaterThan(router_sdk_1.ZERO)) {
                 // In case of exact out swap, before we route, we need to make sure that the
                 // token out amount accounts for flat portion, and token in amount after the best swap route contains the token in equivalent of portion.
@@ -420,14 +473,14 @@ class AlphaRouter {
             }
         }
         metric_1.metric.setProperty('chainId', this.chainId);
-        metric_1.metric.setProperty('pair', `${tokenIn.symbol}/${tokenOut.symbol}`);
-        metric_1.metric.setProperty('tokenIn', tokenIn.address);
-        metric_1.metric.setProperty('tokenOut', tokenOut.address);
+        metric_1.metric.setProperty('pair', `${currencyIn.symbol}/${currencyOut.symbol}`);
+        metric_1.metric.setProperty('tokenIn', (0, util_1.getAddress)(currencyIn));
+        metric_1.metric.setProperty('tokenOut', (0, util_1.getAddress)(currencyOut));
         metric_1.metric.setProperty('tradeType', tradeType === sdk_core_1.TradeType.EXACT_INPUT ? 'ExactIn' : 'ExactOut');
         metric_1.metric.putMetric(`QuoteRequestedForChain${this.chainId}`, 1, metric_1.MetricLoggerUnit.Count);
         // Get a block number to specify in all our calls. Ensures data we fetch from chain is
         // from the same block.
-        const blockNumber = (_d = partialRoutingConfig.blockNumber) !== null && _d !== void 0 ? _d : this.getBlockNumberPromise();
+        const blockNumber = (_m = partialRoutingConfig.blockNumber) !== null && _m !== void 0 ? _m : this.getBlockNumberPromise();
         const routingConfig = lodash_1.default.merge({
             // These settings could be changed by the partialRoutingConfig
             useCachedRoutes: true,
@@ -443,16 +496,21 @@ class AlphaRouter {
         const gasToken = routingConfig.gasToken
             ? (await this.tokenProvider.getTokens([routingConfig.gasToken])).getTokenByAddress(routingConfig.gasToken)
             : undefined;
-        const providerConfig = Object.assign(Object.assign({}, routingConfig), { blockNumber, additionalGasOverhead: (0, gas_costs_1.NATIVE_OVERHEAD)(this.chainId, amount.currency, quoteCurrency), gasToken });
-        const { v2GasModel: v2GasModel, v3GasModel: v3GasModel, mixedRouteGasModel: mixedRouteGasModel, } = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, providerConfig);
+        const providerConfig = Object.assign(Object.assign({}, routingConfig), { blockNumber, additionalGasOverhead: (0, gas_costs_1.NATIVE_OVERHEAD)(this.chainId, amount.currency, quoteCurrency), gasToken,
+            externalTransferFailed,
+            feeTakenOnTransfer });
+        const { v2GasModel: v2GasModel, v3GasModel: v3GasModel, v4GasModel: v4GasModel, mixedRouteGasModel: mixedRouteGasModel, } = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, providerConfig);
         // Create a Set to sanitize the protocols input, a Set of undefined becomes an empty set,
         // Then create an Array from the values of that Set.
         const protocols = Array.from(new Set(routingConfig.protocols).values());
-        const cacheMode = (_e = routingConfig.overwriteCacheMode) !== null && _e !== void 0 ? _e : (await ((_f = this.routeCachingProvider) === null || _f === void 0 ? void 0 : _f.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols)));
+        const cacheMode = (_o = routingConfig.overwriteCacheMode) !== null && _o !== void 0 ? _o : (await ((_p = this.routeCachingProvider) === null || _p === void 0 ? void 0 : _p.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols)));
         // Fetch CachedRoutes
         let cachedRoutes;
         if (routingConfig.useCachedRoutes && cacheMode !== providers_2.CacheMode.Darkmode) {
-            cachedRoutes = await ((_g = this.routeCachingProvider) === null || _g === void 0 ? void 0 : _g.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber, routingConfig.optimisticCachedRoutes));
+            cachedRoutes = await ((_q = this.routeCachingProvider) === null || _q === void 0 ? void 0 : _q.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber, routingConfig.optimisticCachedRoutes));
+        }
+        if ((0, util_1.shouldWipeoutCachedRoutes)(cachedRoutes, routingConfig)) {
+            cachedRoutes = undefined;
         }
         metric_1.metric.putMetric(routingConfig.useCachedRoutes
             ? 'GetQuoteUsingCachedRoutes'
@@ -488,11 +546,11 @@ class AlphaRouter {
         }
         let swapRouteFromCachePromise = Promise.resolve(null);
         if (cachedRoutes) {
-            swapRouteFromCachePromise = this.getSwapRouteFromCache(cachedRoutes, await blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig);
+            swapRouteFromCachePromise = this.getSwapRouteFromCache(tokenIn, tokenOut, cachedRoutes, await blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig);
         }
         let swapRouteFromChainPromise = Promise.resolve(null);
         if (!cachedRoutes || cacheMode !== providers_2.CacheMode.Livemode) {
-            swapRouteFromChainPromise = this.getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig);
+            swapRouteFromChainPromise = this.getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig);
         }
         const [swapRouteFromCache, swapRouteFromChain] = await Promise.all([
             swapRouteFromCachePromise,
@@ -518,28 +576,43 @@ class AlphaRouter {
             // Only log if quoteDiff is different from 0, or if quoteGasAdjustedDiff and gasUsedDiff are both different from 0
             if (!quoteDiff.equalTo(0) ||
                 !(quoteGasAdjustedDiff.equalTo(0) || gasUsedDiff.eq(0))) {
-                // Calculates the percentage of the difference with respect to the quoteFromChain (not from cache)
-                const misquotePercent = quoteGasAdjustedDiff
-                    .divide(swapRouteFromChain.quoteGasAdjusted)
-                    .multiply(100);
-                metric_1.metric.putMetric(`TapcompareCachedRoute_quoteGasAdjustedDiffPercent`, Number(misquotePercent.toExact()), metric_1.MetricLoggerUnit.Percent);
-                log_1.log.warn({
-                    quoteFromChain: swapRouteFromChain.quote.toExact(),
-                    quoteFromCache: swapRouteFromCache.quote.toExact(),
-                    quoteDiff: quoteDiff.toExact(),
-                    quoteGasAdjustedFromChain: swapRouteFromChain.quoteGasAdjusted.toExact(),
-                    quoteGasAdjustedFromCache: swapRouteFromCache.quoteGasAdjusted.toExact(),
-                    quoteGasAdjustedDiff: quoteGasAdjustedDiff.toExact(),
-                    gasUsedFromChain: swapRouteFromChain.estimatedGasUsed.toString(),
-                    gasUsedFromCache: swapRouteFromCache.estimatedGasUsed.toString(),
-                    gasUsedDiff: gasUsedDiff.toString(),
-                    routesFromChain: swapRouteFromChain.routes.toString(),
-                    routesFromCache: swapRouteFromCache.routes.toString(),
-                    amount: amount.toExact(),
-                    originalAmount: cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.originalAmount,
-                    pair: this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType),
-                    blockNumber,
-                }, `Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);
+                try {
+                    // Calculates the percentage of the difference with respect to the quoteFromChain (not from cache)
+                    const misquotePercent = quoteGasAdjustedDiff
+                        .divide(swapRouteFromChain.quoteGasAdjusted)
+                        .multiply(100);
+                    metric_1.metric.putMetric(`TapcompareCachedRoute_quoteGasAdjustedDiffPercent`, Number(misquotePercent.toExact()), metric_1.MetricLoggerUnit.Percent);
+                    log_1.log.warn({
+                        quoteFromChain: swapRouteFromChain.quote.toExact(),
+                        quoteFromCache: swapRouteFromCache.quote.toExact(),
+                        quoteDiff: quoteDiff.toExact(),
+                        quoteGasAdjustedFromChain: swapRouteFromChain.quoteGasAdjusted.toExact(),
+                        quoteGasAdjustedFromCache: swapRouteFromCache.quoteGasAdjusted.toExact(),
+                        quoteGasAdjustedDiff: quoteGasAdjustedDiff.toExact(),
+                        gasUsedFromChain: swapRouteFromChain.estimatedGasUsed.toString(),
+                        gasUsedFromCache: swapRouteFromCache.estimatedGasUsed.toString(),
+                        gasUsedDiff: gasUsedDiff.toString(),
+                        routesFromChain: swapRouteFromChain.routes.toString(),
+                        routesFromCache: swapRouteFromCache.routes.toString(),
+                        amount: amount.toExact(),
+                        originalAmount: cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.originalAmount,
+                        pair: this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType),
+                        blockNumber,
+                    }, `Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);
+                }
+                catch (error) {
+                    // This is in response to the 'division by zero' error
+                    // during https://uniswapteam.slack.com/archives/C059TGEC57W/p1723997015399579
+                    if (error instanceof RangeError &&
+                        error.message.includes('Division by zero')) {
+                        log_1.log.error({
+                            quoteGasAdjustedDiff: quoteGasAdjustedDiff.toExact(),
+                            swapRouteFromChainQuoteGasAdjusted: swapRouteFromChain.quoteGasAdjusted.toExact(),
+                        }, 'Error calculating misquote percent');
+                        metric_1.metric.putMetric(`TapcompareCachedRoute_quoteGasAdjustedDiffPercent_divzero`, 1, metric_1.MetricLoggerUnit.Count);
+                    }
+                    // Log but don't throw here - this is only for logging.
+                }
             }
         }
         if (!swapRouteRaw) {
@@ -551,8 +624,7 @@ class AlphaRouter {
             cacheMode !== providers_2.CacheMode.Darkmode &&
             swapRouteFromChain) {
             // Generate the object to be cached
-            const routesToCache = providers_2.CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes, this.chainId, tokenIn, tokenOut, protocols.sort(), // sort it for consistency in the order of the protocols.
-            await blockNumber, tradeType, amount.toExact());
+            const routesToCache = providers_2.CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes, this.chainId, tokenIn, tokenOut, protocols.sort(), await blockNumber, tradeType, amount.toExact());
             if (routesToCache) {
                 // Attempt to insert the entry in cache. This is fire and forget promise.
                 // The catch method will prevent any exception from blocking the normal code execution.
@@ -586,7 +658,7 @@ class AlphaRouter {
         const tokenOutAmount = tradeType === sdk_core_1.TradeType.EXACT_OUTPUT
             ? originalAmount // we need to pass in originalAmount instead of amount, because amount already added portionAmount in case of exact out swap
             : quote;
-        const portionAmount = this.portionProvider.getPortionAmount(tokenOutAmount, tradeType, tokenOutHasFot, swapConfig);
+        const portionAmount = this.portionProvider.getPortionAmount(tokenOutAmount, tradeType, feeTakenOnTransfer, externalTransferFailed, swapConfig);
         const portionQuoteAmount = this.portionProvider.getPortionQuoteAmount(tradeType, quote, amount, // we need to pass in amount instead of originalAmount here, because amount here needs to add the portion for exact out
         portionAmount);
         // we need to correct quote and quote gas adjusted for exact output when portion is part of the exact out swap
@@ -628,7 +700,12 @@ class AlphaRouter {
         }
         return swapRoute;
     }
-    async getSwapRouteFromCache(cachedRoutes, blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig) {
+    async getSwapRouteFromCache(tokenIn, tokenOut, cachedRoutes, blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig) {
+        var _a, _c, _d, _e, _f, _g;
+        const tokenPairProperties = await this.tokenPropertiesProvider.getTokensProperties([tokenIn, tokenOut], providerConfig);
+        const sellTokenIsFot = (_d = (_c = (_a = tokenPairProperties[tokenIn.address.toLowerCase()]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.sellFeeBps) === null || _d === void 0 ? void 0 : _d.gt(0);
+        const buyTokenIsFot = (_g = (_f = (_e = tokenPairProperties[tokenOut.address.toLowerCase()]) === null || _e === void 0 ? void 0 : _e.tokenFeeResult) === null || _f === void 0 ? void 0 : _f.buyFeeBps) === null || _g === void 0 ? void 0 : _g.gt(0);
+        const fotInDirectSwap = sellTokenIsFot || buyTokenIsFot;
         log_1.log.info({
             protocols: cachedRoutes.protocolsCovered,
             tradeType: cachedRoutes.tradeType,
@@ -636,6 +713,7 @@ class AlphaRouter {
             quoteBlockNumber: blockNumber,
         }, 'Routing across CachedRoute');
         const quotePromises = [];
+        const v4Routes = cachedRoutes.routes.filter((route) => route.protocol === router_sdk_1.Protocol.V4);
         const v3Routes = cachedRoutes.routes.filter((route) => route.protocol === router_sdk_1.Protocol.V3);
         const v2Routes = cachedRoutes.routes.filter((route) => route.protocol === router_sdk_1.Protocol.V2);
         const mixedRoutes = cachedRoutes.routes.filter((route) => route.protocol === router_sdk_1.Protocol.MIXED);
@@ -652,77 +730,119 @@ class AlphaRouter {
             // In this case this means that there's no route, so we return null
             return Promise.resolve(null);
         }
-        if (v3Routes.length > 0) {
-            const v3RoutesFromCache = v3Routes.map((cachedRoute) => cachedRoute.route);
-            metric_1.metric.putMetric('SwapRouteFromCache_V3_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+        if (v4Routes.length > 0) {
+            const v4RoutesFromCache = v4Routes.map((cachedRoute) => cachedRoute.route);
+            metric_1.metric.putMetric('SwapRouteFromCache_V4_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
             const beforeGetQuotes = Date.now();
-            quotePromises.push(this.v3Quoter
-                .getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel)
+            quotePromises.push(this.v4Quoter
+                .getQuotes(v4RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v4GasModel)
                 .then((result) => {
-                metric_1.metric.putMetric(`SwapRouteFromCache_V3_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                metric_1.metric.putMetric(`SwapRouteFromCache_V4_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
                 return result;
             }));
         }
+        if (!fotInDirectSwap) {
+            if (v3Routes.length > 0) {
+                const v3RoutesFromCache = v3Routes.map((cachedRoute) => cachedRoute.route);
+                metric_1.metric.putMetric('SwapRouteFromCache_V3_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+                const beforeGetQuotes = Date.now();
+                quotePromises.push(this.v3Quoter
+                    .getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel)
+                    .then((result) => {
+                    metric_1.metric.putMetric(`SwapRouteFromCache_V3_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                    return result;
+                }));
+            }
+        }
         if (v2Routes.length > 0) {
             const v2RoutesFromCache = v2Routes.map((cachedRoute) => cachedRoute.route);
             metric_1.metric.putMetric('SwapRouteFromCache_V2_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
             const beforeGetQuotes = Date.now();
             quotePromises.push(this.v2Quoter
-                .refreshRoutesThenGetQuotes(cachedRoutes.tokenIn, cachedRoutes.tokenOut, v2RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei)
+                .refreshRoutesThenGetQuotes(cachedRoutes.currencyIn.wrapped, cachedRoutes.currencyOut.wrapped, v2RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei)
                 .then((result) => {
                 metric_1.metric.putMetric(`SwapRouteFromCache_V2_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
                 return result;
             }));
         }
-        if (mixedRoutes.length > 0) {
-            const mixedRoutesFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.route);
-            metric_1.metric.putMetric('SwapRouteFromCache_Mixed_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
-            const beforeGetQuotes = Date.now();
-            quotePromises.push(this.mixedQuoter
-                .getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel)
-                .then((result) => {
-                metric_1.metric.putMetric(`SwapRouteFromCache_Mixed_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
-                return result;
-            }));
+        if (!fotInDirectSwap) {
+            if (mixedRoutes.length > 0) {
+                const mixedRoutesFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.route);
+                metric_1.metric.putMetric('SwapRouteFromCache_Mixed_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+                const beforeGetQuotes = Date.now();
+                quotePromises.push(this.mixedQuoter
+                    .getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel)
+                    .then((result) => {
+                    metric_1.metric.putMetric(`SwapRouteFromCache_Mixed_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                    return result;
+                }));
+            }
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = lodash_1.default.flatMap(getQuotesResults, (quoteResult) => quoteResult.routesWithValidQuotes);
-        return (0, best_swap_route_1.getBestSwapRoute)(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, swapConfig);
+        return (0, best_swap_route_1.getBestSwapRoute)(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig);
     }
-    async getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig) {
-        var _a;
+    async getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig) {
+        var _a, _c, _d, _e, _f, _g, _h, _j;
+        const tokenPairProperties = await this.tokenPropertiesProvider.getTokensProperties([tokenIn, tokenOut], providerConfig);
+        const sellTokenIsFot = (_d = (_c = (_a = tokenPairProperties[tokenIn.address.toLowerCase()]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.sellFeeBps) === null || _d === void 0 ? void 0 : _d.gt(0);
+        const buyTokenIsFot = (_g = (_f = (_e = tokenPairProperties[tokenOut.address.toLowerCase()]) === null || _e === void 0 ? void 0 : _e.tokenFeeResult) === null || _f === void 0 ? void 0 : _f.buyFeeBps) === null || _g === void 0 ? void 0 : _g.gt(0);
+        const fotInDirectSwap = sellTokenIsFot || buyTokenIsFot;
         // Generate our distribution of amounts, i.e. fractions of the input amount.
         // We will get quotes for fractions of the input amount for different routes, then
         // combine to generate split routes.
         const [percents, amounts] = this.getAmountDistribution(amount, routingConfig);
         const noProtocolsSpecified = protocols.length === 0;
+        const v4ProtocolSpecified = protocols.includes(router_sdk_1.Protocol.V4);
         const v3ProtocolSpecified = protocols.includes(router_sdk_1.Protocol.V3);
         const v2ProtocolSpecified = protocols.includes(router_sdk_1.Protocol.V2);
-        const v2SupportedInChain = (_a = this.v2Supported) === null || _a === void 0 ? void 0 : _a.includes(this.chainId);
+        const v2SupportedInChain = (_h = this.v2Supported) === null || _h === void 0 ? void 0 : _h.includes(this.chainId);
+        const v4SupportedInChain = (_j = this.v4Supported) === null || _j === void 0 ? void 0 : _j.includes(this.chainId);
         const shouldQueryMixedProtocol = protocols.includes(router_sdk_1.Protocol.MIXED) ||
-            (noProtocolsSpecified && v2SupportedInChain);
-        const mixedProtocolAllowed = [sdk_core_1.ChainId.MAINNET, sdk_core_1.ChainId.GOERLI].includes(this.chainId) &&
-            tradeType === sdk_core_1.TradeType.EXACT_INPUT;
+            (noProtocolsSpecified && v2SupportedInChain && v4SupportedInChain);
+        const mixedProtocolAllowed = [sdk_core_1.ChainId.MAINNET, sdk_core_1.ChainId.SEPOLIA, sdk_core_1.ChainId.GOERLI].includes(this.chainId) && tradeType === sdk_core_1.TradeType.EXACT_INPUT;
         const beforeGetCandidates = Date.now();
-        let v3CandidatePoolsPromise = Promise.resolve(undefined);
-        if (v3ProtocolSpecified ||
-            noProtocolsSpecified ||
+        let v4CandidatePoolsPromise = Promise.resolve(undefined);
+        // we are explicitly requiring people to specify v4 for now
+        if ((v4SupportedInChain && (v4ProtocolSpecified || noProtocolsSpecified)) ||
             (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
-            v3CandidatePoolsPromise = (0, get_candidate_pools_1.getV3CandidatePools)({
+            // if (v4ProtocolSpecified || noProtocolsSpecified) {
+            v4CandidatePoolsPromise = (0, get_candidate_pools_1.getV4CandidatePools)({
                 tokenIn,
                 tokenOut,
                 tokenProvider: this.tokenProvider,
                 blockedTokenListProvider: this.blockedTokenListProvider,
-                poolProvider: this.v3PoolProvider,
+                poolProvider: this.v4PoolProvider,
                 routeType: tradeType,
-                subgraphProvider: this.v3SubgraphProvider,
+                subgraphProvider: this.v4SubgraphProvider,
                 routingConfig,
                 chainId: this.chainId,
             }).then((candidatePools) => {
-                metric_1.metric.putMetric('GetV3CandidatePools', Date.now() - beforeGetCandidates, metric_1.MetricLoggerUnit.Milliseconds);
+                metric_1.metric.putMetric('GetV4CandidatePools', Date.now() - beforeGetCandidates, metric_1.MetricLoggerUnit.Milliseconds);
                 return candidatePools;
             });
         }
+        let v3CandidatePoolsPromise = Promise.resolve(undefined);
+        if (!fotInDirectSwap) {
+            if (v3ProtocolSpecified ||
+                noProtocolsSpecified ||
+                (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
+                v3CandidatePoolsPromise = (0, get_candidate_pools_1.getV3CandidatePools)({
+                    tokenIn,
+                    tokenOut,
+                    tokenProvider: this.tokenProvider,
+                    blockedTokenListProvider: this.blockedTokenListProvider,
+                    poolProvider: this.v3PoolProvider,
+                    routeType: tradeType,
+                    subgraphProvider: this.v3SubgraphProvider,
+                    routingConfig,
+                    chainId: this.chainId,
+                }).then((candidatePools) => {
+                    metric_1.metric.putMetric('GetV3CandidatePools', Date.now() - beforeGetCandidates, metric_1.MetricLoggerUnit.Milliseconds);
+                    return candidatePools;
+                });
+            }
+        }
         let v2CandidatePoolsPromise = Promise.resolve(undefined);
         if ((v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) ||
             (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
@@ -745,18 +865,32 @@ class AlphaRouter {
             });
         }
         const quotePromises = [];
-        // Maybe Quote V3 - if V3 is specified, or no protocol is specified
-        if (v3ProtocolSpecified || noProtocolsSpecified) {
-            log_1.log.info({ protocols, tradeType }, 'Routing across V3');
-            metric_1.metric.putMetric('SwapRouteFromChain_V3_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+        // for v4, for now we explicitly require people to specify
+        if (v4SupportedInChain && v4ProtocolSpecified) {
+            log_1.log.info({ protocols, tradeType }, 'Routing across V4');
+            metric_1.metric.putMetric('SwapRouteFromChain_V4_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
             const beforeGetRoutesThenQuotes = Date.now();
-            quotePromises.push(v3CandidatePoolsPromise.then((v3CandidatePools) => this.v3Quoter
-                .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v3CandidatePools, tradeType, routingConfig, v3GasModel)
+            quotePromises.push(v4CandidatePoolsPromise.then((v4CandidatePools) => this.v4Quoter
+                .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v4CandidatePools, tradeType, routingConfig, v3GasModel)
                 .then((result) => {
-                metric_1.metric.putMetric(`SwapRouteFromChain_V3_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                metric_1.metric.putMetric(`SwapRouteFromChain_V4_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
                 return result;
             })));
         }
+        if (!fotInDirectSwap) {
+            // Maybe Quote V3 - if V3 is specified, or no protocol is specified
+            if (v3ProtocolSpecified || noProtocolsSpecified) {
+                log_1.log.info({ protocols, tradeType }, 'Routing across V3');
+                metric_1.metric.putMetric('SwapRouteFromChain_V3_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+                const beforeGetRoutesThenQuotes = Date.now();
+                quotePromises.push(v3CandidatePoolsPromise.then((v3CandidatePools) => this.v3Quoter
+                    .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v3CandidatePools, tradeType, routingConfig, v3GasModel)
+                    .then((result) => {
+                    metric_1.metric.putMetric(`SwapRouteFromChain_V3_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                    return result;
+                })));
+            }
+        }
         // Maybe Quote V2 - if V2 is specified, or no protocol is specified AND v2 is supported in this chain
         if (v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) {
             log_1.log.info({ protocols, tradeType }, 'Routing across V2');
@@ -769,19 +903,42 @@ class AlphaRouter {
                 return result;
             })));
         }
-        // Maybe Quote mixed routes
-        // if MixedProtocol is specified or no protocol is specified and v2 is supported AND tradeType is ExactIn
-        // AND is Mainnet or Gorli
-        if (shouldQueryMixedProtocol && mixedProtocolAllowed) {
-            log_1.log.info({ protocols, tradeType }, 'Routing across MixedRoutes');
-            metric_1.metric.putMetric('SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
-            const beforeGetRoutesThenQuotes = Date.now();
-            quotePromises.push(Promise.all([v3CandidatePoolsPromise, v2CandidatePoolsPromise]).then(([v3CandidatePools, v2CandidatePools]) => this.mixedQuoter
-                .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, [v3CandidatePools, v2CandidatePools], tradeType, routingConfig, mixedRouteGasModel)
-                .then((result) => {
-                metric_1.metric.putMetric(`SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
-                return result;
-            })));
+        if (!fotInDirectSwap) {
+            // Maybe Quote mixed routes
+            // if MixedProtocol is specified or no protocol is specified and v2 is supported AND tradeType is ExactIn
+            // AND is Mainnet or Gorli
+            if (shouldQueryMixedProtocol && mixedProtocolAllowed) {
+                log_1.log.info({ protocols, tradeType }, 'Routing across MixedRoutes');
+                metric_1.metric.putMetric('SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+                const beforeGetRoutesThenQuotes = Date.now();
+                quotePromises.push(Promise.all([
+                    v4CandidatePoolsPromise,
+                    v3CandidatePoolsPromise,
+                    v2CandidatePoolsPromise,
+                ]).then(async ([v4CandidatePools, v3CandidatePools, v2CandidatePools]) => {
+                    const crossLiquidityPools = await (0, get_candidate_pools_1.getMixedCrossLiquidityCandidatePools)({
+                        tokenIn,
+                        tokenOut,
+                        blockNumber: routingConfig.blockNumber,
+                        v2SubgraphProvider: this.v2SubgraphProvider,
+                        v3SubgraphProvider: this.v3SubgraphProvider,
+                        v2Candidates: v2CandidatePools,
+                        v3Candidates: v3CandidatePools,
+                        v4Candidates: v4CandidatePools,
+                    });
+                    return this.mixedQuoter
+                        .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, [
+                        v4CandidatePools,
+                        v3CandidatePools,
+                        v2CandidatePools,
+                        crossLiquidityPools,
+                    ], tradeType, routingConfig, mixedRouteGasModel)
+                        .then((result) => {
+                        metric_1.metric.putMetric(`SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                        return result;
+                    });
+                }));
+            }
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = [];
@@ -797,7 +954,7 @@ class AlphaRouter {
             return null;
         }
         // Given all the quotes for all the amounts for all the routes, find the best combination.
-        const bestSwapRoute = await (0, best_swap_route_1.getBestSwapRoute)(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, swapConfig);
+        const bestSwapRoute = await (0, best_swap_route_1.getBestSwapRoute)(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig);
         if (bestSwapRoute) {
             this.emitPoolSelectionMetrics(bestSwapRoute, allCandidatePools);
         }
@@ -861,14 +1018,16 @@ class AlphaRouter {
             nativeAndSpecifiedGasTokenV3Pool: nativeAndSpecifiedGasTokenV3Pool,
         };
         const v2GasModelPromise = ((_a = this.v2Supported) === null || _a === void 0 ? void 0 : _a.includes(this.chainId))
-            ? this.v2GasModelFactory.buildGasModel({
+            ? this.v2GasModelFactory
+                .buildGasModel({
                 chainId: this.chainId,
                 gasPriceWei,
                 poolProvider: this.v2PoolProvider,
                 token: quoteToken,
                 l2GasDataProvider: this.l2GasDataProvider,
                 providerConfig: providerConfig,
-            }).catch(_ => undefined) // If v2 model throws uncaught exception, we return undefined v2 gas model, so there's a chance v3 route can go through
+            })
+                .catch((_) => undefined) // If v2 model throws uncaught exception, we return undefined v2 gas model, so there's a chance v3 route can go through
             : Promise.resolve(undefined);
         const v3GasModelPromise = this.v3GasModelFactory.buildGasModel({
             chainId: this.chainId,
@@ -880,6 +1039,16 @@ class AlphaRouter {
             l2GasDataProvider: this.l2GasDataProvider,
             providerConfig: providerConfig,
         });
+        const v4GasModelPromise = this.v4GasModelFactory.buildGasModel({
+            chainId: this.chainId,
+            gasPriceWei,
+            pools,
+            amountToken,
+            quoteToken,
+            v2poolProvider: this.v2PoolProvider,
+            l2GasDataProvider: this.l2GasDataProvider,
+            providerConfig: providerConfig,
+        });
         const mixedRouteGasModelPromise = this.mixedRouteGasModelFactory.buildGasModel({
             chainId: this.chainId,
             gasPriceWei,
@@ -889,15 +1058,17 @@ class AlphaRouter {
             v2poolProvider: this.v2PoolProvider,
             providerConfig: providerConfig,
         });
-        const [v2GasModel, v3GasModel, mixedRouteGasModel] = await Promise.all([
+        const [v2GasModel, v3GasModel, V4GasModel, mixedRouteGasModel] = await Promise.all([
             v2GasModelPromise,
             v3GasModelPromise,
+            v4GasModelPromise,
             mixedRouteGasModelPromise,
         ]);
         metric_1.metric.putMetric('GasModelCreation', Date.now() - beforeGasModel, metric_1.MetricLoggerUnit.Milliseconds);
         return {
             v2GasModel: v2GasModel,
             v3GasModel: v3GasModel,
+            v4GasModel: V4GasModel,
             mixedRouteGasModel: mixedRouteGasModel,
         };
     }
@@ -944,7 +1115,7 @@ class AlphaRouter {
         const { routes: routeAmounts } = swapRouteRaw;
         (0, lodash_1.default)(routeAmounts)
             .flatMap((routeAmount) => {
-            const { poolAddresses } = routeAmount;
+            const { poolIdentifiers: poolAddresses } = routeAmount;
             return poolAddresses;
         })
             .forEach((address) => {
@@ -1076,4 +1247,4 @@ class AlphaRouter {
     }
 }
 exports.AlphaRouter = AlphaRouter;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js
index d73c028..be5fb17 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js
@@ -29,6 +29,14 @@ const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
                     topNWithEachBaseToken: 3,
                     topNWithBaseToken: 3,
                 },
+                v4PoolSelection: {
+                    topN: 2,
+                    topNDirectSwaps: 2,
+                    topNTokenInOut: 2,
+                    topNSecondHop: 1,
+                    topNWithEachBaseToken: 3,
+                    topNWithBaseToken: 3,
+                },
                 maxSwapsPerPath: 3,
                 minSplits: 1,
                 maxSplits: 7,
@@ -60,6 +68,14 @@ const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
                     topNWithEachBaseToken: 3,
                     topNWithBaseToken: 2,
                 },
+                v4PoolSelection: {
+                    topN: 2,
+                    topNDirectSwaps: 2,
+                    topNTokenInOut: 2,
+                    topNSecondHop: 1,
+                    topNWithEachBaseToken: 3,
+                    topNWithBaseToken: 2,
+                },
                 maxSwapsPerPath: 2,
                 minSplits: 1,
                 maxSplits: 7,
@@ -86,6 +102,14 @@ const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
                     topNWithEachBaseToken: 3,
                     topNWithBaseToken: 5,
                 },
+                v4PoolSelection: {
+                    topN: 2,
+                    topNDirectSwaps: 2,
+                    topNTokenInOut: 3,
+                    topNSecondHop: 1,
+                    topNWithEachBaseToken: 3,
+                    topNWithBaseToken: 5,
+                },
                 maxSwapsPerPath: 3,
                 minSplits: 1,
                 maxSplits: 7,
@@ -96,4 +120,4 @@ const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
 };
 exports.DEFAULT_ROUTING_CONFIG_BY_CHAIN = DEFAULT_ROUTING_CONFIG_BY_CHAIN;
 exports.ETH_GAS_STATION_API_URL = 'https://ethgasstation.info/api/ethgasAPI.json';
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxnREFBNEM7QUFFNUMsaURBQXlFO0FBRWxFLE1BQU0sK0JBQStCLEdBQUcsQ0FDN0MsT0FBZ0IsRUFDRyxFQUFFO0lBQ3JCLFFBQVEsT0FBTyxFQUFFO1FBQ2YsV0FBVztRQUNYLEtBQUssa0JBQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxrQkFBTyxDQUFDLGVBQWUsQ0FBQztRQUM3QixLQUFLLGtCQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDOUIsS0FBSyxrQkFBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLGtCQUFPLENBQUMsV0FBVyxDQUFDO1FBQ3pCLEtBQUssa0JBQU8sQ0FBQyxLQUFLO1lBQ2hCLE9BQU87Z0JBQ0wsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLGVBQWUsRUFBRSxDQUFDO29CQUNsQixjQUFjLEVBQUUsQ0FBQztvQkFDakIsYUFBYSxFQUFFLENBQUM7b0JBQ2hCLHFCQUFxQixFQUFFLENBQUM7b0JBQ3hCLGlCQUFpQixFQUFFLENBQUM7aUJBQ3JCO2dCQUNELGVBQWUsRUFBRTtvQkFDZixJQUFJLEVBQUUsQ0FBQztvQkFDUCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLGFBQWEsRUFBRSxDQUFDO29CQUNoQixxQkFBcUIsRUFBRSxDQUFDO29CQUN4QixpQkFBaUIsRUFBRSxDQUFDO2lCQUNyQjtnQkFDRCxlQUFlLEVBQUUsQ0FBQztnQkFDbEIsU0FBUyxFQUFFLENBQUM7Z0JBQ1osU0FBUyxFQUFFLENBQUM7Z0JBQ1osbUJBQW1CLEVBQUUsRUFBRTtnQkFDdkIsa0JBQWtCLEVBQUUsS0FBSzthQUMxQixDQUFDO1FBQ0oseUdBQXlHO1FBQ3pHLHVHQUF1RztRQUN2RyxnRUFBZ0U7UUFDaEUsS0FBSyxrQkFBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLGtCQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBQztRQUM5QixLQUFLLGtCQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssa0JBQU8sQ0FBQyxjQUFjO1lBQ3pCLE9BQU87Z0JBQ0wsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLGVBQWUsRUFBRSxDQUFDO29CQUNsQixjQUFjLEVBQUUsQ0FBQztvQkFDakIsYUFBYSxFQUFFLENBQUM7b0JBQ2hCLHFCQUFxQixFQUFFLENBQUM7b0JBQ3hCLGlCQUFpQixFQUFFLENBQUM7aUJBQ3JCO2dCQUNELGVBQWUsRUFBRTtvQkFDZixJQUFJLEVBQUUsQ0FBQztvQkFDUCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLGFBQWEsRUFBRSxDQUFDO29CQUNoQixxQkFBcUIsRUFBRSxDQUFDO29CQUN4QixpQkFBaUIsRUFBRSxDQUFDO2lCQUNyQjtnQkFDRCxlQUFlLEVBQUUsQ0FBQztnQkFDbEIsU0FBUyxFQUFFLENBQUM7Z0JBQ1osU0FBUyxFQUFFLENBQUM7Z0JBQ1osbUJBQW1CLEVBQUUsRUFBRTtnQkFDdkIsa0JBQWtCLEVBQUUsS0FBSzthQUMxQixDQUFDO1FBQ0o7WUFDRSxPQUFPO2dCQUNMLGVBQWUsRUFBRTtvQkFDZixJQUFJLEVBQUUsQ0FBQztvQkFDUCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLGFBQWEsRUFBRSxDQUFDO29CQUNoQix5QkFBeUIsRUFBRSxJQUFJLG1DQUFvQixDQUNqRCw0Q0FBNEMsQ0FBQyxrQkFBa0I7cUJBQ2hFO29CQUNELHFCQUFxQixFQUFFLENBQUM7b0JBQ3hCLGlCQUFpQixFQUFFLENBQUM7aUJBQ3JCO2dCQUNELGVBQWUsRUFBRTtvQkFDZixJQUFJLEVBQUUsQ0FBQztvQkFDUCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLGFBQWEsRUFBRSxDQUFDO29CQUNoQixxQkFBcUIsRUFBRSxDQUFDO29CQUN4QixpQkFBaUIsRUFBRSxDQUFDO2lCQUNyQjtnQkFDRCxlQUFlLEVBQUUsQ0FBQztnQkFDbEIsU0FBUyxFQUFFLENBQUM7Z0JBQ1osU0FBUyxFQUFFLENBQUM7Z0JBQ1osbUJBQW1CLEVBQUUsQ0FBQztnQkFDdEIsa0JBQWtCLEVBQUUsS0FBSzthQUMxQixDQUFDO0tBQ0w7QUFDSCxDQUFDLENBQUM7QUE3RlcsUUFBQSwrQkFBK0IsbUNBNkYxQztBQUNXLFFBQUEsdUJBQXVCLEdBQ2xDLCtDQUErQyxDQUFDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxnREFBNEM7QUFFNUMsaURBQXlFO0FBRWxFLE1BQU0sK0JBQStCLEdBQUcsQ0FDN0MsT0FBZ0IsRUFDRyxFQUFFO0lBQ3JCLFFBQVEsT0FBTyxFQUFFO1FBQ2YsV0FBVztRQUNYLEtBQUssa0JBQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxrQkFBTyxDQUFDLGVBQWUsQ0FBQztRQUM3QixLQUFLLGtCQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDOUIsS0FBSyxrQkFBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLGtCQUFPLENBQUMsV0FBVyxDQUFDO1FBQ3pCLEtBQUssa0JBQU8sQ0FBQyxLQUFLO1lBQ2hCLE9BQU87Z0JBQ0wsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLGVBQWUsRUFBRSxDQUFDO29CQUNsQixjQUFjLEVBQUUsQ0FBQztvQkFDakIsYUFBYSxFQUFFLENBQUM7b0JBQ2hCLHFCQUFxQixFQUFFLENBQUM7b0JBQ3hCLGlCQUFpQixFQUFFLENBQUM7aUJBQ3JCO2dCQUNELGVBQWUsRUFBRTtvQkFDZixJQUFJLEVBQUUsQ0FBQztvQkFDUCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLGFBQWEsRUFBRSxDQUFDO29CQUNoQixxQkFBcUIsRUFBRSxDQUFDO29CQUN4QixpQkFBaUIsRUFBRSxDQUFDO2lCQUNyQjtnQkFDRCxlQUFlLEVBQUU7b0JBQ2YsSUFBSSxFQUFFLENBQUM7b0JBQ1AsZUFBZSxFQUFFLENBQUM7b0JBQ2xCLGNBQWMsRUFBRSxDQUFDO29CQUNqQixhQUFhLEVBQUUsQ0FBQztvQkFDaEIscUJBQXFCLEVBQUUsQ0FBQztvQkFDeEIsaUJBQWlCLEVBQUUsQ0FBQztp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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.d.ts
index 436dd4d..ede8ef4 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.d.ts
@@ -1,10 +1,11 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { Protocol } from '@uniswap/router-sdk';
-import { Token, TradeType } from '@uniswap/sdk-core';
+import { Currency, Token, TradeType } from '@uniswap/sdk-core';
+import { IV4PoolProvider } from '../../../providers';
 import { IV2PoolProvider } from '../../../providers/v2/pool-provider';
 import { IV3PoolProvider } from '../../../providers/v3/pool-provider';
 import { CurrencyAmount } from '../../../util/amounts';
-import { MixedRoute, V2Route, V3Route } from '../../router';
+import { MixedRoute, SupportedRoutes, V2Route, V3Route, V4Route } from '../../router';
 import { IGasModel } from '../gas-models/gas-model';
 /**
  * Represents a route, a quote for swapping some amount on it, and other
@@ -14,7 +15,7 @@ import { IGasModel } from '../gas-models/gas-model';
  * @interface IRouteWithValidQuote
  * @template Route
  */
-export interface IRouteWithValidQuote<Route extends V3Route | V2Route | MixedRoute> {
+export interface IRouteWithValidQuote<Route extends SupportedRoutes> {
     amount: CurrencyAmount;
     percent: number;
     quoteAdjustedForGas: CurrencyAmount;
@@ -25,8 +26,8 @@ export interface IRouteWithValidQuote<Route extends V3Route | V2Route | MixedRou
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
-    tokenPath: Token[];
+    poolIdentifiers: string[];
+    tokenPath: Currency[];
 }
 export declare type IV2RouteWithValidQuote = {
     protocol: Protocol.V2;
@@ -34,10 +35,13 @@ export declare type IV2RouteWithValidQuote = {
 export declare type IV3RouteWithValidQuote = {
     protocol: Protocol.V3;
 } & IRouteWithValidQuote<V3Route>;
+export declare type IV4RouteWithValidQuote = {
+    protocol: Protocol.V4;
+} & IRouteWithValidQuote<V4Route>;
 export declare type IMixedRouteWithValidQuote = {
     protocol: Protocol.MIXED;
 } & IRouteWithValidQuote<MixedRoute>;
-export declare type RouteWithValidQuote = V2RouteWithValidQuote | V3RouteWithValidQuote | MixedRouteWithValidQuote;
+export declare type RouteWithValidQuote = V2RouteWithValidQuote | V3RouteWithValidQuote | V4RouteWithValidQuote | MixedRouteWithValidQuote;
 export declare type V2RouteWithValidQuoteParams = {
     amount: CurrencyAmount;
     rawQuote: BigNumber;
@@ -71,7 +75,7 @@ export declare class V2RouteWithValidQuote implements IV2RouteWithValidQuote {
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
+    poolIdentifiers: string[];
     tokenPath: Token[];
     toString(): string;
     constructor({ amount, rawQuote, percent, route, gasModel, quoteToken, tradeType, v2PoolProvider, }: V2RouteWithValidQuoteParams);
@@ -115,11 +119,47 @@ export declare class V3RouteWithValidQuote implements IV3RouteWithValidQuote {
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
+    poolIdentifiers: string[];
     tokenPath: Token[];
     toString(): string;
     constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, gasModel, quoteToken, tradeType, v3PoolProvider, }: V3RouteWithValidQuoteParams);
 }
+export declare type V4RouteWithValidQuoteParams = {
+    amount: CurrencyAmount;
+    rawQuote: BigNumber;
+    sqrtPriceX96AfterList: BigNumber[];
+    initializedTicksCrossedList: number[];
+    quoterGasEstimate: BigNumber;
+    percent: number;
+    route: V4Route;
+    quoteToken: Token;
+    gasModel: IGasModel<V4RouteWithValidQuote>;
+    tradeType: TradeType;
+    v4PoolProvider: IV4PoolProvider;
+};
+export declare class V4RouteWithValidQuote implements IV4RouteWithValidQuote {
+    readonly protocol = Protocol.V4;
+    amount: CurrencyAmount;
+    rawQuote: BigNumber;
+    quote: CurrencyAmount;
+    quoteAdjustedForGas: CurrencyAmount;
+    sqrtPriceX96AfterList: BigNumber[];
+    initializedTicksCrossedList: number[];
+    quoterGasEstimate: BigNumber;
+    percent: number;
+    route: V4Route;
+    quoteToken: Token;
+    gasModel: IGasModel<V4RouteWithValidQuote>;
+    gasEstimate: BigNumber;
+    gasCostInToken: CurrencyAmount;
+    gasCostInUSD: CurrencyAmount;
+    gasCostInGasToken?: CurrencyAmount;
+    tradeType: TradeType;
+    poolIdentifiers: string[];
+    tokenPath: Currency[];
+    toString(): string;
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, gasModel, quoteToken, tradeType, v4PoolProvider, }: V4RouteWithValidQuoteParams);
+}
 export declare type MixedRouteWithValidQuoteParams = {
     amount: CurrencyAmount;
     rawQuote: BigNumber;
@@ -131,6 +171,7 @@ export declare type MixedRouteWithValidQuoteParams = {
     mixedRouteGasModel: IGasModel<MixedRouteWithValidQuote>;
     quoteToken: Token;
     tradeType: TradeType;
+    v4PoolProvider: IV4PoolProvider;
     v3PoolProvider: IV3PoolProvider;
     v2PoolProvider: IV2PoolProvider;
 };
@@ -160,8 +201,8 @@ export declare class MixedRouteWithValidQuote implements IMixedRouteWithValidQuo
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
-    tokenPath: Token[];
+    poolIdentifiers: string[];
+    tokenPath: Currency[];
     toString(): string;
-    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v3PoolProvider, v2PoolProvider, }: MixedRouteWithValidQuoteParams);
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v4PoolProvider, v3PoolProvider, v2PoolProvider, }: MixedRouteWithValidQuoteParams);
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.js
index dfe19a5..6398259 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/entities/route-with-valid-quote.js
@@ -3,11 +3,13 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.MixedRouteWithValidQuote = exports.V3RouteWithValidQuote = exports.V2RouteWithValidQuote = void 0;
+exports.MixedRouteWithValidQuote = exports.V4RouteWithValidQuote = exports.V3RouteWithValidQuote = exports.V2RouteWithValidQuote = void 0;
 const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
 const lodash_1 = __importDefault(require("lodash"));
+const v2_sdk_1 = require("@uniswap/v2-sdk");
 const amounts_1 = require("../../../util/amounts");
 const routes_1 = require("../../../util/routes");
 /**
@@ -43,7 +45,7 @@ class V2RouteWithValidQuote {
             const quoteGasAdjusted = this.quote.add(gasCostInToken);
             this.quoteAdjustedForGas = quoteGasAdjusted;
         }
-        this.poolAddresses = lodash_1.default.map(route.pairs, (p) => v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress);
+        this.poolIdentifiers = lodash_1.default.map(route.pairs, (p) => v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress);
         this.tokenPath = this.route.path;
     }
     toString() {
@@ -87,7 +89,7 @@ class V3RouteWithValidQuote {
             const quoteGasAdjusted = this.quote.add(gasCostInToken);
             this.quoteAdjustedForGas = quoteGasAdjusted;
         }
-        this.poolAddresses = lodash_1.default.map(route.pools, (p) => v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress);
+        this.poolIdentifiers = lodash_1.default.map(route.pools, (p) => v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress);
         this.tokenPath = this.route.tokenPath;
     }
     toString() {
@@ -95,6 +97,42 @@ class V3RouteWithValidQuote {
     }
 }
 exports.V3RouteWithValidQuote = V3RouteWithValidQuote;
+class V4RouteWithValidQuote {
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, gasModel, quoteToken, tradeType, v4PoolProvider, }) {
+        this.protocol = router_sdk_1.Protocol.V4;
+        this.amount = amount;
+        this.rawQuote = rawQuote;
+        this.sqrtPriceX96AfterList = sqrtPriceX96AfterList;
+        this.initializedTicksCrossedList = initializedTicksCrossedList;
+        this.quoterGasEstimate = quoterGasEstimate;
+        this.quote = amounts_1.CurrencyAmount.fromRawAmount(quoteToken, rawQuote.toString());
+        this.percent = percent;
+        this.route = route;
+        this.gasModel = gasModel;
+        this.quoteToken = quoteToken;
+        this.tradeType = tradeType;
+        const { gasEstimate, gasCostInToken, gasCostInUSD, gasCostInGasToken } = this.gasModel.estimateGasCost(this);
+        this.gasCostInToken = gasCostInToken;
+        this.gasCostInUSD = gasCostInUSD;
+        this.gasEstimate = gasEstimate;
+        this.gasCostInGasToken = gasCostInGasToken;
+        // If its exact out, we need to request *more* of the input token to account for the gas.
+        if (this.tradeType == sdk_core_1.TradeType.EXACT_INPUT) {
+            const quoteGasAdjusted = this.quote.subtract(gasCostInToken);
+            this.quoteAdjustedForGas = quoteGasAdjusted;
+        }
+        else {
+            const quoteGasAdjusted = this.quote.add(gasCostInToken);
+            this.quoteAdjustedForGas = quoteGasAdjusted;
+        }
+        this.poolIdentifiers = lodash_1.default.map(route.pools, (p) => v4PoolProvider.getPoolId(p.token0, p.token1, p.fee, p.tickSpacing, p.hooks).poolId);
+        this.tokenPath = this.route.currencyPath;
+    }
+    toString() {
+        return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${(0, routes_1.routeToString)(this.route)}`;
+    }
+}
+exports.V4RouteWithValidQuote = V4RouteWithValidQuote;
 /**
  * Represents a quote for swapping on a Mixed Route. Contains all information
  * such as the route used, the amount specified by the user, the type of quote
@@ -104,7 +142,7 @@ exports.V3RouteWithValidQuote = V3RouteWithValidQuote;
  * @class MixedRouteWithValidQuote
  */
 class MixedRouteWithValidQuote {
-    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v3PoolProvider, v2PoolProvider, }) {
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v4PoolProvider, v3PoolProvider, v2PoolProvider, }) {
         this.protocol = router_sdk_1.Protocol.MIXED;
         this.amount = amount;
         this.rawQuote = rawQuote;
@@ -131,10 +169,20 @@ class MixedRouteWithValidQuote {
             const quoteGasAdjusted = this.quote.add(gasCostInToken);
             this.quoteAdjustedForGas = quoteGasAdjusted;
         }
-        this.poolAddresses = lodash_1.default.map(route.pools, (p) => {
-            return p instanceof v3_sdk_1.Pool
-                ? v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress
-                : v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress;
+        this.poolIdentifiers = lodash_1.default.map(route.pools, (p) => {
+            if (p instanceof v4_sdk_1.Pool) {
+                return v4PoolProvider.getPoolId(p.token0, p.token1, p.fee, p.tickSpacing, p.hooks).poolId;
+            }
+            else if (p instanceof v3_sdk_1.Pool) {
+                return v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee)
+                    .poolAddress;
+            }
+            else if (p instanceof v2_sdk_1.Pair) {
+                return v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress;
+            }
+            else {
+                throw new Error(`Unknown pool type ${JSON.stringify(p)}`);
+            }
         });
         this.tokenPath = this.route.path;
     }
@@ -143,4 +191,4 @@ class MixedRouteWithValidQuote {
     }
 }
 exports.MixedRouteWithValidQuote = MixedRouteWithValidQuote;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtd2l0aC12YWxpZC1xdW90ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9lbnRpdGllcy9yb3V0ZS13aXRoLXZhbGlkLXF1b3RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLG9EQUErQztBQUMvQyxnREFBcUQ7QUFDckQsNENBQXVDO0FBQ3ZDLG9EQUF1QjtBQUl2QixtREFBdUQ7QUFDdkQsaURBQXFEO0FBMkRyRDs7Ozs7OztHQU9HO0FBQ0gsTUFBYSxxQkFBcUI7SUEyQmhDLFlBQVksRUFDVixNQUFNLEVBQ04sUUFBUSxFQUNSLE9BQU8sRUFDUCxLQUFLLEVBQ0wsUUFBUSxFQUNSLFVBQVUsRUFDVixTQUFTLEVBQ1QsY0FBYyxHQUNjO1FBbkNkLGFBQVEsR0FBRyxxQkFBUSxDQUFDLEVBQUUsQ0FBQztRQW9DckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyx3QkFBYyxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFFM0IsTUFBTSxFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLEdBQ3BFLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXRDLElBQUksQ0FBQyxjQUFjLEdB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.d.ts
index 99bfd96..3bbba0b 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.d.ts
@@ -5,7 +5,8 @@ import { CurrencyAmount } from '../../../util/amounts';
 import { SwapOptions } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { IGasModel } from '../gas-models';
-import { RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote } from './../entities/route-with-valid-quote';
+import { ProviderConfig } from '../../../providers/provider';
+import { RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote, V4RouteWithValidQuote } from './../entities/route-with-valid-quote';
 export declare type BestSwapRoute = {
     quote: CurrencyAmount;
     quoteGasAdjusted: CurrencyAmount;
@@ -15,7 +16,7 @@ export declare type BestSwapRoute = {
     estimatedGasUsedGasToken?: CurrencyAmount;
     routes: RouteWithValidQuote[];
 };
-export declare function getBestSwapRoute(amount: CurrencyAmount, percents: number[], routesWithValidQuotes: RouteWithValidQuote[], routeType: TradeType, chainId: ChainId, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, swapConfig?: SwapOptions): Promise<BestSwapRoute | null>;
+export declare function getBestSwapRoute(amount: CurrencyAmount, percents: number[], routesWithValidQuotes: RouteWithValidQuote[], routeType: TradeType, chainId: ChainId, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, v4GasModel?: IGasModel<V4RouteWithValidQuote>, swapConfig?: SwapOptions, providerConfig?: ProviderConfig): Promise<BestSwapRoute | null>;
 export declare function getBestSwapRouteBy(routeType: TradeType, percentToQuotes: {
     [percent: number]: RouteWithValidQuote[];
-}, percents: number[], chainId: ChainId, by: (routeQuote: RouteWithValidQuote) => CurrencyAmount, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, swapConfig?: SwapOptions): Promise<BestSwapRoute | undefined>;
+}, percents: number[], chainId: ChainId, by: (routeQuote: RouteWithValidQuote) => CurrencyAmount, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, v4GasModel?: IGasModel<V4RouteWithValidQuote>, swapConfig?: SwapOptions, providerConfig?: ProviderConfig): Promise<BestSwapRoute | undefined>;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.js
index 35c16cf..12805d5 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/best-swap-route.js
@@ -17,7 +17,7 @@ const log_1 = require("../../../util/log");
 const metric_1 = require("../../../util/metric");
 const routes_1 = require("../../../util/routes");
 const gas_models_1 = require("../gas-models");
-async function getBestSwapRoute(amount, percents, routesWithValidQuotes, routeType, chainId, routingConfig, portionProvider, v2GasModel, v3GasModel, swapConfig) {
+async function getBestSwapRoute(amount, percents, routesWithValidQuotes, routeType, chainId, routingConfig, portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig) {
     const now = Date.now();
     const { forceMixedRoutes } = routingConfig;
     /// Like with forceCrossProtocol, we apply that logic here when determining the bestSwapRoute
@@ -43,7 +43,7 @@ async function getBestSwapRoute(amount, percents, routesWithValidQuotes, routeTy
     }
     metric_1.metric.putMetric('BuildRouteWithValidQuoteObjects', Date.now() - now, metric_1.MetricLoggerUnit.Milliseconds);
     // Given all the valid quotes for each percentage find the optimal route.
-    const swapRoute = await getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, (rq) => rq.quoteAdjustedForGas, routingConfig, portionProvider, v2GasModel, v3GasModel, swapConfig);
+    const swapRoute = await getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, (rq) => rq.quoteAdjustedForGas, routingConfig, portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig);
     // It is possible we were unable to find any valid route given the quotes.
     if (!swapRoute) {
         return null;
@@ -75,7 +75,7 @@ async function getBestSwapRoute(amount, percents, routesWithValidQuotes, routeTy
     return swapRoute;
 }
 exports.getBestSwapRoute = getBestSwapRoute;
-async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, by, routingConfig, portionProvider, v2GasModel, v3GasModel, swapConfig) {
+async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, by, routingConfig, portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig) {
     var _a;
     // Build a map of percentage to sorted list of quotes, with the biggest quote being first in the list.
     const percentToSortedQuotes = lodash_1.default.mapValues(percentToQuotes, (routeQuotes) => {
@@ -203,10 +203,13 @@ async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId,
                     const quoteNew = sumFn(quotesNew);
                     let gasCostL1QuoteToken = amounts_1.CurrencyAmount.fromRawAmount(quoteNew.currency, 0);
                     if (util_1.HAS_L1_FEE.includes(chainId)) {
-                        if (v2GasModel == undefined && v3GasModel == undefined) {
+                        if (v2GasModel == undefined &&
+                            v3GasModel == undefined &&
+                            v4GasModel == undefined) {
                             throw new Error("Can't compute L1 gas fees.");
                         }
                         else {
+                            // ROUTE-249: consoliate L1 + L2 gas fee adjustment within best-swap-route
                             const v2Routes = curRoutesNew.filter((routes) => routes.protocol === router_sdk_1.Protocol.V2);
                             if (v2Routes.length > 0 && util_1.V2_SUPPORTED.includes(chainId)) {
                                 if (v2GasModel) {
@@ -221,6 +224,13 @@ async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId,
                                     gasCostL1QuoteToken = gasCostL1QuoteToken.add(v3GasCostL1.gasCostL1QuoteToken);
                                 }
                             }
+                            const v4Routes = curRoutesNew.filter((routes) => routes.protocol === router_sdk_1.Protocol.V4);
+                            if (v4Routes.length > 0 && util_1.V4_SUPPORTED.includes(chainId)) {
+                                if (v4GasModel) {
+                                    const v4GasCostL1 = await v4GasModel.calculateL1GasFees(v4Routes);
+                                    gasCostL1QuoteToken = gasCostL1QuoteToken.add(v4GasCostL1.gasCostL1QuoteToken);
+                                }
+                            }
                         }
                     }
                     const quoteAfterL1Adjust = routeType == sdk_core_1.TradeType.EXACT_INPUT
@@ -281,7 +291,10 @@ async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId,
     };
     // If swapping on an L2 that includes a L1 security fee, calculate the fee and include it in the gas adjusted quotes
     if (util_1.HAS_L1_FEE.includes(chainId)) {
-        if (v2GasModel == undefined && v3GasModel == undefined) {
+        // ROUTE-249: consoliate L1 + L2 gas fee adjustment within best-swap-route
+        if (v2GasModel == undefined &&
+            v3GasModel == undefined &&
+            v4GasModel == undefined) {
             throw new Error("Can't compute L1 gas fees.");
         }
         else {
@@ -352,6 +365,37 @@ async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId,
                         gasCostsL1ToL2.gasCostL1QuoteToken.add(v3GasCostL1.gasCostL1QuoteToken);
                 }
             }
+            const v4Routes = bestSwap.filter((routes) => routes.protocol === router_sdk_1.Protocol.V4);
+            if (v4Routes.length > 0 && util_1.V4_SUPPORTED.includes(chainId)) {
+                if (v4GasModel) {
+                    const v4GasCostL1 = await v4GasModel.calculateL1GasFees(v4Routes);
+                    gasCostsL1ToL2.gasUsedL1 = gasCostsL1ToL2.gasUsedL1.add(v4GasCostL1.gasUsedL1);
+                    gasCostsL1ToL2.gasUsedL1OnL2 = gasCostsL1ToL2.gasUsedL1OnL2.add(v4GasCostL1.gasUsedL1OnL2);
+                    if (gasCostsL1ToL2.gasCostL1USD.currency.equals(v4GasCostL1.gasCostL1USD.currency)) {
+                        gasCostsL1ToL2.gasCostL1USD = gasCostsL1ToL2.gasCostL1USD.add(v4GasCostL1.gasCostL1USD);
+                    }
+                    else {
+                        // This is to handle the case where gasCostsL1ToL2.gasCostL1USD and v4GasCostL1.gasCostL1USD have different currencies.
+                        //
+                        // gasCostsL1ToL2.gasCostL1USD was initially hardcoded to CurrencyAmount.fromRawAmount(usdGasTokensByChain[chainId]![0]!, 0)
+                        // (https://github.com/Uniswap/smart-order-router/blob/main/src/routers/alpha-router/functions/best-swap-route.ts#L438)
+                        // , where usdGasTokensByChain is coded in the descending order of decimals per chain,
+                        // e.g. Arbitrum_one DAI (18 decimals), USDC bridged (6 decimals), USDC native (6 decimals)
+                        // so gasCostsL1ToL2.gasCostL1USD will have DAI as currency.
+                        //
+                        // For v4GasCostL1.gasCostL1USD, it's calculated within getHighestLiquidityV3USDPool among usdGasTokensByChain[chainId]!,
+                        // (https://github.com/Uniswap/smart-order-router/blob/1c93e133c46af545f8a3d8af7fca3f1f2dcf597d/src/util/gas-factory-helpers.ts#L110)
+                        // , so the code will actually see which USD pool has the highest liquidity, if any.
+                        // e.g. Arbitrum_one on v3 has highest liquidity on USDC native
+                        // so v4GasCostL1.gasCostL1USD will have USDC native as currency.
+                        //
+                        // We will re-assign gasCostsL1ToL2.gasCostL1USD to v3GasCostL1.gasCostL1USD in this case.
+                        gasCostsL1ToL2.gasCostL1USD = v4GasCostL1.gasCostL1USD;
+                    }
+                    gasCostsL1ToL2.gasCostL1QuoteToken =
+                        gasCostsL1ToL2.gasCostL1QuoteToken.add(v4GasCostL1.gasCostL1QuoteToken);
+                }
+            }
         }
     }
     const { gasUsedL1OnL2, gasCostL1USD, gasCostL1QuoteToken } = gasCostsL1ToL2;
@@ -363,6 +407,11 @@ async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId,
         if (decimalsDiff == 0) {
             return amounts_1.CurrencyAmount.fromRawAmount(usdToken, routeWithValidQuote.gasCostInUSD.quotient);
         }
+        if (decimalsDiff < 0 && chainId === 324) {
+            log_1.log.error(`Decimals diff is negative for ZkSync. This should not happen.
+          usdTokenDecimals ${usdTokenDecimals} routeWithValidQuote.gasCostInUSD.currency.decimals
+          ${routeWithValidQuote.gasCostInUSD.currency.decimals} ${JSON.stringify(routeWithValidQuote)}`);
+        }
         return amounts_1.CurrencyAmount.fromRawAmount(usdToken, jsbi_1.default.multiply(routeWithValidQuote.gasCostInUSD.quotient, jsbi_1.default.exponentiate(jsbi_1.default.BigInt(10), jsbi_1.default.BigInt(decimalsDiff))));
     })
         .value();
@@ -416,7 +465,7 @@ async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId,
         estimatedGasUsedUSD,
         estimatedGasUsedQuoteToken,
         estimatedGasUsedGasToken,
-        routes: portionProvider.getRouteWithQuotePortionAdjusted(routeType, routeWithQuotes, swapConfig),
+        routes: portionProvider.getRouteWithQuotePortionAdjusted(routeType, routeWithQuotes, swapConfig, providerConfig),
     };
 }
 exports.getBestSwapRouteBy = getBestSwapRouteBy;
@@ -425,7 +474,7 @@ exports.getBestSwapRouteBy = getBestSwapRouteBy;
 const findFirstRouteNotUsingUsedPools = (usedRoutes, candidateRouteQuotes, forceCrossProtocol) => {
     const poolAddressSet = new Set();
     const usedPoolAddresses = (0, lodash_1.default)(usedRoutes)
-        .flatMap((r) => r.poolAddresses)
+        .flatMap((r) => r.poolIdentifiers)
         .value();
     for (const poolAddress of usedPoolAddresses) {
         poolAddressSet.add(poolAddress);
@@ -439,7 +488,7 @@ const findFirstRouteNotUsingUsedPools = (usedRoutes, candidateRouteQuotes, force
         protocolsSet.add(protocol);
     }
     for (const routeQuote of candidateRouteQuotes) {
-        const { poolAddresses, protocol } = routeQuote;
+        const { poolIdentifiers: poolAddresses, protocol } = routeQuote;
         if (poolAddresses.some((poolAddress) => poolAddressSet.has(poolAddress))) {
             continue;
         }
@@ -453,4 +502,4 @@ const findFirstRouteNotUsingUsedPools = (usedRoutes, candidateRouteQuotes, force
     }
     return null;
 };
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.d.ts
index 09afa6f..fc586cb 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.d.ts
@@ -1,8 +1,11 @@
-import { Token } from '@uniswap/sdk-core';
+import { Currency, Token } from '@uniswap/sdk-core';
 import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
-import { MixedRoute, V2Route, V3Route } from '../../router';
-export declare function computeAllV3Routes(tokenIn: Token, tokenOut: Token, pools: Pool[], maxHops: number): V3Route[];
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
+import { TPool } from '@uniswap/router-sdk/dist/utils/TPool';
+import { MixedRoute, SupportedRoutes, V2Route, V3Route, V4Route } from '../../router';
+export declare function computeAllV4Routes(tokenIn: Currency, tokenOut: Currency, pools: V4Pool[], maxHops: number): V4Route[];
+export declare function computeAllV3Routes(tokenIn: Token, tokenOut: Token, pools: V3Pool[], maxHops: number): V3Route[];
 export declare function computeAllV2Routes(tokenIn: Token, tokenOut: Token, pools: Pair[], maxHops: number): V2Route[];
-export declare function computeAllMixedRoutes(tokenIn: Token, tokenOut: Token, parts: (Pool | Pair)[], maxHops: number): MixedRoute[];
-export declare function computeAllRoutes<TPool extends Pair | Pool, TRoute extends V3Route | V2Route | MixedRoute>(tokenIn: Token, tokenOut: Token, buildRoute: (route: TPool[], tokenIn: Token, tokenOut: Token) => TRoute, pools: TPool[], maxHops: number): TRoute[];
+export declare function computeAllMixedRoutes(tokenIn: Token, tokenOut: Token, parts: TPool[], maxHops: number): MixedRoute[];
+export declare function computeAllRoutes<TypePool extends TPool, TRoute extends SupportedRoutes>(tokenIn: Token, tokenOut: Token, buildRoute: (route: TypePool[], tokenIn: Token, tokenOut: Token) => TRoute, pools: TypePool[], maxHops: number): TRoute[];
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js
index 7969074..3ed9902 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js
@@ -1,11 +1,19 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.computeAllRoutes = exports.computeAllMixedRoutes = exports.computeAllV2Routes = exports.computeAllV3Routes = void 0;
+exports.computeAllRoutes = exports.computeAllMixedRoutes = exports.computeAllV2Routes = exports.computeAllV3Routes = exports.computeAllV4Routes = void 0;
 const v2_sdk_1 = require("@uniswap/v2-sdk");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
 const log_1 = require("../../../util/log");
 const routes_1 = require("../../../util/routes");
 const router_1 = require("../../router");
+function computeAllV4Routes(tokenIn, tokenOut, pools, maxHops) {
+    // TODO: ROUTE-217 - Support native currency routing in V4
+    return computeAllRoutes(tokenIn.wrapped, tokenOut.wrapped, (route, tokenIn, tokenOut) => {
+        return new router_1.V4Route(route, tokenIn, tokenOut);
+    }, pools, maxHops);
+}
+exports.computeAllV4Routes = computeAllV4Routes;
 function computeAllV3Routes(tokenIn, tokenOut, pools, maxHops) {
     return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {
         return new router_1.V3Route(route, tokenIn, tokenOut);
@@ -22,9 +30,10 @@ function computeAllMixedRoutes(tokenIn, tokenOut, parts, maxHops) {
     const routesRaw = computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {
         return new router_1.MixedRoute(route, tokenIn, tokenOut);
     }, parts, maxHops);
-    /// filter out pure v3 and v2 routes
+    /// filter out pure v4 and v3 and v2 routes
     return routesRaw.filter((route) => {
-        return (!route.pools.every((pool) => pool instanceof v3_sdk_1.Pool) &&
+        return (!route.pools.every((pool) => pool instanceof v4_sdk_1.Pool) &&
+            !route.pools.every((pool) => pool instanceof v3_sdk_1.Pool) &&
             !route.pools.every((pool) => pool instanceof v2_sdk_1.Pair));
     });
 }
@@ -54,16 +63,17 @@ function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {
             const currentTokenOut = curPool.token0.equals(previousTokenOut)
                 ? curPool.token1
                 : curPool.token0;
-            if (tokensVisited.has(currentTokenOut.address.toLowerCase())) {
+            // TODO: ROUTE-217 - Support native currency routing in V4
+            if (tokensVisited.has(currentTokenOut.wrapped.address.toLowerCase())) {
                 continue;
             }
-            tokensVisited.add(currentTokenOut.address.toLowerCase());
+            tokensVisited.add(currentTokenOut.wrapped.address.toLowerCase());
             currentRoute.push(curPool);
             poolsUsed[i] = true;
-            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, currentTokenOut);
+            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, currentTokenOut.wrapped);
             poolsUsed[i] = false;
             currentRoute.pop();
-            tokensVisited.delete(currentTokenOut.address.toLowerCase());
+            tokensVisited.delete(currentTokenOut.wrapped.address.toLowerCase());
         }
     };
     computeRoutes(tokenIn, tokenOut, [], poolsUsed, new Set([tokenIn.address.toLowerCase()]));
@@ -74,4 +84,4 @@ function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {
     return routes;
 }
 exports.computeAllRoutes = computeAllRoutes;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsNENBQXVDO0FBQ3ZDLDRDQUF1QztBQUV2QywyQ0FBd0M7QUFDeEMsaURBQW1FO0FBQ25FLHlDQUE0RDtBQUU1RCxTQUFnQixrQkFBa0IsQ0FDaEMsT0FBYyxFQUNkLFFBQWUsRUFDZixLQUFhLEVBQ2IsT0FBZTtJQUVmLE9BQU8sZ0JBQWdCLENBQ3JCLE9BQU8sRUFDUCxRQUFRLEVBQ1IsQ0FBQyxLQUFhLEVBQUUsT0FBYyxFQUFFLFFBQWUsRUFBRSxFQUFFO1FBQ2pELE9BQU8sSUFBSSxnQkFBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUNELEtBQUssRUFDTCxPQUFPLENBQ1IsQ0FBQztBQUNKLENBQUM7QUFmRCxnREFlQztBQUVELFNBQWdCLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLGdCQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDLEVBQ0QsS0FBSyxFQUNMLE9BQU8sQ0FDUixDQUFDO0FBQ0osQ0FBQztBQWZELGdEQWVDO0FBRUQsU0FBZ0IscUJBQXFCLENBQ25DLE9BQWMsRUFDZCxRQUFlLEVBQ2YsS0FBc0IsRUFDdEIsT0FBZTtJQUVmLE1BQU0sU0FBUyxHQUFHLGdCQUFnQixDQUNoQyxPQUFPLEVBQ1AsUUFBUSxFQUNSLENBQUMsS0FBc0IsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDMUQsT0FBTyxJQUFJLG1CQUFVLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDLEVBQ0QsS0FBSyxFQUNMLE9BQU8sQ0FDUixDQUFDO0lBQ0Ysb0NBQW9DO0lBQ3BDLE9BQU8sU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1FBQ2hDLE9BQU8sQ0FDTCxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLFlBQVksYUFBSSxDQUFDO1lBQ2xELENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksWUFBWSxhQUFJLENBQUMsQ0FDbkQsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQXRCRCxzREFzQkM7QUFFRCxTQUFnQixnQkFBZ0IsQ0FJOUIsT0FBYyxFQUNkLFFBQWUsRUFDZixVQUF1RSxFQUN2RSxLQUFjLEVBQ2QsT0FBZTs7SUFFZixNQUFNLFNBQVMsR0FBRyxLQUFLLENBQVUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzRCxNQUFNLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFFNUIsTUFBTSxhQUFhLEdBQUcsQ0FDcEIsT0FBYyxFQUNkLFFBQWUsRUFDZixZQUFxQixFQUNyQixTQUFvQixFQUNwQixhQUEwQixFQUMxQixpQkFBeUIsRUFDekIsRUFBRTtRQUNGLElBQUksWUFBWSxDQUFDLE1BQU0sR0FBRyxPQUFPLEVBQUU7WUFDakMsT0FBTztTQUNSO1FBRUQsSUFDRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUM7WUFDdkIsWUFBWSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFFLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxFQUM5RDtZQUNBLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxZQUFZLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUM5RCxPQUFPO1NBQ1I7UUFFRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNyQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDaEIsU0FBUzthQUNWO1lBRUQsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBQzFCLE1BQU0sZ0JBQWdCLEdBQUcsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFFekUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtnQkFDNUMsU0FBUzthQUNWO1lBRUQsTUFBTSxlQUFlLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7Z0JBQzdELENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTTtnQkFDaEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7WUFFbkIsSUFBSSxhQUFhLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRTtnQkFDNUQsU0FBUzthQUNWO1lBRUQsYUFBYSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7WUFDekQsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMzQixTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3BCLGFBQWEsQ0FDWCxPQUFPLEVBQ1AsUUFBUSxFQUNSLFlBQVksRUFDWixTQUFTLEVBQ1QsYUFBYSxFQUNiLGVBQWUsQ0FDaEIsQ0FBQztZQUNGLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7WUFDckIsWUFBWSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ25CLGFBQWEsQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1NBQzdEO0lBQ0gsQ0FBQyxDQUFDO0lBRUYsYUFBYSxDQUNYLE9BQU8sRUFDUCxRQUFRLEVBQ1IsRUFBRSxFQUNGLFNBQVMsRUFDVCxJQUFJLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUN6QyxDQUFDO0lBRUYsU0FBRyxDQUFDLElBQUksQ0FDTjtRQUNFLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHNCQUFhLENBQUM7UUFDakMsS0FBSyxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMscUJBQVksQ0FBQztLQUMvQixFQUNELFlBQVksTUFBTSxDQUFDLE1BQU0sNkJBQTZCLE1BQUEsTUFBTSxDQUFDLENBQUMsQ0FBQywwQ0FBRSxRQUFRLEdBQUcsQ0FDN0UsQ0FBQztJQUVGLE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUF2RkQsNENBdUZDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsNENBQXVDO0FBQ3ZDLDRDQUFpRDtBQUNqRCw0Q0FBaUQ7QUFHakQsMkNBQXdDO0FBQ3hDLGlEQUFtRTtBQUNuRSx5Q0FNc0I7QUFFdEIsU0FBZ0Isa0JBQWtCLENBQ2hDLE9BQWlCLEVBQ2pCLFFBQWtCLEVBQ2xCLEtBQWUsRUFDZixPQUFlO0lBRWYsMERBQTBEO0lBQzFELE9BQU8sZ0JBQWdCLENBQ3JCLE9BQU8sQ0FBQyxPQUFPLEVBQ2YsUUFBUSxDQUFDLE9BQU8sRUFDaEIsQ0FBQyxLQUFlLEVBQUUsT0FBaUIsRUFBRSxRQUFrQixFQUFFLEVBQUU7UUFDekQsT0FBTyxJQUFJLGdCQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDLEVBQ0QsS0FBSyxFQUNMLE9BQU8sQ0FDUixDQUFDO0FBQ0osQ0FBQztBQWhCRCxnREFnQkM7QUFFRCxTQUFnQixrQkFBa0IsQ0FDaEMsT0FBYyxFQUNkLFFBQWUsRUFDZixLQUFlLEVBQ2YsT0FBZTtJQUVmLE9BQU8sZ0JBQWdCLENBQ3JCLE9BQU8sRUFDUCxRQUFRLEVBQ1IsQ0FBQyxLQUFlLEVBQUUsT0FBYyxFQUFFLFFBQWUsRUFBRSxFQUFFO1FBQ25ELE9BQU8sSUFBSSxnQkFBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUNELEtBQUssRUFDTCxPQUFPLENBQ1IsQ0FBQztBQUNKLENBQUM7QUFmRCxnREFlQztBQUVELFNBQWdCLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0Is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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts
index 07db71c..c44248a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts
@@ -1,28 +1,48 @@
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Token, TradeType } from '@uniswap/sdk-core';
-import { ITokenListProvider, IV2SubgraphProvider, V2SubgraphPool } from '../../../providers';
+import { ITokenListProvider, IV2SubgraphProvider, IV4PoolProvider, IV4SubgraphProvider, V2SubgraphPool, V4PoolAccessor, V4SubgraphPool } from '../../../providers';
 import { ITokenProvider } from '../../../providers/token-provider';
 import { IV2PoolProvider, V2PoolAccessor } from '../../../providers/v2/pool-provider';
 import { IV3PoolProvider, V3PoolAccessor } from '../../../providers/v3/pool-provider';
 import { IV3SubgraphProvider, V3SubgraphPool } from '../../../providers/v3/subgraph-provider';
 import { AlphaRouterConfig } from '../alpha-router';
-export declare type PoolId = {
-    id: string;
-};
+export declare type SubgraphPool = V2SubgraphPool | V3SubgraphPool | V4SubgraphPool;
 export declare type CandidatePoolsBySelectionCriteria = {
     protocol: Protocol;
     selections: CandidatePoolsSelections;
 };
+export declare type SupportedCandidatePools = V2CandidatePools | V3CandidatePools | V4CandidatePools;
 export declare type CandidatePoolsSelections = {
-    topByBaseWithTokenIn: PoolId[];
-    topByBaseWithTokenOut: PoolId[];
-    topByDirectSwapPool: PoolId[];
-    topByEthQuoteTokenPool: PoolId[];
-    topByTVL: PoolId[];
-    topByTVLUsingTokenIn: PoolId[];
-    topByTVLUsingTokenOut: PoolId[];
-    topByTVLUsingTokenInSecondHops: PoolId[];
-    topByTVLUsingTokenOutSecondHops: PoolId[];
+    topByBaseWithTokenIn: SubgraphPool[];
+    topByBaseWithTokenOut: SubgraphPool[];
+    topByDirectSwapPool: SubgraphPool[];
+    topByEthQuoteTokenPool: SubgraphPool[];
+    topByTVL: SubgraphPool[];
+    topByTVLUsingTokenIn: SubgraphPool[];
+    topByTVLUsingTokenOut: SubgraphPool[];
+    topByTVLUsingTokenInSecondHops: SubgraphPool[];
+    topByTVLUsingTokenOutSecondHops: SubgraphPool[];
+};
+export declare type MixedCrossLiquidityCandidatePoolsParams = {
+    tokenIn: Token;
+    tokenOut: Token;
+    v2SubgraphProvider: IV2SubgraphProvider;
+    v3SubgraphProvider: IV3SubgraphProvider;
+    v2Candidates?: V2CandidatePools;
+    v3Candidates?: V3CandidatePools;
+    v4Candidates?: V4CandidatePools;
+    blockNumber?: number | Promise<number>;
+};
+export declare type V4GetCandidatePoolsParams = {
+    tokenIn: Token;
+    tokenOut: Token;
+    routeType: TradeType;
+    routingConfig: AlphaRouterConfig;
+    subgraphProvider: IV4SubgraphProvider;
+    tokenProvider: ITokenProvider;
+    poolProvider: IV4PoolProvider;
+    blockedTokenListProvider?: ITokenListProvider;
+    chainId: ChainId;
 };
 export declare type V3GetCandidatePoolsParams = {
     tokenIn: Token;
@@ -47,15 +67,38 @@ export declare type V2GetCandidatePoolsParams = {
     chainId: ChainId;
 };
 export declare type MixedRouteGetCandidatePoolsParams = {
+    v4CandidatePools: V4CandidatePools;
     v3CandidatePools: V3CandidatePools;
     v2CandidatePools: V2CandidatePools;
+    crossLiquidityPools: CrossLiquidityCandidatePools;
     routingConfig: AlphaRouterConfig;
     tokenProvider: ITokenProvider;
     v2poolProvider: IV2PoolProvider;
     v3poolProvider: IV3PoolProvider;
+    v4PoolProvider: IV4PoolProvider;
     blockedTokenListProvider?: ITokenListProvider;
     chainId: ChainId;
 };
+export declare type CrossLiquidityCandidatePools = {
+    v2Pools: V2SubgraphPool[];
+    v3Pools: V3SubgraphPool[];
+};
+/**
+ * Function that finds any missing pools that were not selected by the heuristic but that would
+ *   create a route with the topPool by TVL with either tokenIn or tokenOut across protocols.
+ *
+ *   e.g. In V2CandidatePools we found that wstETH/DOG is the most liquid pool,
+ *        then in V3CandidatePools ETH/wstETH is *not* the most liquid pool, so it is not selected
+ *        This process will look for that pool in order to complete the route.
+ *
+ */
+export declare function getMixedCrossLiquidityCandidatePools({ tokenIn, tokenOut, blockNumber, v2SubgraphProvider, v3SubgraphProvider, v2Candidates, v3Candidates, }: MixedCrossLiquidityCandidatePoolsParams): Promise<CrossLiquidityCandidatePools>;
+export declare type V4CandidatePools = {
+    poolAccessor: V4PoolAccessor;
+    candidatePools: CandidatePoolsBySelectionCriteria;
+    subgraphPools: V4SubgraphPool[];
+};
+export declare function getV4CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V4GetCandidatePoolsParams): Promise<V4CandidatePools>;
 export declare type V3CandidatePools = {
     poolAccessor: V3PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
@@ -71,7 +114,8 @@ export declare function getV2CandidatePools({ tokenIn, tokenOut, routeType, rout
 export declare type MixedCandidatePools = {
     V2poolAccessor: V2PoolAccessor;
     V3poolAccessor: V3PoolAccessor;
+    V4poolAccessor: V4PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
-    subgraphPools: (V2SubgraphPool | V3SubgraphPool)[];
+    subgraphPools: SubgraphPool[];
 };
-export declare function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }: MixedRouteGetCandidatePoolsParams): Promise<MixedCandidatePools>;
+export declare function getMixedRouteCandidatePools({ v4CandidatePools, v3CandidatePools, v2CandidatePools, crossLiquidityPools, routingConfig, tokenProvider, v4PoolProvider, v3poolProvider, v2poolProvider, }: MixedRouteGetCandidatePoolsParams): Promise<MixedCandidatePools>;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
index e9f81ff..335ac50 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
@@ -3,7 +3,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.getMixedRouteCandidatePools = exports.getV2CandidatePools = exports.getV3CandidatePools = void 0;
+exports.getMixedRouteCandidatePools = exports.getV2CandidatePools = exports.getV3CandidatePools = exports.getV4CandidatePools = exports.getMixedCrossLiquidityCandidatePools = void 0;
 const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
@@ -22,6 +22,7 @@ const baseTokensByChain = {
         token_provider_1.DAI_MAINNET,
         util_1.WRAPPED_NATIVE_CURRENCY[1],
         token_provider_1.FEI_MAINNET,
+        token_provider_1.WSTETH_MAINNET,
     ],
     [sdk_core_1.ChainId.OPTIMISM]: [
         token_provider_1.DAI_OPTIMISM,
@@ -71,6 +72,24 @@ const baseTokensByChain = {
     [sdk_core_1.ChainId.BLAST]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BLAST], token_provider_1.USDB_BLAST],
     [sdk_core_1.ChainId.ZORA]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZORA]],
     [sdk_core_1.ChainId.ZKSYNC]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC]],
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_TESTNET],
+    ],
+    [sdk_core_1.ChainId.ZERO]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZERO]],
+    [sdk_core_1.ChainId.BOB]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BOB]],
+    [sdk_core_1.ChainId.CYBER]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.CYBER]],
+    [sdk_core_1.ChainId.SHAPE]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SHAPE]],
+    [sdk_core_1.ChainId.INK]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.INK]],
+    [sdk_core_1.ChainId.REDSTONE]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE]],
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE_GARNET],
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: [
+        util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_MAINNET],
+    ],
+    [sdk_core_1.ChainId.ANIME_TESTNET]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME_TESTNET]],
+    [sdk_core_1.ChainId.ANIME]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME]],
+    [sdk_core_1.ChainId.MODE]: [util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MODE]],
 };
 class SubcategorySelectionPools {
     constructor(pools, poolsNeeded) {
@@ -81,6 +100,383 @@ class SubcategorySelectionPools {
         return this.pools.length >= this.poolsNeeded;
     }
 }
+/**
+ * Function that finds any missing pools that were not selected by the heuristic but that would
+ *   create a route with the topPool by TVL with either tokenIn or tokenOut across protocols.
+ *
+ *   e.g. In V2CandidatePools we found that wstETH/DOG is the most liquid pool,
+ *        then in V3CandidatePools ETH/wstETH is *not* the most liquid pool, so it is not selected
+ *        This process will look for that pool in order to complete the route.
+ *
+ */
+async function getMixedCrossLiquidityCandidatePools({ tokenIn, tokenOut, blockNumber, v2SubgraphProvider, v3SubgraphProvider, v2Candidates, v3Candidates, }) {
+    const v2Pools = (await v2SubgraphProvider.getPools(tokenIn, tokenOut, {
+        blockNumber,
+    })).sort((a, b) => b.reserve - a.reserve);
+    const v3Pools = (await v3SubgraphProvider.getPools(tokenIn, tokenOut, {
+        blockNumber,
+    })).sort((a, b) => b.tvlUSD - a.tvlUSD);
+    const tokenInAddress = tokenIn.address.toLowerCase();
+    const tokenOutAddress = tokenOut.address.toLowerCase();
+    const v2SelectedPools = findCrossProtocolMissingPools(tokenInAddress, tokenOutAddress, v2Pools, v2Candidates, v3Candidates);
+    const v3SelectedPools = findCrossProtocolMissingPools(tokenInAddress, tokenOutAddress, v3Pools, v3Candidates, v2Candidates);
+    const selectedV2Pools = [
+        v2SelectedPools.forTokenIn,
+        v2SelectedPools.forTokenOut,
+    ].filter((pool) => pool !== undefined);
+    const selectedV3Pools = [
+        v3SelectedPools.forTokenIn,
+        v3SelectedPools.forTokenOut,
+    ].filter((pool) => pool !== undefined);
+    return {
+        v2Pools: selectedV2Pools,
+        v3Pools: selectedV3Pools,
+    };
+}
+exports.getMixedCrossLiquidityCandidatePools = getMixedCrossLiquidityCandidatePools;
+function findCrossProtocolMissingPools(tokenInAddress, tokenOutAddress, pools, candidatesInProtocolToSearch, candidatesInContextProtocol) {
+    var _a;
+    const selectedPools = {};
+    const previouslySelectedPools = new Set((_a = candidatesInProtocolToSearch === null || candidatesInProtocolToSearch === void 0 ? void 0 : candidatesInProtocolToSearch.subgraphPools.map((pool) => pool.id)) !== null && _a !== void 0 ? _a : []);
+    const topPoolByTvlWithTokenOut = candidatesInContextProtocol === null || candidatesInContextProtocol === void 0 ? void 0 : candidatesInContextProtocol.candidatePools.selections.topByTVLUsingTokenOut[0];
+    const crossTokenAgainstTokenOut = (topPoolByTvlWithTokenOut === null || topPoolByTvlWithTokenOut === void 0 ? void 0 : topPoolByTvlWithTokenOut.token0.id.toLowerCase()) === tokenOutAddress
+        ? topPoolByTvlWithTokenOut === null || topPoolByTvlWithTokenOut === void 0 ? void 0 : topPoolByTvlWithTokenOut.token1.id.toLowerCase()
+        : topPoolByTvlWithTokenOut === null || topPoolByTvlWithTokenOut === void 0 ? void 0 : topPoolByTvlWithTokenOut.token0.id.toLowerCase();
+    const topPoolByTvlWithTokenIn = candidatesInContextProtocol === null || candidatesInContextProtocol === void 0 ? void 0 : candidatesInContextProtocol.candidatePools.selections.topByTVLUsingTokenIn[0];
+    const crossTokenAgainstTokenIn = (topPoolByTvlWithTokenIn === null || topPoolByTvlWithTokenIn === void 0 ? void 0 : topPoolByTvlWithTokenIn.token0.id.toLowerCase()) === tokenInAddress
+        ? topPoolByTvlWithTokenIn === null || topPoolByTvlWithTokenIn === void 0 ? void 0 : topPoolByTvlWithTokenIn.token1.id.toLowerCase()
+        : topPoolByTvlWithTokenIn === null || topPoolByTvlWithTokenIn === void 0 ? void 0 : topPoolByTvlWithTokenIn.token0.id.toLowerCase();
+    for (const pool of pools) {
+        // If we already found both pools for tokenIn and tokenOut. break out of this for loop.
+        if (selectedPools.forTokenIn !== undefined &&
+            selectedPools.forTokenOut !== undefined) {
+            break;
+        }
+        // If the pool has already been selected. continue to the next pool.
+        if (previouslySelectedPools.has(pool.id.toLowerCase())) {
+            continue;
+        }
+        const poolToken0Address = pool.token0.id.toLowerCase();
+        const poolToken1Address = pool.token1.id.toLowerCase();
+        // If we haven't selected the pool for tokenIn, and we found a pool matching the tokenOut, and the intermediateToken, select this pool
+        if (selectedPools.forTokenIn === undefined &&
+            ((poolToken0Address === tokenOutAddress &&
+                poolToken1Address === crossTokenAgainstTokenIn) ||
+                (poolToken1Address === tokenOutAddress &&
+                    poolToken0Address === crossTokenAgainstTokenIn))) {
+            selectedPools.forTokenIn = pool;
+        }
+        // If we haven't selected the pool for tokenOut, and we found a pool matching the tokenIn, and the intermediateToken, select this pool
+        if (selectedPools.forTokenOut === undefined &&
+            ((poolToken0Address === tokenInAddress &&
+                poolToken1Address === crossTokenAgainstTokenOut) ||
+                (poolToken1Address === tokenInAddress &&
+                    poolToken0Address === crossTokenAgainstTokenOut))) {
+            selectedPools.forTokenOut = pool;
+        }
+    }
+    return selectedPools;
+}
+// TODO: ROUTE-241 - refactor getV3CandidatePools against getV4CandidatePools
+async function getV4CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
+    var _a, _b, _c, _d, _e;
+    const { blockNumber, v4PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNSecondHopForTokenAddress, tokensToAvoidOnSecondHops, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
+    const tokenInAddress = tokenIn.address.toLowerCase();
+    const tokenOutAddress = tokenOut.address.toLowerCase();
+    const beforeSubgraphPools = Date.now();
+    const allPools = await subgraphProvider.getPools(tokenIn, tokenOut, {
+        blockNumber,
+    });
+    log_1.log.info({ samplePools: allPools.slice(0, 3) }, 'Got all pools from V4 subgraph provider');
+    // Although this is less of an optimization than the V2 equivalent,
+    // save some time copying objects by mutating the underlying pool directly.
+    for (const pool of allPools) {
+        pool.token0.id = pool.token0.id.toLowerCase();
+        pool.token1.id = pool.token1.id.toLowerCase();
+    }
+    metric_1.metric.putMetric('V4SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, metric_1.MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
+    // Only consider pools where neither tokens are in the blocked token list.
+    let filteredPools = allPools;
+    if (blockedTokenListProvider) {
+        filteredPools = [];
+        for (const pool of allPools) {
+            const token0InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token0.id);
+            const token1InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token1.id);
+            if (token0InBlocklist || token1InBlocklist) {
+                continue;
+            }
+            filteredPools.push(pool);
+        }
+    }
+    // Sort by tvlUSD in descending order
+    const subgraphPoolsSorted = filteredPools.sort((a, b) => b.tvlUSD - a.tvlUSD);
+    log_1.log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);
+    const poolAddressesSoFar = new Set();
+    const addToAddressSet = (pools) => {
+        (0, lodash_1.default)(pools)
+            .map((pool) => pool.id)
+            .forEach((poolAddress) => poolAddressesSoFar.add(poolAddress));
+    };
+    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];
+    const topByBaseWithTokenIn = (0, lodash_1.default)(baseTokens)
+        .flatMap((token) => {
+        return (0, lodash_1.default)(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            const tokenAddress = token.address.toLowerCase();
+            return ((subgraphPool.token0.id == tokenAddress &&
+                subgraphPool.token1.id == tokenInAddress) ||
+                (subgraphPool.token1.id == tokenAddress &&
+                    subgraphPool.token0.id == tokenInAddress));
+        })
+            .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+            .slice(0, topNWithEachBaseToken)
+            .value();
+    })
+        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+        .slice(0, topNWithBaseToken)
+        .value();
+    const topByBaseWithTokenOut = (0, lodash_1.default)(baseTokens)
+        .flatMap((token) => {
+        return (0, lodash_1.default)(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            const tokenAddress = token.address.toLowerCase();
+            return ((subgraphPool.token0.id == tokenAddress &&
+                subgraphPool.token1.id == tokenOutAddress) ||
+                (subgraphPool.token1.id == tokenAddress &&
+                    subgraphPool.token0.id == tokenOutAddress));
+        })
+            .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+            .slice(0, topNWithEachBaseToken)
+            .value();
+    })
+        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+        .slice(0, topNWithBaseToken)
+        .value();
+    let top2DirectSwapPool = (0, lodash_1.default)(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return (!poolAddressesSoFar.has(subgraphPool.id) &&
+            ((subgraphPool.token0.id == tokenInAddress &&
+                subgraphPool.token1.id == tokenOutAddress) ||
+                (subgraphPool.token1.id == tokenInAddress &&
+                    subgraphPool.token0.id == tokenOutAddress)));
+    })
+        .slice(0, topNDirectSwaps)
+        .value();
+    if (top2DirectSwapPool.length == 0 && topNDirectSwaps > 0) {
+        // If we requested direct swap pools but did not find any in the subgraph query.
+        // Optimistically add them into the query regardless. Invalid pools ones will be dropped anyway
+        // when we query the pool on-chain. Ensures that new pools for new pairs can be swapped on immediately.
+        top2DirectSwapPool = lodash_1.default.map([
+            [v3_sdk_1.FeeAmount.HIGH, 200, v3_sdk_1.ADDRESS_ZERO],
+            [v3_sdk_1.FeeAmount.MEDIUM, 60, v3_sdk_1.ADDRESS_ZERO],
+            [v3_sdk_1.FeeAmount.LOW, 10, v3_sdk_1.ADDRESS_ZERO],
+            [v3_sdk_1.FeeAmount.LOWEST, 1, v3_sdk_1.ADDRESS_ZERO],
+        ], (poolParams) => {
+            const [fee, tickSpacing, hooks] = poolParams;
+            const { currency0, currency1, poolId } = poolProvider.getPoolId(tokenIn, tokenOut, fee, tickSpacing, hooks);
+            return {
+                id: poolId,
+                feeTier: (0, util_1.unparseFeeAmount)(fee),
+                tickSpacing: tickSpacing.toString(),
+                hooks: hooks,
+                liquidity: '10000',
+                token0: {
+                    id: currency0.wrapped.address,
+                },
+                token1: {
+                    id: currency1.wrapped.address,
+                },
+                tvlETH: 10000,
+                tvlUSD: 10000,
+            };
+        });
+    }
+    addToAddressSet(top2DirectSwapPool);
+    const wrappedNativeAddress = (_b = util_1.WRAPPED_NATIVE_CURRENCY[chainId]) === null || _b === void 0 ? void 0 : _b.address.toLowerCase();
+    // Main reason we need this is for gas estimates, only needed if token out is not native.
+    // We don't check the seen address set because if we've already added pools for getting native quotes
+    // theres no need to add more.
+    let top2EthQuoteTokenPool = [];
+    if ((((_c = util_1.WRAPPED_NATIVE_CURRENCY[chainId]) === null || _c === void 0 ? void 0 : _c.symbol) ==
+        ((_d = util_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MAINNET]) === null || _d === void 0 ? void 0 : _d.symbol) &&
+        tokenOut.symbol != 'WETH' &&
+        tokenOut.symbol != 'WETH9' &&
+        tokenOut.symbol != 'ETH') ||
+        (((_e = util_1.WRAPPED_NATIVE_CURRENCY[chainId]) === null || _e === void 0 ? void 0 : _e.symbol) == token_provider_1.WMATIC_POLYGON.symbol &&
+            tokenOut.symbol != 'MATIC' &&
+            tokenOut.symbol != 'WMATIC')) {
+        top2EthQuoteTokenPool = (0, lodash_1.default)(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            if (routeType == sdk_core_1.TradeType.EXACT_INPUT) {
+                return ((subgraphPool.token0.id == wrappedNativeAddress &&
+                    subgraphPool.token1.id == tokenOutAddress) ||
+                    (subgraphPool.token1.id == wrappedNativeAddress &&
+                        subgraphPool.token0.id == tokenOutAddress));
+            }
+            else {
+                return ((subgraphPool.token0.id == wrappedNativeAddress &&
+                    subgraphPool.token1.id == tokenInAddress) ||
+                    (subgraphPool.token1.id == wrappedNativeAddress &&
+                        subgraphPool.token0.id == tokenInAddress));
+            }
+        })
+            .slice(0, 1)
+            .value();
+    }
+    addToAddressSet(top2EthQuoteTokenPool);
+    const topByTVL = (0, lodash_1.default)(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return !poolAddressesSoFar.has(subgraphPool.id);
+    })
+        .slice(0, topN)
+        .value();
+    addToAddressSet(topByTVL);
+    const topByTVLUsingTokenIn = (0, lodash_1.default)(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return (!poolAddressesSoFar.has(subgraphPool.id) &&
+            (subgraphPool.token0.id == tokenInAddress ||
+                subgraphPool.token1.id == tokenInAddress));
+    })
+        .slice(0, topNTokenInOut)
+        .value();
+    addToAddressSet(topByTVLUsingTokenIn);
+    const topByTVLUsingTokenOut = (0, lodash_1.default)(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return (!poolAddressesSoFar.has(subgraphPool.id) &&
+            (subgraphPool.token0.id == tokenOutAddress ||
+                subgraphPool.token1.id == tokenOutAddress));
+    })
+        .slice(0, topNTokenInOut)
+        .value();
+    addToAddressSet(topByTVLUsingTokenOut);
+    const topByTVLUsingTokenInSecondHops = (0, lodash_1.default)(topByTVLUsingTokenIn)
+        .map((subgraphPool) => {
+        return tokenInAddress == subgraphPool.token0.id
+            ? subgraphPool.token1.id
+            : subgraphPool.token0.id;
+    })
+        .flatMap((secondHopId) => {
+        var _a;
+        return (0, lodash_1.default)(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            return (!poolAddressesSoFar.has(subgraphPool.id) &&
+                !(tokensToAvoidOnSecondHops === null || tokensToAvoidOnSecondHops === void 0 ? void 0 : tokensToAvoidOnSecondHops.includes(secondHopId.toLowerCase())) &&
+                (subgraphPool.token0.id == secondHopId ||
+                    subgraphPool.token1.id == secondHopId));
+        })
+            .slice(0, (_a = topNSecondHopForTokenAddress === null || topNSecondHopForTokenAddress === void 0 ? void 0 : topNSecondHopForTokenAddress.get(secondHopId)) !== null && _a !== void 0 ? _a : topNSecondHop)
+            .value();
+    })
+        .uniqBy((pool) => pool.id)
+        .value();
+    addToAddressSet(topByTVLUsingTokenInSecondHops);
+    const topByTVLUsingTokenOutSecondHops = (0, lodash_1.default)(topByTVLUsingTokenOut)
+        .map((subgraphPool) => {
+        return tokenOutAddress == subgraphPool.token0.id
+            ? subgraphPool.token1.id
+            : subgraphPool.token0.id;
+    })
+        .flatMap((secondHopId) => {
+        var _a;
+        return (0, lodash_1.default)(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            return (!poolAddressesSoFar.has(subgraphPool.id) &&
+                !(tokensToAvoidOnSecondHops === null || tokensToAvoidOnSecondHops === void 0 ? void 0 : tokensToAvoidOnSecondHops.includes(secondHopId.toLowerCase())) &&
+                (subgraphPool.token0.id == secondHopId ||
+                    subgraphPool.token1.id == secondHopId));
+        })
+            .slice(0, (_a = topNSecondHopForTokenAddress === null || topNSecondHopForTokenAddress === void 0 ? void 0 : topNSecondHopForTokenAddress.get(secondHopId)) !== null && _a !== void 0 ? _a : topNSecondHop)
+            .value();
+    })
+        .uniqBy((pool) => pool.id)
+        .value();
+    addToAddressSet(topByTVLUsingTokenOutSecondHops);
+    const subgraphPools = (0, lodash_1.default)([
+        ...topByBaseWithTokenIn,
+        ...topByBaseWithTokenOut,
+        ...top2DirectSwapPool,
+        ...top2EthQuoteTokenPool,
+        ...topByTVL,
+        ...topByTVLUsingTokenIn,
+        ...topByTVLUsingTokenOut,
+        ...topByTVLUsingTokenInSecondHops,
+        ...topByTVLUsingTokenOutSecondHops,
+    ])
+        .compact()
+        .uniqBy((pool) => pool.id)
+        .value();
+    const tokenAddresses = (0, lodash_1.default)(subgraphPools)
+        .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])
+        .compact()
+        .uniq()
+        .value();
+    log_1.log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V4 pools we are considering`);
+    const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, {
+        blockNumber,
+    });
+    const printV4SubgraphPool = (s) => {
+        var _a, _b, _c, _d;
+        return `${(_b = (_a = tokenAccessor.getTokenByAddress(s.token0.id)) === null || _a === void 0 ? void 0 : _a.symbol) !== null && _b !== void 0 ? _b : s.token0.id}/${(_d = (_c = tokenAccessor.getTokenByAddress(s.token1.id)) === null || _c === void 0 ? void 0 : _c.symbol) !== null && _d !== void 0 ? _d : s.token1.id}/${s.feeTier}/${s.tickSpacing}/${s.hooks}`;
+    };
+    log_1.log.info({
+        topByBaseWithTokenIn: topByBaseWithTokenIn.map(printV4SubgraphPool),
+        topByBaseWithTokenOut: topByBaseWithTokenOut.map(printV4SubgraphPool),
+        topByTVL: topByTVL.map(printV4SubgraphPool),
+        topByTVLUsingTokenIn: topByTVLUsingTokenIn.map(printV4SubgraphPool),
+        topByTVLUsingTokenOut: topByTVLUsingTokenOut.map(printV4SubgraphPool),
+        topByTVLUsingTokenInSecondHops: topByTVLUsingTokenInSecondHops.map(printV4SubgraphPool),
+        topByTVLUsingTokenOutSecondHops: topByTVLUsingTokenOutSecondHops.map(printV4SubgraphPool),
+        top2DirectSwap: top2DirectSwapPool.map(printV4SubgraphPool),
+        top2EthQuotePool: top2EthQuoteTokenPool.map(printV4SubgraphPool),
+    }, `V4 Candidate Pools`);
+    const tokenPairsRaw = lodash_1.default.map(subgraphPools, (subgraphPool) => {
+        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);
+        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);
+        let fee;
+        try {
+            fee = Number(subgraphPool.feeTier);
+        }
+        catch (err) {
+            log_1.log.info({ subgraphPool }, `Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier} because fee tier not supported`);
+            return undefined;
+        }
+        if (!tokenA || !tokenB) {
+            log_1.log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee} because ${tokenA ? subgraphPool.token1.id : subgraphPool.token0.id} not found by token provider`);
+            return undefined;
+        }
+        return [
+            tokenA,
+            tokenB,
+            fee,
+            Number(subgraphPool.tickSpacing),
+            subgraphPool.hooks,
+        ];
+    });
+    const tokenPairs = lodash_1.default.compact(tokenPairsRaw);
+    metric_1.metric.putMetric('V4PoolsFilterLoad', Date.now() - beforePoolsFiltered, metric_1.MetricLoggerUnit.Milliseconds);
+    const beforePoolsLoad = Date.now();
+    const poolAccessor = await poolProvider.getPools(tokenPairs, {
+        blockNumber,
+    });
+    metric_1.metric.putMetric('V4PoolsLoad', Date.now() - beforePoolsLoad, metric_1.MetricLoggerUnit.Milliseconds);
+    const poolsBySelection = {
+        protocol: router_sdk_1.Protocol.V4,
+        selections: {
+            topByBaseWithTokenIn,
+            topByBaseWithTokenOut,
+            topByDirectSwapPool: top2DirectSwapPool,
+            topByEthQuoteTokenPool: top2EthQuoteTokenPool,
+            topByTVL,
+            topByTVLUsingTokenIn,
+            topByTVLUsingTokenOut,
+            topByTVLUsingTokenInSecondHops,
+            topByTVLUsingTokenOutSecondHops,
+        },
+    };
+    return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };
+}
+exports.getV4CandidatePools = getV4CandidatePools;
 async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
     var _a, _b, _c, _d, _e;
     const { blockNumber, v3PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNSecondHopForTokenAddress, tokensToAvoidOnSecondHops, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
@@ -755,9 +1151,12 @@ async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
     return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };
 }
 exports.getV2CandidatePools = getV2CandidatePools;
-async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }) {
+async function getMixedRouteCandidatePools({ v4CandidatePools, v3CandidatePools, v2CandidatePools, crossLiquidityPools, routingConfig, tokenProvider, v4PoolProvider, v3poolProvider, v2poolProvider, }) {
     const beforeSubgraphPools = Date.now();
-    const [{ subgraphPools: V3subgraphPools, candidatePools: V3candidatePools }, { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools },] = [v3CandidatePools, v2CandidatePools];
+    const [{ subgraphPools: V4subgraphPools, candidatePools: V4candidatePools }, { subgraphPools: V3subgraphPools, candidatePools: V3candidatePools }, { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools },] = [v4CandidatePools, v3CandidatePools, v2CandidatePools];
+    // Injects the liquidity pools found by the getMixedCrossLiquidityCandidatePools function
+    V2subgraphPools.push(...crossLiquidityPools.v2Pools);
+    V3subgraphPools.push(...crossLiquidityPools.v3Pools);
     metric_1.metric.putMetric('MixedSubgraphPoolsLoad', Date.now() - beforeSubgraphPools, metric_1.MetricLoggerUnit.Milliseconds);
     const beforePoolsFiltered = Date.now();
     /**
@@ -776,6 +1175,8 @@ async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools,
         ...V2candidatePools.selections.topByBaseWithTokenOut,
         /// Direct swap:
         ...V2candidatePools.selections.topByDirectSwapPool,
+        // Cross Liquidity (has to be added to be considered):
+        ...crossLiquidityPools.v2Pools,
     ].map((poolId) => poolId.id));
     const V2topByTVLSortedPools = (0, lodash_1.default)(V2subgraphPools)
         .filter((pool) => V2topByTVLPoolIds.has(pool.id))
@@ -785,6 +1186,9 @@ async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools,
     const V3sortedPools = (0, lodash_1.default)(V3subgraphPools)
         .sortBy((pool) => -pool.tvlUSD)
         .value();
+    const V4sortedPools = (0, lodash_1.default)(V4subgraphPools)
+        .sortBy((pool) => -pool.tvlUSD)
+        .value();
     /// Finding pools with greater reserveUSD on v2 than tvlUSD on v3, or if there is no v3 liquidity
     const buildV2Pools = [];
     V2topByTVLSortedPools.forEach((V2subgraphPool) => {
@@ -811,9 +1215,32 @@ async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools,
             }, `MixedRoute heuristic, found a V2 pool with no V3 counterpart`);
             buildV2Pools.push(V2subgraphPool);
         }
+        const V4subgraphPool = V4sortedPools.find((pool) => (pool.token0.id == V2subgraphPool.token0.id &&
+            pool.token1.id == V2subgraphPool.token1.id) ||
+            (pool.token0.id == V2subgraphPool.token1.id &&
+                pool.token1.id == V2subgraphPool.token0.id));
+        if (V4subgraphPool) {
+            if (V2subgraphPool.reserveUSD > V4subgraphPool.tvlUSD) {
+                log_1.log.info({
+                    token0: V2subgraphPool.token0.id,
+                    token1: V2subgraphPool.token1.id,
+                    v2reserveUSD: V2subgraphPool.reserveUSD,
+                    v4tvlUSD: V4subgraphPool.tvlUSD,
+                }, `MixedRoute heuristic, found a V2 pool with higher liquidity than its V4 counterpart`);
+                buildV2Pools.push(V2subgraphPool);
+            }
+        }
+        else {
+            log_1.log.info({
+                token0: V2subgraphPool.token0.id,
+                token1: V2subgraphPool.token1.id,
+                v2reserveUSD: V2subgraphPool.reserveUSD,
+            }, `MixedRoute heuristic, found a V2 pool with no V3 counterpart`);
+            buildV2Pools.push(V2subgraphPool);
+        }
     });
     log_1.log.info(buildV2Pools.length, `Number of V2 candidate pools that fit first heuristic`);
-    const subgraphPools = [...buildV2Pools, ...V3sortedPools];
+    const subgraphPools = [...buildV2Pools, ...V3sortedPools, ...V4sortedPools];
     const tokenAddresses = (0, lodash_1.default)(subgraphPools)
         .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])
         .compact()
@@ -821,6 +1248,30 @@ async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools,
         .value();
     log_1.log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} pools we are considering`);
     const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, routingConfig);
+    const V4tokenPairsRaw = lodash_1.default.map(V4sortedPools, (subgraphPool) => {
+        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);
+        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);
+        let fee;
+        try {
+            fee = Number(subgraphPool.feeTier);
+        }
+        catch (err) {
+            log_1.log.info({ subgraphPool }, `Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier}/${subgraphPool.tickSpacing}/${subgraphPool.hooks} because fee tier not supported`);
+            return undefined;
+        }
+        if (!tokenA || !tokenB) {
+            log_1.log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee}/${subgraphPool.tickSpacing}/${subgraphPool.hooks} because ${tokenA ? subgraphPool.token1.id : subgraphPool.token0.id} not found by token provider`);
+            return undefined;
+        }
+        return [
+            tokenA,
+            tokenB,
+            fee,
+            Number(subgraphPool.tickSpacing),
+            subgraphPool.hooks,
+        ];
+    });
+    const V4tokenPairs = lodash_1.default.compact(V4tokenPairsRaw);
     const V3tokenPairsRaw = lodash_1.default.map(V3sortedPools, (subgraphPool) => {
         const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);
         const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);
@@ -851,9 +1302,10 @@ async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools,
     const V2tokenPairs = lodash_1.default.compact(V2tokenPairsRaw);
     metric_1.metric.putMetric('MixedPoolsFilterLoad', Date.now() - beforePoolsFiltered, metric_1.MetricLoggerUnit.Milliseconds);
     const beforePoolsLoad = Date.now();
-    const [V2poolAccessor, V3poolAccessor] = await Promise.all([
+    const [V2poolAccessor, V3poolAccessor, V4poolAccessor] = await Promise.all([
         v2poolProvider.getPools(V2tokenPairs, routingConfig),
         v3poolProvider.getPools(V3tokenPairs, routingConfig),
+        v4PoolProvider.getPools(V4tokenPairs, routingConfig),
     ]);
     metric_1.metric.putMetric('MixedPoolsLoad', Date.now() - beforePoolsLoad, metric_1.MetricLoggerUnit.Milliseconds);
     /// @dev a bit tricky here since the original V2CandidateSelections object included pools that we may have dropped
@@ -862,6 +1314,7 @@ async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools,
         return [
             ...buildV2Pools.filter((pool) => V2candidatePools.selections[key].map((p) => p.id).includes(pool.id)),
             ...V3candidatePools.selections[key],
+            ...V4candidatePools.selections[key],
         ];
     };
     const poolsBySelection = {
@@ -881,9 +1334,10 @@ async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools,
     return {
         V2poolAccessor,
         V3poolAccessor,
+        V4poolAccessor,
         candidatePools: poolsBySelection,
         subgraphPools,
     };
 }
 exports.getMixedRouteCandidatePools = getMixedRouteCandidatePools;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-costs.d.ts
similarity index 90%
rename from node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.d.ts
rename to node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-costs.d.ts
index af0d85b..9b48b3a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-costs.d.ts
@@ -1,12 +1,12 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { ChainId, Currency } from '@uniswap/sdk-core';
-import { V3Route } from '../../../router';
+import { V3Route, V4Route } from '../../router';
 export declare const COST_PER_UNINIT_TICK: BigNumber;
 export declare const BASE_SWAP_COST: (id: ChainId) => BigNumber;
 export declare const COST_PER_INIT_TICK: (id: ChainId) => BigNumber;
 export declare const COST_PER_HOP: (id: ChainId) => BigNumber;
 export declare const SINGLE_HOP_OVERHEAD: (_id: ChainId) => BigNumber;
-export declare const TOKEN_OVERHEAD: (id: ChainId, route: V3Route) => BigNumber;
+export declare const TOKEN_OVERHEAD: (id: ChainId, route: V3Route | V4Route) => BigNumber;
 export declare const NATIVE_WRAP_OVERHEAD: (id: ChainId) => BigNumber;
 export declare const NATIVE_UNWRAP_OVERHEAD: (id: ChainId) => BigNumber;
 export declare const NATIVE_OVERHEAD: (chainId: ChainId, amount: Currency, quote: Currency) => BigNumber;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-costs.js
new file mode 100644
index 0000000..66fd774
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-costs.js
@@ -0,0 +1,203 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.NATIVE_OVERHEAD = exports.NATIVE_UNWRAP_OVERHEAD = exports.NATIVE_WRAP_OVERHEAD = exports.TOKEN_OVERHEAD = exports.SINGLE_HOP_OVERHEAD = exports.COST_PER_HOP = exports.COST_PER_INIT_TICK = exports.BASE_SWAP_COST = exports.COST_PER_UNINIT_TICK = void 0;
+const bignumber_1 = require("@ethersproject/bignumber");
+const sdk_core_1 = require("@uniswap/sdk-core");
+const router_sdk_1 = require("@uniswap/router-sdk");
+const providers_1 = require("../../../providers");
+// Cost for crossing an uninitialized tick.
+exports.COST_PER_UNINIT_TICK = bignumber_1.BigNumber.from(0);
+//l2 execution fee on optimism is roughly the same as mainnet
+const BASE_SWAP_COST = (id) => {
+    switch (id) {
+        case sdk_core_1.ChainId.MAINNET:
+        case sdk_core_1.ChainId.GOERLI:
+        case sdk_core_1.ChainId.SEPOLIA:
+        case sdk_core_1.ChainId.OPTIMISM:
+        case sdk_core_1.ChainId.OPTIMISM_GOERLI:
+        case sdk_core_1.ChainId.OPTIMISM_SEPOLIA:
+        case sdk_core_1.ChainId.BNB:
+        case sdk_core_1.ChainId.AVALANCHE:
+        case sdk_core_1.ChainId.BASE:
+        case sdk_core_1.ChainId.BASE_GOERLI:
+        case sdk_core_1.ChainId.ZORA:
+        case sdk_core_1.ChainId.ZORA_SEPOLIA:
+        case sdk_core_1.ChainId.ROOTSTOCK:
+        case sdk_core_1.ChainId.BLAST:
+        case sdk_core_1.ChainId.ZKSYNC:
+        case sdk_core_1.ChainId.ABSTRACT_TESTNET:
+        case sdk_core_1.ChainId.ZERO:
+        case sdk_core_1.ChainId.BOB:
+        case sdk_core_1.ChainId.CYBER:
+        case sdk_core_1.ChainId.SHAPE:
+        case sdk_core_1.ChainId.INK:
+        case sdk_core_1.ChainId.REDSTONE:
+        case sdk_core_1.ChainId.REDSTONE_GARNET:
+        case sdk_core_1.ChainId.ABSTRACT_MAINNET:
+        case sdk_core_1.ChainId.ANIME_TESTNET:
+        case sdk_core_1.ChainId.ANIME:
+        case sdk_core_1.ChainId.MODE:
+            return bignumber_1.BigNumber.from(2000);
+        case sdk_core_1.ChainId.ARBITRUM_ONE:
+        case sdk_core_1.ChainId.ARBITRUM_GOERLI:
+        case sdk_core_1.ChainId.ARBITRUM_SEPOLIA:
+            return bignumber_1.BigNumber.from(5000);
+        case sdk_core_1.ChainId.POLYGON:
+        case sdk_core_1.ChainId.POLYGON_MUMBAI:
+            return bignumber_1.BigNumber.from(2000);
+        case sdk_core_1.ChainId.CELO:
+        case sdk_core_1.ChainId.CELO_ALFAJORES:
+            return bignumber_1.BigNumber.from(2000);
+        //TODO determine if sufficient
+        case sdk_core_1.ChainId.GNOSIS:
+            return bignumber_1.BigNumber.from(2000);
+        case sdk_core_1.ChainId.MOONBEAM:
+            return bignumber_1.BigNumber.from(2000);
+    }
+};
+exports.BASE_SWAP_COST = BASE_SWAP_COST;
+const COST_PER_INIT_TICK = (id) => {
+    switch (id) {
+        case sdk_core_1.ChainId.MAINNET:
+        case sdk_core_1.ChainId.GOERLI:
+        case sdk_core_1.ChainId.SEPOLIA:
+        case sdk_core_1.ChainId.BNB:
+        case sdk_core_1.ChainId.AVALANCHE:
+            return bignumber_1.BigNumber.from(31000);
+        case sdk_core_1.ChainId.OPTIMISM:
+        case sdk_core_1.ChainId.OPTIMISM_GOERLI:
+        case sdk_core_1.ChainId.OPTIMISM_SEPOLIA:
+        case sdk_core_1.ChainId.BASE:
+        case sdk_core_1.ChainId.BASE_GOERLI:
+        case sdk_core_1.ChainId.ZORA:
+        case sdk_core_1.ChainId.ZORA_SEPOLIA:
+        case sdk_core_1.ChainId.ROOTSTOCK:
+        case sdk_core_1.ChainId.BLAST:
+        case sdk_core_1.ChainId.ZKSYNC:
+        case sdk_core_1.ChainId.ABSTRACT_TESTNET:
+        case sdk_core_1.ChainId.ZERO:
+        case sdk_core_1.ChainId.BOB:
+        case sdk_core_1.ChainId.CYBER:
+        case sdk_core_1.ChainId.SHAPE:
+        case sdk_core_1.ChainId.INK:
+        case sdk_core_1.ChainId.REDSTONE:
+        case sdk_core_1.ChainId.REDSTONE_GARNET:
+        case sdk_core_1.ChainId.ABSTRACT_MAINNET:
+        case sdk_core_1.ChainId.ANIME_TESTNET:
+        case sdk_core_1.ChainId.ANIME:
+        case sdk_core_1.ChainId.MODE:
+            return bignumber_1.BigNumber.from(31000);
+        case sdk_core_1.ChainId.ARBITRUM_ONE:
+        case sdk_core_1.ChainId.ARBITRUM_GOERLI:
+        case sdk_core_1.ChainId.ARBITRUM_SEPOLIA:
+            return bignumber_1.BigNumber.from(31000);
+        case sdk_core_1.ChainId.POLYGON:
+        case sdk_core_1.ChainId.POLYGON_MUMBAI:
+            return bignumber_1.BigNumber.from(31000);
+        case sdk_core_1.ChainId.CELO:
+        case sdk_core_1.ChainId.CELO_ALFAJORES:
+            return bignumber_1.BigNumber.from(31000);
+        case sdk_core_1.ChainId.GNOSIS:
+            return bignumber_1.BigNumber.from(31000);
+        case sdk_core_1.ChainId.MOONBEAM:
+            return bignumber_1.BigNumber.from(31000);
+    }
+};
+exports.COST_PER_INIT_TICK = COST_PER_INIT_TICK;
+const COST_PER_HOP = (id) => {
+    switch (id) {
+        case sdk_core_1.ChainId.MAINNET:
+        case sdk_core_1.ChainId.GOERLI:
+        case sdk_core_1.ChainId.SEPOLIA:
+        case sdk_core_1.ChainId.BNB:
+        case sdk_core_1.ChainId.OPTIMISM:
+        case sdk_core_1.ChainId.OPTIMISM_GOERLI:
+        case sdk_core_1.ChainId.OPTIMISM_SEPOLIA:
+        case sdk_core_1.ChainId.AVALANCHE:
+        case sdk_core_1.ChainId.BASE:
+        case sdk_core_1.ChainId.BASE_GOERLI:
+        case sdk_core_1.ChainId.ZORA:
+        case sdk_core_1.ChainId.ZORA_SEPOLIA:
+        case sdk_core_1.ChainId.ROOTSTOCK:
+        case sdk_core_1.ChainId.BLAST:
+        case sdk_core_1.ChainId.ZKSYNC:
+        case sdk_core_1.ChainId.ABSTRACT_TESTNET:
+        case sdk_core_1.ChainId.ZERO:
+        case sdk_core_1.ChainId.BOB:
+        case sdk_core_1.ChainId.CYBER:
+        case sdk_core_1.ChainId.SHAPE:
+        case sdk_core_1.ChainId.INK:
+        case sdk_core_1.ChainId.REDSTONE:
+        case sdk_core_1.ChainId.REDSTONE_GARNET:
+        case sdk_core_1.ChainId.ABSTRACT_MAINNET:
+        case sdk_core_1.ChainId.ANIME_TESTNET:
+        case sdk_core_1.ChainId.ANIME:
+        case sdk_core_1.ChainId.MODE:
+            return bignumber_1.BigNumber.from(80000);
+        case sdk_core_1.ChainId.ARBITRUM_ONE:
+        case sdk_core_1.ChainId.ARBITRUM_GOERLI:
+        case sdk_core_1.ChainId.ARBITRUM_SEPOLIA:
+            return bignumber_1.BigNumber.from(80000);
+        case sdk_core_1.ChainId.POLYGON:
+        case sdk_core_1.ChainId.POLYGON_MUMBAI:
+            return bignumber_1.BigNumber.from(80000);
+        case sdk_core_1.ChainId.CELO:
+        case sdk_core_1.ChainId.CELO_ALFAJORES:
+            return bignumber_1.BigNumber.from(80000);
+        case sdk_core_1.ChainId.GNOSIS:
+            return bignumber_1.BigNumber.from(80000);
+        case sdk_core_1.ChainId.MOONBEAM:
+            return bignumber_1.BigNumber.from(80000);
+    }
+};
+exports.COST_PER_HOP = COST_PER_HOP;
+const SINGLE_HOP_OVERHEAD = (_id) => {
+    return bignumber_1.BigNumber.from(15000);
+};
+exports.SINGLE_HOP_OVERHEAD = SINGLE_HOP_OVERHEAD;
+const TOKEN_OVERHEAD = (id, route) => {
+    const currencies = route.protocol === router_sdk_1.Protocol.V4 ? route.currencyPath : route.tokenPath;
+    let overhead = bignumber_1.BigNumber.from(0);
+    if (id == sdk_core_1.ChainId.MAINNET) {
+        // AAVE's transfer contains expensive governance snapshotting logic. We estimate
+        // it at around 150k.
+        if (currencies.some((t) => t.equals(providers_1.AAVE_MAINNET))) {
+            overhead = overhead.add(150000);
+        }
+        // LDO's reaches out to an external token controller which adds a large overhead
+        // of around 150k.
+        if (currencies.some((t) => t.equals(providers_1.LIDO_MAINNET))) {
+            overhead = overhead.add(150000);
+        }
+    }
+    return overhead;
+};
+exports.TOKEN_OVERHEAD = TOKEN_OVERHEAD;
+// TODO: change per chain
+const NATIVE_WRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return bignumber_1.BigNumber.from(27938);
+    }
+};
+exports.NATIVE_WRAP_OVERHEAD = NATIVE_WRAP_OVERHEAD;
+const NATIVE_UNWRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return bignumber_1.BigNumber.from(36000);
+    }
+};
+exports.NATIVE_UNWRAP_OVERHEAD = NATIVE_UNWRAP_OVERHEAD;
+const NATIVE_OVERHEAD = (chainId, amount, quote) => {
+    if (amount.isNative) {
+        // need to wrap eth in
+        return (0, exports.NATIVE_WRAP_OVERHEAD)(chainId);
+    }
+    if (quote.isNative) {
+        // need to unwrap eth out
+        return (0, exports.NATIVE_UNWRAP_OVERHEAD)(chainId);
+    }
+    return bignumber_1.BigNumber.from(0);
+};
+exports.NATIVE_OVERHEAD = NATIVE_OVERHEAD;
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts
index c09521f..058b0a8 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts
@@ -6,7 +6,7 @@ import { ProviderConfig } from '../../../providers/provider';
 import { IV2PoolProvider } from '../../../providers/v2/pool-provider';
 import { ArbitrumGasData, IL2GasDataProvider } from '../../../providers/v3/gas-data-provider';
 import { CurrencyAmount } from '../../../util/amounts';
-import { MixedRouteWithValidQuote, RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote } from '../entities/route-with-valid-quote';
+import { MixedRouteWithValidQuote, RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote, V4RouteWithValidQuote } from '../entities/route-with-valid-quote';
 export declare const usdGasTokensByChain: {
     [chainId in ChainId]?: Token[];
 };
@@ -47,6 +47,7 @@ export declare type LiquidityCalculationPools = {
 export declare type GasModelType = {
     v2GasModel?: IGasModel<V2RouteWithValidQuote>;
     v3GasModel: IGasModel<V3RouteWithValidQuote>;
+    v4GasModel: IGasModel<V4RouteWithValidQuote>;
     mixedRouteGasModel: IGasModel<MixedRouteWithValidQuote>;
 };
 /**
@@ -99,7 +100,8 @@ export declare abstract class IV2GasModelFactory {
  * @abstract
  * @class IOnChainGasModelFactory
  */
-export declare abstract class IOnChainGasModelFactory {
-    abstract buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote | MixedRouteWithValidQuote>>;
+export declare abstract class IOnChainGasModelFactory<TRouteWithValidQuote extends RouteWithValidQuote> {
+    abstract buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<TRouteWithValidQuote>>;
+    protected totalInitializedTicksCrossed(initializedTicksCrossedList: number[]): number;
 }
 export declare const getQuoteThroughNativePool: (chainId: ChainId, nativeTokenAmount: CurrencyAmountRaw<Token>, nativeTokenPool: Pool | Pair) => CurrencyAmount;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
index 94ec012..c0d997c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
@@ -51,7 +51,19 @@ exports.usdGasTokensByChain = {
     [sdk_core_1.ChainId.BASE]: [token_provider_1.USDC_BASE, token_provider_1.USDC_NATIVE_BASE],
     [sdk_core_1.ChainId.BLAST]: [token_provider_1.USDB_BLAST],
     [sdk_core_1.ChainId.ZORA]: [token_provider_1.USDC_ZORA],
-    [sdk_core_1.ChainId.ZKSYNC]: [token_provider_1.USDCE_ZKSYNC, token_provider_1.USDC_ZKSYNC, token_provider_1.DAI_ZKSYNC],
+    [sdk_core_1.ChainId.ZKSYNC]: [token_provider_1.DAI_ZKSYNC, token_provider_1.USDCE_ZKSYNC, token_provider_1.USDC_ZKSYNC],
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: [token_provider_1.USDC_ABSTRACT_TESTNET],
+    [sdk_core_1.ChainId.ZERO]: [token_provider_1.USDC_ZERO],
+    [sdk_core_1.ChainId.BOB]: [token_provider_1.USDC_BOB],
+    [sdk_core_1.ChainId.CYBER]: [token_provider_1.USDC_CYBER],
+    [sdk_core_1.ChainId.SHAPE]: [token_provider_1.USDC_SHAPE],
+    [sdk_core_1.ChainId.INK]: [token_provider_1.USDC_INK],
+    [sdk_core_1.ChainId.REDSTONE]: [token_provider_1.USDC_REDSTONE],
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: [token_provider_1.USDC_REDSTONE_GARNET],
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: [token_provider_1.USDC_ABSTRACT_MAINNET],
+    [sdk_core_1.ChainId.ANIME_TESTNET]: [token_provider_1.USDC_ANIME_TESTNET],
+    [sdk_core_1.ChainId.ANIME]: [token_provider_1.USDC_ANIME],
+    [sdk_core_1.ChainId.MODE]: [token_provider_1.USDC_MODE],
 };
 /**
  * Factory for building gas models that can be used with any route to generate
@@ -79,6 +91,18 @@ exports.IV2GasModelFactory = IV2GasModelFactory;
  * @class IOnChainGasModelFactory
  */
 class IOnChainGasModelFactory {
+    totalInitializedTicksCrossed(initializedTicksCrossedList) {
+        let ticksCrossed = 0;
+        for (let i = 0; i < initializedTicksCrossedList.length; i++) {
+            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+            if (initializedTicksCrossedList[i] > 0) {
+                // Quoter returns Array<number of calls to crossTick + 1>, so we need to subtract 1 here.
+                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                ticksCrossed += initializedTicksCrossedList[i] - 1;
+            }
+        }
+        return ticksCrossed;
+    }
 }
 exports.IOnChainGasModelFactory = IOnChainGasModelFactory;
 // Determines if native currency is token0
@@ -95,4 +119,4 @@ const getQuoteThroughNativePool = (chainId, nativeTokenAmount, nativeTokenPool)
     return nativeTokenPrice.quote(nativeTokenAmount);
 };
 exports.getQuoteThroughNativePool = getQuoteThroughNativePool;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGdEQUkyQjtBQUszQixzRUErQzJDO0FBTTNDLHdDQUF3RDtBQVN4RCxnRUFBZ0U7QUFDaEUscUVBQXFFO0FBQ3JFLDRFQUE0RTtBQUMvRCxRQUFBLG1CQUFtQixHQUF1QztJQUNyRSxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyw0QkFBVyxFQUFFLDZCQUFZLEVBQUUsNkJBQVksQ0FBQztJQUM1RCxDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDdEIsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLHFDQUFvQjtRQUNwQiw4QkFBYTtLQUNkO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xCLDZCQUFZO1FBQ1osOEJBQWE7UUFDYixxQ0FBb0I7UUFDcEIsOEJBQWE7S0FDZDtJQUNELENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUN6QixvQ0FBbUI7UUFDbkIscUNBQW9CO1FBQ3BCLHFDQUFvQjtLQUNyQjtJQUNELENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1FBQzFCLHFDQUFvQjtRQUNwQixzQ0FBcUI7UUFDckIsc0NBQXFCO0tBQ3RCO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMscUNBQW9CLENBQUM7SUFDakQsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxzQ0FBcUIsQ0FBQztJQUNuRCxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQywyQkFBVSxFQUFFLDRCQUFXLEVBQUUsNEJBQVcsRUFBRSw0QkFBVyxDQUFDO0lBQ3JFLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLDZCQUFZLEVBQUUsNEJBQVcsQ0FBQztJQUM5QyxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyw2QkFBWSxFQUFFLG9DQUFtQixDQUFDO0lBQ3RELENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLG1DQUFrQixDQUFDO0lBQzlDLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLDBCQUFTLEVBQUUsMEJBQVMsRUFBRSxpQ0FBZ0IsRUFBRSxtQ0FBa0IsQ0FBQztJQUM1RSxDQUFDLGtCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxvQ0FBbUIsQ0FBQztJQUMvQyxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxxQ0FBb0IsQ0FBQztJQUN4QyxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyw4QkFBYSxDQUFDO0lBQ25DLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLHlCQUFRLEVBQUUseUJBQVEsRUFBRSx3QkFBTyxDQUFDO0lBQzVDLENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUMsRUFBRTtRQUNuQix5QkFBUTtRQUNSLDBCQUFTO1FBQ1QsaUNBQWdCO1FBQ2hCLGtDQUFpQjtLQUNsQjtJQUNELENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLDBCQUFTLEVBQUUsaUNBQWdCLENBQUM7SUFDN0MsQ0FBQyxrQkFBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsMkJBQVUsQ0FBQztJQUM3QixDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQywwQkFBUyxDQUFDO0lBQzNCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLDZCQUFZLEVBQUUsNEJBQVcsRUFBRSwyQkFBVSxDQUFDO0NBQzFELENBQUM7QUE2RUY7Ozs7Ozs7Ozs7R0FVRztBQUNILE1BQXNCLGtCQUFrQjtDQVF2QztBQVJELGdEQVFDO0FBRUQ7Ozs7Ozs7Ozs7R0FVRztBQUNILE1BQXNCLHVCQUF1QjtDQWE1QztBQWJELDBEQWFDO0FBRUQsMENBQTBDO0FBQzFDLHlEQUF5RDtBQUN6RCx5QkFBeUI7QUFDbEIsTUFBTSx5QkFBeUIsR0FBRyxDQUN2QyxPQUFnQixFQUNoQixpQkFBMkMsRUFDM0MsZUFBNEIsRUFDWixFQUFFO0lBQ2xCLE1BQU0sY0FBYyxHQUFHLDhCQUF1QixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3hELE1BQU0sUUFBUSxHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQy9ELHFGQUFxRjtJQUNyRixNQUFNLGdCQUFnQixHQUFHLFFBQVE7UUFDL0IsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxXQUFXO1FBQzdCLENBQUMsQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDO0lBQ2hDLHNEQUFzRDtJQUN0RCxPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBbUIsQ0FBQztBQUNyRSxDQUFDLENBQUM7QUFiVyxRQUFBLHlCQUF5Qiw2QkFhcEMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGdEQUkyQjtBQUszQixzRUE4RDJDO0FBTTNDLHdDQUF3RDtBQVV4RCxnRUFBZ0U7QUFDaEUscUVBQXFFO0FBQ3JFLDRFQUE0RTtBQUMvRCxRQUFBLG1CQUFtQixHQUF1QztJQUNyRSxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyw0QkFBVyxFQUFFLDZCQUFZLEVBQUUsNkJBQVksQ0FBQztJQUM1RCxDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDdEIsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLHFDQUFvQjtRQUNwQiw4QkFBYTtLQUNkO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xCLDZCQUFZO1FBQ1osOEJBQWE7UUFDYixxQ0FBb0I7UUFDcEIsOEJBQWE7S0FDZDtJQUNELENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUN6QixvQ0FBbUI7UUFDbkIscUNBQW9CO1FBQ3BCLHFDQUFvQjtLQUNyQjtJQUNELENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1FBQzFCLHFDQUFvQjtRQUNwQixzQ0FBcUI7UUFDckIsc0NBQXFCO0tBQ3RCO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMscUNBQW9CLENBQUM7SUFDakQsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxzQ0FBcUIsQ0FBQztJQUNuRCxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQywyQkFBVSxFQUFFLDRCQUFXLEVBQUUsNEJBQVcsRUFBRSw0QkFBVyxDQUFDO0lBQ3JFLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
index 9291918..2e90348 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
@@ -18,8 +18,7 @@ import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } f
  * @export
  * @class MixedRouteHeuristicGasModelFactory
  */
-export declare class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory {
-    constructor();
+export declare class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory<MixedRouteWithValidQuote> {
     buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<MixedRouteWithValidQuote>>;
     private estimateGas;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
index ced2c98..cef1405 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
@@ -8,15 +8,15 @@ const bignumber_1 = require("@ethersproject/bignumber");
 const router_sdk_1 = require("@uniswap/router-sdk");
 const v2_sdk_1 = require("@uniswap/v2-sdk");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
 const jsbi_1 = __importDefault(require("jsbi"));
-const lodash_1 = __importDefault(require("lodash"));
 const __1 = require("../../../..");
 const util_1 = require("../../../../util");
 const amounts_1 = require("../../../../util/amounts");
 const gas_factory_helpers_1 = require("../../../../util/gas-factory-helpers");
+const gas_costs_1 = require("../gas-costs");
 const gas_model_1 = require("../gas-model");
 const v2_heuristic_gas_model_1 = require("../v2/v2-heuristic-gas-model");
-const gas_costs_1 = require("../v3/gas-costs");
 /**
  * Computes a gas estimate for a mixed route swap using heuristics.
  * Considers number of hops in the route, number of ticks crossed
@@ -36,9 +36,6 @@ const gas_costs_1 = require("../v3/gas-costs");
  * @class MixedRouteHeuristicGasModelFactory
  */
 class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
-    constructor() {
-        super();
-    }
     async buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }) {
         const nativeCurrency = __1.WRAPPED_NATIVE_CURRENCY[chainId];
         const usdPool = pools.usdPool;
@@ -106,30 +103,47 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
         };
     }
     estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
-        const totalInitializedTicksCrossed = bignumber_1.BigNumber.from(Math.max(1, lodash_1.default.sum(routeWithValidQuote.initializedTicksCrossedList)));
+        const totalInitializedTicksCrossed = this.totalInitializedTicksCrossed(routeWithValidQuote.initializedTicksCrossedList);
         /**
          * Since we must make a separate call to multicall for each v3 and v2 section, we will have to
          * add the BASE_SWAP_COST to each section.
          */
+        let baseGasUseV2Only = bignumber_1.BigNumber.from(0);
+        let baseGasUseV3Only = bignumber_1.BigNumber.from(0);
         let baseGasUse = bignumber_1.BigNumber.from(0);
+        let routeContainsV4Pool = false;
         const route = routeWithValidQuote.route;
         const res = (0, router_sdk_1.partitionMixedRouteByProtocol)(route);
         res.map((section) => {
             if (section.every((pool) => pool instanceof v3_sdk_1.Pool)) {
-                baseGasUse = baseGasUse.add((0, gas_costs_1.BASE_SWAP_COST)(chainId));
-                baseGasUse = baseGasUse.add((0, gas_costs_1.COST_PER_HOP)(chainId).mul(section.length));
+                baseGasUseV3Only = baseGasUseV3Only.add((0, gas_costs_1.BASE_SWAP_COST)(chainId));
+                baseGasUseV3Only = baseGasUseV3Only.add((0, gas_costs_1.COST_PER_HOP)(chainId).mul(section.length));
+                baseGasUse = baseGasUse.add(baseGasUseV3Only);
             }
             else if (section.every((pool) => pool instanceof v2_sdk_1.Pair)) {
-                baseGasUse = baseGasUse.add(v2_heuristic_gas_model_1.BASE_SWAP_COST);
-                baseGasUse = baseGasUse.add(
+                baseGasUseV2Only = baseGasUseV2Only.add(v2_heuristic_gas_model_1.BASE_SWAP_COST);
+                baseGasUseV2Only = baseGasUseV2Only.add(
                 /// same behavior in v2 heuristic gas model factory
                 v2_heuristic_gas_model_1.COST_PER_EXTRA_HOP.mul(section.length - 1));
+                baseGasUse = baseGasUse.add(baseGasUseV2Only);
+            }
+            else if (section.every((pool) => pool instanceof v4_sdk_1.Pool)) {
+                routeContainsV4Pool = true;
             }
         });
         const tickGasUse = (0, gas_costs_1.COST_PER_INIT_TICK)(chainId).mul(totalInitializedTicksCrossed);
         const uninitializedTickGasUse = gas_costs_1.COST_PER_UNINIT_TICK.mul(0);
-        // base estimate gas used based on chainId estimates for hops and ticks gas useage
-        baseGasUse = baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);
+        if (routeContainsV4Pool) {
+            // If the route contains a V4 pool, we know we are hitting mixed quoter V2, not mixed quoter V1,
+            // Hence we already know the v3 and v4 hops part of the quoter gas estimate.
+            // We only need to add the base gas use for the v2 part of the route,
+            // because mixed quoter doesn't have a way to estimate gas for v2 pools swaps.
+            baseGasUse = baseGasUseV2Only.add(routeWithValidQuote.quoterGasEstimate);
+        }
+        else {
+            // base estimate gas used based on chainId estimates for hops and ticks gas useage
+            baseGasUse = baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);
+        }
         if (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) {
             baseGasUse = baseGasUse.add(providerConfig.additionalGasOverhead);
         }
@@ -144,4 +158,4 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
     }
 }
 exports.MixedRouteHeuristicGasModelFactory = MixedRouteHeuristicGasModelFactory;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx3REFBcUQ7QUFDckQsb0RBQW9FO0FBRXBFLDRDQUF1QztBQUN2Qyw0Q0FBdUM7QUFDdkMsZ0RBQXdCO0FBQ3hCLG9EQUF1QjtBQUV2QixtQ0FBc0Q7QUFDdEQsMkNBQXVDO0FBQ3ZDLHNEQUEwRDtBQUMxRCw4RUFBdUU7QUFFdkUsNENBTXNCO0FBQ3RCLHlFQUdzQztBQUN0QywrQ0FLeUI7QUFFekI7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBYSxrQ0FBbUMsU0FBUSxtQ0FBdUI7SUFDN0U7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsS0FBSyxFQUNMLFVBQVUsRUFDVixjQUFjLEVBQUUsY0FBYyxFQUM5QixjQUFjLEdBQ2tCO1FBR2hDLE1BQU0sY0FBYyxHQUFHLDJCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQ3pELE1BQU0sT0FBTyxHQUFTLEtBQUssQ0FBQyxPQUFPLENBQUM7UUFDcEMsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDO1lBQ3BELENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTTtZQUNoQixDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUVuQixJQUFJLFlBQXlCLENBQUM7UUFDOUIsZ0hBQWdIO1FBQ2hILElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLGNBQWMsRUFBRTtZQUN4RCxl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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx3REFBcUQ7QUFDckQsb0RBQW9FO0FBRXBFLDRDQUF1QztBQUN2Qyw0Q0FBaUQ7QUFDakQsNENBQWlEO0FBQ2pELGdEQUF3QjtBQUd4QixtQ0FBc0Q7QUFDdEQsMkNBQXVDO0FBQ3ZDLHNEQUEwRDtBQUMxRCw4RUFBdUU7QUFFdkUsNENBS3NCO0FBQ3RCLDRDQU1zQjtBQUN0Qix5RUFHc0M7QUFFdEM7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBYSxrQ0FBbUMsU0FBUSxtQ0FBaUQ7SUFDaEcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxFQUN6QixPQUFPLEVBQ1AsV0FBVyxFQUNYLEtBQUssRUFDTCxVQUFVLEVBQ1YsY0FBYyxFQUFFLGNBQWMsRUFDOUIsY0FBYyxHQUNrQjtRQUdoQyxNQUFNLGNBQWMsR0FBRywyQkFBdUIsQ0FBQyxPQUFPLENBQUUsQ0FBQztRQUN6RCxNQUFNLE9BQU8sR0FBVyxLQUFLLENBQUMsT0FBTyxDQUFDO1FBQ3RDLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQztZQUNwRCxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU07WUFDaEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFFbkIsSUFBSSxZQUF5QixDQUFDO1FBQzlCLGdIQUFnSDtRQUNoSCxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxjQUFjLEVBQUU7WUFDeEQsZUFBZTtZQUNmLFlBQVksR0FBRyxNQUFNLElBQUEscUNBQWUs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.d.ts
new file mode 100644
index 0000000..00f761d
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.d.ts
@@ -0,0 +1,15 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { BaseProvider } from '@ethersproject/providers';
+import { ChainId } from '@uniswap/sdk-core';
+import { V3RouteWithValidQuote, V4RouteWithValidQuote } from '../entities';
+import { BuildOnChainGasModelFactoryType, GasModelProviderConfig, IGasModel, IOnChainGasModelFactory } from './gas-model';
+export declare abstract class TickBasedHeuristicGasModelFactory<TRouteWithValidQuote extends V3RouteWithValidQuote | V4RouteWithValidQuote> extends IOnChainGasModelFactory<TRouteWithValidQuote> {
+    protected provider: BaseProvider;
+    protected constructor(provider: BaseProvider);
+    protected buildGasModelInternal({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<TRouteWithValidQuote>>;
+    protected estimateGas(routeWithValidQuote: TRouteWithValidQuote, gasPriceWei: BigNumber, chainId: ChainId, providerConfig?: GasModelProviderConfig): {
+        totalGasCostNativeCurrency: import("@uniswap/sdk-core").CurrencyAmount<import("@uniswap/sdk-core").Token>;
+        totalInitializedTicksCrossed: number;
+        baseGasUse: BigNumber;
+    };
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.js
new file mode 100644
index 0000000..5b58b55
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.js
@@ -0,0 +1,186 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.TickBasedHeuristicGasModelFactory = void 0;
+const bignumber_1 = require("@ethersproject/bignumber");
+const sdk_core_1 = require("@uniswap/sdk-core");
+const util_1 = require("../../../util");
+const gas_factory_helpers_1 = require("../../../util/gas-factory-helpers");
+const gas_costs_1 = require("./gas-costs");
+const gas_model_1 = require("./gas-model");
+class TickBasedHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
+    constructor(provider) {
+        super();
+        this.provider = provider;
+    }
+    async buildGasModelInternal({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }) {
+        const l2GasData = l2GasDataProvider
+            ? await l2GasDataProvider.getGasData(providerConfig)
+            : undefined;
+        const usdPool = pools.usdPool;
+        const calculateL1GasFees = async (route) => {
+            return await (0, gas_factory_helpers_1.calculateL1GasFeesHelper)(route, chainId, usdPool, quoteToken, pools.nativeAndQuoteTokenV3Pool, this.provider, l2GasData, providerConfig);
+        };
+        const nativeCurrency = util_1.WRAPPED_NATIVE_CURRENCY[chainId];
+        let nativeAmountPool = null;
+        if (!amountToken.equals(nativeCurrency)) {
+            nativeAmountPool = pools.nativeAndAmountTokenV3Pool;
+        }
+        const usdToken = usdPool.token0.equals(nativeCurrency)
+            ? usdPool.token1
+            : usdPool.token0;
+        const estimateGasCost = (routeWithValidQuote) => {
+            var _a;
+            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
+            /** ------ MARK: USD logic  -------- */
+            // We only need to go through V2 and V3 USD pools for now,
+            // because v4 pools don't have deep liquidity yet.
+            // If one day, we see v3 usd pools have much deeper liquidity than v2/v3 usd pools, then we will add v4 pools for gas cost
+            const gasCostInTermsOfUSD = (0, gas_model_1.getQuoteThroughNativePool)(chainId, totalGasCostNativeCurrency, usdPool);
+            /** ------ MARK: Conditional logic run if gasToken is specified  -------- */
+            const nativeAndSpecifiedGasTokenPool = pools.nativeAndSpecifiedGasTokenV3Pool;
+            let gasCostInTermsOfGasToken = undefined;
+            // we don't want to fetch the gasToken pool if the gasToken is the native currency
+            if (nativeAndSpecifiedGasTokenPool) {
+                // We only need to go through V2 and V3 USD pools for now,
+                // because v4 pools don't have deep liquidity yet.
+                // If one day, we see v3 usd pools have much deeper liquidity than v2/v3 usd pools, then we will add v4 pools for gas cost
+                gasCostInTermsOfGasToken = (0, gas_model_1.getQuoteThroughNativePool)(chainId, totalGasCostNativeCurrency, nativeAndSpecifiedGasTokenPool);
+            }
+            // if the gasToken is the native currency, we can just use the totalGasCostNativeCurrency
+            else if ((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.gasToken) === null || _a === void 0 ? void 0 : _a.equals(nativeCurrency)) {
+                gasCostInTermsOfGasToken = totalGasCostNativeCurrency;
+            }
+            /** ------ MARK: return early if quoteToken is wrapped native currency ------- */
+            if (quoteToken.equals(nativeCurrency)) {
+                return {
+                    gasEstimate: baseGasUse,
+                    gasCostInToken: totalGasCostNativeCurrency,
+                    gasCostInUSD: gasCostInTermsOfUSD,
+                    gasCostInGasToken: gasCostInTermsOfGasToken,
+                };
+            }
+            /** ------ MARK: Main gas logic in terms of quote token -------- */
+            // Since the quote token is not in the native currency, we convert the gas cost to be in terms of the quote token.
+            // We do this by getting the highest liquidity <quoteToken>/<nativeCurrency> pool. eg. <quoteToken>/ETH pool.
+            const nativeAndQuoteTokenPool = pools.nativeAndQuoteTokenV3Pool;
+            let gasCostInTermsOfQuoteToken = null;
+            if (nativeAndQuoteTokenPool) {
+                // We only need to go through V2 and V3 USD pools for now,
+                // because v4 pools don't have deep liquidity yet.
+                // If one day, we see v3 usd pools have much deeper liquidity than v2/v3 usd pools, then we will add v4 pools for gas cost
+                gasCostInTermsOfQuoteToken = (0, gas_model_1.getQuoteThroughNativePool)(chainId, totalGasCostNativeCurrency, nativeAndQuoteTokenPool);
+            }
+            // We may have a nativeAmountPool, but not a nativePool
+            else {
+                util_1.log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`);
+            }
+            /** ------ MARK: (V3 and V4 ONLY) Logic for calculating synthetic gas cost in terms of amount token -------- */
+            // TODO: evaluate effectiveness and potentially refactor
+            // Highest liquidity pool for the non quote token / ETH
+            // A pool with the non quote token / ETH should not be required and errors should be handled separately
+            if (nativeAmountPool) {
+                // get current execution price (amountToken / quoteToken)
+                const executionPrice = new sdk_core_1.Price(routeWithValidQuote.amount.currency, routeWithValidQuote.quote.currency, routeWithValidQuote.amount.quotient, routeWithValidQuote.quote.quotient);
+                const inputIsToken0 = nativeAmountPool.token0.address == nativeCurrency.address;
+                // ratio of input / native
+                const nativeAndAmountTokenPrice = inputIsToken0
+                    ? nativeAmountPool.token0Price
+                    : nativeAmountPool.token1Price;
+                const gasCostInTermsOfAmountToken = nativeAndAmountTokenPrice.quote(totalGasCostNativeCurrency);
+                // Convert gasCostInTermsOfAmountToken to quote token using execution price
+                let syntheticGasCostInTermsOfQuoteToken;
+                try {
+                    syntheticGasCostInTermsOfQuoteToken = executionPrice.quote(gasCostInTermsOfAmountToken);
+                }
+                catch (err) {
+                    if (err instanceof RangeError &&
+                        err.message.includes('Division by zero')) {
+                        // If the quote fails (division by zero), set syntheticGasCostInTermsOfQuoteToken to null
+                        syntheticGasCostInTermsOfQuoteToken = null;
+                    }
+                    else {
+                        // any other error, throw
+                        throw err;
+                    }
+                }
+                // Note that the syntheticGasCost being lessThan the original quoted value is not always strictly better
+                // e.g. the scenario where the amountToken/ETH pool is very illiquid as well and returns an extremely small number
+                // however, it is better to have the gasEstimation be almost 0 than almost infinity, as the user will still receive a quote
+                if (syntheticGasCostInTermsOfQuoteToken !== null &&
+                    (gasCostInTermsOfQuoteToken === null ||
+                        syntheticGasCostInTermsOfQuoteToken.lessThan(gasCostInTermsOfQuoteToken.asFraction))) {
+                    util_1.log.info({
+                        nativeAndAmountTokenPrice: nativeAndAmountTokenPrice.toSignificant(6),
+                        gasCostInTermsOfQuoteToken: gasCostInTermsOfQuoteToken
+                            ? gasCostInTermsOfQuoteToken.toExact()
+                            : 0,
+                        gasCostInTermsOfAmountToken: gasCostInTermsOfAmountToken.toExact(),
+                        executionPrice: executionPrice.toSignificant(6),
+                        syntheticGasCostInTermsOfQuoteToken: syntheticGasCostInTermsOfQuoteToken === null || syntheticGasCostInTermsOfQuoteToken === void 0 ? void 0 : syntheticGasCostInTermsOfQuoteToken.toSignificant(6),
+                    }, 'New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original');
+                    gasCostInTermsOfQuoteToken = syntheticGasCostInTermsOfQuoteToken;
+                }
+            }
+            // If gasCostInTermsOfQuoteToken is null, both attempts to calculate gasCostInTermsOfQuoteToken failed (nativePool and amountNativePool)
+            if (gasCostInTermsOfQuoteToken === null) {
+                util_1.log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol}, or amount Token, ${amountToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);
+                return {
+                    gasEstimate: baseGasUse,
+                    gasCostInToken: util_1.CurrencyAmount.fromRawAmount(quoteToken, 0),
+                    gasCostInUSD: util_1.CurrencyAmount.fromRawAmount(usdToken, 0),
+                };
+            }
+            return {
+                gasEstimate: baseGasUse,
+                gasCostInToken: gasCostInTermsOfQuoteToken,
+                gasCostInUSD: gasCostInTermsOfUSD,
+                gasCostInGasToken: gasCostInTermsOfGasToken,
+            };
+        };
+        return {
+            estimateGasCost: estimateGasCost.bind(this),
+            calculateL1GasFees,
+        };
+    }
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
+        var _a;
+        const totalInitializedTicksCrossed = this.totalInitializedTicksCrossed(routeWithValidQuote.initializedTicksCrossedList);
+        const totalHops = bignumber_1.BigNumber.from(routeWithValidQuote.route.pools.length);
+        let hopsGasUse = (0, gas_costs_1.COST_PER_HOP)(chainId).mul(totalHops);
+        // We have observed that this algorithm tends to underestimate single hop swaps.
+        // We add a buffer in the case of a single hop swap.
+        if (totalHops.eq(1)) {
+            hopsGasUse = hopsGasUse.add((0, gas_costs_1.SINGLE_HOP_OVERHEAD)(chainId));
+        }
+        // Some tokens have extremely expensive transferFrom functions, which causes
+        // us to underestimate them by a large amount. For known tokens, we apply an
+        // adjustment.
+        const tokenOverhead = (0, gas_costs_1.TOKEN_OVERHEAD)(chainId, routeWithValidQuote.route);
+        const tickGasUse = (0, gas_costs_1.COST_PER_INIT_TICK)(chainId).mul(totalInitializedTicksCrossed);
+        const uninitializedTickGasUse = gas_costs_1.COST_PER_UNINIT_TICK.mul(0);
+        /*
+        // Eventually we can just use the quoter gas estimate for the base gas use
+        // It will be more accurate than doing the offchain gas estimate like below
+        // It will become more critical when we are going to support v4 hookful routing,
+        // where we have no idea how much gas the hook(s) will cost.
+        // const baseGasUse = routeWithValidQuote.quoterGasEstimate
+        */
+        // base estimate gas used based on chainId estimates for hops and ticks gas useage
+        const baseGasUse = (0, gas_costs_1.BASE_SWAP_COST)(chainId)
+            .add(hopsGasUse)
+            .add(tokenOverhead)
+            .add(tickGasUse)
+            .add(uninitializedTickGasUse)
+            .add((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) !== null && _a !== void 0 ? _a : bignumber_1.BigNumber.from(0));
+        const baseGasCostWei = gasPriceWei.mul(baseGasUse);
+        const wrappedCurrency = util_1.WRAPPED_NATIVE_CURRENCY[chainId];
+        const totalGasCostNativeCurrency = util_1.CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
+        return {
+            totalGasCostNativeCurrency,
+            totalInitializedTicksCrossed,
+            baseGasUse,
+        };
+    }
+}
+exports.TickBasedHeuristicGasModelFactory = TickBasedHeuristicGasModelFactory;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGljay1iYXNlZC1oZXVyaXN0aWMtZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdGljay1iYXNlZC1oZXVyaXN0aWMtZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUVyRCxnREFBbUQ7QUFFbkQsd0NBQTZFO0FBQzdFLDJFQUE2RTtBQUU3RSwyQ0FPcUI7QUFDckIsMkNBTXFCO0FBRXJCLE1BQXNCLGlDQUVwQixTQUFRLG1DQUE2QztJQUdyRCxZQUFzQixRQUFzQjtRQUMxQyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFUyxLQUFLLENBQUMscUJBQXFCLENBQUMsRUFDcEMsT0FBTyxFQUNQLFdBQVcsRUFDWCxLQUFLLEVBQ0wsV0FBVyxFQUNYLFVBQVUsRUFDVixpQkFBaUIsRUFDakIsY0FBYyxHQUNrQjtRQUdoQyxNQUFNLFNBQVMsR0FBRyxpQkFBaUI7WUFDakMsQ0FBQyxDQUFDLE1BQU0saUJBQWlCLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQztZQUNwRCxDQUFDLENBQUMsU0FBUyxDQUFDO1FBRWQsTUFBTSxPQUFPLEdBQVMsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUVwQyxNQUFNLGtCQUFrQixHQUFHLEtBQUssRUFDOUIsS0FBNkIsRUFNNUIsRUFBRTtZQUNILE9BQU8sTUFBTSxJQUFBLDhDQUF3QixFQUNuQyxLQUFLLEVBQ0wsT0FBTyxFQUNQLE9BQU8sRUFDUCxVQUFVLEVBQ1YsS0FBSyxDQUFDLHlCQUF5QixFQUMvQixJQUFJLENBQUMsUUFBUSxFQUNiLFNBQVMsRUFDVCxjQUFjLENBQ2YsQ0FBQztRQUNKLENBQUMsQ0FBQztRQUVGLE1BQU0sY0FBYyxHQUFHLDhCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDO1FB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
index 1bae61e..ee33a71 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
@@ -1,7 +1,7 @@
 import { BigNumber } from '@ethersproject/bignumber';
+import { BaseProvider } from '@ethersproject/providers';
 import { V2RouteWithValidQuote } from '../../entities/route-with-valid-quote';
 import { BuildV2GasModelFactoryType, IGasModel, IV2GasModelFactory } from '../gas-model';
-import { BaseProvider } from '@ethersproject/providers';
 export declare const BASE_SWAP_COST: BigNumber;
 export declare const COST_PER_EXTRA_HOP: BigNumber;
 /**
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
index 2846c7b..8ee75af 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
@@ -166,4 +166,4 @@ class V2HeuristicGasModelFactory extends gas_model_1.IV2GasModelFactory {
     }
 }
 exports.V2HeuristicGasModelFactory = V2HeuristicGasModelFactory;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsd0RBQXFEO0FBR3JELG9EQUF1QjtBQUl2QiwyQ0FBZ0U7QUFDaEUsc0RBQTBEO0FBQzFELDhFQUc4QztBQUU5Qyw0Q0FPc0I7QUFHdEIsd0RBQXdEO0FBQzNDLFFBQUEsY0FBYyxHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsNkNBQTZDO0FBRW5HLHVDQUF1QztBQUMxQixRQUFBLGtCQUFrQixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsNENBQTRDO0FBRXJHOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0gsTUFBYSwwQkFBMkIsU0FBUSw4QkFBa0I7SUFHaEUsWUFBWSxRQUFzQjtRQUNoQyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsWUFBWSxFQUNaLEtBQUssRUFDTCxpQkFBaUIsRUFDakIsY0FBYyxHQUNhO1FBQzNCLE1BQU0sU0FBUyxHQUFHLGlCQUFpQjtZQUNqQyxDQUFDLENBQUMsTUFBTSxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDO1lBQ3BELENBQUMsQ0FBQyxTQUFTLENBQUM7UUFFZCxNQUFNLGNBQWMsR0FBa0IsSUFBSSxDQUFDLDBCQUEwQixDQUNuRSxPQUFPLEVBQ1AsWUFBWSxFQUNaLGNBQWMsQ0FDZixDQUFDO1FBRUYsK0dBQStHO1FBQy9HLE1BQU0scUNBQXFDLEdBQ3pDLENBQUEsY0FBYyxh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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsd0RBQXFEO0FBR3JELG9EQUF1QjtBQUt2QiwyQ0FBZ0U7QUFDaEUsc0RBQTBEO0FBQzFELDhFQUc4QztBQUU5Qyw0Q0FPc0I7QUFFdEIsd0RBQXdEO0FBQzNDLFFBQUEsY0FBYyxHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsNkNBQTZDO0FBRW5HLHVDQUF1QztBQUMxQixRQUFBLGtCQUFrQixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsNENBQTRDO0FBRXJHOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0gsTUFBYSwwQkFBMkIsU0FBUSw4QkFBa0I7SUFHaEUsWUFBWSxRQUFzQjtRQUNoQyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsWUFBWSxFQUNaLEtBQUssRUFDTCxpQkFBaUIsRUFDakIsY0FBYyxHQUNhO1FBQzNCLE1BQU0sU0FBUyxHQUFHLGlCQUFpQjtZQUNqQyxDQUFDLENBQUMsTUFBTSxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDO1lBQ3BELENBQUMsQ0FBQyxTQUFTLENBQUM7UUFFZCxNQUFNLGNBQWMsR0FBa0IsSUFBSSxDQUFDLDBCQUEwQixDQUNuRSxPQUFPLEVBQ1AsWUFBWSxFQUNaLGNBQWMsQ0FDZixDQUFDO1FBRUYsK0dBQStHO1FBQy9HLE1BQU0scUNBQXFDLEdBQ3pDLENBQUEsY0FBYyxh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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
deleted file mode 100644
index f599bf3..0000000
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
+++ /dev/null
@@ -1,166 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.NATIVE_OVERHEAD = exports.NATIVE_UNWRAP_OVERHEAD = exports.NATIVE_WRAP_OVERHEAD = exports.TOKEN_OVERHEAD = exports.SINGLE_HOP_OVERHEAD = exports.COST_PER_HOP = exports.COST_PER_INIT_TICK = exports.BASE_SWAP_COST = exports.COST_PER_UNINIT_TICK = void 0;
-const bignumber_1 = require("@ethersproject/bignumber");
-const sdk_core_1 = require("@uniswap/sdk-core");
-const providers_1 = require("../../../../providers");
-// Cost for crossing an uninitialized tick.
-exports.COST_PER_UNINIT_TICK = bignumber_1.BigNumber.from(0);
-//l2 execution fee on optimism is roughly the same as mainnet
-const BASE_SWAP_COST = (id) => {
-    switch (id) {
-        case sdk_core_1.ChainId.MAINNET:
-        case sdk_core_1.ChainId.GOERLI:
-        case sdk_core_1.ChainId.SEPOLIA:
-        case sdk_core_1.ChainId.OPTIMISM:
-        case sdk_core_1.ChainId.OPTIMISM_GOERLI:
-        case sdk_core_1.ChainId.OPTIMISM_SEPOLIA:
-        case sdk_core_1.ChainId.BNB:
-        case sdk_core_1.ChainId.AVALANCHE:
-        case sdk_core_1.ChainId.BASE:
-        case sdk_core_1.ChainId.BASE_GOERLI:
-        case sdk_core_1.ChainId.ZORA:
-        case sdk_core_1.ChainId.ZORA_SEPOLIA:
-        case sdk_core_1.ChainId.ROOTSTOCK:
-        case sdk_core_1.ChainId.BLAST:
-        case sdk_core_1.ChainId.ZKSYNC:
-            return bignumber_1.BigNumber.from(2000);
-        case sdk_core_1.ChainId.ARBITRUM_ONE:
-        case sdk_core_1.ChainId.ARBITRUM_GOERLI:
-        case sdk_core_1.ChainId.ARBITRUM_SEPOLIA:
-            return bignumber_1.BigNumber.from(5000);
-        case sdk_core_1.ChainId.POLYGON:
-        case sdk_core_1.ChainId.POLYGON_MUMBAI:
-            return bignumber_1.BigNumber.from(2000);
-        case sdk_core_1.ChainId.CELO:
-        case sdk_core_1.ChainId.CELO_ALFAJORES:
-            return bignumber_1.BigNumber.from(2000);
-        //TODO determine if sufficient
-        case sdk_core_1.ChainId.GNOSIS:
-            return bignumber_1.BigNumber.from(2000);
-        case sdk_core_1.ChainId.MOONBEAM:
-            return bignumber_1.BigNumber.from(2000);
-    }
-};
-exports.BASE_SWAP_COST = BASE_SWAP_COST;
-const COST_PER_INIT_TICK = (id) => {
-    switch (id) {
-        case sdk_core_1.ChainId.MAINNET:
-        case sdk_core_1.ChainId.GOERLI:
-        case sdk_core_1.ChainId.SEPOLIA:
-        case sdk_core_1.ChainId.BNB:
-        case sdk_core_1.ChainId.AVALANCHE:
-            return bignumber_1.BigNumber.from(31000);
-        case sdk_core_1.ChainId.OPTIMISM:
-        case sdk_core_1.ChainId.OPTIMISM_GOERLI:
-        case sdk_core_1.ChainId.OPTIMISM_SEPOLIA:
-        case sdk_core_1.ChainId.BASE:
-        case sdk_core_1.ChainId.BASE_GOERLI:
-        case sdk_core_1.ChainId.ZORA:
-        case sdk_core_1.ChainId.ZORA_SEPOLIA:
-        case sdk_core_1.ChainId.ROOTSTOCK:
-        case sdk_core_1.ChainId.BLAST:
-        case sdk_core_1.ChainId.ZKSYNC:
-            return bignumber_1.BigNumber.from(31000);
-        case sdk_core_1.ChainId.ARBITRUM_ONE:
-        case sdk_core_1.ChainId.ARBITRUM_GOERLI:
-        case sdk_core_1.ChainId.ARBITRUM_SEPOLIA:
-            return bignumber_1.BigNumber.from(31000);
-        case sdk_core_1.ChainId.POLYGON:
-        case sdk_core_1.ChainId.POLYGON_MUMBAI:
-            return bignumber_1.BigNumber.from(31000);
-        case sdk_core_1.ChainId.CELO:
-        case sdk_core_1.ChainId.CELO_ALFAJORES:
-            return bignumber_1.BigNumber.from(31000);
-        case sdk_core_1.ChainId.GNOSIS:
-            return bignumber_1.BigNumber.from(31000);
-        case sdk_core_1.ChainId.MOONBEAM:
-            return bignumber_1.BigNumber.from(31000);
-    }
-};
-exports.COST_PER_INIT_TICK = COST_PER_INIT_TICK;
-const COST_PER_HOP = (id) => {
-    switch (id) {
-        case sdk_core_1.ChainId.MAINNET:
-        case sdk_core_1.ChainId.GOERLI:
-        case sdk_core_1.ChainId.SEPOLIA:
-        case sdk_core_1.ChainId.BNB:
-        case sdk_core_1.ChainId.OPTIMISM:
-        case sdk_core_1.ChainId.OPTIMISM_GOERLI:
-        case sdk_core_1.ChainId.OPTIMISM_SEPOLIA:
-        case sdk_core_1.ChainId.AVALANCHE:
-        case sdk_core_1.ChainId.BASE:
-        case sdk_core_1.ChainId.BASE_GOERLI:
-        case sdk_core_1.ChainId.ZORA:
-        case sdk_core_1.ChainId.ZORA_SEPOLIA:
-        case sdk_core_1.ChainId.ROOTSTOCK:
-        case sdk_core_1.ChainId.BLAST:
-        case sdk_core_1.ChainId.ZKSYNC:
-            return bignumber_1.BigNumber.from(80000);
-        case sdk_core_1.ChainId.ARBITRUM_ONE:
-        case sdk_core_1.ChainId.ARBITRUM_GOERLI:
-        case sdk_core_1.ChainId.ARBITRUM_SEPOLIA:
-            return bignumber_1.BigNumber.from(80000);
-        case sdk_core_1.ChainId.POLYGON:
-        case sdk_core_1.ChainId.POLYGON_MUMBAI:
-            return bignumber_1.BigNumber.from(80000);
-        case sdk_core_1.ChainId.CELO:
-        case sdk_core_1.ChainId.CELO_ALFAJORES:
-            return bignumber_1.BigNumber.from(80000);
-        case sdk_core_1.ChainId.GNOSIS:
-            return bignumber_1.BigNumber.from(80000);
-        case sdk_core_1.ChainId.MOONBEAM:
-            return bignumber_1.BigNumber.from(80000);
-    }
-};
-exports.COST_PER_HOP = COST_PER_HOP;
-const SINGLE_HOP_OVERHEAD = (_id) => {
-    return bignumber_1.BigNumber.from(15000);
-};
-exports.SINGLE_HOP_OVERHEAD = SINGLE_HOP_OVERHEAD;
-const TOKEN_OVERHEAD = (id, route) => {
-    const tokens = route.tokenPath;
-    let overhead = bignumber_1.BigNumber.from(0);
-    if (id == sdk_core_1.ChainId.MAINNET) {
-        // AAVE's transfer contains expensive governance snapshotting logic. We estimate
-        // it at around 150k.
-        if (tokens.some((t) => t.equals(providers_1.AAVE_MAINNET))) {
-            overhead = overhead.add(150000);
-        }
-        // LDO's reaches out to an external token controller which adds a large overhead
-        // of around 150k.
-        if (tokens.some((t) => t.equals(providers_1.LIDO_MAINNET))) {
-            overhead = overhead.add(150000);
-        }
-    }
-    return overhead;
-};
-exports.TOKEN_OVERHEAD = TOKEN_OVERHEAD;
-// TODO: change per chain
-const NATIVE_WRAP_OVERHEAD = (id) => {
-    switch (id) {
-        default:
-            return bignumber_1.BigNumber.from(27938);
-    }
-};
-exports.NATIVE_WRAP_OVERHEAD = NATIVE_WRAP_OVERHEAD;
-const NATIVE_UNWRAP_OVERHEAD = (id) => {
-    switch (id) {
-        default:
-            return bignumber_1.BigNumber.from(36000);
-    }
-};
-exports.NATIVE_UNWRAP_OVERHEAD = NATIVE_UNWRAP_OVERHEAD;
-const NATIVE_OVERHEAD = (chainId, amount, quote) => {
-    if (amount.isNative) {
-        // need to wrap eth in
-        return (0, exports.NATIVE_WRAP_OVERHEAD)(chainId);
-    }
-    if (quote.isNative) {
-        // need to unwrap eth out
-        return (0, exports.NATIVE_UNWRAP_OVERHEAD)(chainId);
-    }
-    return bignumber_1.BigNumber.from(0);
-};
-exports.NATIVE_OVERHEAD = NATIVE_OVERHEAD;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUNyRCxnREFBNkQ7QUFFN0QscURBQW1FO0FBR25FLDJDQUEyQztBQUM5QixRQUFBLG9CQUFvQixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXRELDZEQUE2RDtBQUN0RCxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQVcsRUFBYSxFQUFFO0lBQ3ZELFFBQVEsRUFBRSxFQUFFO1FBQ1YsS0FBSyxrQkFBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLGtCQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3BCLEtBQUssa0JBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxrQkFBTyxDQUFDLFFBQVEsQ0FBQztRQUN0QixLQUFLLGtCQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBQztRQUM5QixLQUFLLGtCQUFPLENBQUMsR0FBRyxDQUFDO1FBQ2pCLEtBQUssa0JBQU8sQ0FBQyxTQUFTLENBQUM7UUFDdkIsS0FBSyxrQkFBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLGtCQUFPLENBQUMsV0FBVyxDQUFDO1FBQ3pCLEtBQUssa0JBQU8sQ0FBQyxJQUFJLENBQUM7UUFDbEIsS0FBSyxrQkFBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLGtCQUFPLENBQUMsU0FBUyxDQUFDO1FBQ3ZCLEtBQUssa0JBQU8sQ0FBQyxLQUFLLENBQUM7UUFDbkIsS0FBSyxrQkFBTyxDQUFDLE1BQU07WUFDakIsT0FBTyxxQkFBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixLQUFLLGtCQUFPLENBQUMsWUFBWSxDQUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
index 3962e32..8c0af96 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
@@ -1,6 +1,7 @@
 import { V3RouteWithValidQuote } from '../../entities/route-with-valid-quote';
-import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } from '../gas-model';
+import { BuildOnChainGasModelFactoryType, IGasModel } from '../gas-model';
 import { BaseProvider } from '@ethersproject/providers';
+import { TickBasedHeuristicGasModelFactory } from '../tick-based-heuristic-gas-model';
 /**
  * Computes a gas estimate for a V3 swap using heuristics.
  * Considers number of hops in the route, number of ticks crossed
@@ -19,9 +20,7 @@ import { BaseProvider } from '@ethersproject/providers';
  * @export
  * @class V3HeuristicGasModelFactory
  */
-export declare class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
-    private provider;
+export declare class V3HeuristicGasModelFactory extends TickBasedHeuristicGasModelFactory<V3RouteWithValidQuote> {
     constructor(provider: BaseProvider);
-    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
-    private estimateGas;
+    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
index 2896110..d08580a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
@@ -1,18 +1,7 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.V3HeuristicGasModelFactory = void 0;
-const bignumber_1 = require("@ethersproject/bignumber");
-const sdk_core_1 = require("@uniswap/sdk-core");
-const lodash_1 = __importDefault(require("lodash"));
-const __1 = require("../../../..");
-const amounts_1 = require("../../../../util/amounts");
-const gas_factory_helpers_1 = require("../../../../util/gas-factory-helpers");
-const log_1 = require("../../../../util/log");
-const gas_model_1 = require("../gas-model");
-const gas_costs_1 = require("./gas-costs");
+const tick_based_heuristic_gas_model_1 = require("../tick-based-heuristic-gas-model");
 /**
  * Computes a gas estimate for a V3 swap using heuristics.
  * Considers number of hops in the route, number of ticks crossed
@@ -31,149 +20,22 @@ const gas_costs_1 = require("./gas-costs");
  * @export
  * @class V3HeuristicGasModelFactory
  */
-class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
+class V3HeuristicGasModelFactory extends tick_based_heuristic_gas_model_1.TickBasedHeuristicGasModelFactory {
     constructor(provider) {
-        super();
-        this.provider = provider;
+        super(provider);
     }
-    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }) {
-        const l2GasData = l2GasDataProvider
-            ? await l2GasDataProvider.getGasData(providerConfig)
-            : undefined;
-        const usdPool = pools.usdPool;
-        const calculateL1GasFees = async (route) => {
-            return await (0, gas_factory_helpers_1.calculateL1GasFeesHelper)(route, chainId, usdPool, quoteToken, pools.nativeAndQuoteTokenV3Pool, this.provider, l2GasData);
-        };
-        const nativeCurrency = __1.WRAPPED_NATIVE_CURRENCY[chainId];
-        let nativeAmountPool = null;
-        if (!amountToken.equals(nativeCurrency)) {
-            nativeAmountPool = pools.nativeAndAmountTokenV3Pool;
-        }
-        const usdToken = usdPool.token0.equals(nativeCurrency)
-            ? usdPool.token1
-            : usdPool.token0;
-        const estimateGasCost = (routeWithValidQuote) => {
-            var _a;
-            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
-            /** ------ MARK: USD logic  -------- */
-            const gasCostInTermsOfUSD = (0, gas_model_1.getQuoteThroughNativePool)(chainId, totalGasCostNativeCurrency, usdPool);
-            /** ------ MARK: Conditional logic run if gasToken is specified  -------- */
-            const nativeAndSpecifiedGasTokenPool = pools.nativeAndSpecifiedGasTokenV3Pool;
-            let gasCostInTermsOfGasToken = undefined;
-            // we don't want to fetch the gasToken pool if the gasToken is the native currency
-            if (nativeAndSpecifiedGasTokenPool) {
-                gasCostInTermsOfGasToken = (0, gas_model_1.getQuoteThroughNativePool)(chainId, totalGasCostNativeCurrency, nativeAndSpecifiedGasTokenPool);
-            }
-            // if the gasToken is the native currency, we can just use the totalGasCostNativeCurrency
-            else if ((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.gasToken) === null || _a === void 0 ? void 0 : _a.equals(nativeCurrency)) {
-                gasCostInTermsOfGasToken = totalGasCostNativeCurrency;
-            }
-            /** ------ MARK: return early if quoteToken is wrapped native currency ------- */
-            if (quoteToken.equals(nativeCurrency)) {
-                return {
-                    gasEstimate: baseGasUse,
-                    gasCostInToken: totalGasCostNativeCurrency,
-                    gasCostInUSD: gasCostInTermsOfUSD,
-                    gasCostInGasToken: gasCostInTermsOfGasToken,
-                };
-            }
-            /** ------ MARK: Main gas logic in terms of quote token -------- */
-            // Since the quote token is not in the native currency, we convert the gas cost to be in terms of the quote token.
-            // We do this by getting the highest liquidity <quoteToken>/<nativeCurrency> pool. eg. <quoteToken>/ETH pool.
-            const nativeAndQuoteTokenPool = pools.nativeAndQuoteTokenV3Pool;
-            let gasCostInTermsOfQuoteToken = null;
-            if (nativeAndQuoteTokenPool) {
-                gasCostInTermsOfQuoteToken = (0, gas_model_1.getQuoteThroughNativePool)(chainId, totalGasCostNativeCurrency, nativeAndQuoteTokenPool);
-            }
-            // We may have a nativeAmountPool, but not a nativePool
-            else {
-                log_1.log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`);
-            }
-            /** ------ MARK: (V3 ONLY) Logic for calculating synthetic gas cost in terms of amount token -------- */
-            // TODO: evaluate effectiveness and potentially refactor
-            // Highest liquidity pool for the non quote token / ETH
-            // A pool with the non quote token / ETH should not be required and errors should be handled separately
-            if (nativeAmountPool) {
-                // get current execution price (amountToken / quoteToken)
-                const executionPrice = new sdk_core_1.Price(routeWithValidQuote.amount.currency, routeWithValidQuote.quote.currency, routeWithValidQuote.amount.quotient, routeWithValidQuote.quote.quotient);
-                const inputIsToken0 = nativeAmountPool.token0.address == nativeCurrency.address;
-                // ratio of input / native
-                const nativeAndAmountTokenPrice = inputIsToken0
-                    ? nativeAmountPool.token0Price
-                    : nativeAmountPool.token1Price;
-                const gasCostInTermsOfAmountToken = nativeAndAmountTokenPrice.quote(totalGasCostNativeCurrency);
-                // Convert gasCostInTermsOfAmountToken to quote token using execution price
-                const syntheticGasCostInTermsOfQuoteToken = executionPrice.quote(gasCostInTermsOfAmountToken);
-                // Note that the syntheticGasCost being lessThan the original quoted value is not always strictly better
-                // e.g. the scenario where the amountToken/ETH pool is very illiquid as well and returns an extremely small number
-                // however, it is better to have the gasEstimation be almost 0 than almost infinity, as the user will still receive a quote
-                if (gasCostInTermsOfQuoteToken === null ||
-                    syntheticGasCostInTermsOfQuoteToken.lessThan(gasCostInTermsOfQuoteToken.asFraction)) {
-                    log_1.log.info({
-                        nativeAndAmountTokenPrice: nativeAndAmountTokenPrice.toSignificant(6),
-                        gasCostInTermsOfQuoteToken: gasCostInTermsOfQuoteToken
-                            ? gasCostInTermsOfQuoteToken.toExact()
-                            : 0,
-                        gasCostInTermsOfAmountToken: gasCostInTermsOfAmountToken.toExact(),
-                        executionPrice: executionPrice.toSignificant(6),
-                        syntheticGasCostInTermsOfQuoteToken: syntheticGasCostInTermsOfQuoteToken.toSignificant(6),
-                    }, 'New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original');
-                    gasCostInTermsOfQuoteToken = syntheticGasCostInTermsOfQuoteToken;
-                }
-            }
-            // If gasCostInTermsOfQuoteToken is null, both attempts to calculate gasCostInTermsOfQuoteToken failed (nativePool and amountNativePool)
-            if (gasCostInTermsOfQuoteToken === null) {
-                log_1.log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol}, or amount Token, ${amountToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);
-                return {
-                    gasEstimate: baseGasUse,
-                    gasCostInToken: amounts_1.CurrencyAmount.fromRawAmount(quoteToken, 0),
-                    gasCostInUSD: amounts_1.CurrencyAmount.fromRawAmount(usdToken, 0),
-                };
-            }
-            return {
-                gasEstimate: baseGasUse,
-                gasCostInToken: gasCostInTermsOfQuoteToken,
-                gasCostInUSD: gasCostInTermsOfUSD,
-                gasCostInGasToken: gasCostInTermsOfGasToken,
-            };
-        };
-        return {
-            estimateGasCost: estimateGasCost.bind(this),
-            calculateL1GasFees,
-        };
-    }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
-        var _a;
-        const totalInitializedTicksCrossed = bignumber_1.BigNumber.from(Math.max(1, lodash_1.default.sum(routeWithValidQuote.initializedTicksCrossedList)));
-        const totalHops = bignumber_1.BigNumber.from(routeWithValidQuote.route.pools.length);
-        let hopsGasUse = (0, gas_costs_1.COST_PER_HOP)(chainId).mul(totalHops);
-        // We have observed that this algorithm tends to underestimate single hop swaps.
-        // We add a buffer in the case of a single hop swap.
-        if (totalHops.eq(1)) {
-            hopsGasUse = hopsGasUse.add((0, gas_costs_1.SINGLE_HOP_OVERHEAD)(chainId));
-        }
-        // Some tokens have extremely expensive transferFrom functions, which causes
-        // us to underestimate them by a large amount. For known tokens, we apply an
-        // adjustment.
-        const tokenOverhead = (0, gas_costs_1.TOKEN_OVERHEAD)(chainId, routeWithValidQuote.route);
-        const tickGasUse = (0, gas_costs_1.COST_PER_INIT_TICK)(chainId).mul(totalInitializedTicksCrossed);
-        const uninitializedTickGasUse = gas_costs_1.COST_PER_UNINIT_TICK.mul(0);
-        // base estimate gas used based on chainId estimates for hops and ticks gas useage
-        const baseGasUse = (0, gas_costs_1.BASE_SWAP_COST)(chainId)
-            .add(hopsGasUse)
-            .add(tokenOverhead)
-            .add(tickGasUse)
-            .add(uninitializedTickGasUse)
-            .add((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) !== null && _a !== void 0 ? _a : bignumber_1.BigNumber.from(0));
-        const baseGasCostWei = gasPriceWei.mul(baseGasUse);
-        const wrappedCurrency = __1.WRAPPED_NATIVE_CURRENCY[chainId];
-        const totalGasCostNativeCurrency = amounts_1.CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
-        return {
-            totalGasCostNativeCurrency,
-            totalInitializedTicksCrossed,
-            baseGasUse,
-        };
+    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }) {
+        return await super.buildGasModelInternal({
+            chainId,
+            gasPriceWei,
+            pools,
+            amountToken,
+            quoteToken,
+            v2poolProvider,
+            l2GasDataProvider,
+            providerConfig,
+        });
     }
 }
 exports.V3HeuristicGasModelFactory = V3HeuristicGasModelFactory;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YzL3YzLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsd0RBQXFEO0FBQ3JELGdEQUFtRDtBQUVuRCxvREFBdUI7QUFFdkIsbUNBQXNEO0FBQ3RELHNEQUEwRDtBQUMxRCw4RUFBZ0Y7QUFDaEYsOENBQTJDO0FBRTNDLDRDQU1zQjtBQUV0QiwyQ0FPcUI7QUFHckI7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBYSwwQkFBMkIsU0FBUSxtQ0FBdUI7SUFHckUsWUFBWSxRQUFzQjtRQUNoQyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsS0FBSyxFQUNMLFdBQVcsRUFDWCxVQUFVLEVBQ1YsaUJBQWlCLEVBQ2pCLGNBQWMsR0FDa0I7UUFHaEMsTUFBTSxTQUFTLEdBQUcsaUJBQWlCO1lBQ2pDLENBQUMsQ0FBQyxNQUFNLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUM7WUFDcEQsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUVkLE1BQU0sT0FBTyxHQUFTLEtBQUssQ0FBQyxPQUFPLENBQUM7UUFFcEMsTUFBTSxrQkFBa0IsR0FBRyxLQUFLLEVBQzlCLEtBQThCLEVBTTdCLEVBQUU7WUFDSCxPQUFPLE1BQU0sSUFBQSw4Q0FBd0IsRUFDbkMsS0FBSyxFQUNMLE9BQU8sRUFDUCxPQUFPLEVBQ1AsVUFBVSxFQUNWLEtBQUssQ0FBQyx5QkFBeUIsRUFDL0IsSUFBSSxDQUFDLFFBQVEsRUFDYixTQUFTLENBQ1YsQ0FBQztRQUNKLENBQUMsQ0FBQztRQUVG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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YzL3YzLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBSUEsc0ZBQXNGO0FBRXRGOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUNILE1BQWEsMEJBQTJCLFNBQVEsa0VBQXdEO0lBQ3RHLFlBQVksUUFBc0I7UUFDaEMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFFZSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ2xDLE9BQU8sRUFDUCxXQUFXLEVBQ1gsS0FBSyxFQUNMLFdBQVcsRUFDWCxVQUFVLEVBQ1YsY0FBYyxFQUNkLGlCQUFpQixFQUNqQixjQUFjLEdBQ2tCO1FBR2hDLE9BQU8sTUFBTSxLQUFLLENBQUMscUJBQXFCLENBQUM7WUFDdkMsT0FBTztZQUNQLFdBQVc7WUFDWCxLQUFLO1lBQ0wsV0FBVztZQUNYLFVBQVU7WUFDVixjQUFjO1lBQ2QsaUJBQWlCO1lBQ2pCLGNBQWM7U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUE1QkQsZ0VBNEJDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.d.ts
new file mode 100644
index 0000000..98d9e76
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.d.ts
@@ -0,0 +1,8 @@
+import { BaseProvider } from '@ethersproject/providers';
+import { V4RouteWithValidQuote } from '../../entities';
+import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } from '../gas-model';
+import { TickBasedHeuristicGasModelFactory } from '../tick-based-heuristic-gas-model';
+export declare class V4HeuristicGasModelFactory extends TickBasedHeuristicGasModelFactory<V4RouteWithValidQuote> implements IOnChainGasModelFactory<V4RouteWithValidQuote> {
+    constructor(provider: BaseProvider);
+    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V4RouteWithValidQuote>>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.js
new file mode 100644
index 0000000..79dd9e6
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.js
@@ -0,0 +1,23 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.V4HeuristicGasModelFactory = void 0;
+const tick_based_heuristic_gas_model_1 = require("../tick-based-heuristic-gas-model");
+class V4HeuristicGasModelFactory extends tick_based_heuristic_gas_model_1.TickBasedHeuristicGasModelFactory {
+    constructor(provider) {
+        super(provider);
+    }
+    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }) {
+        return await super.buildGasModelInternal({
+            chainId,
+            gasPriceWei,
+            pools,
+            amountToken,
+            quoteToken,
+            v2poolProvider,
+            l2GasDataProvider,
+            providerConfig,
+        });
+    }
+}
+exports.V4HeuristicGasModelFactory = V4HeuristicGasModelFactory;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjQtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3Y0L3Y0LWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBT0Esc0ZBQXNGO0FBRXRGLE1BQWEsMEJBQ1gsU0FBUSxrRUFBd0Q7SUFHaEUsWUFBWSxRQUFzQjtRQUNoQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEIsQ0FBQztJQUVNLEtBQUssQ0FBQyxhQUFhLENBQUMsRUFDekIsT0FBTyxFQUNQLFdBQVcsRUFDWCxLQUFLLEVBQ0wsV0FBVyxFQUNYLFVBQVUsRUFDVixjQUFjLEVBQ2QsaUJBQWlCLEVBQ2pCLGNBQWMsR0FDa0I7UUFHaEMsT0FBTyxNQUFNLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztZQUN2QyxPQUFPO1lBQ1AsV0FBVztZQUNYLEtBQUs7WUFDTCxXQUFXO1lBQ1gsVUFBVTtZQUNWLGNBQWM7WUFDZCxpQkFBaUI7WUFDakIsY0FBYztTQUNmLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQS9CRCxnRUErQkMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts
index 9a16400..1aaf618 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts
@@ -1,15 +1,14 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, Token, TradeType } from '@uniswap/sdk-core';
-import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
 import { ITokenListProvider, ITokenProvider, ITokenValidatorProvider, TokenValidationResult } from '../../../providers';
 import { CurrencyAmount } from '../../../util';
-import { MixedRoute, V2Route, V3Route } from '../../router';
+import { SupportedRoutes } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { RouteWithValidQuote } from '../entities/route-with-valid-quote';
-import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, CrossLiquidityCandidatePools, SupportedCandidatePools, V2CandidatePools, V3CandidatePools, V4CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
+import { TPool } from '@uniswap/router-sdk/dist/utils/TPool';
 import { GetQuotesResult, GetRoutesResult } from './model/results';
 /**
  * Interface for a Quoter.
@@ -19,7 +18,12 @@ import { GetQuotesResult, GetRoutesResult } from './model/results';
  * @template CandidatePools
  * @template Route
  */
-export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools | V3CandidatePools | [V3CandidatePools, V2CandidatePools], Route extends V2Route | V3Route | MixedRoute> {
+export declare abstract class BaseQuoter<CandidatePools extends SupportedCandidatePools | [
+    V4CandidatePools,
+    V3CandidatePools,
+    V2CandidatePools,
+    CrossLiquidityCandidatePools
+], Route extends SupportedRoutes, TCurrency extends Currency> {
     protected tokenProvider: ITokenProvider;
     protected chainId: ChainId;
     protected protocol: Protocol;
@@ -38,7 +42,7 @@ export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools
      * @param routingConfig
      * @returns Promise<GetRoutesResult<Route>>
      */
-    protected abstract getRoutes(tokenIn: Token, tokenOut: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
+    protected abstract getRoutes(tokenIn: TCurrency, tokenOut: TCurrency, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
     /**
      * Public method that will fetch quotes for the combination of every route and every amount.
      *
@@ -68,6 +72,6 @@ export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools
      * @param gasModel the gasModel to be used for estimating gas cost
      * @param gasPriceWei instead of passing gasModel, gasPriceWei is used to generate a gasModel
      */
-    getRoutesThenQuotes(tokenIn: Token, tokenOut: Token, amount: CurrencyAmount, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
-    protected applyTokenValidatorToPools<T extends Pool | Pair>(pools: T[], isInvalidFn: (token: Currency, tokenValidation: TokenValidationResult | undefined) => boolean): Promise<T[]>;
+    getRoutesThenQuotes(tokenIn: TCurrency, tokenOut: TCurrency, amount: CurrencyAmount, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
+    protected applyTokenValidatorToPools<T extends TPool>(pools: T[], isInvalidFn: (token: Currency, tokenValidation: TokenValidationResult | undefined) => boolean): Promise<T[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js
index 4891402..fe2d190 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js
@@ -58,10 +58,10 @@ class BaseQuoter {
         }
         util_1.log.info(`Running token validator on ${pools.length} pools`);
         const tokens = lodash_1.default.flatMap(pools, (pool) => [pool.token0, pool.token1]);
-        const tokenValidationResults = await this.tokenValidatorProvider.validateTokens(tokens);
+        const tokenValidationResults = await this.tokenValidatorProvider.validateTokens(tokens.map((token) => token.wrapped));
         const poolsFiltered = lodash_1.default.filter(pools, (pool) => {
-            const token0Validation = tokenValidationResults.getValidationByToken(pool.token0);
-            const token1Validation = tokenValidationResults.getValidationByToken(pool.token1);
+            const token0Validation = tokenValidationResults.getValidationByToken(pool.token0.wrapped);
+            const token1Validation = tokenValidationResults.getValidationByToken(pool.token1.wrapped);
             const token0Invalid = isInvalidFn(pool.token0, token0Validation);
             const token1Invalid = isInvalidFn(pool.token1, token1Validation);
             if (token0Invalid || token1Invalid) {
@@ -73,4 +73,4 @@ class BaseQuoter {
     }
 }
 exports.BaseQuoter = BaseQuoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFLQSxvREFBdUI7QUFRdkIsd0NBTXVCO0FBYXZCOzs7Ozs7O0dBT0c7QUFDSCxNQUFzQixVQUFVO0lBYTlCLFlBQ0UsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsUUFBa0IsRUFDbEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztRQUNuQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsd0JBQXdCLEdBQUcsd0JBQXdCLENBQUM7UUFDekQsSUFBSSxDQUFDLHNCQUFzQixHQUFHLHNCQUFzQixDQUFDO0lBQ3ZELENBQUM7SUFnREQ7Ozs7Ozs7Ozs7Ozs7T0FhRztJQUNJLG1CQUFtQixDQUN4QixPQUFjLEVBQ2QsUUFBZSxFQUNmLE1BQXNCLEVBQ3RCLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLGNBQThCLEVBQzlCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDbkIsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLEVBQ2QsU0FBUyxFQUNULGFBQWEsQ0FDZCxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFO1lBQ3RCLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNuQyxhQUFNLENBQUMsU0FBUyxDQUNkLEdBQUcsSUFBSSxDQUFDLFFBQVEsbUJBQW1CLEVBQ25DLENBQUMsRUFDRCx1QkFBZ0IsQ0FBQyxLQUFL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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFHQSxvREFBdUI7QUFRdkIsd0NBTXVCO0FBaUJ2Qjs7Ozs7OztHQU9HO0FBQ0gsTUFBc0IsVUFBVTtJQWtCOUIsWUFDRSxhQUE2QixFQUM3QixPQUFnQixFQUNoQixRQUFrQixFQUNsQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyx3QkFBd0IsR0FBRyx3QkFBd0IsQ0FBQztRQUN6RCxJQUFJLENBQUMsc0JBQXNCLEdBQUcsc0JBQXNCLENBQUM7SUFDdkQsQ0FBQztJQWdERDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0ksbUJBQW1CLENBQ3hCLE9BQWtCLEVBQ2xCLFFBQW1CLEVBQ25CLE1BQXNCLEVBQ3RCLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLGNBQThCLEVBQzlCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDbkIsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLEVBQ2QsU0FBUyxFQUNULGFBQWEsQ0FDZCxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFO1lBQ3RCLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNuQyxhQUFNLENBQUMsU0FBUyxDQUNkLEdBQUcsSUFBSSxDQUFDLFFBQVEsbUJBQW1CLEVBQ25DLENBQUMsRUFDRCx1QkFBZ0IsQ0FB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts
index 6c5906d..8d01162 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts
@@ -1,23 +1,32 @@
 import { ChainId, Token, TradeType } from '@uniswap/sdk-core';
-import { IOnChainQuoteProvider, ITokenListProvider, ITokenProvider, ITokenValidatorProvider, IV2PoolProvider, IV2SubgraphProvider, IV3PoolProvider, IV3SubgraphProvider } from '../../../providers';
+import { IOnChainQuoteProvider, ITokenListProvider, ITokenProvider, ITokenValidatorProvider, IV2PoolProvider, IV2SubgraphProvider, IV3PoolProvider, IV3SubgraphProvider, IV4PoolProvider, IV4SubgraphProvider } from '../../../providers';
 import { CurrencyAmount } from '../../../util';
 import { MixedRoute } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { MixedRouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, CrossLiquidityCandidatePools, V2CandidatePools, V3CandidatePools, V4CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult, GetRoutesResult } from './model';
 export declare class MixedQuoter extends BaseQuoter<[
+    V4CandidatePools,
     V3CandidatePools,
-    V2CandidatePools
-], MixedRoute> {
+    V2CandidatePools,
+    CrossLiquidityCandidatePools
+], MixedRoute, Token> {
+    protected v4SubgraphProvider: IV4SubgraphProvider;
+    protected v4PoolProvider: IV4PoolProvider;
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
-    constructor(v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, v3v2candidatePools: [V3CandidatePools, V2CandidatePools], tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
+    constructor(v4SubgraphProvider: IV4SubgraphProvider, v4PoolProvider: IV4PoolProvider, v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v4v3v2candidatePools: [
+        V4CandidatePools,
+        V3CandidatePools,
+        V2CandidatePools,
+        CrossLiquidityCandidatePools
+    ], tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
     getQuotes(routes: MixedRoute[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<MixedRouteWithValidQuote>): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js
index 491667d..3ab7d77 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js
@@ -14,32 +14,48 @@ const compute_all_routes_1 = require("../functions/compute-all-routes");
 const get_candidate_pools_1 = require("../functions/get-candidate-pools");
 const base_quoter_1 = require("./base-quoter");
 class MixedQuoter extends base_quoter_1.BaseQuoter {
-    constructor(v3SubgraphProvider, v3PoolProvider, v2SubgraphProvider, v2PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
+    constructor(v4SubgraphProvider, v4PoolProvider, v3SubgraphProvider, v3PoolProvider, v2SubgraphProvider, v2PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
         super(tokenProvider, chainId, router_sdk_1.Protocol.MIXED, blockedTokenListProvider, tokenValidatorProvider);
+        this.v4SubgraphProvider = v4SubgraphProvider;
+        this.v4PoolProvider = v4PoolProvider;
         this.v3SubgraphProvider = v3SubgraphProvider;
         this.v3PoolProvider = v3PoolProvider;
         this.v2SubgraphProvider = v2SubgraphProvider;
         this.v2PoolProvider = v2PoolProvider;
         this.onChainQuoteProvider = onChainQuoteProvider;
     }
-    async getRoutes(tokenIn, tokenOut, v3v2candidatePools, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v4v3v2candidatePools, tradeType, routingConfig) {
+        var _a, _b, _c;
         const beforeGetRoutes = Date.now();
         if (tradeType != sdk_core_1.TradeType.EXACT_INPUT) {
             throw new Error('Mixed route quotes are not supported for EXACT_OUTPUT');
         }
-        const [v3CandidatePools, v2CandidatePools] = v3v2candidatePools;
-        const { V2poolAccessor, V3poolAccessor, candidatePools: mixedRouteCandidatePools, } = await (0, get_candidate_pools_1.getMixedRouteCandidatePools)({
+        const [v4CandidatePools, v3CandidatePools, v2CandidatePools, crossLiquidityPools,] = v4v3v2candidatePools;
+        const { V2poolAccessor, V3poolAccessor, V4poolAccessor, candidatePools: mixedRouteCandidatePools, } = await (0, get_candidate_pools_1.getMixedRouteCandidatePools)({
+            v4CandidatePools,
             v3CandidatePools,
             v2CandidatePools,
+            crossLiquidityPools,
             tokenProvider: this.tokenProvider,
+            v4PoolProvider: this.v4PoolProvider,
             v3poolProvider: this.v3PoolProvider,
             v2poolProvider: this.v2PoolProvider,
             routingConfig,
             chainId: this.chainId,
         });
+        const V4poolsRaw = V4poolAccessor.getAllPools();
         const V3poolsRaw = V3poolAccessor.getAllPools();
         const V2poolsRaw = V2poolAccessor.getAllPools();
-        const poolsRaw = [...V3poolsRaw, ...V2poolsRaw];
+        const poolsRaw = [];
+        if (!((_a = routingConfig.excludedProtocolsFromMixed) === null || _a === void 0 ? void 0 : _a.includes(router_sdk_1.Protocol.V4))) {
+            poolsRaw.push(...V4poolsRaw);
+        }
+        if (!((_b = routingConfig.excludedProtocolsFromMixed) === null || _b === void 0 ? void 0 : _b.includes(router_sdk_1.Protocol.V3))) {
+            poolsRaw.push(...V3poolsRaw);
+        }
+        if (!((_c = routingConfig.excludedProtocolsFromMixed) === null || _c === void 0 ? void 0 : _c.includes(router_sdk_1.Protocol.V2))) {
+            poolsRaw.push(...V2poolsRaw);
+        }
         const candidatePools = mixedRouteCandidatePools;
         // Drop any pools that contain fee on transfer tokens (not supported by v3) or have issues with being transferred.
         const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
@@ -63,7 +79,7 @@ class MixedQuoter extends base_quoter_1.BaseQuoter {
         const routes = (0, compute_all_routes_1.computeAllMixedRoutes)(tokenIn, tokenOut, pools, maxSwapsPerPath);
         util_1.metric.putMetric('MixedGetRoutesLoad', Date.now() - beforeGetRoutes, util_1.MetricLoggerUnit.Milliseconds);
         return {
-            routes,
+            routes: routes,
             candidatePools,
         };
     }
@@ -113,6 +129,7 @@ class MixedQuoter extends base_quoter_1.BaseQuoter {
                     mixedRouteGasModel: gasModel,
                     quoteToken,
                     tradeType,
+                    v4PoolProvider: this.v4PoolProvider,
                     v3PoolProvider: this.v3PoolProvider,
                     v2PoolProvider: this.v2PoolProvider,
                 });
@@ -127,4 +144,4 @@ class MixedQuoter extends base_quoter_1.BaseQuoter {
     }
 }
 exports.MixedQuoter = MixedQuoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVU0QjtBQUM1Qix3Q0FNdUI7QUFHdkIsMENBQXVEO0FBQ3ZELHdFQUF3RTtBQUN4RSwwRUFLMEM7QUFHMUMsK0NBQTJDO0FBRzNDLE1BQWEsV0FBWSxTQUFRLHdCQUdoQztJQU9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixvQkFBMkMsRUFDM0MsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxLQUFLLENBQ0gsYUFBYSxFQUNiLE9BQU8sRUFDUCxxQkFBUSxDQUFDLEtBQUssRUFDZCx3QkFBd0IsRUFDeEIsc0JBQXNCLENBQ3ZCLENBQUM7UUFDRixJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixrQkFBd0QsRUFDeEQsU0FBb0IsRUFDcEIsYUFBZ0M7UUFFaEMsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBRW5DLElBQUksU0FBUyxJQUFJLG9CQUFTLENBQUMsV0FBVyxFQUFFO1lBQ3RDLE1BQU0sSUFBSSxLQUFLLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVk0QjtBQUM1Qix3Q0FNdUI7QUFHdkIsMENBQXVEO0FBQ3ZELHdFQUF3RTtBQUN4RSwwRUFPMEM7QUFHMUMsK0NBQTJDO0FBRzNDLE1BQWEsV0FBWSxTQUFRLHdCQVNoQztJQVNDLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixrQkFBdUMsRUFDdkMsY0FBK0IsRUFDL0Isb0JBQTJDLEVBQzNDLGFBQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLHdCQUE2QyxFQUM3QyxzQkFBZ0Q7UUFFaEQsS0FBSyxDQUNILGFBQWEsRUFDYixPQUFPLEVBQ1AscUJBQVEsQ0FBQyxLQUFLLEVBQ2Qsd0JBQXdCLEVBQ3hCLHNCQUFzQixDQUN2QixDQUFDO1FBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLG9CQUFvQixDQUFDO0lBQ25ELENBQUM7SUFFUyxLQUFLLENBQUMsU0FBUyxDQUN2QixPQUFjLEVBQ2QsUUFBZSxFQUNmLG9CQUtDLEVBQ0QsU0FBb0IsRUFDcEIsYUFBZ0M7O1FBRWhDLE1BQU0s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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/model/results/get-routes-result.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/model/results/get-routes-result.d.ts
index cc7c407..29d43a3 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/model/results/get-routes-result.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/model/results/get-routes-result.d.ts
@@ -1,6 +1,6 @@
-import { MixedRoute, V2Route, V3Route } from '../../../../router';
+import { SupportedRoutes } from '../../../../router';
 import { CandidatePoolsBySelectionCriteria } from '../../../functions/get-candidate-pools';
-export interface GetRoutesResult<Route extends V2Route | V3Route | MixedRoute> {
+export interface GetRoutesResult<Route extends SupportedRoutes> {
     routes: Route[];
     candidatePools: CandidatePoolsBySelectionCriteria;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts
index 4a8bab3..4d255ba 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts
@@ -11,7 +11,7 @@ import { ArbitrumGasData, IL2GasDataProvider } from '../../../providers/v3/gas-d
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V2Quoter extends BaseQuoter<V2CandidatePools, V2Route> {
+export declare class V2Quoter extends BaseQuoter<V2CandidatePools, V2Route, Token> {
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected v2QuoteProvider: IV2QuoteProvider;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js
index 8dd8b65..90c7a15 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js
@@ -11,7 +11,7 @@ const providers_1 = require("../../../providers");
 const util_1 = require("../../../util");
 const entities_1 = require("../entities");
 const compute_all_routes_1 = require("../functions/compute-all-routes");
-const gas_costs_1 = require("../gas-models/v3/gas-costs");
+const gas_costs_1 = require("../gas-models/gas-costs");
 const base_quoter_1 = require("./base-quoter");
 class V2Quoter extends base_quoter_1.BaseQuoter {
     constructor(v2SubgraphProvider, v2PoolProvider, v2QuoteProvider, v2GasModelFactory, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider, l2GasDataProvider) {
@@ -137,4 +137,4 @@ class V2Quoter extends base_quoter_1.BaseQuoter {
     }
 }
 exports.V2Quoter = V2Quoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVE0QjtBQUM1Qix3Q0FNdUI7QUFHdkIsMENBQW9EO0FBQ3BELHdFQUFxRTtBQU1yRSwwREFBNkQ7QUFNN0QsK0NBQTJDO0FBSTNDLE1BQWEsUUFBUyxTQUFRLHdCQUFxQztJQU9qRSxZQUNFLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixlQUFpQyxFQUNqQyxpQkFBcUMsRUFDckMsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRCxFQUNoRCxpQkFBdUQ7UUFFdkQsS0FBSyxDQUNILGFBQWEsRUFDYixPQUFPLEVBQ1AscUJBQVEsQ0FBQyxFQUFFLEVBQ1gsd0JBQXdCLEVBQ3hCLHNCQUFzQixDQUN2QixDQUFDO1FBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztRQUMzQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7SUFDN0MsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQWtDLEVBQ2xDLFVBQXFCLEVBQ3JCLGFBQWdDO1FBRWhDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMs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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVE0QjtBQUM1Qix3Q0FNdUI7QUFHdkIsMENBQW9EO0FBQ3BELHdFQUFxRTtBQU1yRSx1REFBMEQ7QUFNMUQsK0NBQTJDO0FBSTNDLE1BQWEsUUFBUyxTQUFRLHdCQUE0QztJQU94RSxZQUNFLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixlQUFpQyxFQUNqQyxpQkFBcUMsRUFDckMsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRCxFQUNoRCxpQkFBdUQ7UUFFdkQsS0FBSyxDQUNILGFBQWEsRUFDYixPQUFPLEVBQ1AscUJBQVEsQ0FBQyxFQUFFLEVBQ1gsd0JBQXdCLEVBQ3hCLHNCQUFzQixDQUN2QixDQUFDO1FBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztRQUMzQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7SUFDN0MsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQWtDLEVBQ2xDLFVBQXFCLEVBQ3JCLGFBQWdDO1FBRWhDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts
index 39550d6..7e1bdde 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts
@@ -9,7 +9,7 @@ import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V3Quoter extends BaseQuoter<V3CandidatePools, V3Route> {
+export declare class V3Quoter extends BaseQuoter<V3CandidatePools, V3Route, Token> {
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js
index e48effe..ca6d17a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js
@@ -114,4 +114,4 @@ class V3Quoter extends base_quoter_1.BaseQuoter {
     }
 }
 exports.V3Quoter = V3Quoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVE0QjtBQUM1Qix3Q0FNdUI7QUFHdkIsMENBQW9EO0FBQ3BELHdFQUFxRTtBQU9yRSwrQ0FBMkM7QUFJM0MsTUFBYSxRQUFTLFNBQVEsd0JBQXFDO0lBS2pFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxFQUNQLHFCQUFRLENBQUMsRUFBRSxFQUNYLHdCQUF3QixFQUN4QixzQkFBc0IsQ0FDdkIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7SUFDbkQsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQWtDLEVBQ2xDLFVBQXFCLEVBQ3JCLGFBQWdDO1FBRWhDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxHQUFHLGdCQUFnQixDQUFDO1FBQzFELE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUU1QyxrSEFBa0g7UUFDbEgsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENBQUMsMEJBQTBCLENBQ2pELFFBQVEsRUFDUixDQUNFLEtBQWUsRUFDZixlQUFrRCxFQUN6QyxFQUFFO1lBQ1gsMEVBQTBFO1lBQzFFLElBQUksQ0FBQyxlQUFlLEVBQUU7Z0JBQ3BCLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCwyRUFBMkU7WUFDM0UsZ0ZBQWdGO1lBQ2hGLDRFQUE0RTtZQUM1RSxXQUFXO1lBQ1gsRUFBRTtZQUNGLElBQ0UsZUFBZSxJQUFJLGlDQUFxQixDQUFDLEdBQUc7Z0JBQzVDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQ2pEO2dCQUNBLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCxPQUFPLENBQ0wsZUFBZSxJQUFJLGlDQUFxQixDQUFDLEdBQUc7Z0JBQzVDLGVBQWUsSUFBSSxpQ0FBcUIsQ0FBQyxHQUFHLENBQzdDLENBQUM7UUFDSixDQUFDLENBQ0YsQ0FBQztRQUVGLGtHQUFrRztRQUNsRyxNQUFNLEVBQUUsZUFBZSxFQUFFLEdBQUcsYUFBYSxDQUFDO1FBQzFDLE1BQU0sTUFBTSxHQUFHLElBQUEsdUNBQWtCLEVBQy9CLE9BQU8sRUFDUCxRQUFRLEVBQ1IsS0FBSyxFQUNMLGVBQWUsQ0FDaEIsQ0FBQztRQUVGLGFBQU0sQ0FBQyxTQUFTLENBQ2QsaUJBQWlCLEVBQ2pCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxlQUFlLEVBQzVCLHVCQUFnQixDQUFDLFlBQVksQ0FDOUIsQ0FBQztRQUVGLE9BQU87WUFDTCxNQUFNO1lBQ04sY0FBYztTQUNmLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFNBQVMsQ0FDcEIsTUFBaUIsRUFDakIsT0FBeUIsRUFDekIsUUFBa0IsRUFDbEIsVUFBaUIsRUFDakIsU0FBb0IsRUFDcEIsYUFBZ0MsRUFDaEMsY0FBa0QsRUFDbEQsUUFBMkM7UUFFM0MsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ25DLFVBQUcsQ0FBQyxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQztRQUV0QyxJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDMUIsTUFBTSxJQUFJLEtBQUssQ0FDYiw2REFBNkQsQ0FDOUQsQ0FBQztTQUNIO1FBRUQsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUN0QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxDQUFDO1NBQ3REO1FBRUQsNkVBQTZFO1FBQzdFLE1BQU0sT0FBTyxHQUNYLFNBQVMsSUFBSSxvQkFBUyxDQUFDLFdBQVc7WUFDaEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQ2pELElBQUksQ0FBQyxvQkFBb0IsQ0FDMUI7WUFDSCxDQUFDLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FDbEQsSUFBSSxDQUFDLG9CQUFvQixDQUMxQixDQUFDO1FBRVIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2hDLFVBQUcsQ0FBQyxJQUFJLENBQ04sNkJBQTZCLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixPQUFPLENBQUMsTUFBTSxxQkFBcUIsQ0FDOUYsQ0FBQztRQUVGLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxHQUFHLE1BQU0sT0FBTyxDQUFVLE9BQU8sRUFBRSxNQUFNLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFFcEYsYUFBTSxDQUFDLFNBQVMsQ0FDZCxjQUFjLEVBQ2QsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLFlBQVksRUFDekIsdUJBQWdCLENBQUMsWUFBWSxDQUM5QixDQUFDO1FBRUYsYUFBTSxDQUFDLFNBQVMsQ0FDZCxpQkFBaUIsRUFDakIsSUFBQSxnQkFBQyxFQUFDLGdCQUFnQixDQUFDO2FBQ2hCLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQzthQUNsQyxHQUFHLEVBQUUsRUFDUix1QkFBZ0IsQ0FBQyxLQUFLLENBQ3ZCLENBQUM7UUFFRixNQUFNLHFCQUFxQixHQUFHLEVBQUUsQ0FBQztRQUVqQyxLQUFLLE1BQU0sY0FBYyxJQUFJLGdCQUFnQixFQUFFO1lBQzdDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsY0FBYyxDQUFDO1lBRXZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN0QyxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFFLENBQUM7Z0JBQzdCLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUUsQ0FBQztnQkFDL0IsTUFBTSxFQUNKLEtBQUssRUFDTCxNQUFNLEVBQ04scUJBQXFCLEVBQ3JCLDJCQUEyQixFQUMzQixXQUFXLEdBQ1osR0FBRyxXQUFXLENBQUM7Z0JBRWhCLElBQ0UsQ0FBQyxLQUFLO29CQUNOLENBQUMscUJBQXFCO29CQUN0QixDQUFDLDJCQUEyQjtvQkFDNUIsQ0FBQyxXQUFXLEVBQ1o7b0JBQ0EsVUFBRyxDQUFDLEtBQUssQ0FDUDt3QkFDRSxLQUFLLEVBQUUsSUFBQSxvQkFBYSxFQUFDLEtBQUssQ0FBQzt3QkFDM0IsV0FBVztxQkFDWixFQUNELHFDQUFxQyxDQUN0QyxDQUFDO29CQUNGLFNBQVM7aUJBQ1Y7Z0JBRUQsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLGdDQUFxQixDQUFDO29CQUNwRCxLQUFLO29CQUNMLFFBQVEsRUFBRSxLQUFLO29CQUNmLE1BQU07b0JBQ04sT0FBTztvQkFDUCxxQkFBcUI7b0JBQ3JCLDJCQUEyQjtvQkFDM0IsaUJBQWlCLEVBQUUsV0FBVztvQkFDOUIsUUFBUTtvQkFDUixVQUFVO29CQUNWLFNBQVM7b0JBQ1QsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO2lCQUNwQyxDQUFDLENBQUM7Z0JBRUgscUJBQXFCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7YUFDakQ7U0FDRjtRQUVELGFBQU0sQ0FBQyxTQUFTLENBQ2QsaUJBQWlCLEVBQ2pCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxlQUFlLEVBQzVCLHVCQUFnQixDQUFDLFlBQVksQ0FDOUIsQ0FBQztRQUVGLE9BQU87WUFDTCxxQkFBcUI7WUFDckIsY0FBYztTQUNmLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUEvTUQsNEJBK01DIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVE0QjtBQUM1Qix3Q0FNdUI7QUFHdkIsMENBQW9EO0FBQ3BELHdFQUFxRTtBQU9yRSwrQ0FBMkM7QUFJM0MsTUFBYSxRQUFTLFNBQVEsd0JBQTRDO0lBS3hFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxFQUNQLHFCQUFRLENBQUMsRUFBRSxFQUNYLHdCQUF3QixFQUN4QixzQkFBc0IsQ0FDdkIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7SUFDbkQsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQWtDLEVBQ2xDLFVBQXFCLEVBQ3JCLGFBQWdDO1FBRWhDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxHQUFHLGdCQUFnQixDQUFDO1FBQzFELE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUU1QyxrSEFBa0g7UUFDbEgsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v4-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v4-quoter.d.ts
new file mode 100644
index 0000000..f1e5531
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v4-quoter.d.ts
@@ -0,0 +1,18 @@
+import { ChainId, Currency, Token, TradeType } from '@uniswap/sdk-core';
+import { IOnChainQuoteProvider, ITokenListProvider, ITokenProvider, ITokenValidatorProvider, IV4PoolProvider, IV4SubgraphProvider } from '../../../providers';
+import { CurrencyAmount } from '../../../util';
+import { V4Route } from '../../router';
+import { AlphaRouterConfig } from '../alpha-router';
+import { RouteWithValidQuote } from '../entities';
+import { CandidatePoolsBySelectionCriteria, V4CandidatePools } from '../functions/get-candidate-pools';
+import { IGasModel } from '../gas-models';
+import { BaseQuoter } from './base-quoter';
+import { GetQuotesResult, GetRoutesResult } from './model';
+export declare class V4Quoter extends BaseQuoter<V4CandidatePools, V4Route, Currency> {
+    protected v4SubgraphProvider: IV4SubgraphProvider;
+    protected v4PoolProvider: IV4PoolProvider;
+    protected onChainQuoteProvider: IOnChainQuoteProvider;
+    constructor(v4SubgraphProvider: IV4SubgraphProvider, v4PoolProvider: IV4PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
+    protected getRoutes(tokenIn: Currency, tokenOut: Currency, v4CandidatePools: V4CandidatePools, _tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V4Route>>;
+    getQuotes(routes: V4Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<RouteWithValidQuote>): Promise<GetQuotesResult>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v4-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v4-quoter.js
new file mode 100644
index 0000000..9eff1d7
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v4-quoter.js
@@ -0,0 +1,117 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.V4Quoter = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const sdk_core_1 = require("@uniswap/sdk-core");
+const lodash_1 = __importDefault(require("lodash"));
+const providers_1 = require("../../../providers");
+const util_1 = require("../../../util");
+const entities_1 = require("../entities");
+const compute_all_routes_1 = require("../functions/compute-all-routes");
+const base_quoter_1 = require("./base-quoter");
+class V4Quoter extends base_quoter_1.BaseQuoter {
+    constructor(v4SubgraphProvider, v4PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
+        super(tokenProvider, chainId, router_sdk_1.Protocol.V4, blockedTokenListProvider, tokenValidatorProvider);
+        this.v4SubgraphProvider = v4SubgraphProvider;
+        this.v4PoolProvider = v4PoolProvider;
+        this.onChainQuoteProvider = onChainQuoteProvider;
+    }
+    async getRoutes(tokenIn, tokenOut, v4CandidatePools, _tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
+        // Fetch all the pools that we will consider routing via. There are thousands
+        // of pools, so we filter them to a set of candidate pools that we expect will
+        // result in good prices.
+        const { poolAccessor, candidatePools } = v4CandidatePools;
+        const poolsRaw = poolAccessor.getAllPools();
+        // Drop any pools that contain fee on transfer tokens (not supported by v4) or have issues with being transferred.
+        const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
+            // If there is no available validation result we assume the token is fine.
+            if (!tokenValidation) {
+                return false;
+            }
+            // Only filters out *intermediate* pools that involve tokens that we detect
+            // cant be transferred. This prevents us trying to route through tokens that may
+            // not be transferrable, but allows users to still swap those tokens if they
+            // specify.
+            //
+            if (tokenValidation == providers_1.TokenValidationResult.STF &&
+                (token.equals(tokenIn) || token.equals(tokenOut))) {
+                return false;
+            }
+            return (tokenValidation == providers_1.TokenValidationResult.FOT ||
+                tokenValidation == providers_1.TokenValidationResult.STF);
+        });
+        // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.
+        const { maxSwapsPerPath } = routingConfig;
+        const routes = (0, compute_all_routes_1.computeAllV4Routes)(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        util_1.metric.putMetric('V4GetRoutesLoad', Date.now() - beforeGetRoutes, util_1.MetricLoggerUnit.Milliseconds);
+        return {
+            routes,
+            candidatePools,
+        };
+    }
+    async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {
+        const beforeGetQuotes = Date.now();
+        util_1.log.info('Starting to get V4 quotes');
+        if (gasModel === undefined) {
+            throw new Error('GasModel for V4RouteWithValidQuote is required to getQuotes');
+        }
+        if (routes.length == 0) {
+            return { routesWithValidQuotes: [], candidatePools };
+        }
+        // For all our routes, and all the fractional amounts, fetch quotes on-chain.
+        const quoteFn = tradeType == sdk_core_1.TradeType.EXACT_INPUT
+            ? this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider)
+            : this.onChainQuoteProvider.getQuotesManyExactOut.bind(this.onChainQuoteProvider);
+        const beforeQuotes = Date.now();
+        util_1.log.info(`Getting quotes for V4 for ${routes.length} routes with ${amounts.length} amounts per route.`);
+        const { routesWithQuotes } = await quoteFn(amounts, routes, routingConfig);
+        util_1.metric.putMetric('V4QuotesLoad', Date.now() - beforeQuotes, util_1.MetricLoggerUnit.Milliseconds);
+        util_1.metric.putMetric('V4QuotesFetched', (0, lodash_1.default)(routesWithQuotes)
+            .map(([, quotes]) => quotes.length)
+            .sum(), util_1.MetricLoggerUnit.Count);
+        const routesWithValidQuotes = [];
+        for (const routeWithQuote of routesWithQuotes) {
+            const [route, quotes] = routeWithQuote;
+            for (let i = 0; i < quotes.length; i++) {
+                const percent = percents[i];
+                const amountQuote = quotes[i];
+                const { quote, amount, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate, } = amountQuote;
+                if (!quote ||
+                    !sqrtPriceX96AfterList ||
+                    !initializedTicksCrossedList ||
+                    !gasEstimate) {
+                    util_1.log.debug({
+                        route: (0, util_1.routeToString)(route),
+                        amountQuote,
+                    }, 'Dropping a null V4 quote for route.');
+                    continue;
+                }
+                const routeWithValidQuote = new entities_1.V4RouteWithValidQuote({
+                    route,
+                    rawQuote: quote,
+                    amount,
+                    percent,
+                    sqrtPriceX96AfterList,
+                    initializedTicksCrossedList,
+                    quoterGasEstimate: gasEstimate,
+                    gasModel,
+                    quoteToken,
+                    tradeType,
+                    v4PoolProvider: this.v4PoolProvider,
+                });
+                routesWithValidQuotes.push(routeWithValidQuote);
+            }
+        }
+        util_1.metric.putMetric('V4GetQuotesLoad', Date.now() - beforeGetQuotes, util_1.MetricLoggerUnit.Milliseconds);
+        return {
+            routesWithValidQuotes,
+            candidatePools,
+        };
+    }
+}
+exports.V4Quoter = V4Quoter;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBQ3ZCLGtEQVE0QjtBQUM1Qix3Q0FNdUI7QUFHdkIsMENBQXlFO0FBQ3pFLHdFQUFxRTtBQU1yRSwrQ0FBMkM7QUFHM0MsTUFBYSxRQUFTLFNBQVEsd0JBQStDO0lBSzNFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxFQUNQLHFCQUFRLENBQUMsRUFBRSxFQUNYLHdCQUF3QixFQUN4QixzQkFBc0IsQ0FDdkIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7SUFDbkQsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWlCLEVBQ2pCLFFBQWtCLEVBQ2xCLGdCQUFrQyxFQUNsQyxVQUFxQixFQUNyQixhQUFnQztRQUVoQyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbkMsNkVBQTZFO1FBQzdFLDhFQUE4RTtRQUM5RSx5QkFBeUI7UUFDekIsTUFBTSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQztRQUMxRCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFNUMsa0hBQWtIO1FBQ2xILE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
index 9b51cd7..716817c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
@@ -77,6 +77,42 @@ export declare const ADDITIONAL_BASES: (tokenProvider: ITokenProvider) => Promis
     324?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    11124?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    2741?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    543210?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    60808?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    7560?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    360?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    57073?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    17069?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    690?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    69000?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    6900?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    34443?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 /**
  * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these
@@ -155,5 +191,41 @@ export declare const CUSTOM_BASES: (tokenProvider: ITokenProvider) => Promise<{
     324?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    11124?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    2741?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    543210?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    60808?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    7560?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    360?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    57073?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    17069?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    690?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    69000?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    6900?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    34443?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
index 735306b..cc1f04b 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
@@ -55,7 +55,29 @@ const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
         [sdk_core_1.ChainId.ZORA_SEPOLIA]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZORA_SEPOLIA]],
         [sdk_core_1.ChainId.ROOTSTOCK]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ROOTSTOCK]],
         [sdk_core_1.ChainId.BLAST]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BLAST], token_provider_1.USDB_BLAST],
-        [sdk_core_1.ChainId.ZKSYNC]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC], token_provider_1.USDCE_ZKSYNC, token_provider_1.USDC_ZKSYNC],
+        [sdk_core_1.ChainId.ZKSYNC]: [
+            chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZKSYNC],
+            token_provider_1.USDCE_ZKSYNC,
+            token_provider_1.USDC_ZKSYNC,
+        ],
+        [sdk_core_1.ChainId.ABSTRACT_TESTNET]: [
+            chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_TESTNET],
+        ],
+        [sdk_core_1.ChainId.ZERO]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ZERO]],
+        [sdk_core_1.ChainId.BOB]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BOB]],
+        [sdk_core_1.ChainId.CYBER]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.CYBER]],
+        [sdk_core_1.ChainId.SHAPE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.SHAPE]],
+        [sdk_core_1.ChainId.INK]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.INK]],
+        [sdk_core_1.ChainId.REDSTONE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE]],
+        [sdk_core_1.ChainId.REDSTONE_GARNET]: [
+            chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.REDSTONE_GARNET],
+        ],
+        [sdk_core_1.ChainId.ABSTRACT_MAINNET]: [
+            chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ABSTRACT_MAINNET],
+        ],
+        [sdk_core_1.ChainId.ANIME_TESTNET]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME_TESTNET]],
+        [sdk_core_1.ChainId.ANIME]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.ANIME]],
+        [sdk_core_1.ChainId.MODE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.MODE]],
     };
 };
 exports.BASES_TO_CHECK_TRADES_AGAINST = BASES_TO_CHECK_TRADES_AGAINST;
@@ -84,4 +106,4 @@ const CUSTOM_BASES = async (tokenProvider) => {
     };
 };
 exports.CUSTOM_BASES = CUSTOM_BASES;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUE2RDtBQUM3RCxnREFBbUQ7QUFFbkQsbUVBa0J3QztBQUN4Qyw4Q0FBNEQ7QUFNckQsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtZQUN6Qyw0QkFBVztZQUNYLDZCQUFZO1lBQ1osNkJBQVk7WUFDWiw2QkFBWTtTQUNiO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUUsQ0FBQztRQUM1RCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQzlELENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQ3pCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFFO1NBQ2xEO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7WUFDMUIsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBRTtTQUNuRDtRQUNELENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFFLENBQUM7UUFDeEUsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQ3pCLGdDQUF1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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUE2RDtBQUM3RCxnREFBbUQ7QUFFbkQsbUVBbUJ3QztBQUN4Qyw4Q0FBNEQ7QUFNckQsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtZQUN6Qyw0QkFBVztZQUNYLDZCQUFZO1lBQ1osNkJBQVk7WUFDWiw2QkFBWTtTQUNiO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUUsQ0FBQztRQUM1RCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQzlELENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQ3pCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFFO1NBQ2xEO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7WUFDMUIsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxnQkFBZ0IsQ0FBRTtTQUNuRDtRQUNELENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFFLENBQUM7UUFDeEUsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQ3pCLGdDQUF1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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/legacy-router.js b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/legacy-router.js
index f56503a..f155b03 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/legacy-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/legacy-router.js
@@ -227,6 +227,7 @@ class LegacyRouter {
             const quoteCurrency = amounts_1.CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);
             const routeCurrency = new v3_sdk_1.Route(route.pools, amountCurrency.currency, quoteCurrency.currency);
             return new router_sdk_1.Trade({
+                v4Routes: [],
                 v3Routes: [
                     {
                         routev3: routeCurrency,
@@ -243,6 +244,7 @@ class LegacyRouter {
             const amountCurrency = amounts_1.CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);
             const routeCurrency = new v3_sdk_1.Route(route.pools, quoteCurrency.currency, amountCurrency.currency);
             return new router_sdk_1.Trade({
+                v4Routes: [],
                 v3Routes: [
                     {
                         routev3: routeCurrency,
@@ -286,4 +288,4 @@ class LegacyRouter {
     }
 }
 exports.LegacyRouter = LegacyRouter;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts
index 5d272ce..ec51eae 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts
@@ -1,12 +1,16 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { CondensedAddLiquidityOptions, MixedRouteSDK, Protocol, Trade } from '@uniswap/router-sdk';
 import { Currency, Fraction, Percent, Token, TradeType } from '@uniswap/sdk-core';
-import { SwapOptions as UniversalRouterSwapOptions } from '@uniswap/universal-router-sdk';
+import { SwapOptions as UniversalRouterSwapOptions, UniversalRouterVersion } from '@uniswap/universal-router-sdk';
 import { Route as V2RouteRaw } from '@uniswap/v2-sdk';
 import { MethodParameters as SDKMethodParameters, Pool, Position, Route as V3RouteRaw } from '@uniswap/v3-sdk';
+import { Route as V4RouteRaw } from '@uniswap/v4-sdk';
 import { SimulationStatus } from '../providers';
 import { CurrencyAmount } from '../util/amounts';
 import { RouteWithValidQuote } from './alpha-router';
+export declare class V4Route extends V4RouteRaw<Currency, Currency> {
+    protocol: Protocol.V4;
+}
 export declare class V3Route extends V3RouteRaw<Token, Token> {
     protocol: Protocol.V3;
 }
@@ -16,6 +20,7 @@ export declare class V2Route extends V2RouteRaw<Token, Token> {
 export declare class MixedRoute extends MixedRouteSDK<Token, Token> {
     protocol: Protocol.MIXED;
 }
+export declare type SupportedRoutes = V4Route | V3Route | V2Route | MixedRoute;
 export declare type SwapRoute = {
     /**
      * The quote for the swap.
@@ -119,6 +124,7 @@ export declare enum SwapType {
 }
 export declare type SwapOptionsUniversalRouter = UniversalRouterSwapOptions & {
     type: SwapType.UNIVERSAL_ROUTER;
+    version: UniversalRouterVersion;
     simulate?: {
         fromAddress: string;
     };
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/router.js b/node_modules/@uniswap/smart-order-router/build/main/routers/router.js
index fa4a43e..649ac29 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/router.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/router.js
@@ -1,9 +1,17 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.ISwapToRatio = exports.IRouter = exports.SwapType = exports.SwapToRatioStatus = exports.MixedRoute = exports.V2Route = exports.V3Route = void 0;
+exports.ISwapToRatio = exports.IRouter = exports.SwapType = exports.SwapToRatioStatus = exports.MixedRoute = exports.V2Route = exports.V3Route = exports.V4Route = void 0;
 const router_sdk_1 = require("@uniswap/router-sdk");
 const v2_sdk_1 = require("@uniswap/v2-sdk");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
+class V4Route extends v4_sdk_1.Route {
+    constructor() {
+        super(...arguments);
+        this.protocol = router_sdk_1.Protocol.V4;
+    }
+}
+exports.V4Route = V4Route;
 class V3Route extends v3_sdk_1.Route {
     constructor() {
         super(...arguments);
@@ -49,4 +57,4 @@ exports.IRouter = IRouter;
 class ISwapToRatio {
 }
 exports.ISwapToRatio = ISwapToRatio;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG9EQUs2QjtBQVM3Qiw0Q0FBc0Q7QUFDdEQsNENBS3lCO0FBT3pCLE1BQWEsT0FBUSxTQUFRLGNBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IscUJBQVEsQ0FBQyxFQUFFLENBQUM7SUFDdEMsQ0FBQztDQUFBO0FBRkQsMEJBRUM7QUFDRCxNQUFhLE9BQVEsU0FBUSxjQUF3QjtJQUFyRDs7UUFDRSxhQUFRLEdBQWdCLHFCQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FBQTtBQUZELDBCQUVDO0FBQ0QsTUFBYSxVQUFXLFNBQVEsMEJBQTJCO0lBQTNEOztRQUNFLGFBQVEsR0FBbUIscUJBQVEsQ0FBQyxLQUFLLENBQUM7SUFDNUMsQ0FBQztDQUFBO0FBRkQsZ0NBRUM7QUFzRkQsSUFBWSxpQkFJWDtBQUpELFdBQVksaUJBQWlCO0lBQzNCLCtEQUFXLENBQUE7SUFDWCw2RUFBa0IsQ0FBQTtJQUNsQiw2RUFBa0IsQ0FBQTtBQUNwQixDQUFDLEVBSlcsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFJNUI7QUFxQkQsSUFBWSxRQUdYO0FBSEQsV0FBWSxRQUFRO0lBQ2xCLCtEQUFnQixDQUFBO0lBQ2hCLDJEQUFjLENBQUE7QUFDaEIsQ0FBQyxFQUhXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBR25CO0FBMEREOzs7Ozs7R0FNRztBQUNILE1BQXNCLE9BQU87Q0FvQjVCO0FBcEJELDBCQW9CQztBQUVELE1BQXNCLFlBQVk7Q0FTakM7QUFURCxvQ0FTQyJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG9EQUs2QjtBQVk3Qiw0Q0FBc0Q7QUFDdEQsNENBS3lCO0FBQ3pCLDRDQUFzRDtBQU90RCxNQUFhLE9BQVEsU0FBUSxjQUE4QjtJQUEzRDs7UUFDRSxhQUFRLEdBQWdCLHFCQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FBQTtBQUZELDBCQUVDO0FBQ0QsTUFBYSxPQUFRLFNBQVEsY0FBd0I7SUFBckQ7O1FBQ0UsYUFBUSxHQUFnQixxQkFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFGRCwwQkFFQztBQUNELE1BQWEsT0FBUSxTQUFRLGNBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IscUJBQVEsQ0FBQyxFQUFFLENBQUM7SUFDdEMsQ0FBQztDQUFBO0FBRkQsMEJBRUM7QUFDRCxNQUFhLFVBQVcsU0FBUSwwQkFBMkI7SUFBM0Q7O1FBQ0UsYUFBUSxHQUFtQixxQkFBUSxDQUFDLEtBQUssQ0FBQztJQUM1QyxDQUFDO0NBQUE7QUFGRCxnQ0FFQztBQXVGRCxJQUFZLGlCQUlYO0FBSkQsV0FBWSxpQkFBaUI7SUFDM0IsK0RBQVcsQ0FBQTtJQUNYLDZFQUFrQixDQUFBO0lBQ2xCLDZFQUFrQixDQUFBO0FBQ3BCLENBQUMsRUFKVyxpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQUk1QjtBQXFCRCxJQUFZLFFBR1g7QUFIRCxXQUFZLFFBQVE7SUFDbEIsK0RBQWdCLENBQUE7SUFDaEIsMkRBQWMsQ0FBQTtBQUNoQixDQUFDLEVBSFcsUUFBUSxHQUFSLGdCQUFRLEtBQVIsZ0JBQVEsUUFHbkI7QUEyREQ7Ozs7OztHQU1HO0FBQ0gsTUFBc0IsT0FBTztDQW9CNUI7QUFwQkQsMEJBb0JDO0FBRUQsTUFBc0IsWUFBWTtDQVNqQztBQVRELG9DQVNDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo b/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo
index a3320c8..c1f5a38 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo
+++ b/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo
@@ -1 +1 @@
-{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/basecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyamount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computepriceimpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computezksynccreate2address.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedinsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateandparseaddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isversionupdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getversionupgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/difftokenlists.d.ts","../../node_modules/@uniswap/token-lists/dist/minversionbump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextversion.d.ts","../../node_modules/@uniswap/token-lists/dist/versioncomparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/ierc20metadata.d.ts","../../src/types/v3/factories/ierc20metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/ticklistdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computepooladdress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encoderoutetopath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodesqrtratiox96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/issorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquiditymath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxliquidityforamounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostsignificantbit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestusabletick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/pricetickconversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtpricemath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklist.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfpermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblepositionmanager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveandcall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallextended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsextended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodemixedroutetopath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../src/providers/provider.ts","../../src/providers/multicall-provider.ts","../../src/types/v3/iuniswapv3poolstate.d.ts","../../src/types/v3/factories/iuniswapv3poolstate__factory.ts","../../src/providers/v3/pool-provider.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routercommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowancetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signaturetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/allowanceprovider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputtokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksrarev2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/nfttrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapweth.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routertradeadapter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/providers/portion-provider.ts","../../src/types/other/commons.ts","../../src/types/other/tokenfeedetector.d.ts","../../src/types/other/factories/tokenfeedetector__factory.ts","../../src/providers/token-fee-fetcher.ts","../../src/types/other/itokenvalidator.d.ts","../../src/types/other/factories/itokenvalidator__factory.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/iuniswapv2pair.d.ts","../../src/types/v2/factories/iuniswapv2pair__factory.ts","../../src/providers/token-properties-provider.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/gasdataarbitrum.d.ts","../../src/types/other/factories/gasdataarbitrum__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenkind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/erc20.d.ts","../../src/types/other/factories/erc20__factory.ts","../../node_modules/@types/brotli/compress.d.ts","../../node_modules/@types/brotli/decompress.d.ts","../../node_modules/@types/brotli/index.d.ts","../../src/util/l2feechains.ts","../../src/util/methodparameters.ts","../../node_modules/@eth-optimism/core-utils/dist/common/basic-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/bn.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/hex-strings.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/misc.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/test-utils.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/bcfg-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/network.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/alias.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/fees.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-node.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/deposit-transaction.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/encoding.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/hashing.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-provider.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/constants.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/gnosis-safe-checksum.d.ts","../../node_modules/@eth-optimism/core-utils/dist/etherscan.d.ts","../../node_modules/@eth-optimism/core-utils/dist/helpers/setupproxycontract.d.ts","../../node_modules/@eth-optimism/core-utils/dist/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/coercion.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/type-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/contracts.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/misc-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/merkle-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/chain-constants.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/message-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/cross-chain-messenger.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/types.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/bridge-adapter.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/standard-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eth-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/dai-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eco-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/index.d.ts","../../src/util/gas-factory-helpers.ts","../../src/util/onchainquoteproviderconfigs.ts","../../src/util/unsupported-tokens.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/gas-models/v3/gas-costs.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedroute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/permit2.d.ts","../../src/types/other/factories/permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/uniswapinterfacemulticall.d.ts","../../src/types/v3/factories/uniswapinterfacemulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/imixedroutequoterv1.d.ts","../../src/types/other/factories/imixedroutequoterv1__factory.ts","../../src/types/v3/iquoterv2.d.ts","../../src/types/v3/factories/iquoterv2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/swaprouter02.d.ts","../../src/types/other/factories/swaprouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/calldata.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupsemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/difflines.d.ts","../../node_modules/jest-diff/build/printdiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"7a63b6d780e36b4d0422f9f8b430c52f854a18ed825b463ff6cbc8e0cf854b8e","signature":"4edbc1f9bfe75cc47936b73c9269c530e71bef187b91ebb115fbbb9d3afddbf4"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"e4eeebdc035944893a777fcdda0ce930bceec1b43aa34aadd17548e6f2b2a875","signature":"c15b63cf8ed5a8054c6e01e1c3ba54b0709ec66100ef7452058ebc781ef2bc54"},"c4abeb1c1b4ba8ec6094e9c989b2ec4b0de6d1349f449e332047e6deb7b9d438","65447f0557a755485ec91bcb820b14f25b28328e5e94577c4f6d7e95cc6b4f91","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c","613dd72219d3f6e2c269824f615d0b76060d16d1a4a1270d99aacc5cf1a3e09e","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","dd6eead0d137363bf4202b0fef26a7b3af71d83c364d2ac4d729e4f1de7d82ed","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","8baa163aa726dc495ee1ea7350906b3fe5f16b383b7105b98414be264fcd27f3","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},{"version":"140c626152e3d86b891baf3eae657c961b2ff3804d830101e79075aa62584884","signature":"d86a8ab1ca180c45b8cdf800495119fddac19bb19e61a09a8e300239d72b29e5"},{"version":"c1d90e40a6f920aed2329c1c9275d9f50e85f6a3dcd03be4ac5891d0fe2ee1e1","signature":"56187c3645803aa0a97d3ebeff568f06ab178e2e5ea01be84cb699581ed48d63"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09",{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},"4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"0a65d587bf4683152a2116eedee39fe6d34b9d9016272ae82496c1c8f3f3f768","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","99c74fe04876989f8bcff169fdc590a5a5897566da8e065d93ab8317ec42e498","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c",{"version":"5eef5e3025335481bf4d32eb0600316139c148ccd0d6fc0f42e7815ab80784e7","signature":"c840dd973aad2be08239094d02e759248b57cea61fd593668bff8484ab0e6f97"},{"version":"1bc85e9c35d9119f5f5efeb163d60ddbb4faf3387216b45541c900ae0bee07fd","signature":"bba947eae2ea5a6db0659fecbc857ef2675c2a8fc3a5af1f0b4658694344cf88"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},"704772eae2105f6c150549c8d5d70393200ae8d6b75c647c19fa111970f341c4","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","043df52176481a96a59b11d588cb2a72e3a2ab1932b3d2569b3a4bbcb2252253","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","12080b465d8b3ef429739b2866523a780fbd6086b19d587bd79da6bd79f47f5f","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","b316d763aca9e1eaf3080c2ebb18c8d681be16b9ee3b580471d53666520ca31f","dc05b7cfbd7166a76bb33c9a494752fc2876684100208694ee334e92d124ff13","f4cae09b720d87d4e359a6ae91511d231176636572642fd058c4f973478df5ef","492d09043bf7d0ffd0a77db8af9c0a6838affaf7306dbb00680716f1ff51184c","660f165e1883a9ca46383d56853b2c74c13e4bd4922a74189ed244ffdc1c7216","bd63922a65e000d121bcd5c0ab479dd6b5c9c2f708bf192c256b58f1a3d8f664","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","f669773f31bfa4e50c75daea1bad438206801e212e1374b5719137bc59c0ba9b","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"4337b3d1670e9d1ee8adbf8c62ff178b37be3b35ae0a21d92ec743100354ac97","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"98f67f39aa3b83a2267032e7ee1fc7444a4b46537c42fc936be5bb24483741a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399",{"version":"15f710d6590c650f6bb45b6e31ebc8c7a9a2ebb812aa6960be39b04582eb8334","signature":"65767aa45d8ce74b69cf721e6ce1d85d1f6ec75c2b9ef37c62ca815c909a24c1"},{"version":"ba3d14d7be67bb7ee7ab914500866c7e73b17aab1df4837e25b2a0697167d7df","signature":"7d6d7d1188dc74ca4beb23df21197c3736dd314f49f3daf61683fa7b18ba6010"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"1e6e6bc153845a35d4e52d9bb43bca9bca15ba2a827160e1f98147de4f17d761","signature":"1bb1ee99c2c2fbe2012f522dbfac98ec7d316f977200c7b179deb665bf8b6f97"},"e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","6e50400e9113d818936f3405f09c5fd0e4d83ebb0a6503ed61d9d6eb68210ade","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","3629a217b5522339fb71a77707c035e522d2228b5eded788123bb2e50334003b","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","8dfbc3e9ea8cd2e97cb82488c32ece8f3e1cd9d71cad68532cb016acf4419e39","166e1a02dd0593790bc91604e7af2ca2785c56c94f3ebab8608ec4238c58b3f7","8bb7ca3a0c5c5a973de6924f07c89cc21a691f3cc89ec1aa2a1cccbcf57b4d4e",{"version":"de9583c77c5b94bbcb57a5f2ede3831ca9e2647d7d8e74c0c9e5392ac56791e3","signature":"b8a34d9067079c8ed0ab4563302ecabb535555ad2b1738f9409a4f76723ad9f6"},{"version":"c3899ebdb3a91dbb2d199694f3117c357eae3505070f4e9c97ccb51dcf5d9c36","signature":"7c5fb824cf61404ba8b311cef7937cc94ce14633a76b4b45617d74e9d5028fc2"},{"version":"981e436a6825ba44084ae4fd76af10825884ab6709cd0da040e8aa4d4c519359","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"595d2a064b793c37e6981dcf95946b28f5e86162b937d3acdda6b81f137841a6","signature":"0e9bf15f2464161a8d0b4f9895747e80b86d3f1bd9cf78c13b52b29369a690a6"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"16e136218aa988a68daffea6a12c918b164fa56167aaef5bc27f307020e25488",{"version":"a26de25b1305e49c7e39c0eb0ded935bce93ca0a77784a39895e7c53006578f5","signature":"ee2cdd2a6b3e6c50f61ef6ffb475904d3f799b852152c08df8f9e59ecf251529"},{"version":"d306e5b39de5faefc3da535e3df5de4d3dfc4e2988ef63b2b2a91c4db2e07079","signature":"04d9467a5682da7d3c0826f83734f4499c1d5bce90cee22db487b7849839c2e0"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"63d42906c9c08a4a6b3e15cb6ca02e76ca90d3dd71f840e0c57ee3eb451d3282","signature":"b1469774278f2d1c067ca66fe7300c3a193a0a10a8d424621b1709b57770cda9"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"1444ea2205dd827e67375eb8745ebf97692cb387229ce6e4624ec4027f502f4d","signature":"de8192145b38b5f8c5af2b124fca7db95f2f56ec4f0208922c53f451570c5d07"},{"version":"81a5c7fee13571f0bacaf6610b20a347af9863151a96a3ae26f10929487dc03a","signature":"c64d8c344271da5f8724b6f21fa214e0193152f94de3b5d6b9468ab6e5f69882"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},{"version":"ec61723ef4dd303a73b12ae07804946ae41699e222c5701d92d837506076796c","signature":"11ec6c7c05368eba9eb4e3760c03adba128339d08c65b7caae318dc0c72cd5e6"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"f497bdde3c33bbc9bf94e716185ad8470b1f930f48ee39baf650c009987dc43a","signature":"c155b5808e628ef0daf5d81fe886f5dca2ab780b807159e0ed7acfa45f05c839"},{"version":"a9b0422bcedfdc12d10da324fc76d9a8a30cec0b2fd696b7225302f7134d41d0","signature":"db9b8ef7e8564c5245b41d3074a241de10566c27a1d49a460a14d54cefabf0ec"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"a67afbd107f07baa83e5deca88e364424d25fce827c93155e61cb2dfbd591885","a6f0218395ecb8e0d736e0a19524223ab7a8a7ed217c4a99c165df2532e1beec","983ecff1acbaec6c7e91a04e1406f088102c7c171adae0cca26c87e8f0612307",{"version":"b3aed111d6a01331369d9d64f3d46f4e4435adae7299b820c45293e29f2a9388","signature":"1f8e8b1de161dc93d5c87924f6c5d00fda44e859dba5d3bc790091345b46196e"},{"version":"bf77e000e89723e1e0aea48977f9c91fa95026eb19913fa419f09a97be0063ae","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},"16c16ec2a5264d177d68156b545a26ff50a7d00c470991753e7065cd13baa066","03cb5283929e384d9d876b9b2cd1bc4a1ff6796ade2b5867604156e9129302f2","55949c9e272ced5625ab3b7b5874a5794c5d514195ff11453d068e1ea2f22515","5f8616b3b4a1010f16be1639c30d8c6c61a5a3eba036105164a994c527b6a701","6ea3b658cab3bf55af3c7e353b5c780a953f2cb8a736749fb11158e60a0c1794","4add59324adc56388ebe91c57aafce5cf3b067f1a31f1d795e36554a639ba2d5","5311886e264dccac6b3ac7aaa2f5e35629e77dc77aef7cae10d835a8d90186ac","2e9e9594288e71c811534b37cc988e7f8cf3eca92f4fb34bd86e68cd4c4933d8","68453980880200202d792d8ce79a5083e01b5fa08a759082447c849f3846fdb9","46439fd047f993161368be2cbcc7bf13bc3ef45bb428d01301c6de72c7b12eda","267e08d679da81ce5c20dac38a73d152167e385de88348ed58d52d9538180223","521cd3c937271dd1e75cb7f13e7d5f3480a37595418b7c1f404e3263f4a79b60","66401a77bd62ff01eaa3201ad423d8317b0c6f55769402b84ed6033579c109eb","4937c0359aa9c91e874015f23b4216604f24a7092569e586cc8e4c04efcd0716","16a9b10ef9cd6dcbb0f43b8442636ffd660da4d84f5cb69549648f57f0a559ba","54473b26a072224331f5b281a95038e3d70578b67245570e889b2a49f08352c7","0cbb8a9211e030850ebb1d73e25832eca7cde7983c7379b3948b9fa49d472b9d","68807be4cb528c6d4b627f8463e013f4ebdc22da168b1e10eb8074d00354e256","3ecd0e9c1431f735cc8ed99a9b7848a2b433b73ac59b73afcffd2810dc63d415","0f792811cec59875caf2ac7e9184b095d540f39c20c2edd84e6bf8f71d695445","acfe2a804d36efcb8f457408b48d42abbfa0674b24d8fab86a3fa67912093f98","b061f81fcc10894479abef624141513e103bd2a57c7a3b0db9b38b4054690e76","c182f8cc634978c2341cbbfe4fbc04d030c15b5e38e5fa96b980f5a284c6f91e","930a106ea8f6a722914dedbbc4e83eacaee2c34e6a3c7866031ecd1d62a14e2d","aa1fa0d91659fae4d7a087faa5fd35f9f671162423edf82fba8f4d4a0b7f2a69","9180758bca0f498eb0839372e325f83bfcf5e46d993e2cdacfab12a3ebb872d9","0f434ac807908fbb495560882b805ac1e211fb4161a68f4447fe46b0b96d039f","22bd9a747bd9f230d10370020f642e5a037a9c87fb0cdb3d22cd53b3627fa6d5","a64049a1707fdea015676e4550332055ca3afa7bfbfa346844e899ee4400a0ce","1d0447e26c96f2926a9dd8d0d8398dc379e27b92a4121e0873a7a694508139e2","92818ccd63a80377b44a64e84ac674f0b8a4a6a5374a120543b27332fca76952","50366a02489daf00d23940b93ec3f5ed78ba06c8c9c61c7b41aca5fb81a1200b","f0ebf6ad7ad0bd71eba896199a04dea5d9599e3902df901fa2caced40c48128e","088471eb708d6856f94a51d92ec5f0f1cbcb2a770ebb8dd7fbe1f79d4a4af89e","dc384b06f30fb396f2289ad67ec8bd433ea0e1a17af5e563a8025293c44f6a7a","7ee1923d8cdf7e6d7905368b7af2632cafa5db29d9b1346395297a22b0fcd51b","e1dc2510e103d3e31037b4271b4d07a053d3c1b2f9fb1119b1c07292c2c2debd","cae7890145aaef376eb9930ea6ddb95e130962a1bfc3808ed973f9f8a1fc23a4","c2387f2448a1270b48098adcc1e8caf33940560cc4749b3ad512312643e55618","5aedeb3b588f174e00ddb5603423bbae7e492201358da663a6e633dcf259f08a","31f1d0f6b688888afc2029af21124ce798a50ccf6c27bd77580325568c3b4f5a","2dc62672982c6fd7b34ca77cf88281d1166cac2019bcdada7779d6a36e01abe7","7678ae10aaceab8b2ff92f21cd0a9c6b77a66d539c61d99e00afab63b0c842c7","3101b15c9627b0cea36cdecaf75ee7f2f71a7698b728a6a1315af18e02592556",{"version":"90a834e0191556d9773b8f45a228906a4e19b5e6d0c7d03c97349e9c88034f67","signature":"8a7a418b1273caccdb061bd3292590fb089a2e0c9d849f7d299df138aa2d8d44"},{"version":"5be957f6c623c8fbfa3821b5cdc1fdc246007330ecf3bab0dd0b7df641d100a0","signature":"380405ad985bd673c6cbd4200b7b094e95bccf05f949ae1dd39747a654c15ac3"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},{"version":"d37f60e3b347d514fd7d3e144e1a6840d200c27d2c62e05edf52dd8848695dd1","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"40f6827017b8b42ed43592d1c87dd7908526ba38663dd66eb74e411d4a980d16","signature":"f9633083f921ed60c8dec9097b7c96eeaddc26df4d848504ac48272d7d066c6f"},{"version":"f11e3dc8fa22716afa971325ef54b8eb0c323917bccb6f4fa6840d1729611f8a","signature":"68b87309cea763355225b216bb38008e7b599b70359bd4df1a6d7fb44b4def3e"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2",{"version":"603d821fdcb3eeb5fdcde507b6f402c210325bd261b53ca548ada2e1d860fc34","signature":"a21fac6329181028cdccee4307ddfce411e09ed9f09a40cd266a19d0588c2af5"},{"version":"b78e02c31f83b7052ce76536524d72fd78c0fef365cd8a72cbd21d0c4bc748cd","signature":"901eecb7110f1b9e434fced70bae8f50a3e03cfa2d6f418cb89eb2439d8d1dc0"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"1c4e4bdf68a5cd3ad13ccaaa19534df21ec902d3f0661bf32835cf7aaa38363c","signature":"0c4a3ef40b0ee379e5737e3ee1703054d7958ab1ae74a47db1100ad8dff10e3c"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"5845464e53449f5c651703b8cfc2e88641b354a55247b2ecb2c4305558aa1098","signature":"c8b1d78ea8d1f16129f73fc8b182255921caed8ef417c15946d06b37ab93a65d"},{"version":"a0eb4014c9f4d77feeeb783f61ee969805b321bf9d00c25d19805a28c159fc03","signature":"ef3c72d0c9e84981e0a11bc2ec38df6effedab8fbf6070f4beb4f5d00c2035e2"},{"version":"c048ec2b3b4485d714aaa05da34bcb62823838f775538e13859261c4dce57b59","signature":"754d59daddea466bafa1f0d8448ea5865f7153f17adc3d939b61709e659179b3"},"c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"51bf928ce6ac57522f646223d50b4a252e4ab7204da4a3b88218ab2ad9aded9c","signature":"bd016744ae6ca47c077f30661af368da319085c4537214fd1063c45c22b75d77"},"e619dbf8f213c602b36bd6216bb6db78b6ed9b1c35886c28e48365f00f4ec382",{"version":"11b6a95d92ac65c6800bbcf58541515a298cfd945d2243e555501cd1486bd90c","signature":"025bbe9acf558c9142ee4566528ff0b4696179ff21e7e37f7851fa97849382cd"},{"version":"21381dc3d726e5cc231fa58def76f0f24e4c953abb59d2a632dc919d6af2b4eb","signature":"403af83b2e3bcb313a11dca8c5b8d1aee04c4aa2dffcc9e62cd3831c2fc93e1c"},"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d",{"version":"920e037ebb97433514badcb3aed91aff9f6c9f69d4291db16b2e900e2aec2dfb","signature":"b7ed1a0a6ca0eab9ae1833373c54ff7d87909c98f0f82854e49c0618e89f5232"},{"version":"66e5f6e85693dd98fab483bc5d6baa1b43f49e4709747bbf49092d177e87fef4","signature":"7bf40ec0b78ba5cb8d0dabd31f23bb021f74e36fd7cdd84d6c633fe309fb78d2"},{"version":"7b122b287b240fce05a1ac72a09ef47f858183ff011f36c51fc5f67bad4a7d0f","signature":"2ba4f98677a6c927e673141e9018e14ca02dfbe341f4cc6dc23c5a85d3ff3077"},"4e54793261bea91c0ca8b66d8fee5b44d68bb8f1d33a56faebd91c6543581d77",{"version":"286a53fcbca6f0a952ac70ef8b330838a03f959cb237ae904121bc10ab68fac9","signature":"a44c8f7dbbbc97c0914f47a1298809d88318dd5addfd9fb3f3096ad80a23018c"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"3659bed7572788ca0aa2118c5a742270d287e852b2029ddf50a784e9a1160997","signature":"bb9f357f778f67ad2d7988be76628deca1fce7581a057b599593912ed2a054cf"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"cffd8ea221794419244dc8e5ccc6b81c61fa8b72d7f45e7aa778adbdb208658f","signature":"641794828eabf7484d6e3591972dd657bd0bcc4b0121a3027b14d9a72782a46d"},{"version":"4de53ab5bb03a6df3f4ea1cf18607a83d6b3697c9c7e5e617b07be553138946b","signature":"38594fe8776daa1c6d8eda3148982fca4724fb9107b569ecc1e27d993fb4e324"},{"version":"944f97db12452e5fa492ee3e4e182c7a7ed88aa2959feb82f0b43d3437f76729","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},{"version":"e8e324d768bdbeeec83c0179002f579c77fa8df9341bb9c564cca8fde96293f7","signature":"eb0390e5fb29c8e26dd2ef43a376d769458a80ccd0a95f5cd4512b3d8ebceba3"},{"version":"43f01e42d750d463644d28e47cbc29ede3317e07cf881a5ec236b921d2281944","signature":"295e3e97b086cae6c855467c4444ebf392f18ad13b958cb0f3089a68811b4b1a"},"ea3e16f0272b2d70b81ada9fa4cc2e0d03c14f47581bfe54e9d83eee03768d9f",{"version":"cf099f553bc4f7b1a767943a5b5bb283e38a3232b86596ee1375e5e48c1db036","signature":"a963e4aa2f16d2f0f5f5ec046ed8ead51b101f179815e5fdbf909c9ca2d244f9"},"ad626d09c01e6f2cbe555662e355ae1ae6f9091d6151dd91561092c40e7002fb",{"version":"3c36d048ac4b57218aa60f89cc469bccb4a7d82c24487925400be7726ef6b0aa","signature":"623ea362e65c084a35126b8590da85679b910de9b008a6c353279bbfb5cc39b0"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"8c6832176c5ccbeda03e96135c93e1a17ad1d503cdd93434b983083bd626b6ae","signature":"8c220fff197da783e0f88214b6cd00cd73600f0312cc311f47a258f593dffd22"},{"version":"648ec9d8b9cf2a82740bcd3155297097480f70ee00c64f10aaa99bcf0395c9ef","signature":"eb902064ac24c3b91b315f9b00853426c3424061685a18f85e927fd8a3a92228"},{"version":"66ed1499444fa2c3b77d58e57bcee5b0d7b148af91afb9ec161125530afb4a0d","signature":"0a1f440173c9bfd5ecc9e3875937efb8da54a0c082afc86c4b9f41a0c87e2e1d"},{"version":"21578d48d37074b4138b6adefd415634d6474885be2f72b0cac4a09584b71e42","signature":"1d5d52e9702b651df8a219c400498592637e2012c66db3cdec1a4b6aaa872a1c"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"53583c81cf1537a2e4604e3ffeb43ec1bf24c2f20bfc06e1ef83ee20114a354a","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"ce1207514f85b3249bc181e15ca6f9557ab7f069989d1b1aee761ff5c99f9971","signature":"d5932f32d613672d16d821458915e4b4a30aef161a8c0d58ea72420de0a3a686"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"4ce0e065828a2a7cebdb6ddb382b7701ca983d8af08ed6405ea620de39e4cc57","signature":"2fb97dabdb0d19966a1873d6b41a5e99dc07f456bce6b9908a0a7c80a0979ace"},{"version":"356b189bdb90a73c34e791c04363c4704930b2bde046825d8aa93a233b105554","signature":"14e8912785520e2cdd27779002ea2fa9a79f42cde70aae682ed19ca42b6a2018"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"113bf65ad35f6e733bfbf08070af15d6ea4e24d521d9e202b2e06453d4e6897b","signature":"2ca7c79b203419a1826606167ee5b208eef29fa386bcef16d6e2b64f3509d330"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"6a3f7106815fc0110b1e5c88d5f0a7ecc20598322bbf31ec2f0303fbd1728bee","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"c8cb2807700da64268a4b96d519001c4e322026c5a55a4591dafbae9c98d5135","signature":"501a29a21faf61b3355e5cd70300b5a28b5b12de60f1caa05e56cb2d42607dff"},{"version":"743fc3db7c282521e4abce8131550ff5e380cdab8fb92cd24d4b230a9f4b3cdd","signature":"3eb10f4f746b65447b0a483da167dfc81a4974d21ea9c7f6b7c5f49b415a2cfb"},{"version":"c38684089052fb17e53e6082ea16ef58e55d2a13c4353b3df46013e9867a151e","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d829c12ae4cd7023fa5c5e4ee784c35527f6519ea39cdf8c2af8d9a41ddcf1e9","signature":"d333469f1cde151f6f317b191e3fc0e2305c72a95dfb5527ab1d9ec53959b76d"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"c6d64489e40fab6d481f4edf3049ba3cdc7c42bd3c479bc117de5b5c69939811","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"04606ad72a5599c9f9d7fba009c296d7a56b60fb7c627a05a95a2c9d47c39ead","signature":"96b65daf6681578aa161cd622806f16430dab19c5681c12db2690836b6e99163"},{"version":"e74da67164748adbe4002cd6f05ac28516d44491f49ae2722b713c4dcfb7d982","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"69b5e2602c836bcd73f59b3529abc4931f1fa9cd1806f59e0bcb9903c8972dd1","signature":"0e07f96fade13c5f4f5f73423d0b0d36d2072570d8a33ea450006897d3671df2"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},"2e2e78ab8f2e0686b89c885f0748e0971bb737a015733bf8291638a43fe7eaf7","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":4},"fileIdsList":[[92],[82,92],[349,350,351,352,353],[355],[357],[154],[356,358],[212],[354,359,368,369,370,371],[89,92,173],[360,361,362,363,364,365,366,367],[45,82,92,153],[385,386],[154,212,385,386],[386,387,388,389],[154,212,381,385],[154,157,212,372,380,385],[380,381,385,390,391],[154,212,381,382],[382,383,384],[154,212],[154,157,212,381,383],[154,212,385],[385],[154,157,212,385],[212,374,381,385],[373,374,375,376,377,378,379],[212,385],[89,127,128],[89,92],[127,129,131],[89,92,127,128,129,130],[89,92,130,151,152,153],[89,92,130,154],[89],[191],[89,90],[90,91],[185,186,187,188],[89,92,132,152,154,157],[194,195,196,197],[157],[89,157,177],[89,130,157],[89,157,180,181,182],[89,130,157,178],[150],[151,153,155,159,160],[151,153,160],[82,92,130,151,152,154,155],[151,160],[151,154,156],[92,152,154],[151,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[151,158],[82,158],[89,130,151,152,153,154,156,157],[151,153,155,158],[151,156,158],[204,205],[200,201],[89,200],[133,134,135],[89,154,157,177,178,179,183],[175,176],[174],[175],[278],[82,344,345],[45,82],[474,479],[137,139,140,141,142,143,144,145,146,147,148,149],[137,138,140,141,142,143,144,145,146,147,148,149],[138,139,140,141,142,143,144,145,146,147,148,149],[137,138,139,141,142,143,144,145,146,147,148,149],[137,138,139,140,142,143,144,145,146,147,148,149],[137,138,139,140,141,143,144,145,146,147,148,149],[137,138,139,140,141,142,144,145,146,147,148,149],[137,138,139,140,141,142,143,145,146,147,148,149],[137,138,139,140,141,142,143,144,146,147,148,149],[137,138,139,140,141,142,143,144,145,147,148,149],[137,138,139,140,141,142,143,144,145,146,148,149],[137,138,139,140,141,142,143,144,145,146,147,149],[137,138,139,140,141,142,143,144,145,146,147,148],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[92,157],[287,288,290,291],[92,172],[289],[111,132,251],[87,111],[111,251,266],[111,251,266,267],[111,251,266,267,268],[111,251,266,267,269],[255,256,257,258,267,268,269,270,271,272,273,274],[111,132],[87,111,132,251],[111,132,251,256,257,266,270,271],[111,267],[85],[87],[93,96],[93,95],[93,95,96],[87,88,93,96,97],[87,88],[97,98,99,100],[88,97],[88,96,97,98],[93,95,96,101,102,103],[94],[92,94,96],[93],[85,86,88,104,110],[104],[105,106,107,108,109],[117],[116,117,118,119,120,121,122,123],[117,119],[285],[286,303,307],[212,285,286,294,295,296,297,298,299,300,301,302],[212,285,286,303],[132,212,285,286,303],[294,295,296,297,298,299,300,302,304,306],[132,212,285,286,293,303],[111,212,275,285,286,293],[212,285,286,293],[285,305,308,309,310],[111,132,212,251,275,286,303,304],[285,292],[111,275],[261,262,263],[111],[111,261],[111,261,262],[259,260,264,265],[111,264],[217,218,219,220,221,222,223],[87,111,216,217,218],[87,111,219],[111,219],[111,217,218],[111,219,221],[216,224,243,244,245,246,247,248,249,250],[132],[111,132,220,224,225,245],[87,111,132],[111,132,224,243],[111,132,224,225],[111,132,222,225,245,247],[111,216],[111,221],[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],[87,216],[217],[87,218],[89,92,152,157,172,173,174,177,184,189,209,210],[211],[89,130,132,136,152,153,174,178,179,183,184,190,192,193,198,199,202,203,206,207,208],[337,338],[336],[334,335],[472,475],[472,475,476,477],[474],[471,478],[399],[473],[316,424,469],[30,83],[30,111,113,114],[30,111,113,124,125,126,425],[30,111,149,424,425],[431,432],[111,251,275,316],[111,149,275,316,429],[428,429,430],[111,275,430,431],[92,113,114,149,172],[92,111,172,280,284,316,317,329,393,424,437],[92,113,114,125,279],[30,84,114,115,281,284,324,328,329,340,341,425,426,427,433,434,437,438,439,440,444,445,450,451,454,456,457,458,459,460,461,462,463,464,465,466,467,468],[114,172],[92,132,280],[92,111,113,149,172,253,281,441,442,443],[111,114,434,440],[92,111,113,149,172,251,253,254,275,279,280,281,312,394,423,424,441,444,447,449],[92,111,275,316,424],[111,172,211,311,316,317,343,424,436],[114,212],[111,275,281,424,453],[48,50,111,125,172,189,211,284,311,316,317,329,343,393,424,436,437,438,455],[92,111,172,280,319,320,424],[30,92,111,280,321,324,424],[92,111,132,136,149,215,280,281,424],[30,111,149,280,281,323,424],[111,113,125,279,333,340,341],[30,111,113,149,266,280,329],[30,111,340],[92,111,113,149,266,279,280,281,324,327,328,423,424],[92,111,113,254,266,280,312,423],[111,113,149,252,266,340,425],[111,280,340,424],[111,113,126,149,279,280,333,339],[340,457],[30,111,113,149,251,280,284,424],[30,111,341],[92,111,172,280,331,424],[92,111,113,149,251,253,279,280,281,283,423],[87,111,113,149,251,252,254,280,284,341,425],[111,280,341,424],[111,149,279,280,333,339,340,424],[341,457],[83,87,92,111,113,114,124,126,149,172,251,252,254,275,277,279,284,312,317,321,324,329,332,341,343,348,393,394,395,396,397,398,402,403,405,406,407,408,409,420,424,425,426,469],[111,421],[398],[92,111,149,251,254,275,284,312,329,397,423],[87,92,111,113,126,149,254,275,312,317,398,400,401,404,421,423,424],[111,254],[111,113,251,266,312,423],[111,113,126,149,251,254,275,284,329,341,421,424,425,469],[92,111,251,254,266,280,329,332,398,424,425],[397,403],[87,92,111,149,251,254,266,275,393,397,398,402,408,424,470],[92,111,149,172,254,266,280,329,393,397,398,424],[92,111,312,469],[92,111,113,149,172,251,254,393,397,398,402,470],[404,410,420,421],[92,111,149,251,266,275,312,398,404,407,413,421,424,469],[414,416,417,418,419],[111,149,275,312,404,407,410,414,415,416,421,424,469],[413],[407,410],[312,407],[411,412],[92,111,149,275,312,332,402,404,407,410,411,412,414,415,421,424,469],[111,149,275,312,404,407,410,411,412,414,415,421,424,469],[126,312,315,422],[111,252,425],[314],[92,111,113,149,174,251,254,275,281,284,312,313,422,423,424,425,469],[92,111,251,254,266,275,311,422,469],[132,212],[89,132,172,212,318],[172,212,342],[172,212,330],[172,212,446],[172,212,322],[172,212,435],[172,212,452],[172,212,319],[172,212,326],[89,132,172,212,325],[172,212,214],[172,212,448],[172,212,282],[172,212,442],[89,132,172,212,213],[111,251,252],[87,111,208,251],[87,92,111,149,172,251,266,275,284,316,317,332,346,347,348,392,424,469],[113,126,252,253,254,276,423],[112],[111,149,251,266,275,311,470],[112,113],[111,469],[275],[111,149,251,253,266,275,312,422,424],[30,111,114],[30,111,124,425],[30,111,425],[111,275,316],[111,275,316,429],[92,114,172],[111,172,280,284,316,317,329,437],[114],[92,111,172,281],[92,111,172,254,279,280,281,312,444],[111,316,424],[111,172,316,317,424],[111,275,281],[111,172,284,316,317,329,437,438],[92,111,172,280],[30,111,280,321,324],[111,280,281],[30,111,280,281],[111,340,341],[30,111,266,280,329],[111,266,279,280,281,328],[92,254,280,312],[111,340],[111,280,340],[111,280],[30,111,251,280,284],[111,251,279,280,281],[111,280,284,341],[111,280,341],[111,114,172,251,254,275,284,312,317,324,329,332,341,397,420,425,426,469],[92,111,254,275,284,312,329,397],[92,111,254,312,317,398,404,421],[111,251,266,312],[111,275,284,329,341,421,425,469],[92,111,251,254,266,280,329,332,398],[397,398],[92,172,397,398],[92,111,312],[172,397,398],[92,111,251,266,275,312,398,404,407,413,421,424,469],[111,312,404,407,410,414,416,421,424,469],[92,111,312,332,404,407,410,411,412,414,421,424,469],[111,312,404,407,410,411,412,414,421,424,469],[111,425],[111,254,281,284,312,425,469],[111,251],[92,111,172,251,266,284,316,317,332,424,469],[111,275,470],[111,279,469],[251,266,312,422]],"referencedMap":[[350,1],[351,2],[354,3],[353,1],[356,4],[358,5],[357,6],[359,7],[371,8],[372,9],[367,8],[363,10],[364,1],[361,2],[365,1],[368,11],[366,12],[388,13],[389,13],[387,14],[390,15],[386,16],[381,17],[392,18],[383,19],[385,20],[384,21],[382,22],[391,23],[378,24],[373,25],[375,26],[380,27],[377,8],[379,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[279,68],[346,69],[112,70],[480,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[287,118],[291,1],[292,119],[289,120],[290,121],[288,118],[256,122],[255,123],[267,124],[271,125],[269,126],[270,127],[275,128],[257,129],[258,130],[272,131],[273,132],[274,125],[86,133],[88,134],[94,135],[96,136],[102,137],[98,138],[97,139],[101,140],[99,141],[100,142],[104,143],[95,144],[93,145],[103,146],[111,147],[105,148],[106,35],[110,149],[108,134],[120,150],[119,150],[124,151],[118,150],[121,152],[122,152],[123,150],[286,153],[308,154],[303,155],[299,156],[301,157],[295,157],[307,158],[302,157],[297,157],[296,157],[294,159],[298,157],[304,160],[306,161],[300,157],[311,162],[305,163],[310,8],[293,164],[309,165],[259,123],[264,166],[261,167],[262,168],[263,169],[266,170],[265,171],[216,167],[224,172],[219,173],[220,174],[221,175],[217,123],[218,167],[223,176],[222,177],[251,178],[244,179],[246,180],[247,181],[248,182],[245,129],[249,183],[250,184],[225,167],[226,185],[227,186],[228,123],[229,134],[243,187],[231,134],[232,123],[233,134],[235,134],[236,167],[237,134],[239,188],[240,134],[241,189],[242,134],[238,190],[211,191],[212,192],[209,193],[339,194],[337,195],[336,196],[476,197],[478,198],[477,197],[475,199],[479,200],[400,201],[83,70],[474,202],[470,203],[84,204],[115,205],[426,206],[427,207],[433,208],[429,209],[430,210],[431,211],[432,212],[434,213],[438,214],[439,215],[114,1],[469,216],[440,217],[281,218],[444,219],[445,220],[450,221],[317,222],[437,223],[451,224],[454,225],[456,226],[321,227],[328,228],[425,229],[324,230],[457,231],[458,232],[459,233],[329,234],[460,235],[461,236],[462,237],[340,238],[463,239],[464,240],[465,241],[332,242],[284,243],[466,244],[467,245],[341,246],[468,247],[421,248],[396,249],[410,250],[398,251],[405,252],[406,253],[415,254],[407,255],[397,256],[404,257],[409,258],[408,259],[402,260],[403,261],[422,262],[414,263],[420,264],[417,265],[416,266],[411,267],[412,268],[413,269],[418,270],[419,271],[316,272],[313,273],[315,274],[314,275],[312,276],[318,277],[342,278],[343,279],[331,280],[447,281],[323,282],[436,283],[453,284],[320,285],[330,278],[446,278],[322,278],[435,278],[452,278],[319,278],[325,277],[327,286],[326,287],[213,277],[215,288],[449,289],[283,290],[443,291],[214,292],[448,292],[282,292],[442,292],[253,293],[254,294],[252,167],[393,295],[424,296],[347,167],[113,297],[348,298],[126,299],[394,300],[276,301],[423,302]],"exportedModulesMap":[[350,1],[351,2],[354,3],[353,1],[356,4],[358,5],[357,6],[359,7],[371,8],[372,9],[367,8],[363,10],[364,1],[361,2],[365,1],[368,11],[366,12],[388,13],[389,13],[387,14],[390,15],[386,16],[381,17],[392,18],[383,19],[385,20],[384,21],[382,22],[391,23],[378,24],[373,25],[375,26],[380,27],[377,8],[379,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[279,68],[346,69],[112,70],[480,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[287,118],[291,1],[292,119],[289,120],[290,121],[288,118],[256,122],[255,123],[267,124],[271,125],[269,126],[270,127],[275,128],[257,129],[258,130],[272,131],[273,132],[274,125],[86,133],[88,134],[94,135],[96,136],[102,137],[98,138],[97,139],[101,140],[99,141],[100,142],[104,143],[95,144],[93,145],[103,146],[111,147],[105,148],[106,35],[110,149],[108,134],[120,150],[119,150],[124,151],[118,150],[121,152],[122,152],[123,150],[286,153],[308,154],[303,155],[299,156],[301,157],[295,157],[307,158],[302,157],[297,157],[296,157],[294,159],[298,157],[304,160],[306,161],[300,157],[311,162],[305,163],[310,8],[293,164],[309,165],[259,123],[264,166],[261,167],[262,168],[263,169],[266,170],[265,171],[216,167],[224,172],[219,173],[220,174],[221,175],[217,123],[218,167],[223,176],[222,177],[251,178],[244,179],[246,180],[247,181],[248,182],[245,129],[249,183],[250,184],[225,167],[226,185],[227,186],[228,123],[229,134],[243,187],[231,134],[232,123],[233,134],[235,134],[236,167],[237,134],[239,188],[240,134],[241,189],[242,134],[238,190],[211,191],[212,192],[209,193],[339,194],[337,195],[336,196],[476,197],[478,198],[477,197],[475,199],[479,200],[400,201],[83,70],[474,202],[470,203],[84,204],[115,303],[426,304],[427,305],[433,208],[429,306],[430,307],[431,211],[432,212],[434,308],[438,309],[439,310],[114,1],[469,216],[440,217],[281,218],[444,311],[445,220],[450,312],[317,313],[437,314],[451,224],[454,315],[456,316],[321,317],[328,318],[425,319],[324,320],[457,321],[458,322],[459,233],[329,323],[460,324],[461,325],[462,326],[340,327],[463,239],[464,328],[465,241],[332,317],[284,329],[466,330],[467,331],[341,326],[468,247],[421,332],[396,249],[410,250],[398,333],[405,334],[406,253],[415,335],[407,336],[397,337],[404,257],[409,338],[408,339],[402,340],[403,341],[422,262],[414,342],[420,264],[417,343],[416,266],[411,267],[412,268],[413,269],[418,344],[419,345],[316,272],[313,346],[315,274],[314,347],[312,276],[318,277],[342,278],[343,279],[331,280],[447,281],[323,282],[436,283],[453,284],[320,285],[330,278],[446,278],[322,278],[435,278],[452,278],[319,278],[325,277],[327,286],[326,287],[213,277],[215,288],[449,289],[283,290],[443,291],[214,292],[448,292],[282,292],[442,292],[253,167],[254,348],[252,167],[393,349],[424,296],[347,167],[113,297],[348,350],[394,351],[276,301],[423,352]],"semanticDiagnosticsPerFile":[349,350,351,354,352,353,370,355,356,358,357,359,369,371,372,360,367,363,364,361,365,368,362,366,388,389,387,390,386,381,392,383,385,384,382,391,378,373,375,380,377,379,376,374,129,128,127,132,131,154,157,190,191,192,193,90,91,92,89,185,186,187,189,188,173,194,198,196,195,197,178,180,183,181,182,199,174,151,150,130,161,162,156,163,164,165,155,172,167,166,168,158,169,170,160,171,159,206,204,205,207,202,201,200,179,203,133,134,136,135,152,208,184,153,177,175,176,279,333,344,345,346,112,480,138,139,137,140,141,142,143,144,145,146,147,148,149,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,278,441,277,287,291,292,289,290,288,256,255,267,271,268,269,270,275,257,258,272,273,274,86,85,88,94,96,102,98,97,101,99,100,104,95,93,103,111,105,106,110,107,108,109,120,119,124,118,121,122,116,117,123,286,308,303,299,301,295,307,302,297,296,294,298,304,306,300,311,305,310,293,285,309,259,264,261,262,263,260,266,265,216,224,219,220,221,217,218,223,222,251,244,246,247,248,245,249,250,225,226,227,228,229,243,230,231,232,233,234,235,236,237,239,240,241,242,238,125,471,210,211,212,209,339,337,338,336,334,335,472,476,478,477,475,479,87,400,401,399,83,474,473,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,470,84,30,115,426,427,433,428,429,430,431,432,434,438,439,114,469,440,281,444,445,450,317,280,437,451,454,456,321,328,425,324,457,458,459,329,460,461,462,340,463,464,465,332,284,466,467,341,468,421,396,410,398,405,406,415,407,397,404,409,408,402,403,422,414,420,417,416,411,412,413,418,419,316,313,315,314,312,318,342,343,331,447,323,436,453,320,330,446,322,435,452,319,325,327,326,213,215,449,283,443,214,448,282,442,253,254,455,252,393,424,347,113,348,126,394,276,423,395]},"version":"4.7.2"}
\ No newline at end of file
+{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computeZksyncCreate2Address.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isVersionUpdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getVersionUpgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/diffTokenLists.d.ts","../../node_modules/@uniswap/token-lists/dist/minVersionBump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextVersion.d.ts","../../node_modules/@uniswap/token-lists/dist/versionComparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/IERC20Metadata.d.ts","../../src/types/v3/factories/IERC20Metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveAndCall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallExtended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsExtended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v4-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/TPool.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodeMixedRouteToPath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/computeZksyncCreate2Address.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routerCommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/Command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowanceTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signatureTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/AllowanceProvider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputTokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksRareV2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/NFTTrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapWETH.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routerTradeAdapter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/providers/provider.ts","../../src/providers/multicall-provider.ts","../../src/types/v3/IUniswapV3PoolState.d.ts","../../src/types/v3/factories/IUniswapV3PoolState__factory.ts","../../src/providers/pool-provider.ts","../../src/providers/v3/pool-provider.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/providers/portion-provider.ts","../../src/types/other/commons.ts","../../src/types/other/TokenFeeDetector.d.ts","../../src/types/other/factories/TokenFeeDetector__factory.ts","../../src/providers/token-fee-fetcher.ts","../../src/types/other/ITokenValidator.d.ts","../../src/types/other/factories/ITokenValidator__factory.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/IUniswapV2Pair.d.ts","../../src/types/v2/factories/IUniswapV2Pair__factory.ts","../../src/providers/token-properties-provider.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/GasDataArbitrum.d.ts","../../src/types/other/factories/GasDataArbitrum__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenKind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/providers/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/Erc20.d.ts","../../src/types/other/factories/Erc20__factory.ts","../../node_modules/@types/brotli/compress.d.ts","../../node_modules/@types/brotli/decompress.d.ts","../../node_modules/@types/brotli/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/basic-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/bn.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/hex-strings.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/misc.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/test-utils.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/bcfg-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/network.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/alias.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/fees.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-node.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/deposit-transaction.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/encoding.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/hashing.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-provider.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/constants.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/gnosis-safe-checksum.d.ts","../../node_modules/@eth-optimism/core-utils/dist/etherscan.d.ts","../../node_modules/@eth-optimism/core-utils/dist/helpers/setupProxyContract.d.ts","../../node_modules/@eth-optimism/core-utils/dist/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/coercion.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/type-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/contracts.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/misc-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/merkle-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/chain-constants.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/message-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/cross-chain-messenger.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/types.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/bridge-adapter.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/standard-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eth-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/dai-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eco-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/index.d.ts","../../src/util/l2FeeChains.ts","../../src/util/methodParameters.ts","../../src/util/gas-factory-helpers.ts","../../src/util/onchainQuoteProviderConfigs.ts","../../src/util/unsupported-tokens.ts","../../src/types/other/StateView.d.ts","../../src/types/other/factories/StateView__factory.ts","../../src/providers/v4/pool-provider.ts","../../src/providers/v4/caching-pool-provider.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/gas-models/gas-costs.ts","../../src/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/quoters/v4-quoter.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/Permit2.d.ts","../../src/types/other/factories/Permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/UniswapInterfaceMulticall.d.ts","../../src/types/v3/factories/UniswapInterfaceMulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/IMixedRouteQuoterV1.d.ts","../../src/types/other/factories/IMixedRouteQuoterV1__factory.ts","../../src/types/other/MixedRouteQuoterV2.d.ts","../../src/types/other/factories/MixedRouteQuoterV2__factory.ts","../../src/types/other/V4Quoter.d.ts","../../src/types/other/factories/V4Quoter__factory.ts","../../src/types/v3/IQuoterV2.d.ts","../../src/types/v3/factories/IQuoterV2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/SwapRouter02.d.ts","../../src/types/other/factories/SwapRouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/callData.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/caching-subgraph-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/subgraph-provider-with-fallback.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/v4/subgraph-provider.ts","../../src/providers/v4/caching-subgraph-provider.ts","../../src/providers/v4/static-subgraph-provider.ts","../../src/providers/v4/subgraph-provider-with-fallback.ts","../../src/providers/v4/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupSemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/diffLines.d.ts","../../node_modules/jest-diff/build/printDiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"7a63b6d780e36b4d0422f9f8b430c52f854a18ed825b463ff6cbc8e0cf854b8e","signature":"4edbc1f9bfe75cc47936b73c9269c530e71bef187b91ebb115fbbb9d3afddbf4"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"e4eeebdc035944893a777fcdda0ce930bceec1b43aa34aadd17548e6f2b2a875","signature":"c15b63cf8ed5a8054c6e01e1c3ba54b0709ec66100ef7452058ebc781ef2bc54"},"58a6bfcfa719f77a01c3b16611673baea9237bf8b0cb9b353aebc807b6a23c1c","5cef2a889dbc60bb4a3d29acd3e4ad9773dcff28bf5c1b24466b91f649b90c47","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c","613dd72219d3f6e2c269824f615d0b76060d16d1a4a1270d99aacc5cf1a3e09e","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","dd6eead0d137363bf4202b0fef26a7b3af71d83c364d2ac4d729e4f1de7d82ed","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","8baa163aa726dc495ee1ea7350906b3fe5f16b383b7105b98414be264fcd27f3","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},{"version":"140c626152e3d86b891baf3eae657c961b2ff3804d830101e79075aa62584884","signature":"d86a8ab1ca180c45b8cdf800495119fddac19bb19e61a09a8e300239d72b29e5"},{"version":"c1d90e40a6f920aed2329c1c9275d9f50e85f6a3dcd03be4ac5891d0fe2ee1e1","signature":"56187c3645803aa0a97d3ebeff568f06ab178e2e5ea01be84cb699581ed48d63"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09",{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},"4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"0a65d587bf4683152a2116eedee39fe6d34b9d9016272ae82496c1c8f3f3f768","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","99c74fe04876989f8bcff169fdc590a5a5897566da8e065d93ab8317ec42e498","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c","34ed0ae35b52ea51b1b356da5f4b217afafe4541666c5511356a8057f054023d","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","d87f2e0f767dcd1d95e4c173ccc097fb0f897b0ed73ea1a70846c42e8255256f","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","4cdab4d8d7a48c49952f69b4e1d86c1f85db0e3adfdc6ef5228bfc8558b01118","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","b316d763aca9e1eaf3080c2ebb18c8d681be16b9ee3b580471d53666520ca31f","d383fec7cf5d98b5f42c3b20303193adb63d57fb6b3047803e3c0ed2f93cb6da","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","c4df09299b77752dcc9b7a77e9604ad1892c540f501f608921b423b20d225572","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c","8c6c0b3fc8f51d8bd737ad6bf7086586a202c5a9988f66265d04402767df9369","8bc5554a7869b50493c324fef889a61ff0ba7cd10ec950075a52dcc18fb7849d","0e153822bf41388b5a924c8a7b21b46f0b6ce882329c40dbf049e2e4875157ca","c3718521a8c88939ecb336c34bc92e16ad39e63bccbd412e842c4c61d476eab4","730068a98f89d2edeaaa07aff57d5873b55585892e960d77d241c54c72d9c329","4f24f4ac83793c2b9704f1d58c17799e20e514ec6db6b46976f3a6518b2da248","df9d413269cac295ff10771a1d71addc0dba32d4d14280b300dcf968404c2baa","654fcd6988b7ff75de78245a6b35a7f4ffcdb15fa063d2fe4959f4deb06751ef","2d02940d19b21d63957dec97096249d205cff79c9b1fbb8ce20a3145f3f42931","c0cd099c6ce291110860778a2a2f11eb7c9f57df8bdfd023c385f67e7af39fbc","c3bdfbbf2c9eb4fabe727e65f779a6b06efc87eb4e691665e1f1a032aa661da3","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","b31f212ecdc22849c9d53fea5d20432308e217fea1a59c4cc66440bf3fa6686f","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"fab85e7cad4672932765da19ae610a433ce950942ccbc192308952db7f26d747","signature":"012383004b233e5ef8818ec283badad7030f78a0afd025a589db98d652f9f582"},{"version":"3e95f0d58ae00f825dc7b7cc947c69168d688751329074ae6df3b1659c3aae00","signature":"24276bdc4357a138d038c7f175d040a6e3e73c8ea7c8bd4c179f0e16833dac70"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},{"version":"9d4995f0136f280936ca534563ff2b7a92e39950e88cb0aa8c06470554c20b6e","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"98f67f39aa3b83a2267032e7ee1fc7444a4b46537c42fc936be5bb24483741a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399","014f572185552227aeff1f109895e16455ba58d24655062779c52ef83b080321","1284e8f2f903115f04f27f98495a97eff13ff9fe1f5199dec944a2853a408826","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","613dd72219d3f6e2c269824f615d0b76060d16d1a4a1270d99aacc5cf1a3e09e","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","dd6eead0d137363bf4202b0fef26a7b3af71d83c364d2ac4d729e4f1de7d82ed","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","8baa163aa726dc495ee1ea7350906b3fe5f16b383b7105b98414be264fcd27f3","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","19fe3a7b4a0d4615da14ba3725e96225aa32df9c29f3e6e3699b5e56dd31bf53","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","99c74fe04876989f8bcff169fdc590a5a5897566da8e065d93ab8317ec42e498","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","6cc166c623ca0b34cefa01f500c7f4803414dd95d4304a1efa320be36f62374a","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6d17d40ccd9c166fbb72872dc4263a25d6f3066fb74e51592a8f80bdd6d22598","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c","e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","6e50400e9113d818936f3405f09c5fd0e4d83ebb0a6503ed61d9d6eb68210ade","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","3629a217b5522339fb71a77707c035e522d2228b5eded788123bb2e50334003b","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","8dfbc3e9ea8cd2e97cb82488c32ece8f3e1cd9d71cad68532cb016acf4419e39","20bb9c1e6cd702539d4ac314e841fc8e8833ddf0835e29859880eb181b3bfa0c","175217632b8b7902b16bb6126c0297374c96e79cba4e092fe6efc7bb423c69a6",{"version":"e8a03648275dfe028c99c737702eac60c59de9c5adb7a6fe6b50a4a14b0d6b19","signature":"3cb64a1407f0e7568c78ffc4e8bc6a40ba5d584ea0f1da46c1e250c4d632b146"},{"version":"ba3d14d7be67bb7ee7ab914500866c7e73b17aab1df4837e25b2a0697167d7df","signature":"7d6d7d1188dc74ca4beb23df21197c3736dd314f49f3daf61683fa7b18ba6010"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"68c6bbf29cb92adaa7876b12ecb9eee93c08e0694e1542973fe39163178f0c1d","signature":"e9e4fe568697d99368d872145d9270d4d58de2e941105d65769ef2f7108aa1ee"},{"version":"4e86abfe8e11adbe983ec2da37b58e7adbda91160121d16a94f62d3f5cafa2ca","signature":"200db6846dd1ec473f39bbf8cdf4e3d934a457a0bb2e503fefb4826677c5f515"},{"version":"353e8186841bbf5a12373241673a8cbe38b282cec7d31abd0c67b9d7c5725722","signature":"a6af66291c3b4226f580a7f9146af17d707df78f880cc8d780a689bf1b9ea0c6"},{"version":"c3b0a28038d792f6122b0bee08b37c51ac49a1c597fbd814524e60c58253cd18","signature":"0647641b70a8363c8f18110fcaa047dbb6f9ccb435cd432f59db29f47864d754"},{"version":"d42d2a234a4088956a1e157db95b731f76b817595ee263d54c48364c6344481b","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"cbdf07fb4bf6ccd1be747a7c9112e3357b2808d8fa91eaeabe0bc90ffb661894","signature":"db36527d526589fee847c741c6faf272a8cb0e7e74d850c44f4505ab520ab4e8"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a0b12d0ba8965a06dd1f195b69b05bd16551ea57e3391c19babf9e0e11ffc967",{"version":"659fb6214a0400baaa94cd7cba587f9d95d0b5de5a4caef6a9a05015bdacfdb8","signature":"7ee8554ac879d07ef153445a2be2bfb0ecbfa25cbf5b27fa4d52689d85e9c587"},{"version":"6ee90d299b37a8690736dac27f19a5324c35ce8006a42f2fe715416fbb8a8ddb","signature":"f1ea830bd6a694d717563834c84f61bac6b9b9a2aa039f8ceee0c113e46cad25"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"63d42906c9c08a4a6b3e15cb6ca02e76ca90d3dd71f840e0c57ee3eb451d3282","signature":"b1469774278f2d1c067ca66fe7300c3a193a0a10a8d424621b1709b57770cda9"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"423c5d9c9b1f70fffb831cd5b432a76063a7363c93bb2a224c6989e18397c8cc","signature":"fe02341f5602d1ffa788f1cd51d90ec197de8fc3092da9e6d0dcddc548addaf1"},{"version":"81a5c7fee13571f0bacaf6610b20a347af9863151a96a3ae26f10929487dc03a","signature":"c64d8c344271da5f8724b6f21fa214e0193152f94de3b5d6b9468ab6e5f69882"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},{"version":"ec61723ef4dd303a73b12ae07804946ae41699e222c5701d92d837506076796c","signature":"11ec6c7c05368eba9eb4e3760c03adba128339d08c65b7caae318dc0c72cd5e6"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"bdc9a62936281daa7e1ca7cc02e5cdb1fc8dd647f24f496b63835e1411a25afb","signature":"f0afae11b983d968a3a7e4597e6f4a0ed0234f779c0ed448231ede2687fdce19"},{"version":"19d29c69e48d5912093514fea5b459b10e11237c04f63dfc5ef15c2e71627faf","signature":"832c9fa8273c14d096321584b8b2d7645f08f56ebb65985a49bccd43cd179351"},{"version":"a0f88a6a607bfd5a477cd0fcdb0092385764acd3c75c3b4f4f20b19187638cf3","signature":"645d159f6d9e3eb8e9509f38f59a8fac156ee7393e96ea35400f121a7f381cad"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"a67afbd107f07baa83e5deca88e364424d25fce827c93155e61cb2dfbd591885","a6f0218395ecb8e0d736e0a19524223ab7a8a7ed217c4a99c165df2532e1beec","983ecff1acbaec6c7e91a04e1406f088102c7c171adae0cca26c87e8f0612307","16c16ec2a5264d177d68156b545a26ff50a7d00c470991753e7065cd13baa066","03cb5283929e384d9d876b9b2cd1bc4a1ff6796ade2b5867604156e9129302f2","55949c9e272ced5625ab3b7b5874a5794c5d514195ff11453d068e1ea2f22515","5f8616b3b4a1010f16be1639c30d8c6c61a5a3eba036105164a994c527b6a701","6ea3b658cab3bf55af3c7e353b5c780a953f2cb8a736749fb11158e60a0c1794","4add59324adc56388ebe91c57aafce5cf3b067f1a31f1d795e36554a639ba2d5","5311886e264dccac6b3ac7aaa2f5e35629e77dc77aef7cae10d835a8d90186ac","2e9e9594288e71c811534b37cc988e7f8cf3eca92f4fb34bd86e68cd4c4933d8","68453980880200202d792d8ce79a5083e01b5fa08a759082447c849f3846fdb9","46439fd047f993161368be2cbcc7bf13bc3ef45bb428d01301c6de72c7b12eda","267e08d679da81ce5c20dac38a73d152167e385de88348ed58d52d9538180223","521cd3c937271dd1e75cb7f13e7d5f3480a37595418b7c1f404e3263f4a79b60","66401a77bd62ff01eaa3201ad423d8317b0c6f55769402b84ed6033579c109eb","4937c0359aa9c91e874015f23b4216604f24a7092569e586cc8e4c04efcd0716","16a9b10ef9cd6dcbb0f43b8442636ffd660da4d84f5cb69549648f57f0a559ba","54473b26a072224331f5b281a95038e3d70578b67245570e889b2a49f08352c7","0cbb8a9211e030850ebb1d73e25832eca7cde7983c7379b3948b9fa49d472b9d","68807be4cb528c6d4b627f8463e013f4ebdc22da168b1e10eb8074d00354e256","3ecd0e9c1431f735cc8ed99a9b7848a2b433b73ac59b73afcffd2810dc63d415","0f792811cec59875caf2ac7e9184b095d540f39c20c2edd84e6bf8f71d695445","acfe2a804d36efcb8f457408b48d42abbfa0674b24d8fab86a3fa67912093f98","b061f81fcc10894479abef624141513e103bd2a57c7a3b0db9b38b4054690e76","c182f8cc634978c2341cbbfe4fbc04d030c15b5e38e5fa96b980f5a284c6f91e","930a106ea8f6a722914dedbbc4e83eacaee2c34e6a3c7866031ecd1d62a14e2d","aa1fa0d91659fae4d7a087faa5fd35f9f671162423edf82fba8f4d4a0b7f2a69","9180758bca0f498eb0839372e325f83bfcf5e46d993e2cdacfab12a3ebb872d9","0f434ac807908fbb495560882b805ac1e211fb4161a68f4447fe46b0b96d039f","22bd9a747bd9f230d10370020f642e5a037a9c87fb0cdb3d22cd53b3627fa6d5","a64049a1707fdea015676e4550332055ca3afa7bfbfa346844e899ee4400a0ce","1d0447e26c96f2926a9dd8d0d8398dc379e27b92a4121e0873a7a694508139e2","92818ccd63a80377b44a64e84ac674f0b8a4a6a5374a120543b27332fca76952","50366a02489daf00d23940b93ec3f5ed78ba06c8c9c61c7b41aca5fb81a1200b","f0ebf6ad7ad0bd71eba896199a04dea5d9599e3902df901fa2caced40c48128e","088471eb708d6856f94a51d92ec5f0f1cbcb2a770ebb8dd7fbe1f79d4a4af89e","dc384b06f30fb396f2289ad67ec8bd433ea0e1a17af5e563a8025293c44f6a7a","7ee1923d8cdf7e6d7905368b7af2632cafa5db29d9b1346395297a22b0fcd51b","e1dc2510e103d3e31037b4271b4d07a053d3c1b2f9fb1119b1c07292c2c2debd","cae7890145aaef376eb9930ea6ddb95e130962a1bfc3808ed973f9f8a1fc23a4","c2387f2448a1270b48098adcc1e8caf33940560cc4749b3ad512312643e55618","5aedeb3b588f174e00ddb5603423bbae7e492201358da663a6e633dcf259f08a","31f1d0f6b688888afc2029af21124ce798a50ccf6c27bd77580325568c3b4f5a","2dc62672982c6fd7b34ca77cf88281d1166cac2019bcdada7779d6a36e01abe7","7678ae10aaceab8b2ff92f21cd0a9c6b77a66d539c61d99e00afab63b0c842c7","3101b15c9627b0cea36cdecaf75ee7f2f71a7698b728a6a1315af18e02592556",{"version":"495b7f131854d7fb5cdc7492fd7bda278a841d39b25fa02a6fc32996e0db65bf","signature":"1f8e8b1de161dc93d5c87924f6c5d00fda44e859dba5d3bc790091345b46196e"},{"version":"2b7263fbcba7efd43e7dd28a01ce1329015bab453be46e61e71d79c5b2c32e56","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},{"version":"73dd315a41498a6c41aa41e7a374a13b227bf706e79d27719111543aa039e720","signature":"91d720c983c5d357121f77b49129bdfa864e1339dfe370b10411e976d9b11c5b"},{"version":"5be957f6c623c8fbfa3821b5cdc1fdc246007330ecf3bab0dd0b7df641d100a0","signature":"380405ad985bd673c6cbd4200b7b094e95bccf05f949ae1dd39747a654c15ac3"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},"2af213f32178c6dfb8a3147f74ec12bc1daad5bc07a515fbc1bcfa22f0b2903d",{"version":"a566e9b3dc113ad05515f6212f3f50ecbe8339c7ffada1e9ca8bfb4313926fd2","signature":"58842fee8ce9912730284b0eb667dad825a4d928621abc80c07fb4dde0d22d76"},{"version":"14c9cdf9d514e56300c8b0b86294e5254ce7e9c0814e9c8ddbf4004ea1cfdf72","signature":"0c2614a89e67d9189cda1b6fb39766f7b0ab7f62dc1ad1bf9d16ad5e24ac0f14"},{"version":"fba947b5f97464e0acd53c07162c1ebbd61e5679bb11031e450243b8b7db0655","signature":"5f77ed626119caabd5767216b9dc4ba3caf59504a0b9e919a35dada02e61fd0d"},{"version":"ca71c6427488ce891d019991e60ede00d0f424d1e2d788c4326ddae07ce3e349","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"113d74278764de120f19e9b649ee0f023cb9eb2502b38a2d9f9920676f306dd0","signature":"ffd6086c392be6c5aee480f0d3ec4a5d0e07b8a4225722062e301a3ecda0cee6"},{"version":"16072fdfa023438ce039ebfe1daf8254b34960545dee512801f39b9f826131e9","signature":"c77a73d23254dc8028da7c2d59034f32c06c6e0c810219cf020c96613d21c544"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2","c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"39b7519a43e8d5c20651b0b97bd880291b0afbcac9054b58497dc617b12d4428","signature":"00b0a2f945ad49ad2b8fdbd58c0391036f91c28da7f9a591b00f262c188ece8d"},{"version":"81646afabd1dbc6ca4ebbea9584a1bb6be1a128b4625615a94b12492ac4d0dab","signature":"60e9890ff42d069aeec27bf8357d3d2e6c5af49a822d69f303b6bb7524b6ca8d"},{"version":"f50847b9b4dfcea2202db87aa69a028b3fb2abb9c998fa5dafffd8e4bc01b849","signature":"ccd2c8b28fec5523388fc6c1222d2a7361c3acb79581f99a7b3dfabd486299a9"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"7aa5cec81b52007e4ed3c4fb390d0973bd07365cfc4e767fe252b49b2bf42d79","signature":"ef1ecac8b5bf35d665f6015dc72a4aee6b438b7291998bdd3815b5890f486e36"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"095c529a3167619f5bcb565367d234bd58d0a3c7c99f6898bbab0a11d9309397","signature":"295f4f6194350054047d9ddabe948adc9eb03c6667b2fee96adbcc82e7e77a46"},{"version":"ee3603e18644aaa3d79dcb5ae17d1217768e27f33a0d59749a35411356512d5b","signature":"589f48873355142b6cd1710920ada21e09851804f9c662279da3e0fb03e23ed0"},{"version":"95cae2a6280037eab9c335ae3a8b569876ec13320eaf0216ea9ebd9c0fdeb9c1","signature":"b458fdd89a8715d7fafa54d1ae62f70e3c19da7d64be6d5479d39e62952ec7cc"},{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"2148b94c3137a0fc536363bd82969de0f2197030b88e2a697ec8342c353de844","signature":"a06bc7eb2946c12a8264e18e47fbaa3ec9433c3f3766b288029f82a85910ac6a"},"e619dbf8f213c602b36bd6216bb6db78b6ed9b1c35886c28e48365f00f4ec382",{"version":"f3377f700678127c58cba1c86433624e75e3898c4a1cbc5b50a6a26a13857f26","signature":"1f4442f5426afbe8c18778c20e2d5bb3ef4457fbed445f8d4bd0a2bb6fa551be"},{"version":"b8acceae093a5f263f5980b09e7644a7496600eb2ca59ee40562d1febd1f06ed","signature":"e4b91083b332dee1c244cd19f80280c4cd6f0d77ab5b625051b1086f84f9adb6"},"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d",{"version":"509113b8f7b1f6f246d5dffe92cb0ae5936432ed5cb5b3202dc0b144e161d124","signature":"731ce5a4bd3aa2274d3550b35fa1634c4b962403371c06f84597b7347a8930be"},{"version":"15e4af355b15698db8fab41e743a7f21f5a5c1af98a5a356b5c5f3361d5f0d63","signature":"d25c71c7f721032d8ebac149bb0f47af5ad3b79107accee130796c4ab4a03859"},{"version":"51d713e2f27e890eec435942a281254bebe5b0d355b2d433af30c38690be64c3","signature":"f9c4c138ccbb615abf03a906f33da6059a464908a0c5baece5cf22134cca171e"},"4e54793261bea91c0ca8b66d8fee5b44d68bb8f1d33a56faebd91c6543581d77",{"version":"a473622c0cbbf7c4f0be8e0d8e53edb5f525659baf3de6c493e418c8a0df5f8a","signature":"acd6c9ecb6e71e3bd8df3cf03a056f4cd282e2df54e475b4d4e0ffdecddd8d93"},{"version":"b1bbc7c5a49dbe2c417846a8da34e5d29931e8690384862a9fa5774dfa43ac29","signature":"2d2e74e923091e0d4b4a5ea1d73b3630d3d65cb480a4afccbb6b32e2bc60b326"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"bd2ff5339ec641a0010ed86acec6ad167c4f59b34e7bc8aa7711e50580cfac09","signature":"e3d759ccf935b341a1111bc124d8a3234a15d4276e804e7af7406f2491d56053"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"c8993ac36d4bcc3ffb1fd924783996cb9fd2c7b2cbeb6036261128215f8bf741","signature":"9d75c2e925cebd1039cb2721c5d9ff5c65a07cbaaa35c6404215486286276ddd"},{"version":"4de53ab5bb03a6df3f4ea1cf18607a83d6b3697c9c7e5e617b07be553138946b","signature":"38594fe8776daa1c6d8eda3148982fca4724fb9107b569ecc1e27d993fb4e324"},{"version":"11484124308db507a01960db2232a5038aa75f32a29d8e3139e7c3e446b8068a","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},{"version":"5741533d37d8a3a9f32a701d1cd507db23f656ef0284f9d0327bb2a7f07a2b6c","signature":"eb824546ebfdd25070ec8a202879863b68986be4f60b36fc850f15d5943467bf"},{"version":"8c9faef9fadea69d25efc8f5274c570f5e2b11118af0639fabf8529976e9df39","signature":"f4d1fd5b8fcafcb2b22b29abc530cac26462a0fbe09687cdd56cca95aed7c0ef"},"ea3e16f0272b2d70b81ada9fa4cc2e0d03c14f47581bfe54e9d83eee03768d9f",{"version":"38a15111f85763c63039447494135a226941c4a7b42d3f868373bbb18495cfc3","signature":"4a8dd814e497d470b9090ec049e0bd21f29c078163cf549d59a177d5efe7d38b"},"ad626d09c01e6f2cbe555662e355ae1ae6f9091d6151dd91561092c40e7002fb",{"version":"3c36d048ac4b57218aa60f89cc469bccb4a7d82c24487925400be7726ef6b0aa","signature":"623ea362e65c084a35126b8590da85679b910de9b008a6c353279bbfb5cc39b0"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"5c792b0b7a65902d0409e3f7d73317bd055f5358c2dc3732918bb8542c72c92c","signature":"8c220fff197da783e0f88214b6cd00cd73600f0312cc311f47a258f593dffd22"},{"version":"aab61fbdc865b103ebf5598b30fdd687175c2a1e6b059da51d8832c940330e11","signature":"b6129fc3f5349970a493dae60cfd86d7d458188f4d80c22b2d19ee408f6b2df3"},{"version":"66ed1499444fa2c3b77d58e57bcee5b0d7b148af91afb9ec161125530afb4a0d","signature":"0a1f440173c9bfd5ecc9e3875937efb8da54a0c082afc86c4b9f41a0c87e2e1d"},{"version":"21578d48d37074b4138b6adefd415634d6474885be2f72b0cac4a09584b71e42","signature":"1d5d52e9702b651df8a219c400498592637e2012c66db3cdec1a4b6aaa872a1c"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"53583c81cf1537a2e4604e3ffeb43ec1bf24c2f20bfc06e1ef83ee20114a354a","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"3a3beb12819b62a32d24e7b7ec562c8b8b89d9ca8e3baf24f446263de87f85cd","signature":"d5932f32d613672d16d821458915e4b4a30aef161a8c0d58ea72420de0a3a686"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"51af9912b68cfc465c080adf52ad4f6c4e154121e3ebcce49b69dd13fd9e9e01",{"version":"0bf7cc796ce728c96de91d3270e165c3d923ba37ee8c7d86d864498542a0334e","signature":"573116d50d2c1223eb069078555a297b69b4b856a6b2e88692ceb01636e7113a"},"97e5ceb9cfc8e379fc247c89a821471f04d4abde0289e81434d5e8715c4e8b61",{"version":"f2751db38b7e93e7435d6d50931352c9d461176ff964f06961ced6880ef69f85","signature":"7f74f69bd6eb552eb72eaa161a4332a03c12caf2276f16c21bff13eb11bf5cea"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"d4c2592c61ddda159e4319c3490ffd8425c6df435e08e324b81ebb397e1b2f4f","signature":"f778224925b01615721dbbc78d962de302d420ac08f54152ed24400de1567f97"},{"version":"356b189bdb90a73c34e791c04363c4704930b2bde046825d8aa93a233b105554","signature":"14e8912785520e2cdd27779002ea2fa9a79f42cde70aae682ed19ca42b6a2018"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"489163e442467727fbf77e64f8f52737e72cbd0d4bca2c63ffc49ad98e8900f7","signature":"afda1c5cc9b5edb410b99e672e6cca6fcbb343089aabcb65f859829189827ee8"},{"version":"38e17e4a11c25db456f54ee6684b9825f0f20d94b3f2304747a90c3d3c7d0409","signature":"c155b5808e628ef0daf5d81fe886f5dca2ab780b807159e0ed7acfa45f05c839"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"6a3f7106815fc0110b1e5c88d5f0a7ecc20598322bbf31ec2f0303fbd1728bee","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"5c1d0cf14846cde8bea4e5459d236503f16b858004771eb038ab23f657a44f88","signature":"d170214b665597767e336cca79989277a0057ab714d2e0f83a9e10067c81451b"},{"version":"6a6160e04718350ad0c747cb3a5d683a83535b534943cdc97927130a175ac5b0","signature":"0252cd48e3109fc2c0f63e06281d8b5b0eca06b169938bb4ec13374df403476a"},{"version":"743fc3db7c282521e4abce8131550ff5e380cdab8fb92cd24d4b230a9f4b3cdd","signature":"3eb10f4f746b65447b0a483da167dfc81a4974d21ea9c7f6b7c5f49b415a2cfb"},{"version":"21a564b45c91302548c9231959dc5d4903e830242cfbfbf534b74c47b216bd9b","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d6a6353feea024f96c8a7515f43d01beadf1887e74bf14755bdae0e24456734e","signature":"2da1a7e104a32bb0c830eb50f82468d68d4f866081f130c3a0403bc53d7e7c4f"},{"version":"5a9dd50556f07d5bf241589247815c49dab6621e11a917ce4a0c1432593eb93f","signature":"8eb893304a76d647f731068170cfec88460fcca823ebbe0d3b878866debca230"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"c6d64489e40fab6d481f4edf3049ba3cdc7c42bd3c479bc117de5b5c69939811","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"5cfcfc6d61b0a7489d3904a4b4ee3d42a58400af0983cd5c6f1acebc6a9ca0fc","signature":"46d26a755d9fe92acbb24fd7ebfb9e5058f6689d861a2ea50d367d5fe94bba98"},{"version":"5911756d21a99511ff71691758064207f07c9b1009e66794901bf7505a0daff2","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"bf034e51fda4c52e7afa864ecad8da05cc2ba517612e5000e0e386c0f61be068","signature":"12ad64d4481c2899377feed3b43ef71a8c74705c128a048b1f842825a2f4bb17"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},{"version":"981f27ab126d5f098f46cc32901c94a7d566cd8bb7301f01cea399315bb78ff0","signature":"7d3de5e7256e90b4dd1f630ed54a9623a6fbe282486e442fda8c3a24620998d8"},{"version":"6252f91a20403a38bd924b3313c990a8f851b4627cfbfe43369ce843f6de92b1","signature":"464beb2dba363416cb5df8f00b29dbe3edb38ea727d6ef404ae2fb6cef36e769"},{"version":"0f7a9bb42edb64a2f7a6b26a0f632b4fa012c3148abd330047e42e550e459401","signature":"193ae303a7a3fe759b4c2223ecdfa97c06d7026e57fd9ea0c3bcd75beb77b965"},{"version":"edf8ebde627644362f16348aa02bd1d4b7b9985ceff5c3dc7e2bd73200d6af94","signature":"6c1164e5bc9963b8af0f9e885ae8dc4b36933adfadecf9b3ffd6b73eaa83392c"},{"version":"53d71a1f913516fdd6d0b02c11de6a5f45045a559ad297921aeb0a19fdba41b5","signature":"f849b6822d9f21fc9ab2be78939fdc6cf7079b28e65c98dbdda2221ad05b19f6"},"268b053c75f4f3f5eaa60324f62f7a98545f95f0d7c6719777fe353dd21fb87d","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":4},"fileIdsList":[[92],[82,92],[449,450,451,452,453],[455],[457],[154],[456,458],[212],[454,459,468,469,470,471],[89,92,173],[460,461,462,463,464,465,466,467],[45,82,92,153],[485,486],[154,212,485,486],[486,487,488,489],[154,212,481,485],[154,157,212,472,480,485],[480,481,485,490,491],[154,212,481,482],[482,483,484],[154,212],[154,157,212,481,483],[154,212,485],[485],[154,157,212,485],[212,474,481,485],[473,474,475,476,477,478,479],[212,485],[89,127,128],[89,92],[127,129,131],[89,92,127,128,129,130],[89,92,130,151,152,153],[89,92,130,154],[89],[191],[89,90],[90,91],[185,186,187,188],[89,92,132,152,154,157],[194,195,196,197],[157],[89,157,177],[89,130,157],[89,157,180,181,182],[89,130,157,178],[150],[151,153,155,159,160],[151,153,160],[82,92,130,151,152,154,155],[151,160],[151,154,156],[92,152,154],[151,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[151,158],[82,158],[89,130,151,152,153,154,156,157],[151,153,155,158],[151,156,158],[204,205],[200,201],[89,200],[133,134,135],[89,154,157,177,178,179,183],[175,176],[174],[175],[320],[82,446,447],[45,82],[594,599],[137,139,140,141,142,143,144,145,146,147,148,149],[137,138,140,141,142,143,144,145,146,147,148,149],[138,139,140,141,142,143,144,145,146,147,148,149],[137,138,139,141,142,143,144,145,146,147,148,149],[137,138,139,140,142,143,144,145,146,147,148,149],[137,138,139,140,141,143,144,145,146,147,148,149],[137,138,139,140,141,142,144,145,146,147,148,149],[137,138,139,140,141,142,143,145,146,147,148,149],[137,138,139,140,141,142,143,144,146,147,148,149],[137,138,139,140,141,142,143,144,145,147,148,149],[137,138,139,140,141,142,143,144,145,146,148,149],[137,138,139,140,141,142,143,144,145,146,147,149],[137,138,139,140,141,142,143,144,145,146,147,148],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[92,157],[382,383,385,386],[92,172],[384],[111,132,251],[87,111],[111,305],[111,251,305,306],[111,251,263,304,306,307],[111,251,263,304,306,308],[252,253,254,255,306,307,308,309,310,311,312,313],[111,132],[87,111,132,251],[111,132,251,253,254,263,309,310],[251,263,304],[111,306],[111,305,306],[85],[87],[93,96],[93,95],[93,95,96],[87,88,93,96,97],[87,88],[97,98,99,100],[88,97],[88,96,97,98],[93,95,96,101,102,103],[94],[92,94,96],[93],[85,86,88,104,110],[104],[105,106,107,108,109],[117],[116,117,118,119,120,121,122,123],[117,119],[380],[212,380,381,389,390,391,392,393,394,395,396,397],[381,398,402],[212,380,381,398],[132,212,380,381,398],[389,390,391,392,393,394,395,397,399,401],[132,212,380,381,388,398],[212,314,343,380,381,388],[212,380,381,388],[380,400,403,404,405],[132,212,314,343,379,381,398,399],[380,387],[314,343],[322],[325,328],[325,327],[325,327,328],[87,324,325,328,329],[87,324],[329,330,331,332],[324,329],[324,328,329,330],[325,327,328,333,334,335],[326],[92,326,328],[325],[322,323,324,336,342],[336],[337,338,339,340,341],[343],[345,346,347,348,349,350,351],[87,343,344,345,346],[87,343,347],[343,347],[87,343],[343,345,346],[343,347,349],[344,352,371,372,373,374,375,376,377,378],[132],[132,157,343,348,352,353,373],[87,132,343],[132,343,352,371],[132,343],[132,343,352,353],[132,343,350,353,373,375],[343,344],[343,349],[353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],[87,344],[345],[87,346],[258,259,260],[111],[111,258],[111,258,259],[256,257,261,262],[111,261],[217,218,219,220,221,222,223],[87,111,216,217,218],[87,111,219],[111,219],[111,217,218],[111,219,221],[216,224,243,244,245,246,247,248,249,250],[111,132,220,224,225,245],[87,111,132],[111,132,224,243],[111,132,224,225],[111,132,222,225,245,247],[111,216],[111,221],[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],[87,216],[217],[87,218],[300,301,302],[87,111,299],[111,300],[111,300,301],[303],[265,266,267,268,269,270,271],[87,111,264,265,266],[87,111,267],[111,267],[111,265,266],[111,267,269],[264,272,291,292,293,294,295,296,297,298],[111,132,268,272,273,293],[111,132,272,291],[111,132,272,273],[111,132,270,273,293,295],[111,264],[111,269],[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],[87,264],[265],[87,266],[89,92,152,157,172,173,174,177,184,189,209,210],[211],[89,130,132,136,152,153,174,178,179,183,184,190,192,193,198,199,202,203,206,207,208],[438,439],[437],[435,436],[592,595],[592,595,596,597],[594],[591,598],[505],[593],[417,532,589],[30,83],[30,111,113,114],[30,111,314,407,441,443,532,533],[30,111,113,124,125,126,533],[30,111,149,532,533],[539,540],[111,251,263,304,314,417],[111,149,314,417,537],[536,537,538],[111,314,538,539],[92,113,114,149,172],[92,111,172,407,412,417,418,430,495,500,532,545],[92,113,114,125,321],[30,84,114,115,408,411,412,425,429,430,443,500,501,533,534,535,541,542,545,546,547,548,552,553,562,563,566,568,569,570,571,573,574,575,577,578,579,580,581,582,583,584,585,586,587,588],[114,172],[92,132,407],[92,111,113,149,172,316,408,549,550,551],[111,114,493,542,548],[89,92,111,113,132,149,172,251,304,314,317,321,407,408,413,496,531,532,549,552,555,557,559,561],[92,111,149,251,304,321,407,408,532],[92,111,314,407,417,532],[406],[111,172,211,387,417,418,445,532,544],[114,212],[111,314,407,441,442,532],[111,149,314,321,407,434,440,441,532],[111,314,408,532,565],[48,50,111,125,172,189,211,387,406,412,417,418,430,445,495,500,532,544,545,546,567],[92,111,172,407,420,421,532],[30,92,111,407,422,425,532],[92,111,132,136,149,215,407,408,532],[30,111,149,407,408,424,532],[111,113,125,321,434,443,569],[30,111,113,149,263,407,430],[30,111,314,569,572],[92,111,113,149,263,321,407,408,425,428,429,531,532],[92,111,113,263,317,407,413,531],[111,113,149,263,315,533,569],[314,569,576],[111,113,126,149,321,407,434,440],[569,570],[30,111,113,149,251,407,412,532],[30,111,314,443,572],[92,111,172,407,432,532],[92,111,113,251,316,321,407,408,410,411],[87,111,113,149,251,315,317,407,412,443,533],[314,443,576],[111,314,407,442],[443,570],[30,111,149,304,407,500,532],[30,111,314,572,584],[111,304,314,321,407,408,411,499,532],[87,111,149,251,304,407,500,532,572,584],[314,576,584],[570,584],[83,87,92,111,113,114,124,126,149,172,251,314,315,317,319,321,406,407,412,413,418,422,425,430,433,441,443,445,494,495,496,497,500,501,502,503,504,509,511,513,514,515,516,517,527,528,532,533,534,589],[111,529],[504],[92,111,149,251,263,304,314,317,412,413,430,503,531,589],[87,92,111,113,126,149,314,317,407,413,418,504,506,507,512,529,531,532],[111,317],[111,113,251,263,304,305,413,531],[111,113,126,149,251,314,317,412,430,443,529,532,533,589],[92,111,314,413,589],[92,111,251,263,317,407,430,433,504,532,533],[503,511],[87,92,111,251,263,304,305,314,317,495,503,504,509,515,532,590],[92,111,172,251,495,503,508,509,532],[92,111,149,172,263,317,407,430,495,503,504,532],[172,503,504,510],[172,503,508,510],[508,512,527,529],[92,111,149,305,314,413,441,504,512,520,529,532,589],[521,523,524,525,526],[111,149,314,413,441,508,512,521,522,523,529,532,589],[520],[441,508],[413,441],[518,519],[92,111,149,314,413,433,441,508,509,512,518,519,521,522,529,532,589],[111,149,314,413,441,508,512,518,519,521,522,529,532,589],[126,413,416,530],[111,315,533],[415],[92,111,113,149,174,251,314,317,408,412,413,414,530,531,532,533,589],[92,111,251,263,304,314,317,406,530,589],[89,132,172,212,419],[132,212],[172,212,444],[172,212,431],[172,212,554],[172,212,423],[172,212,556],[172,212,543],[172,212,498],[172,212,564],[172,212,420],[172,212,558],[89,132,172,212,426],[172,212,427],[89,132,172,212,213],[172,212,214],[172,212,560],[172,212,409],[172,212,550],[111,251,314,315],[87,111,208,251],[87,92,111,149,172,251,263,314,406,407,412,417,418,433,448,492,493,494,532,589],[113,126,315,316,317,318,531],[112],[111,149,251,263,304,314,406,590],[112,113],[111,589],[314],[111,149,251,263,304,305,314,316,413,530,532,589],[30,111,114],[30,111,314,407,441,443],[30,111,124,533],[30,111,533],[111,314,417],[111,314,417,537],[92,114,172],[111,172,407,412,417,418,430,500,545],[114],[92,111,172,408],[111,114,542,548],[89,92,111,172,314,317,321,407,408,413,552],[92,111,251,304,321,407,408],[111,407,417,532],[111,172,417,418,532],[111,314,407,441,442],[111,314,407,441],[111,314,408],[111,172,412,417,418,430,500,545,546],[92,111,172,407],[30,111,407,422,425],[111,407,408],[30,111,407,408],[111,443,569],[30,111,263,407,430],[30,111,569,572],[111,263,321,407,408,429],[92,317,407,413],[111,569],[569,576],[111,407],[30,111,251,407,412],[30,111,443,572],[92,111,251,321,407,408,411],[111,407,412,443],[443,576],[111,407,442],[30,111,304,407,500],[30,111,572,584],[111,304,321,407,408,411],[111,407,500,584],[576,584],[111,114,172,251,314,317,406,412,413,418,425,430,433,443,500,503,504,527,528,533,534,589],[92,111,314,317,412,413,430,503,589],[92,111,317,407,413,418,504,512,529],[111,251,263,304,305,413],[111,314,412,430,443,529,533,589],[92,111,413],[92,111,251,263,317,407,430,433,504],[503,504],[92,111,172,503,508],[92,172,503,504],[92,111,305,314,413,441,504,512,520,529,532,589],[111,413,441,508,512,521,523,529,532,589],[92,111,413,433,441,508,512,518,519,521,529,532,589],[111,413,441,508,512,518,519,521,529,532,589],[111,533],[111,317,408,412,413,533,589],[111,251],[92,111,172,251,263,407,412,417,418,433,532,589],[111,314,590],[111,321,589],[111,305,413,530,589]],"referencedMap":[[450,1],[451,2],[454,3],[453,1],[456,4],[458,5],[457,6],[459,7],[471,8],[472,9],[467,8],[463,10],[464,1],[461,2],[465,1],[468,11],[466,12],[488,13],[489,13],[487,14],[490,15],[486,16],[481,17],[492,18],[483,19],[485,20],[484,21],[482,22],[491,23],[478,24],[473,25],[475,26],[480,27],[477,8],[479,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[321,68],[448,69],[112,70],[600,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[382,118],[386,1],[387,119],[384,120],[385,121],[383,118],[253,122],[252,123],[306,124],[310,125],[308,126],[309,127],[314,128],[254,129],[255,130],[311,131],[305,132],[312,133],[313,134],[86,135],[88,136],[94,137],[96,138],[102,139],[98,140],[97,141],[101,142],[99,143],[100,144],[104,145],[95,146],[93,147],[103,148],[111,149],[105,150],[106,35],[110,151],[108,136],[120,152],[119,152],[124,153],[118,152],[121,154],[122,154],[123,152],[381,155],[398,156],[403,157],[394,158],[396,159],[390,159],[402,160],[397,159],[392,159],[391,159],[389,161],[393,159],[399,162],[401,163],[395,159],[406,164],[400,165],[405,8],[388,166],[404,167],[323,168],[324,136],[326,169],[328,170],[334,171],[330,172],[329,173],[333,174],[331,175],[332,176],[336,177],[327,178],[325,179],[335,180],[343,181],[337,182],[338,35],[342,183],[340,136],[344,184],[352,185],[347,186],[348,187],[349,188],[345,189],[346,184],[351,190],[350,191],[379,192],[372,193],[374,194],[375,195],[376,196],[373,197],[377,198],[378,199],[353,184],[354,200],[355,201],[356,189],[357,136],[371,202],[359,136],[360,189],[361,136],[363,136],[364,184],[365,136],[367,203],[368,136],[369,204],[370,136],[366,205],[256,123],[261,206],[258,207],[259,208],[260,209],[263,210],[262,211],[216,207],[224,212],[219,213],[220,214],[221,215],[217,123],[218,207],[223,216],[222,217],[251,218],[244,193],[246,219],[247,220],[248,221],[245,129],[249,222],[250,223],[225,207],[226,224],[227,225],[228,123],[229,136],[243,226],[231,136],[232,123],[233,136],[235,136],[236,207],[237,136],[239,227],[240,136],[241,228],[242,136],[238,229],[303,230],[300,231],[301,232],[302,233],[304,234],[272,235],[267,236],[268,237],[269,238],[265,123],[266,207],[271,239],[270,240],[299,241],[292,193],[294,242],[295,220],[296,243],[293,129],[297,244],[298,245],[273,207],[274,246],[275,247],[276,123],[277,136],[291,248],[279,136],[280,123],[281,136],[283,136],[284,207],[285,136],[287,249],[288,136],[289,250],[290,136],[286,251],[211,252],[212,253],[209,254],[440,255],[438,256],[437,257],[596,258],[598,259],[597,258],[595,260],[599,261],[506,262],[83,70],[594,263],[590,264],[84,265],[115,266],[572,267],[534,268],[535,269],[541,270],[537,271],[538,272],[539,273],[540,274],[542,275],[546,276],[547,277],[114,1],[589,278],[548,279],[408,280],[552,281],[553,282],[562,283],[411,284],[418,285],[407,286],[545,287],[563,288],[576,289],[442,290],[566,291],[568,292],[422,293],[429,294],[533,295],[425,296],[570,297],[571,298],[573,299],[430,300],[574,301],[575,302],[577,303],[569,304],[578,305],[579,306],[580,307],[433,308],[412,309],[581,310],[582,311],[443,312],[583,313],[501,314],[585,315],[500,316],[586,317],[587,318],[584,312],[588,319],[529,320],[502,321],[508,322],[504,323],[513,324],[514,325],[522,326],[441,327],[509,328],[503,329],[512,330],[516,331],[510,332],[515,333],[511,334],[517,335],[530,336],[521,337],[527,338],[524,339],[523,340],[518,341],[519,342],[520,343],[525,344],[526,345],[528,339],[417,346],[414,347],[416,348],[415,349],[413,350],[444,351],[431,351],[554,351],[423,351],[556,351],[543,351],[498,351],[564,351],[420,351],[558,351],[419,352],[445,353],[432,354],[555,355],[424,356],[557,357],[544,358],[499,359],[565,360],[421,361],[559,362],[427,363],[426,352],[428,364],[214,365],[560,365],[409,365],[550,365],[213,352],[215,366],[561,367],[410,368],[551,369],[316,370],[317,371],[315,207],[495,372],[532,373],[493,207],[113,374],[494,375],[126,376],[496,377],[318,378],[531,379]],"exportedModulesMap":[[450,1],[451,2],[454,3],[453,1],[456,4],[458,5],[457,6],[459,7],[471,8],[472,9],[467,8],[463,10],[464,1],[461,2],[465,1],[468,11],[466,12],[488,13],[489,13],[487,14],[490,15],[486,16],[481,17],[492,18],[483,19],[485,20],[484,21],[482,22],[491,23],[478,24],[473,25],[475,26],[480,27],[477,8],[479,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[321,68],[448,69],[112,70],[600,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[382,118],[386,1],[387,119],[384,120],[385,121],[383,118],[253,122],[252,123],[306,124],[310,125],[308,126],[309,127],[314,128],[254,129],[255,130],[311,131],[305,132],[312,133],[313,134],[86,135],[88,136],[94,137],[96,138],[102,139],[98,140],[97,141],[101,142],[99,143],[100,144],[104,145],[95,146],[93,147],[103,148],[111,149],[105,150],[106,35],[110,151],[108,136],[120,152],[119,152],[124,153],[118,152],[121,154],[122,154],[123,152],[381,155],[398,156],[403,157],[394,158],[396,159],[390,159],[402,160],[397,159],[392,159],[391,159],[389,161],[393,159],[399,162],[401,163],[395,159],[406,164],[400,165],[405,8],[388,166],[404,167],[323,168],[324,136],[326,169],[328,170],[334,171],[330,172],[329,173],[333,174],[331,175],[332,176],[336,177],[327,178],[325,179],[335,180],[343,181],[337,182],[338,35],[342,183],[340,136],[344,184],[352,185],[347,186],[348,187],[349,188],[345,189],[346,184],[351,190],[350,191],[379,192],[372,193],[374,194],[375,195],[376,196],[373,197],[377,198],[378,199],[353,184],[354,200],[355,201],[356,189],[357,136],[371,202],[359,136],[360,189],[361,136],[363,136],[364,184],[365,136],[367,203],[368,136],[369,204],[370,136],[366,205],[256,123],[261,206],[258,207],[259,208],[260,209],[263,210],[262,211],[216,207],[224,212],[219,213],[220,214],[221,215],[217,123],[218,207],[223,216],[222,217],[251,218],[244,193],[246,219],[247,220],[248,221],[245,129],[249,222],[250,223],[225,207],[226,224],[227,225],[228,123],[229,136],[243,226],[231,136],[232,123],[233,136],[235,136],[236,207],[237,136],[239,227],[240,136],[241,228],[242,136],[238,229],[303,230],[300,231],[301,232],[302,233],[304,234],[272,235],[267,236],[268,237],[269,238],[265,123],[266,207],[271,239],[270,240],[299,241],[292,193],[294,242],[295,220],[296,243],[293,129],[297,244],[298,245],[273,207],[274,246],[275,247],[276,123],[277,136],[291,248],[279,136],[280,123],[281,136],[283,136],[284,207],[285,136],[287,249],[288,136],[289,250],[290,136],[286,251],[211,252],[212,253],[209,254],[440,255],[438,256],[437,257],[596,258],[598,259],[597,258],[595,260],[599,261],[506,262],[83,70],[594,263],[590,264],[84,265],[115,380],[572,381],[534,382],[535,383],[541,270],[537,384],[538,385],[539,273],[540,274],[542,386],[546,387],[547,388],[114,1],[589,278],[548,279],[408,280],[552,389],[553,390],[562,391],[411,392],[418,393],[407,286],[545,394],[563,288],[576,395],[442,396],[566,397],[568,398],[422,399],[429,400],[533,401],[425,402],[570,403],[571,404],[573,405],[430,406],[574,407],[575,408],[577,409],[569,410],[578,305],[579,411],[580,412],[433,399],[412,413],[581,414],[582,415],[443,416],[583,313],[501,417],[585,418],[500,419],[586,420],[587,421],[584,416],[588,319],[529,422],[502,321],[508,322],[504,423],[513,424],[514,325],[522,425],[441,426],[509,427],[503,428],[512,330],[516,429],[510,430],[515,431],[511,334],[517,335],[530,336],[521,432],[527,338],[524,433],[523,340],[518,341],[519,342],[520,343],[525,434],[526,435],[528,433],[417,346],[414,436],[416,348],[415,437],[413,350],[444,351],[431,351],[554,351],[423,351],[556,351],[543,351],[498,351],[564,351],[420,351],[558,351],[419,352],[445,353],[432,354],[555,355],[424,356],[557,357],[544,358],[499,359],[565,360],[421,361],[559,362],[427,363],[426,352],[428,364],[214,365],[560,365],[409,365],[550,365],[213,352],[215,366],[561,367],[410,368],[551,369],[316,207],[317,438],[315,207],[495,439],[532,373],[493,207],[113,374],[494,440],[496,441],[318,378],[531,442]],"semanticDiagnosticsPerFile":[449,450,451,454,452,453,470,455,456,458,457,459,469,471,472,460,467,463,464,461,465,468,462,466,488,489,487,490,486,481,492,483,485,484,482,491,478,473,475,480,477,479,476,474,129,128,127,132,131,154,157,190,191,192,193,90,91,92,89,185,186,187,189,188,173,194,198,196,195,197,178,180,183,181,182,199,174,151,150,130,161,162,156,163,164,165,155,172,167,166,168,158,169,170,160,171,159,206,204,205,207,202,201,200,179,203,133,134,136,135,152,208,184,153,177,175,176,321,434,446,447,448,112,600,138,139,137,140,141,142,143,144,145,146,147,148,149,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,320,549,319,382,386,387,384,385,383,253,252,306,310,307,308,309,314,254,255,311,305,312,313,86,85,88,94,96,102,98,97,101,99,100,104,95,93,103,111,105,106,110,107,108,109,120,119,124,118,121,122,116,117,123,381,398,403,394,396,390,402,397,392,391,389,393,399,401,395,406,400,405,388,380,404,323,322,324,326,328,334,330,329,333,331,332,336,327,325,335,343,337,338,342,339,340,341,344,352,347,348,349,345,346,351,350,379,372,374,375,376,373,377,378,353,354,355,356,357,371,358,359,360,361,362,363,364,365,367,368,369,370,366,256,261,258,259,260,257,263,262,216,224,219,220,221,217,218,223,222,251,244,246,247,248,245,249,250,225,226,227,228,229,243,230,231,232,233,234,235,236,237,239,240,241,242,238,303,300,301,302,304,264,272,267,268,269,265,266,271,270,299,292,294,295,296,293,297,298,273,274,275,276,277,291,278,279,280,281,282,283,284,285,287,288,289,290,286,125,591,210,211,212,209,440,438,439,437,435,436,592,596,598,597,595,599,87,506,507,505,83,594,593,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,590,84,30,115,572,534,535,541,536,537,538,539,540,542,546,547,114,589,548,408,552,553,562,411,418,407,545,563,576,442,566,568,422,429,533,425,570,571,573,430,574,575,577,569,578,579,580,433,412,581,582,443,583,501,585,500,586,587,584,588,529,502,508,504,513,514,522,441,509,503,512,516,510,515,511,517,530,521,527,524,523,518,519,520,525,526,528,417,414,416,415,413,444,431,554,423,556,543,498,564,420,558,419,445,432,555,424,557,544,499,565,421,559,427,426,428,214,560,409,550,213,215,561,410,551,316,317,567,315,495,532,493,113,494,126,496,318,531,497]},"version":"4.7.2"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/MixedRouteQuoterV2__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/MixedRouteQuoterV2__factory.d.ts
new file mode 100644
index 0000000..f53fb00
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/MixedRouteQuoterV2__factory.d.ts
@@ -0,0 +1,86 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { MixedRouteQuoterV2, MixedRouteQuoterV2Interface } from "../MixedRouteQuoterV2";
+export declare class MixedRouteQuoterV2__factory {
+    static readonly abi: ({
+        type: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+            components: ({
+                name: string;
+                type: string;
+                internalType: string;
+                components: {
+                    name: string;
+                    type: string;
+                    internalType: string;
+                }[];
+            } | {
+                name: string;
+                type: string;
+                internalType: string;
+                components?: undefined;
+            })[];
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: ({
+            name: string;
+            type: string;
+            internalType: string;
+            components?: undefined;
+        } | {
+            name: string;
+            type: string;
+            internalType: string;
+            components: {
+                name: string;
+                type: string;
+                internalType: string;
+                components: {
+                    name: string;
+                    type: string;
+                    internalType: string;
+                }[];
+            }[];
+        })[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability?: undefined;
+        outputs?: undefined;
+    })[];
+    static createInterface(): MixedRouteQuoterV2Interface;
+    static connect(address: string, signerOrProvider: Signer | Provider): MixedRouteQuoterV2;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/MixedRouteQuoterV2__factory.js b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/MixedRouteQuoterV2__factory.js
new file mode 100644
index 0000000..ec6cd19
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/MixedRouteQuoterV2__factory.js
@@ -0,0 +1,477 @@
+"use strict";
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.MixedRouteQuoterV2__factory = void 0;
+const ethers_1 = require("ethers");
+const _abi = [
+    {
+        type: "constructor",
+        inputs: [
+            {
+                name: "_uniswapV4PoolManager",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+            {
+                name: "_uniswapV3Poolfactory",
+                type: "address",
+                internalType: "address",
+            },
+            {
+                name: "_uniswapV2Poolfactory",
+                type: "address",
+                internalType: "address",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactInputSingleV4",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV4Params",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "poolManager",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "quoteExactInput",
+        inputs: [
+            {
+                name: "path",
+                type: "bytes",
+                internalType: "bytes",
+            },
+            {
+                name: "param",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.ExtraQuoteExactInputParams",
+                components: [
+                    {
+                        name: "nonEncodableData",
+                        type: "tuple[]",
+                        internalType: "struct IMixedRouteQuoterV2.NonEncodableData[]",
+                        components: [
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                ],
+            },
+            {
+                name: "amountIn",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "gasEstimate",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingleV2",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV2Params",
+                components: [
+                    {
+                        name: "tokenIn",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "tokenOut",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "amountIn",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingleV3",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV3Params",
+                components: [
+                    {
+                        name: "tokenIn",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "tokenOut",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "amountIn",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                    {
+                        name: "fee",
+                        type: "uint24",
+                        internalType: "uint24",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "gasEstimate",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingleV4",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV4Params",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "gasEstimate",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "uniswapV2Poolfactory",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "address",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "uniswapV3Poolfactory",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "address",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "uniswapV3SwapCallback",
+        inputs: [
+            {
+                name: "amount0Delta",
+                type: "int256",
+                internalType: "int256",
+            },
+            {
+                name: "amount1Delta",
+                type: "int256",
+                internalType: "int256",
+            },
+            {
+                name: "path",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        outputs: [],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "unlockCallback",
+        inputs: [
+            {
+                name: "data",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "error",
+        name: "InvalidPoolVersion",
+        inputs: [
+            {
+                name: "poolVersion",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+    },
+    {
+        type: "error",
+        name: "LockFailure",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NoLiquidityV3",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotEnoughLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+    },
+    {
+        type: "error",
+        name: "NotPoolManager",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotSelf",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "QuoteSwap",
+        inputs: [
+            {
+                name: "amount",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+    },
+    {
+        type: "error",
+        name: "SliceOutOfBounds",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "UnexpectedRevertBytes",
+        inputs: [
+            {
+                name: "revertData",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+    },
+];
+class MixedRouteQuoterV2__factory {
+    static createInterface() {
+        return new ethers_1.utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new ethers_1.Contract(address, _abi, signerOrProvider);
+    }
+}
+exports.MixedRouteQuoterV2__factory = MixedRouteQuoterV2__factory;
+MixedRouteQuoterV2__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/StateView__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/StateView__factory.d.ts
new file mode 100644
index 0000000..d3e0d4d
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/StateView__factory.d.ts
@@ -0,0 +1,32 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { StateView, StateViewInterface } from "../StateView";
+export declare class StateView__factory {
+    static readonly abi: ({
+        type: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    })[];
+    static createInterface(): StateViewInterface;
+    static connect(address: string, signerOrProvider: Signer | Provider): StateView;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/StateView__factory.js b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/StateView__factory.js
new file mode 100644
index 0000000..7131997
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/StateView__factory.js
@@ -0,0 +1,383 @@
+"use strict";
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.StateView__factory = void 0;
+const ethers_1 = require("ethers");
+const _abi = [
+    {
+        type: "constructor",
+        inputs: [
+            {
+                name: "_poolManager",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "getFeeGrowthGlobals",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+        outputs: [
+            {
+                name: "feeGrowthGlobal0",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthGlobal1",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getFeeGrowthInside",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tickLower",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "tickUpper",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "feeGrowthInside0X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthInside1X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getPositionInfo",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "positionId",
+                type: "bytes32",
+                internalType: "bytes32",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "feeGrowthInside0LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthInside1LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getPositionInfo",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "owner",
+                type: "address",
+                internalType: "address",
+            },
+            {
+                name: "tickLower",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "tickUpper",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "salt",
+                type: "bytes32",
+                internalType: "bytes32",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "feeGrowthInside0LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthInside1LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getPositionLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "positionId",
+                type: "bytes32",
+                internalType: "bytes32",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getSlot0",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+        outputs: [
+            {
+                name: "sqrtPriceX96",
+                type: "uint160",
+                internalType: "uint160",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "protocolFee",
+                type: "uint24",
+                internalType: "uint24",
+            },
+            {
+                name: "lpFee",
+                type: "uint24",
+                internalType: "uint24",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickBitmap",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int16",
+                internalType: "int16",
+            },
+        ],
+        outputs: [
+            {
+                name: "tickBitmap",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickFeeGrowthOutside",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "feeGrowthOutside0X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthOutside1X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickInfo",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidityGross",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "liquidityNet",
+                type: "int128",
+                internalType: "int128",
+            },
+            {
+                name: "feeGrowthOutside0X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthOutside1X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidityGross",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "liquidityNet",
+                type: "int128",
+                internalType: "int128",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "poolManager",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "view",
+    },
+];
+class StateView__factory {
+    static createInterface() {
+        return new ethers_1.utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new ethers_1.Contract(address, _abi, signerOrProvider);
+    }
+}
+exports.StateView__factory = StateView__factory;
+StateView__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhdGVWaWV3X19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3R5cGVzL290aGVyL2ZhY3Rvcmllcy9TdGF0ZVZpZXdfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLCtDQUErQztBQUMvQyxvQkFBb0I7QUFDcEIsb0JBQW9COzs7QUFHcEIsbUNBQWlEO0FBR2pELE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxJQUFJLEVBQUUsY0FBYztnQkFDcEIsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsWUFBWSxFQUFFLHVCQUF1QjthQUN0QztTQUNGO1FBQ0QsZUFBZSxFQUFFLFlBQVk7S0FDOUI7SUFDRDtRQUNFLElBQUksRUFBRSxVQUFVO1FBQ2hCLElBQUksRUFBRSxxQkFBcUI7UUFDM0IsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsWUFBWSxFQUFFLFFBQVE7YUFDdkI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLElBQUksRUFBRSxrQkFBa0I7Z0JBQ3hCLElBQUksRUFBRSxTQUFTO2dCQUNmLFlBQVksRUFBRSxTQUFTO2FBQ3hCO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLGtCQUFrQjtnQkFDeEIsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsWUFBWSxFQUFFLFNBQVM7YUFDeEI7U0FDRjtRQUNELGVBQWUsRUFBRSxNQUFNO0tBQ3hCO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsVUFBVTtRQUNoQixJQUFJLEVBQUUsb0JBQW9CO1FBQzFCLE1BQU0sRUFBRTtZQUNOO2dCQUNFLElBQUksRUFBRSxRQUFRO2dCQUNkLElBQUksRUFBRSxTQUFTO2dCQUNmLFlBQVksRUFBRSxRQUFRO2FBQ3ZCO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLElB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.d.ts
index a086b87..155d25e 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.d.ts
@@ -13,7 +13,11 @@ export declare class TokenFeeDetector__factory {
         name?: undefined;
         outputs?: undefined;
     } | {
-        inputs: never[];
+        inputs: {
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
         name: string;
         type: string;
         stateMutability?: undefined;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.js b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.js
index 73de15f..8d0a25f 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.js
@@ -27,6 +27,17 @@ const _abi = [
         name: "SameToken",
         type: "error",
     },
+    {
+        inputs: [
+            {
+                internalType: "string",
+                name: "reason",
+                type: "string",
+            },
+        ],
+        name: "UnknownExternalTransferFailure",
+        type: "error",
+    },
     {
         inputs: [
             {
@@ -59,6 +70,21 @@ const _abi = [
                         name: "sellFeeBps",
                         type: "uint256",
                     },
+                    {
+                        internalType: "bool",
+                        name: "feeTakenOnTransfer",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "externalTransferFailed",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "sellReverted",
+                        type: "bool",
+                    },
                 ],
                 internalType: "struct TokenFees[]",
                 name: "fotResults",
@@ -68,6 +94,57 @@ const _abi = [
         stateMutability: "nonpayable",
         type: "function",
     },
+    {
+        inputs: [
+            {
+                internalType: "contract ERC20",
+                name: "token",
+                type: "address",
+            },
+            {
+                internalType: "address",
+                name: "to",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amount",
+                type: "uint256",
+            },
+        ],
+        name: "callTransfer",
+        outputs: [],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+    {
+        inputs: [
+            {
+                internalType: "contract ERC20",
+                name: "token",
+                type: "address",
+            },
+            {
+                internalType: "address",
+                name: "to",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amount",
+                type: "uint256",
+            },
+            {
+                internalType: "uint256",
+                name: "expectedBalance",
+                type: "uint256",
+            },
+        ],
+        name: "callTransfer",
+        outputs: [],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
     {
         inputs: [
             {
@@ -128,6 +205,21 @@ const _abi = [
                         name: "sellFeeBps",
                         type: "uint256",
                     },
+                    {
+                        internalType: "bool",
+                        name: "feeTakenOnTransfer",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "externalTransferFailed",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "sellReverted",
+                        type: "bool",
+                    },
                 ],
                 internalType: "struct TokenFees",
                 name: "fotResult",
@@ -148,4 +240,4 @@ class TokenFeeDetector__factory {
 }
 exports.TokenFeeDetector__factory = TokenFeeDetector__factory;
 TokenFeeDetector__factory.abi = _abi;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7OztBQUdwQixtQ0FBaUQ7QUFNakQsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsWUFBWTtnQkFDbEIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxhQUFhO0tBQ3BCO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsV0FBVztRQUNqQixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsV0FBVztnQkFDekIsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFdBQVc7YUFDbEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxnQkFBZ0I7Z0JBQ3RCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsZUFBZTtRQUNyQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxVQUFVLEVBQUU7b0JBQ1Y7d0JBQ0UsWUFBWSxFQUFFLFNBQVM7d0JBQ3ZCLElBQUksRUFBRSxXQUFX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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7OztBQUdwQixtQ0FBaUQ7QUFNakQsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsWUFBWTtnQkFDbEIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxhQUFhO0tBQ3BCO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsV0FBVztRQUNqQixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsUUFBUTtnQkFDdEIsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFFBQVE7YUFDZjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGdDQUFnQztRQUN0QyxJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsV0FBVztnQkFDekIsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFdBQVc7YUFDbEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/V4Quoter__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/V4Quoter__factory.d.ts
new file mode 100644
index 0000000..7dca5fd
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/V4Quoter__factory.d.ts
@@ -0,0 +1,71 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { V4Quoter, V4QuoterInterface } from "../V4Quoter";
+export declare class V4Quoter__factory {
+    static readonly abi: ({
+        type: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+            components: ({
+                name: string;
+                type: string;
+                internalType: string;
+                components?: undefined;
+            } | {
+                name: string;
+                type: string;
+                internalType: string;
+                components: {
+                    name: string;
+                    type: string;
+                    internalType: string;
+                }[];
+            })[];
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability?: undefined;
+        outputs?: undefined;
+    })[];
+    static createInterface(): V4QuoterInterface;
+    static connect(address: string, signerOrProvider: Signer | Provider): V4Quoter;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/V4Quoter__factory.js b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/V4Quoter__factory.js
new file mode 100644
index 0000000..d5d3258
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/V4Quoter__factory.js
@@ -0,0 +1,688 @@
+"use strict";
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.V4Quoter__factory = void 0;
+const ethers_1 = require("ethers");
+const _abi = [
+    {
+        type: "constructor",
+        inputs: [
+            {
+                name: "_poolManager",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactInput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactInputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactOutput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactOutputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "poolManager",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "quoteExactInput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96AfterList",
+                type: "uint160[]",
+                internalType: "uint160[]",
+            },
+            {
+                name: "initializedTicksLoadedList",
+                type: "uint32[]",
+                internalType: "uint32[]",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96After",
+                type: "uint160",
+                internalType: "uint160",
+            },
+            {
+                name: "initializedTicksLoaded",
+                type: "uint32",
+                internalType: "uint32",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactOutput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96AfterList",
+                type: "uint160[]",
+                internalType: "uint160[]",
+            },
+            {
+                name: "initializedTicksLoadedList",
+                type: "uint32[]",
+                internalType: "uint32[]",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactOutputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96After",
+                type: "uint160",
+                internalType: "uint160",
+            },
+            {
+                name: "initializedTicksLoaded",
+                type: "uint32",
+                internalType: "uint32",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "unlockCallback",
+        inputs: [
+            {
+                name: "data",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "error",
+        name: "InsufficientAmountOut",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "InvalidLockCaller",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "InvalidQuoteBatchParams",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "LockFailure",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotPoolManager",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotSelf",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "UnexpectedRevertBytes",
+        inputs: [
+            {
+                name: "revertData",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+    },
+];
+class V4Quoter__factory {
+    static createInterface() {
+        return new ethers_1.utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new ethers_1.Contract(address, _abi, signerOrProvider);
+    }
+}
+exports.V4Quoter__factory = V4Quoter__factory;
+V4Quoter__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.d.ts b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.d.ts
index f313200..4194764 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.d.ts
@@ -1,4 +1,4 @@
-import { ChainId, Token } from '@uniswap/sdk-core';
+import { ChainId, Currency, Token } from '@uniswap/sdk-core';
 export declare const BNB_TICK_LENS_ADDRESS: string | undefined;
 export declare const BNB_NONFUNGIBLE_POSITION_MANAGER_ADDRESS: string | undefined;
 export declare const BNB_SWAP_ROUTER_02_ADDRESS: string;
@@ -6,9 +6,12 @@ export declare const BNB_V3_MIGRATOR_ADDRESS: string | undefined;
 export declare const V3_CORE_FACTORY_ADDRESSES: AddressMap;
 export declare const QUOTER_V2_ADDRESSES: AddressMap;
 export declare const NEW_QUOTER_V2_ADDRESSES: AddressMap;
+export declare const PROTOCOL_V4_QUOTER_ADDRESSES: AddressMap;
 export declare const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap;
+export declare const MIXED_ROUTE_QUOTER_V2_ADDRESSES: AddressMap;
 export declare const UNISWAP_MULTICALL_ADDRESSES: AddressMap;
 export declare const SWAP_ROUTER_02_ADDRESSES: (chainId: number) => string;
+export declare const STATE_VIEW_ADDRESSES: AddressMap;
 export declare const OVM_GASPRICE_ADDRESS = "0x420000000000000000000000000000000000000F";
 export declare const ARB_GASINFO_ADDRESS = "0x000000000000000000000000000000000000006C";
 export declare const TICK_LENS_ADDRESS: string | undefined;
@@ -25,3 +28,5 @@ export declare const WETH9: {
     [chainId in Exclude<ChainId, ChainId.POLYGON | ChainId.POLYGON_MUMBAI | ChainId.CELO | ChainId.CELO_ALFAJORES | ChainId.GNOSIS | ChainId.MOONBEAM | ChainId.BNB | ChainId.AVALANCHE | ChainId.ROOTSTOCK>]: Token;
 };
 export declare const BEACON_CHAIN_DEPOSIT_ADDRESS = "0x00000000219ab540356cBB839Cbe05303d7705Fa";
+export declare function getAddressLowerCase(currency: Currency): string;
+export declare function getAddress(currency: Currency): string;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
index b7e3277..bf80b69 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
@@ -1,26 +1,33 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.BEACON_CHAIN_DEPOSIT_ADDRESS = exports.WETH9 = exports.constructSameAddressMap = exports.MULTICALL2_ADDRESS = exports.V3_MIGRATOR_ADDRESS = exports.NONFUNGIBLE_POSITION_MANAGER_ADDRESS = exports.TICK_LENS_ADDRESS = exports.ARB_GASINFO_ADDRESS = exports.OVM_GASPRICE_ADDRESS = exports.SWAP_ROUTER_02_ADDRESSES = exports.UNISWAP_MULTICALL_ADDRESSES = exports.MIXED_ROUTE_QUOTER_V1_ADDRESSES = exports.NEW_QUOTER_V2_ADDRESSES = exports.QUOTER_V2_ADDRESSES = exports.V3_CORE_FACTORY_ADDRESSES = exports.BNB_V3_MIGRATOR_ADDRESS = exports.BNB_SWAP_ROUTER_02_ADDRESS = exports.BNB_NONFUNGIBLE_POSITION_MANAGER_ADDRESS = exports.BNB_TICK_LENS_ADDRESS = void 0;
+exports.getAddress = exports.getAddressLowerCase = exports.BEACON_CHAIN_DEPOSIT_ADDRESS = exports.WETH9 = exports.constructSameAddressMap = exports.MULTICALL2_ADDRESS = exports.V3_MIGRATOR_ADDRESS = exports.NONFUNGIBLE_POSITION_MANAGER_ADDRESS = exports.TICK_LENS_ADDRESS = exports.ARB_GASINFO_ADDRESS = exports.OVM_GASPRICE_ADDRESS = exports.STATE_VIEW_ADDRESSES = exports.SWAP_ROUTER_02_ADDRESSES = exports.UNISWAP_MULTICALL_ADDRESSES = exports.MIXED_ROUTE_QUOTER_V2_ADDRESSES = exports.MIXED_ROUTE_QUOTER_V1_ADDRESSES = exports.PROTOCOL_V4_QUOTER_ADDRESSES = exports.NEW_QUOTER_V2_ADDRESSES = exports.QUOTER_V2_ADDRESSES = exports.V3_CORE_FACTORY_ADDRESSES = exports.BNB_V3_MIGRATOR_ADDRESS = exports.BNB_SWAP_ROUTER_02_ADDRESS = exports.BNB_NONFUNGIBLE_POSITION_MANAGER_ADDRESS = exports.BNB_TICK_LENS_ADDRESS = void 0;
 const sdk_core_1 = require("@uniswap/sdk-core");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const router_sdk_1 = require("@uniswap/router-sdk");
 const chains_1 = require("./chains");
 exports.BNB_TICK_LENS_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].tickLensAddress;
 exports.BNB_NONFUNGIBLE_POSITION_MANAGER_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].nonfungiblePositionManagerAddress;
 exports.BNB_SWAP_ROUTER_02_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].swapRouter02Address;
 exports.BNB_V3_MIGRATOR_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].v3MigratorAddress;
-exports.V3_CORE_FACTORY_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap(v3_sdk_1.FACTORY_ADDRESS)), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].v3CoreFactoryAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].v3CoreFactoryAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].v3CoreFactoryAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].v3CoreFactoryAddress, [sdk_core_1.ChainId.BLAST]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BLAST].v3CoreFactoryAddress, [sdk_core_1.ChainId.ZORA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZORA].v3CoreFactoryAddress, [sdk_core_1.ChainId.ZKSYNC]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZKSYNC].v3CoreFactoryAddress });
-exports.QUOTER_V2_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x61fFE014bA17989E743c5F6cB21bF9697530B21e')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].quoterAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].quoterAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].quoterAddress, [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_SEPOLIA].quoterAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].quoterAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].quoterAddress, [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_SEPOLIA].quoterAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].quoterAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].quoterAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].quoterAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].quoterAddress, [sdk_core_1.ChainId.BLAST]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BLAST].quoterAddress, [sdk_core_1.ChainId.ZORA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZORA].quoterAddress, [sdk_core_1.ChainId.ZKSYNC]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZKSYNC].quoterAddress });
+exports.V3_CORE_FACTORY_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap(v3_sdk_1.FACTORY_ADDRESS)), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].v3CoreFactoryAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].v3CoreFactoryAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].v3CoreFactoryAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].v3CoreFactoryAddress, [sdk_core_1.ChainId.BLAST]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BLAST].v3CoreFactoryAddress, [sdk_core_1.ChainId.ZORA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZORA].v3CoreFactoryAddress, [sdk_core_1.ChainId.ZKSYNC]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZKSYNC].v3CoreFactoryAddress, [sdk_core_1.ChainId.ABSTRACT_TESTNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ABSTRACT_TESTNET].v3CoreFactoryAddress, [sdk_core_1.ChainId.ZERO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZERO].v3CoreFactoryAddress, [sdk_core_1.ChainId.BOB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BOB].v3CoreFactoryAddress, [sdk_core_1.ChainId.CYBER]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CYBER].v3CoreFactoryAddress, [sdk_core_1.ChainId.SHAPE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SHAPE].v3CoreFactoryAddress, [sdk_core_1.ChainId.INK]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.INK].v3CoreFactoryAddress, [sdk_core_1.ChainId.REDSTONE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.REDSTONE].v3CoreFactoryAddress, [sdk_core_1.ChainId.REDSTONE_GARNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.REDSTONE_GARNET].v3CoreFactoryAddress, [sdk_core_1.ChainId.ABSTRACT_MAINNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ABSTRACT_MAINNET].v3CoreFactoryAddress, [sdk_core_1.ChainId.ANIME_TESTNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ANIME_TESTNET].v3CoreFactoryAddress, [sdk_core_1.ChainId.MODE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.MODE].v3CoreFactoryAddress });
+exports.QUOTER_V2_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x61fFE014bA17989E743c5F6cB21bF9697530B21e')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].quoterAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].quoterAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].quoterAddress, [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_SEPOLIA].quoterAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].quoterAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].quoterAddress, [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_SEPOLIA].quoterAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].quoterAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].quoterAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].quoterAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].quoterAddress, [sdk_core_1.ChainId.BLAST]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BLAST].quoterAddress, [sdk_core_1.ChainId.ZORA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZORA].quoterAddress, [sdk_core_1.ChainId.ZKSYNC]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZKSYNC].quoterAddress, [sdk_core_1.ChainId.ABSTRACT_TESTNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ABSTRACT_TESTNET].quoterAddress, [sdk_core_1.ChainId.ZERO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZERO].quoterAddress, [sdk_core_1.ChainId.BOB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BOB].quoterAddress, [sdk_core_1.ChainId.CYBER]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CYBER].quoterAddress, [sdk_core_1.ChainId.SHAPE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SHAPE].quoterAddress, [sdk_core_1.ChainId.INK]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.INK].quoterAddress, [sdk_core_1.ChainId.REDSTONE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.REDSTONE].quoterAddress, [sdk_core_1.ChainId.REDSTONE_GARNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.REDSTONE_GARNET].quoterAddress, [sdk_core_1.ChainId.ABSTRACT_MAINNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ABSTRACT_MAINNET].quoterAddress, [sdk_core_1.ChainId.ANIME_TESTNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ANIME_TESTNET].quoterAddress, [sdk_core_1.ChainId.MODE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.MODE].quoterAddress });
 exports.NEW_QUOTER_V2_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x5e55C9e631FAE526cd4B0526C4818D6e0a9eF0e3')), { [sdk_core_1.ChainId.CELO]: '0x5e55C9e631FAE526cd4B0526C4818D6e0a9eF0e3', [sdk_core_1.ChainId.CELO_ALFAJORES]: '0x5e55C9e631FAE526cd4B0526C4818D6e0a9eF0e3', [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: '0x5e55C9e631FAE526cd4B0526C4818D6e0a9eF0e3', [sdk_core_1.ChainId.SEPOLIA]: '0xf0c802dcb0cf1c4f7b953756b49d940eed190221', [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: '0x5e55C9e631FAE526cd4B0526C4818D6e0a9eF0e3', [sdk_core_1.ChainId.BNB]: '0x5e55C9e631FAE526cd4B0526C4818D6e0a9eF0e3', [sdk_core_1.ChainId.AVALANCHE]: '0xf0c802dcb0cf1c4f7b953756b49d940eed190221', [sdk_core_1.ChainId.POLYGON_MUMBAI]: '0x60e06b92bC94a665036C26feC5FF2A92E2d04c5f', [sdk_core_1.ChainId.BASE]: '0x222cA98F00eD15B1faE10B61c277703a194cf5d2', [sdk_core_1.ChainId.BLAST]: '0x9D0F15f2cf58655fDDcD1EE6129C547fDaeD01b1', [sdk_core_1.ChainId.ZORA]: '0x9D0F15f2cf58655fDDcD1EE6129C547fDaeD01b1', [sdk_core_1.ChainId.ZKSYNC]: '0x071Bd2063dF031EDd110E27C6F4CDe50A3DeF2d4' });
+exports.PROTOCOL_V4_QUOTER_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0xf3a39c86dbd13c45365e57fb90fe413371f65af8')), { [sdk_core_1.ChainId.SEPOLIA]: '0x8C41f1696360ca987803a4c24B8b7c36dFd61c4d' });
 exports.MIXED_ROUTE_QUOTER_V1_ADDRESSES = {
     [sdk_core_1.ChainId.MAINNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.MAINNET].mixedRouteQuoterV1Address,
     [sdk_core_1.ChainId.GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.GOERLI].mixedRouteQuoterV1Address,
 };
-exports.UNISWAP_MULTICALL_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].multicallAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].multicallAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].multicallAddress, [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_SEPOLIA].multicallAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].multicallAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].multicallAddress, [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_SEPOLIA].multicallAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].multicallAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].multicallAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].multicallAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].multicallAddress, [sdk_core_1.ChainId.BLAST]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BLAST].multicallAddress, [sdk_core_1.ChainId.ZORA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZORA].multicallAddress, [sdk_core_1.ChainId.ZKSYNC]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZKSYNC].multicallAddress });
+// TODO: use CHAIN_TO_ADDRESSES_MAP[ChainId.GOERLI].mixedRouteQuoterV2Address once sdk-core finalizes deploy addresses
+exports.MIXED_ROUTE_QUOTER_V2_ADDRESSES = {
+    [sdk_core_1.ChainId.SEPOLIA]: '0x4745f77b56a0e2294426e3936dc4fab68d9543cd',
+};
+exports.UNISWAP_MULTICALL_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].multicallAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].multicallAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].multicallAddress, [sdk_core_1.ChainId.OPTIMISM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_SEPOLIA].multicallAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].multicallAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].multicallAddress, [sdk_core_1.ChainId.ARBITRUM_SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_SEPOLIA].multicallAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].multicallAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].multicallAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].multicallAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].multicallAddress, [sdk_core_1.ChainId.BLAST]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BLAST].multicallAddress, [sdk_core_1.ChainId.ZORA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZORA].multicallAddress, [sdk_core_1.ChainId.ZKSYNC]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZKSYNC].multicallAddress, [sdk_core_1.ChainId.ABSTRACT_TESTNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ABSTRACT_TESTNET].multicallAddress, [sdk_core_1.ChainId.ZERO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ZERO].multicallAddress, [sdk_core_1.ChainId.BOB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BOB].multicallAddress, [sdk_core_1.ChainId.CYBER]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CYBER].multicallAddress, [sdk_core_1.ChainId.SHAPE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SHAPE].multicallAddress, [sdk_core_1.ChainId.INK]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.INK].multicallAddress, [sdk_core_1.ChainId.REDSTONE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.REDSTONE].multicallAddress, [sdk_core_1.ChainId.REDSTONE_GARNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.REDSTONE_GARNET].multicallAddress, [sdk_core_1.ChainId.ABSTRACT_MAINNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ABSTRACT_MAINNET].multicallAddress, [sdk_core_1.ChainId.ANIME_TESTNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ANIME_TESTNET].multicallAddress, [sdk_core_1.ChainId.ANIME]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ANIME].multicallAddress, [sdk_core_1.ChainId.MODE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.MODE].multicallAddress });
 const SWAP_ROUTER_02_ADDRESSES = (chainId) => {
     var _a;
-    return (_a = (0, sdk_core_1.SWAP_ROUTER_02_ADDRESSES)(chainId)) !== null && _a !== void 0 ? _a : '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45';
+    return ((_a = (0, sdk_core_1.SWAP_ROUTER_02_ADDRESSES)(chainId)) !== null && _a !== void 0 ? _a : '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45');
 };
 exports.SWAP_ROUTER_02_ADDRESSES = SWAP_ROUTER_02_ADDRESSES;
+exports.STATE_VIEW_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984')), { [sdk_core_1.ChainId.SEPOLIA]: '0x6Bb7157fb50e3Ae4983Ccdc62Fb8173c03c6b0a7' });
 exports.OVM_GASPRICE_ADDRESS = '0x420000000000000000000000000000000000000F';
 exports.ARB_GASINFO_ADDRESS = '0x000000000000000000000000000000000000006C';
 exports.TICK_LENS_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_ONE].tickLensAddress;
@@ -50,6 +57,36 @@ exports.WETH9 = {
     [sdk_core_1.ChainId.ZORA]: new sdk_core_1.Token(sdk_core_1.ChainId.ZORA, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [sdk_core_1.ChainId.ZORA_SEPOLIA]: new sdk_core_1.Token(sdk_core_1.ChainId.ZORA_SEPOLIA, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [sdk_core_1.ChainId.ZKSYNC]: new sdk_core_1.Token(sdk_core_1.ChainId.ZKSYNC, '0x5aea5775959fbc2557cc8789bc1bf90a239d9a91', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: new sdk_core_1.Token(sdk_core_1.ChainId.ABSTRACT_TESTNET, '0x9EDCde0257F2386Ce177C3a7FCdd97787F0D841d', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ZERO]: new sdk_core_1.Token(sdk_core_1.ChainId.ZERO, '0xAc98B49576B1C892ba6BFae08fE1BB0d80Cf599c', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.BOB]: new sdk_core_1.Token(sdk_core_1.ChainId.BOB, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.CYBER]: new sdk_core_1.Token(sdk_core_1.ChainId.CYBER, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.SHAPE]: new sdk_core_1.Token(sdk_core_1.ChainId.SHAPE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.INK]: new sdk_core_1.Token(sdk_core_1.ChainId.INK, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.REDSTONE]: new sdk_core_1.Token(sdk_core_1.ChainId.REDSTONE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: new sdk_core_1.Token(sdk_core_1.ChainId.REDSTONE_GARNET, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: new sdk_core_1.Token(sdk_core_1.ChainId.ABSTRACT_MAINNET, '0x3439153EB7AF838Ad19d56E1571FBD09333C2809', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ANIME_TESTNET]: new sdk_core_1.Token(sdk_core_1.ChainId.ANIME_TESTNET, '0x8f3e2785985aa4005c63f97f7cc89ce91a948267', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ANIME]: new sdk_core_1.Token(sdk_core_1.ChainId.ANIME, '0x164906a76f1A2Ea933366c446AE0Ec6a37062c42', 18, 'WANIME', 'Wrapped ANIME'),
+    [sdk_core_1.ChainId.MODE]: new sdk_core_1.Token(sdk_core_1.ChainId.MODE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
 };
 exports.BEACON_CHAIN_DEPOSIT_ADDRESS = '0x00000000219ab540356cBB839Cbe05303d7705Fa';
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+function getAddressLowerCase(currency) {
+    if (currency.isToken) {
+        return currency.address.toLowerCase();
+    }
+    else {
+        return router_sdk_1.ADDRESS_ZERO;
+    }
+}
+exports.getAddressLowerCase = getAddressLowerCase;
+function getAddress(currency) {
+    if (currency.isToken) {
+        return currency.address;
+    }
+    else {
+        return router_sdk_1.ADDRESS_ZERO;
+    }
+}
+exports.getAddress = getAddress;
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts b/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
index dc09920..96f24ab 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
@@ -1,6 +1,7 @@
 import { ChainId, Ether, NativeCurrency, Token } from '@uniswap/sdk-core';
 export declare const SUPPORTED_CHAINS: ChainId[];
 export declare const V2_SUPPORTED: ChainId[];
+export declare const V4_SUPPORTED: ChainId[];
 export declare const HAS_L1_FEE: ChainId[];
 export declare const NETWORKS_WITH_SAME_UNISWAP_ADDRESSES: ChainId[];
 export declare const ID_TO_CHAIN_ID: (id: number) => ChainId;
@@ -26,7 +27,19 @@ export declare enum ChainName {
     BASE_GOERLI = "base-goerli",
     BLAST = "blast-mainnet",
     ZORA = "zora-mainnet",
-    ZKSYNC = "zksync-mainnet"
+    ZKSYNC = "zksync-mainnet",
+    ABSTRACT_TESTNET = "abstract-testnet",
+    ZERO = "zero",
+    BOB = "bob",
+    CYBER = "cyeth",
+    SHAPE = "shape",
+    INK = "ink",
+    REDSTONE = "redstone",
+    REDSTONE_GARNET = "redstone-garnet",
+    ABSTRACT_MAINNET = "abstract",
+    ANIME_TESTNET = "anime-testnet",
+    ANIME = "anime",
+    MODE = "mode"
 }
 export declare enum NativeCurrencyName {
     ETHER = "ETH",
@@ -35,7 +48,9 @@ export declare enum NativeCurrencyName {
     GNOSIS = "XDAI",
     MOONBEAM = "GLMR",
     BNB = "BNB",
-    AVALANCHE = "AVAX"
+    AVALANCHE = "AVAX",
+    ANIME_TESTNET = "ANIME",
+    ANIME = "ANIME"
 }
 export declare const NATIVE_NAMES_BY_ID: {
     [chainId: number]: string[];
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/chains.js b/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
index ce356fd..667f964 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
@@ -1,6 +1,6 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.nativeOnChain = exports.ExtendedEther = exports.WRAPPED_NATIVE_CURRENCY = exports.ID_TO_PROVIDER = exports.CHAIN_IDS_LIST = exports.ID_TO_NETWORK_NAME = exports.NATIVE_CURRENCY = exports.NATIVE_NAMES_BY_ID = exports.NativeCurrencyName = exports.ChainName = exports.ID_TO_CHAIN_ID = exports.NETWORKS_WITH_SAME_UNISWAP_ADDRESSES = exports.HAS_L1_FEE = exports.V2_SUPPORTED = exports.SUPPORTED_CHAINS = void 0;
+exports.nativeOnChain = exports.ExtendedEther = exports.WRAPPED_NATIVE_CURRENCY = exports.ID_TO_PROVIDER = exports.CHAIN_IDS_LIST = exports.ID_TO_NETWORK_NAME = exports.NATIVE_CURRENCY = exports.NATIVE_NAMES_BY_ID = exports.NativeCurrencyName = exports.ChainName = exports.ID_TO_CHAIN_ID = exports.NETWORKS_WITH_SAME_UNISWAP_ADDRESSES = exports.HAS_L1_FEE = exports.V4_SUPPORTED = exports.V2_SUPPORTED = exports.SUPPORTED_CHAINS = void 0;
 const sdk_core_1 = require("@uniswap/sdk-core");
 // WIP: Gnosis, Moonbeam
 exports.SUPPORTED_CHAINS = [
@@ -22,6 +22,15 @@ exports.SUPPORTED_CHAINS = [
     sdk_core_1.ChainId.BLAST,
     sdk_core_1.ChainId.ZORA,
     sdk_core_1.ChainId.ZKSYNC,
+    sdk_core_1.ChainId.ABSTRACT_TESTNET,
+    sdk_core_1.ChainId.ZERO,
+    sdk_core_1.ChainId.BOB,
+    sdk_core_1.ChainId.CYBER,
+    sdk_core_1.ChainId.SHAPE,
+    sdk_core_1.ChainId.INK,
+    sdk_core_1.ChainId.ABSTRACT_MAINNET,
+    sdk_core_1.ChainId.ANIME_TESTNET,
+    sdk_core_1.ChainId.MODE,
     // Gnosis and Moonbeam don't yet have contracts deployed yet
 ];
 exports.V2_SUPPORTED = [
@@ -33,7 +42,20 @@ exports.V2_SUPPORTED = [
     sdk_core_1.ChainId.BASE,
     sdk_core_1.ChainId.BNB,
     sdk_core_1.ChainId.AVALANCHE,
+    sdk_core_1.ChainId.ABSTRACT_TESTNET,
+    sdk_core_1.ChainId.ZERO,
+    sdk_core_1.ChainId.CYBER,
+    sdk_core_1.ChainId.SHAPE,
+    sdk_core_1.ChainId.INK,
+    // Enable once supported
+    // ChainId.REDSTONE,
+    // ChainId.REDSTONE_GARNET,
+    // ChainId.BOB,
+    sdk_core_1.ChainId.ABSTRACT_MAINNET,
+    sdk_core_1.ChainId.ANIME_TESTNET,
+    sdk_core_1.ChainId.MODE,
 ];
+exports.V4_SUPPORTED = [sdk_core_1.ChainId.SEPOLIA];
 exports.HAS_L1_FEE = [
     sdk_core_1.ChainId.OPTIMISM,
     sdk_core_1.ChainId.OPTIMISM_GOERLI,
@@ -45,6 +67,7 @@ exports.HAS_L1_FEE = [
     sdk_core_1.ChainId.BASE_GOERLI,
     sdk_core_1.ChainId.BLAST,
     sdk_core_1.ChainId.ZORA,
+    //Omitting redstone
 ];
 exports.NETWORKS_WITH_SAME_UNISWAP_ADDRESSES = [
     sdk_core_1.ChainId.MAINNET,
@@ -100,6 +123,28 @@ const ID_TO_CHAIN_ID = (id) => {
             return sdk_core_1.ChainId.ZORA;
         case 324:
             return sdk_core_1.ChainId.ZKSYNC;
+        case 11124:
+            return sdk_core_1.ChainId.ABSTRACT_TESTNET;
+        case 543210:
+            return sdk_core_1.ChainId.ZERO;
+        case 60808:
+            return sdk_core_1.ChainId.BOB;
+        case 7560:
+            return sdk_core_1.ChainId.CYBER;
+        case 360:
+            return sdk_core_1.ChainId.SHAPE;
+        case 57073:
+            return sdk_core_1.ChainId.INK;
+        case 690:
+            return sdk_core_1.ChainId.REDSTONE;
+        case 17069:
+            return sdk_core_1.ChainId.REDSTONE_GARNET;
+        case 2741:
+            return sdk_core_1.ChainId.ABSTRACT_MAINNET;
+        case 6900:
+            return sdk_core_1.ChainId.ANIME_TESTNET;
+        case 34443:
+            return sdk_core_1.ChainId.MODE;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -129,6 +174,18 @@ var ChainName;
     ChainName["BLAST"] = "blast-mainnet";
     ChainName["ZORA"] = "zora-mainnet";
     ChainName["ZKSYNC"] = "zksync-mainnet";
+    ChainName["ABSTRACT_TESTNET"] = "abstract-testnet";
+    ChainName["ZERO"] = "zero";
+    ChainName["BOB"] = "bob";
+    ChainName["CYBER"] = "cyeth";
+    ChainName["SHAPE"] = "shape";
+    ChainName["INK"] = "ink";
+    ChainName["REDSTONE"] = "redstone";
+    ChainName["REDSTONE_GARNET"] = "redstone-garnet";
+    ChainName["ABSTRACT_MAINNET"] = "abstract";
+    ChainName["ANIME_TESTNET"] = "anime-testnet";
+    ChainName["ANIME"] = "anime";
+    ChainName["MODE"] = "mode";
 })(ChainName = exports.ChainName || (exports.ChainName = {}));
 var NativeCurrencyName;
 (function (NativeCurrencyName) {
@@ -140,6 +197,8 @@ var NativeCurrencyName;
     NativeCurrencyName["MOONBEAM"] = "GLMR";
     NativeCurrencyName["BNB"] = "BNB";
     NativeCurrencyName["AVALANCHE"] = "AVAX";
+    NativeCurrencyName["ANIME_TESTNET"] = "ANIME";
+    NativeCurrencyName["ANIME"] = "ANIME";
 })(NativeCurrencyName = exports.NativeCurrencyName || (exports.NativeCurrencyName = {}));
 exports.NATIVE_NAMES_BY_ID = {
     [sdk_core_1.ChainId.MAINNET]: [
@@ -222,6 +281,58 @@ exports.NATIVE_NAMES_BY_ID = {
         'ETHER',
         '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
     ],
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.ZERO]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.BOB]: ['ETH', 'ETHER', '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'],
+    [sdk_core_1.ChainId.CYBER]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.SHAPE]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.INK]: ['ETH', 'ETHER', '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'],
+    [sdk_core_1.ChainId.REDSTONE]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.ANIME_TESTNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.ANIME]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [sdk_core_1.ChainId.MODE]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
 };
 exports.NATIVE_CURRENCY = {
     [sdk_core_1.ChainId.MAINNET]: NativeCurrencyName.ETHER,
@@ -245,6 +356,18 @@ exports.NATIVE_CURRENCY = {
     [sdk_core_1.ChainId.BLAST]: NativeCurrencyName.ETHER,
     [sdk_core_1.ChainId.ZORA]: NativeCurrencyName.ETHER,
     [sdk_core_1.ChainId.ZKSYNC]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.ZERO]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.BOB]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.CYBER]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.SHAPE]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.INK]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.REDSTONE]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.ANIME_TESTNET]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.ANIME]: NativeCurrencyName.ANIME,
+    [sdk_core_1.ChainId.MODE]: NativeCurrencyName.ETHER,
 };
 const ID_TO_NETWORK_NAME = (id) => {
     switch (id) {
@@ -292,6 +415,30 @@ const ID_TO_NETWORK_NAME = (id) => {
             return ChainName.ZORA;
         case 324:
             return ChainName.ZKSYNC;
+        case 11124:
+            return ChainName.ABSTRACT_TESTNET;
+        case 543210:
+            return ChainName.ZERO;
+        case 60808:
+            return ChainName.BOB;
+        case 7560:
+            return ChainName.CYBER;
+        case 360:
+            return ChainName.SHAPE;
+        case 57073:
+            return ChainName.INK;
+        case 690:
+            return ChainName.REDSTONE;
+        case 17069:
+            return ChainName.REDSTONE_GARNET;
+        case 2741:
+            return ChainName.ABSTRACT_MAINNET;
+        case 6900:
+            return ChainName.ANIME_TESTNET;
+        case 69000:
+            return ChainName.ANIME;
+        case 34443:
+            return ChainName.MODE;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -338,6 +485,30 @@ const ID_TO_PROVIDER = (id) => {
             return process.env.JSON_RPC_PROVIDER_ZORA;
         case sdk_core_1.ChainId.ZKSYNC:
             return process.env.JSON_RPC_PROVIDER_ZKSYNC;
+        case sdk_core_1.ChainId.ABSTRACT_TESTNET:
+            return process.env.JSON_RPC_PROVIDER_ABSTRACT_TESTNET;
+        case sdk_core_1.ChainId.ZERO:
+            return process.env.JSON_RPC_PROVIDER_ZERO;
+        case sdk_core_1.ChainId.BOB:
+            return process.env.JSON_RPC_PROVIDER_BOB;
+        case sdk_core_1.ChainId.CYBER:
+            return process.env.JSON_RPC_PROVIDER_CYBER;
+        case sdk_core_1.ChainId.SHAPE:
+            return process.env.JSON_RPC_PROVIDER_SHAPE;
+        case sdk_core_1.ChainId.INK:
+            return process.env.JSON_RPC_PROVIDER_INK;
+        case sdk_core_1.ChainId.REDSTONE:
+            return process.env.JSON_RPC_PROVIDER_REDSTONE;
+        case sdk_core_1.ChainId.REDSTONE_GARNET:
+            return process.env.JSON_RPC_PROVIDER_REDSTONE_GARNET;
+        case sdk_core_1.ChainId.ABSTRACT_MAINNET:
+            return process.env.JSON_RPC_PROVIDER_ABSTRACT_MAINNET;
+        case sdk_core_1.ChainId.ANIME_TESTNET:
+            return process.env.JSON_RPC_PROVIDER_ANIME_TESTNET;
+        case sdk_core_1.ChainId.ANIME:
+            return process.env.JSON_RPC_PROVIDER_ANIME;
+        case sdk_core_1.ChainId.MODE:
+            return process.env.JSON_RPC_PROVIDER_MODE;
         default:
             throw new Error(`Chain id: ${id} not supported`);
     }
@@ -369,6 +540,18 @@ exports.WRAPPED_NATIVE_CURRENCY = {
     [sdk_core_1.ChainId.ZORA_SEPOLIA]: new sdk_core_1.Token(sdk_core_1.ChainId.ZORA_SEPOLIA, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [sdk_core_1.ChainId.BLAST]: new sdk_core_1.Token(sdk_core_1.ChainId.BLAST, '0x4300000000000000000000000000000000000004', 18, 'WETH', 'Wrapped Ether'),
     [sdk_core_1.ChainId.ZKSYNC]: new sdk_core_1.Token(sdk_core_1.ChainId.ZKSYNC, '0x5aea5775959fbc2557cc8789bc1bf90a239d9a91', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ABSTRACT_TESTNET]: new sdk_core_1.Token(sdk_core_1.ChainId.ABSTRACT_TESTNET, '0x9EDCde0257F2386Ce177C3a7FCdd97787F0D841d', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ZERO]: new sdk_core_1.Token(sdk_core_1.ChainId.ZERO, '0xAc98B49576B1C892ba6BFae08fE1BB0d80Cf599c', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.BOB]: new sdk_core_1.Token(sdk_core_1.ChainId.BOB, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.CYBER]: new sdk_core_1.Token(sdk_core_1.ChainId.CYBER, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.SHAPE]: new sdk_core_1.Token(sdk_core_1.ChainId.SHAPE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.INK]: new sdk_core_1.Token(sdk_core_1.ChainId.INK, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.REDSTONE]: new sdk_core_1.Token(sdk_core_1.ChainId.REDSTONE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.REDSTONE_GARNET]: new sdk_core_1.Token(sdk_core_1.ChainId.REDSTONE_GARNET, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ABSTRACT_MAINNET]: new sdk_core_1.Token(sdk_core_1.ChainId.ABSTRACT_MAINNET, '0x3439153EB7AF838Ad19d56E1571FBD09333C2809', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ANIME_TESTNET]: new sdk_core_1.Token(sdk_core_1.ChainId.ANIME_TESTNET, '0x8f3e2785985aa4005c63f97f7cc89ce91a948267', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.ANIME]: new sdk_core_1.Token(sdk_core_1.ChainId.ANIME, '0x164906a76f1A2Ea933366c446AE0Ec6a37062c42', 18, 'WANIME', 'Wrapped ANIME'),
+    [sdk_core_1.ChainId.MODE]: new sdk_core_1.Token(sdk_core_1.ChainId.MODE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
 };
 function isMatic(chainId) {
     return chainId === sdk_core_1.ChainId.POLYGON_MUMBAI || chainId === sdk_core_1.ChainId.POLYGON;
@@ -545,4 +728,4 @@ function nativeOnChain(chainId) {
     return cachedNativeCurrency[chainId];
 }
 exports.nativeOnChain = nativeOnChain;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts
index a6dbbc3..d438371 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts
@@ -1,14 +1,15 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { ChainId, Token } from '@uniswap/sdk-core';
 import { Pool } from '@uniswap/v3-sdk';
-import { IV2PoolProvider } from '../providers';
+import { IV2PoolProvider, IV4PoolProvider } from '../providers';
 import { IPortionProvider } from '../providers/portion-provider';
 import { ArbitrumGasData } from '../providers/v3/gas-data-provider';
 import { IV3PoolProvider } from '../providers/v3/pool-provider';
 import { GasModelProviderConfig, RouteWithValidQuote, SwapOptions, SwapRoute } from '../routers';
 import { CurrencyAmount } from '../util';
-import { Pair } from '@uniswap/v2-sdk';
 import { BaseProvider } from '@ethersproject/providers';
+import { Pair } from '@uniswap/v2-sdk';
+import { ProviderConfig } from '../providers/provider';
 export declare function getV2NativePool(token: Token, poolProvider: IV2PoolProvider, providerConfig?: GasModelProviderConfig): Promise<Pair | null>;
 export declare function getHighestLiquidityV3NativePool(token: Token, poolProvider: IV3PoolProvider, providerConfig?: GasModelProviderConfig): Promise<Pool | null>;
 export declare function getHighestLiquidityV3USDPool(chainId: ChainId, poolProvider: IV3PoolProvider, providerConfig?: GasModelProviderConfig): Promise<Pool>;
@@ -23,8 +24,8 @@ export declare function calculateGasUsed(chainId: ChainId, route: SwapRoute, sim
     estimatedGasUsedGasToken?: CurrencyAmount;
     quoteGasAdjusted: CurrencyAmount;
 }>;
-export declare function initSwapRouteFromExisting(swapRoute: SwapRoute, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, portionProvider: IPortionProvider, quoteGasAdjusted: CurrencyAmount, estimatedGasUsed: BigNumber, estimatedGasUsedQuoteToken: CurrencyAmount, estimatedGasUsedUSD: CurrencyAmount, swapOptions: SwapOptions, estimatedGasUsedGasToken?: CurrencyAmount): SwapRoute;
-export declare const calculateL1GasFeesHelper: (route: RouteWithValidQuote[], chainId: ChainId, usdPool: Pair | Pool, quoteToken: Token, nativePool: Pair | Pool | null, provider: BaseProvider, l2GasData?: ArbitrumGasData) => Promise<{
+export declare function initSwapRouteFromExisting(swapRoute: SwapRoute, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, v4PoolProvider: IV4PoolProvider, portionProvider: IPortionProvider, quoteGasAdjusted: CurrencyAmount, estimatedGasUsed: BigNumber, estimatedGasUsedQuoteToken: CurrencyAmount, estimatedGasUsedUSD: CurrencyAmount, swapOptions: SwapOptions, estimatedGasUsedGasToken?: CurrencyAmount, providerConfig?: ProviderConfig): SwapRoute;
+export declare const calculateL1GasFeesHelper: (route: RouteWithValidQuote[], chainId: ChainId, usdPool: Pair | Pool, quoteToken: Token, nativePool: Pair | Pool | null, provider: BaseProvider, l2GasData?: ArbitrumGasData, providerConfig?: GasModelProviderConfig) => Promise<{
     gasUsedL1: BigNumber;
     gasUsedL1OnL2: BigNumber;
     gasCostL1USD: CurrencyAmount;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
index ba47cc7..c2e831f 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
@@ -13,9 +13,10 @@ const jsbi_1 = __importDefault(require("jsbi"));
 const lodash_1 = __importDefault(require("lodash"));
 const routers_1 = require("../routers");
 const util_1 = require("../util");
+const sdk_1 = require("@eth-optimism/sdk");
+const universal_router_sdk_1 = require("@uniswap/universal-router-sdk");
 const l2FeeChains_1 = require("./l2FeeChains");
 const methodParameters_1 = require("./methodParameters");
-const sdk_1 = require("@eth-optimism/sdk");
 async function getV2NativePool(token, poolProvider, providerConfig) {
     const chainId = token.chainId;
     const weth = util_1.WRAPPED_NATIVE_CURRENCY[chainId];
@@ -153,9 +154,12 @@ async function calculateOptimismToL1FeeFromCalldata(calldata, chainId, provider)
     const tx = {
         data: calldata,
         chainId: chainId,
-        type: 2 // sign the transaction as EIP-1559, otherwise it will fail at maxFeePerGas
+        type: 2, // sign the transaction as EIP-1559, otherwise it will fail at maxFeePerGas
     };
-    const [l1GasUsed, l1GasCost] = await Promise.all([(0, sdk_1.estimateL1Gas)(provider, tx), (0, sdk_1.estimateL1GasCost)(provider, tx)]);
+    const [l1GasUsed, l1GasCost] = await Promise.all([
+        (0, sdk_1.estimateL1Gas)(provider, tx),
+        (0, sdk_1.estimateL1GasCost)(provider, tx),
+    ]);
     return [l1GasUsed, l1GasCost];
 }
 exports.calculateOptimismToL1FeeFromCalldata = calculateOptimismToL1FeeFromCalldata;
@@ -244,7 +248,7 @@ async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolProvider
     };
 }
 exports.calculateGasUsed = calculateGasUsed;
-function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken) {
+function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, v4PoolProvider, portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken, providerConfig) {
     const currencyIn = swapRoute.trade.inputAmount.currency;
     const currencyOut = swapRoute.trade.outputAmount.currency;
     const tradeType = swapRoute.trade.tradeType.valueOf()
@@ -252,6 +256,20 @@ function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, po
         : sdk_core_1.TradeType.EXACT_INPUT;
     const routesWithValidQuote = swapRoute.route.map((route) => {
         switch (route.protocol) {
+            case router_sdk_1.Protocol.V4:
+                return new routers_1.V4RouteWithValidQuote({
+                    amount: util_1.CurrencyAmount.fromFractionalAmount(route.amount.currency, route.amount.numerator, route.amount.denominator),
+                    rawQuote: bignumber_1.BigNumber.from(route.rawQuote),
+                    sqrtPriceX96AfterList: route.sqrtPriceX96AfterList.map((num) => bignumber_1.BigNumber.from(num)),
+                    initializedTicksCrossedList: [...route.initializedTicksCrossedList],
+                    quoterGasEstimate: bignumber_1.BigNumber.from(route.quoterGasEstimate),
+                    percent: route.percent,
+                    route: route.route,
+                    gasModel: route.gasModel,
+                    quoteToken: new sdk_core_1.Token(currencyIn.chainId, route.quoteToken.address, route.quoteToken.decimals, route.quoteToken.symbol, route.quoteToken.name),
+                    tradeType: tradeType,
+                    v4PoolProvider: v4PoolProvider,
+                });
             case router_sdk_1.Protocol.V3:
                 return new routers_1.V3RouteWithValidQuote({
                     amount: util_1.CurrencyAmount.fromFractionalAmount(route.amount.currency, route.amount.numerator, route.amount.denominator),
@@ -291,14 +309,17 @@ function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, po
                     quoteToken: new sdk_core_1.Token(currencyIn.chainId, route.quoteToken.address, route.quoteToken.decimals, route.quoteToken.symbol, route.quoteToken.name),
                     tradeType: tradeType,
                     v3PoolProvider: v3PoolProvider,
+                    v4PoolProvider: v4PoolProvider,
                 });
+            default:
+                throw new Error('Invalid protocol');
         }
     });
     const trade = (0, methodParameters_1.buildTrade)(currencyIn, currencyOut, tradeType, routesWithValidQuote);
     const quoteGasAndPortionAdjusted = swapRoute.portionAmount
         ? portionProvider.getQuoteGasAndPortionAdjusted(swapRoute.trade.tradeType, quoteGasAdjusted, swapRoute.portionAmount)
         : undefined;
-    const routesWithValidQuotePortionAdjusted = portionProvider.getRouteWithQuotePortionAdjusted(swapRoute.trade.tradeType, routesWithValidQuote, swapOptions);
+    const routesWithValidQuotePortionAdjusted = portionProvider.getRouteWithQuotePortionAdjusted(swapRoute.trade.tradeType, routesWithValidQuote, swapOptions, providerConfig);
     return {
         quote: swapRoute.quote,
         quoteGasAdjusted,
@@ -323,9 +344,11 @@ function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, po
     };
 }
 exports.initSwapRouteFromExisting = initSwapRouteFromExisting;
-const calculateL1GasFeesHelper = async (route, chainId, usdPool, quoteToken, nativePool, provider, l2GasData) => {
+const calculateL1GasFeesHelper = async (route, chainId, usdPool, quoteToken, nativePool, provider, l2GasData, providerConfig) => {
+    var _a;
     const swapOptions = {
         type: routers_1.SwapType.UNIVERSAL_ROUTER,
+        version: (_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.universalRouterVersion) !== null && _a !== void 0 ? _a : universal_router_sdk_1.UniversalRouterVersion.V1_2,
         recipient: '0x0000000000000000000000000000000000000001',
         deadlineOrPreviousBlockhash: 100,
         slippageTolerance: new sdk_core_1.Percent(5, 10000),
@@ -401,4 +424,4 @@ const calculateL1GasFeesHelper = async (route, chainId, usdPool, quoteToken, nat
     }
 };
 exports.calculateL1GasFeesHelper = calculateL1GasFeesHelper;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/l2FeeChains.js b/node_modules/@uniswap/smart-order-router/build/main/util/l2FeeChains.js
index 63659bc..2047496 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/l2FeeChains.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/l2FeeChains.js
@@ -9,5 +9,6 @@ exports.opStackChains = [
     sdk_core_1.ChainId.BASE,
     sdk_core_1.ChainId.BASE_GOERLI,
     sdk_core_1.ChainId.BLAST,
+    sdk_core_1.ChainId.ZORA,
 ];
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibDJGZWVDaGFpbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbC9sMkZlZUNoYWlucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxnREFBNEM7QUFFL0IsUUFBQSxhQUFhLEdBQUc7SUFDM0Isa0JBQU8sQ0FBQyxRQUFRO0lBQ2hCLGtCQUFPLENBQUMsZUFBZTtJQUN2QixrQkFBTyxDQUFDLGdCQUFnQjtJQUN4QixrQkFBTyxDQUFDLElBQUk7SUFDWixrQkFBTyxDQUFDLFdBQVc7SUFDbkIsa0JBQU8sQ0FBQyxLQUFLO0NBQ2QsQ0FBQyJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibDJGZWVDaGFpbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbC9sMkZlZUNoYWlucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxnREFBNEM7QUFFL0IsUUFBQSxhQUFhLEdBQUc7SUFDM0Isa0JBQU8sQ0FBQyxRQUFRO0lBQ2hCLGtCQUFPLENBQUMsZUFBZTtJQUN2QixrQkFBTyxDQUFDLGdCQUFnQjtJQUN4QixrQkFBTyxDQUFDLElBQUk7SUFDWixrQkFBTyxDQUFDLFdBQVc7SUFDbkIsa0JBQU8sQ0FBQyxLQUFLO0lBQ2Isa0JBQU8sQ0FBQyxJQUFJO0NBQ2IsQ0FBQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/methodParameters.js b/node_modules/@uniswap/smart-order-router/build/main/util/methodParameters.js
index 6fdb52a..5e08468 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/methodParameters.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/methodParameters.js
@@ -9,13 +9,42 @@ const sdk_core_1 = require("@uniswap/sdk-core");
 const universal_router_sdk_1 = require("@uniswap/universal-router-sdk");
 const v2_sdk_1 = require("@uniswap/v2-sdk");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
 const lodash_1 = __importDefault(require("lodash"));
 const __1 = require("..");
 function buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmounts) {
     /// Removed partition because of new mixedRoutes
+    const v4RouteAmounts = lodash_1.default.filter(routeAmounts, (routeAmount) => routeAmount.protocol === router_sdk_1.Protocol.V4);
     const v3RouteAmounts = lodash_1.default.filter(routeAmounts, (routeAmount) => routeAmount.protocol === router_sdk_1.Protocol.V3);
     const v2RouteAmounts = lodash_1.default.filter(routeAmounts, (routeAmount) => routeAmount.protocol === router_sdk_1.Protocol.V2);
     const mixedRouteAmounts = lodash_1.default.filter(routeAmounts, (routeAmount) => routeAmount.protocol === router_sdk_1.Protocol.MIXED);
+    // TODO: ROUTE-248 - refactor route objects for the trade object composition
+    const v4Routes = lodash_1.default.map(v4RouteAmounts, (routeAmount) => {
+        const { route, amount, quote } = routeAmount;
+        // The route, amount and quote are all in terms of wrapped tokens.
+        // When constructing the Trade object the inputAmount/outputAmount must
+        // use native currencies if specified by the user. This is so that the Trade knows to wrap/unwrap.
+        if (tradeType == sdk_core_1.TradeType.EXACT_INPUT) {
+            const amountCurrency = __1.CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);
+            const quoteCurrency = __1.CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);
+            const routeRaw = new v4_sdk_1.Route(route.pools, amountCurrency.currency, quoteCurrency.currency);
+            return {
+                routev4: routeRaw,
+                inputAmount: amountCurrency,
+                outputAmount: quoteCurrency,
+            };
+        }
+        else {
+            const quoteCurrency = __1.CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);
+            const amountCurrency = __1.CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);
+            const routeCurrency = new v4_sdk_1.Route(route.pools, quoteCurrency.currency, amountCurrency.currency);
+            return {
+                routev4: routeCurrency,
+                inputAmount: quoteCurrency,
+                outputAmount: amountCurrency,
+            };
+        }
+    });
     const v3Routes = lodash_1.default.map(v3RouteAmounts, (routeAmount) => {
         const { route, amount, quote } = routeAmount;
         // The route, amount and quote are all in terms of wrapped tokens.
@@ -85,13 +114,21 @@ function buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmounts)
             outputAmount: quoteCurrency,
         };
     });
-    const trade = new router_sdk_1.Trade({ v2Routes, v3Routes, mixedRoutes, tradeType });
+    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
+    // @ts-ignore
+    const trade = new router_sdk_1.Trade({
+        v2Routes,
+        v3Routes,
+        v4Routes,
+        mixedRoutes,
+        tradeType,
+    });
     return trade;
 }
 exports.buildTrade = buildTrade;
 function buildSwapMethodParameters(trade, swapConfig, chainId) {
     if (swapConfig.type == __1.SwapType.UNIVERSAL_ROUTER) {
-        return Object.assign(Object.assign({}, universal_router_sdk_1.SwapRouter.swapERC20CallParameters(trade, swapConfig)), { to: (0, universal_router_sdk_1.UNIVERSAL_ROUTER_ADDRESS)(chainId) });
+        return Object.assign(Object.assign({}, universal_router_sdk_1.SwapRouter.swapERC20CallParameters(trade, swapConfig)), { to: (0, universal_router_sdk_1.UNIVERSAL_ROUTER_ADDRESS)(swapConfig.version, chainId) });
     }
     else if (swapConfig.type == __1.SwapType.SWAP_ROUTER_02) {
         const { recipient, slippageTolerance, deadline, inputTokenPermit } = swapConfig;
@@ -105,4 +142,4 @@ function buildSwapMethodParameters(trade, swapConfig, chainId) {
     throw new Error(`Unsupported swap type ${swapConfig}`);
 }
 exports.buildSwapMethodParameters = buildSwapMethodParameters;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0aG9kUGFyYW1ldGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsL21ldGhvZFBhcmFtZXRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsb0RBSzZCO0FBQzdCLGdEQUFpRTtBQUNqRSx3RUFHdUM7QUFDdkMsNENBQXNEO0FBQ3RELDRDQUFzRDtBQUN0RCxvREFBdUI7QUFFdkIsMEJBVVk7QUFFWixTQUFnQixVQUFVLENBQ3hCLGVBQXlCLEVBQ3pCLGdCQUEwQixFQUMxQixTQUFxQixFQUNyQixZQUFtQztJQUVuQyxnREFBZ0Q7SUFDaEQsTUFBTSxjQUFjLEdBQUcsZ0JBQUMsQ0FBQyxNQUFNLENBQzdCLFlBQVksRUFDWixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsS0FBSyxxQkFBUSxDQUFDLEVBQUUsQ0FDdEQsQ0FBQztJQUNGLE1BQU0sY0FBYyxHQUFHLGdCQUFDLENBQUMsTUFBTSxDQUM3QixZQUFZLEVBQ1osQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFLENBQ3RELENBQUM7SUFDRixNQUFNLGlCQUFpQixHQUFHLGdCQUFDLENBQUMsTUFBTSxDQUNoQyxZQUFZLEVBQ1osQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxLQUFLLENBQ3pELENBQUM7SUFFRixNQUFNLFFBQVEsR0FBRyxnQkFBQyxDQUFDLEdBQUcsQ0FRcEIsY0FBeUMsRUFDekMsQ0FBQyxXQUFrQyxFQUFFLEVBQUU7UUFDckMsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsV0FBVyxDQUFDO1FBRTdDLGtFQUFrRTtRQUNsRSx1RUFBdUU7UUFDdkUsa0dBQWtHO1FBQ2xHLElBQUksU0FBUyxJQUFJLG9CQUFTLENBQUMsV0FBVyxFQUFFO1lB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0aG9kUGFyYW1ldGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsL21ldGhvZFBhcmFtZXRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsb0RBSzZCO0FBQzdCLGdEQUFpRTtBQUNqRSx3RUFHdUM7QUFDdkMsNENBQXNEO0FBQ3RELDRDQUFzRDtBQUN0RCw0Q0FBc0Q7QUFDdEQsb0RBQXVCO0FBRXZCLDBCQVdZO0FBRVosU0FBZ0IsVUFBVSxDQUN4QixlQUF5QixFQUN6QixnQkFBMEIsRUFDMUIsU0FBcUIsRUFDckIsWUFBbUM7SUFFbkMsZ0RBQWdEO0lBQ2hELE1BQU0sY0FBYyxHQUFHLGdCQUFDLENBQUMsTUFBTSxDQUM3QixZQUFZLEVBQ1osQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFLENBQ3RELENBQUM7SUFDRixNQUFNLGNBQWMsR0FBRyxnQkFBQyxDQUFDLE1BQU0sQ0FDN0IsWUFBWSxFQUNaLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBUSxLQUFLLHFCQUFRLENBQUMsRUFBRSxDQUN0RCxDQUFDO0lBQ0YsTUFBTSxjQUFjLEdBQUcsZ0JBQUMsQ0FBQyxNQUFNLENBQzdCLFlBQVksRUFDWixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsS0FBSyxxQkFBUSxDQUFDLEVBQUUsQ0FDdEQsQ0FBQztJQUNGLE1BQU0saUJBQWlCLEdBQUcsZ0JBQUMsQ0FBQyxNQUFNLENBQ2hDLFlBQVksRUFDWixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsS0FBSyxxQkFBUSxDQUFDLEtBQUssQ0FDekQsQ0FBQztJQUVGLDRFQUE0RTtJQUM1RSxNQUFNLFFBQVEsR0FBRyxnQkFBQyxDQUFDLEdBQUcsQ0FRcEIsY0FBeUMsRUFDekMsQ0FBQyxXQUFrQyxFQUFF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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/protocols.js b/node_modules/@uniswap/smart-order-router/build/main/util/protocols.js
index c17ffc4..29c5101 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/protocols.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/protocols.js
@@ -4,6 +4,8 @@ exports.TO_PROTOCOL = void 0;
 const router_sdk_1 = require("@uniswap/router-sdk");
 const TO_PROTOCOL = (protocol) => {
     switch (protocol.toLowerCase()) {
+        case 'v4':
+            return router_sdk_1.Protocol.V4;
         case 'v3':
             return router_sdk_1.Protocol.V3;
         case 'v2':
@@ -15,4 +17,4 @@ const TO_PROTOCOL = (protocol) => {
     }
 };
 exports.TO_PROTOCOL = TO_PROTOCOL;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdG9jb2xzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcHJvdG9jb2xzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG9EQUErQztBQUV4QyxNQUFNLFdBQVcsR0FBRyxDQUFDLFFBQWdCLEVBQVksRUFBRTtJQUN4RCxRQUFRLFFBQVEsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUM5QixLQUFLLElBQUk7WUFDUCxPQUFPLHFCQUFRLENBQUMsRUFBRSxDQUFDO1FBQ3JCLEtBQUssSUFBSTtZQUNQLE9BQU8scUJBQVEsQ0FBQyxFQUFFLENBQUM7UUFDckIsS0FBSyxPQUFPO1lBQ1YsT0FBTyxxQkFBUSxDQUFDLEtBQUssQ0FBQztRQUN4QjtZQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsd0JBQXdCLENBQUMsQ0FBQztLQUM3QztBQUNILENBQUMsQ0FBQztBQVhXLFFBQUEsV0FBVyxlQVd0QiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdG9jb2xzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcHJvdG9jb2xzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG9EQUErQztBQUV4QyxNQUFNLFdBQVcsR0FBRyxDQUFDLFFBQWdCLEVBQVksRUFBRTtJQUN4RCxRQUFRLFFBQVEsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUM5QixLQUFLLElBQUk7WUFDUCxPQUFPLHFCQUFRLENBQUMsRUFBRSxDQUFDO1FBQ3JCLEtBQUssSUFBSTtZQUNQLE9BQU8scUJBQVEsQ0FBQyxFQUFFLENBQUM7UUFDckIsS0FBSyxJQUFJO1lBQ1AsT0FBTyxxQkFBUSxDQUFDLEVBQUUsQ0FBQztRQUNyQixLQUFLLE9BQU87WUFDVixPQUFPLHFCQUFRLENBQUMsS0FBSyxDQUFDO1FBQ3hCO1lBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0tBQzdDO0FBQ0gsQ0FBQyxDQUFDO0FBYlcsUUFBQSxXQUFXLGVBYXRCIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/routes.d.ts b/node_modules/@uniswap/smart-order-router/build/main/util/routes.d.ts
index 2ac4f1d..746385c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/routes.d.ts
@@ -1,8 +1,11 @@
-import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
-import { RouteWithValidQuote } from '../routers/alpha-router';
-import { MixedRoute, V2Route, V3Route } from '../routers/router';
-export declare const routeToString: (route: V3Route | V2Route | MixedRoute) => string;
+import { Currency } from '@uniswap/sdk-core';
+import { AlphaRouterConfig, RouteWithValidQuote } from '../routers/alpha-router';
+import { SupportedRoutes } from '../routers/router';
+import { TPool } from '@uniswap/router-sdk/dist/utils/TPool';
+import { CachedRoutes } from '../providers';
+export declare const routeToTokens: (route: SupportedRoutes) => Currency[];
+export declare const routeToPools: (route: SupportedRoutes) => TPool[];
+export declare const poolToString: (pool: TPool) => string;
+export declare const routeToString: (route: SupportedRoutes) => string;
 export declare const routeAmountsToString: (routeAmounts: RouteWithValidQuote[]) => string;
-export declare const routeAmountToString: (routeAmount: RouteWithValidQuote) => string;
-export declare const poolToString: (p: Pool | Pair) => string;
+export declare function shouldWipeoutCachedRoutes(cachedRoutes?: CachedRoutes, routingConfig?: AlphaRouterConfig): boolean;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/routes.js b/node_modules/@uniswap/smart-order-router/build/main/util/routes.js
index d5c3dc9..0984b88 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/routes.js
@@ -3,28 +3,76 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.poolToString = exports.routeAmountToString = exports.routeAmountsToString = exports.routeToString = void 0;
+exports.shouldWipeoutCachedRoutes = exports.routeAmountsToString = exports.routeToString = exports.poolToString = exports.routeToPools = exports.routeToTokens = void 0;
 const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const v2_sdk_1 = require("@uniswap/v2-sdk");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const v4_sdk_1 = require("@uniswap/v4-sdk");
 const lodash_1 = __importDefault(require("lodash"));
 const addresses_1 = require("./addresses");
 const _1 = require(".");
+const routeToTokens = (route) => {
+    switch (route.protocol) {
+        case router_sdk_1.Protocol.V4:
+            return route.currencyPath;
+        case router_sdk_1.Protocol.V3:
+            return route.tokenPath;
+        case router_sdk_1.Protocol.V2:
+        case router_sdk_1.Protocol.MIXED:
+            return route.path;
+        default:
+            throw new Error(`Unsupported route ${JSON.stringify(route)}`);
+    }
+};
+exports.routeToTokens = routeToTokens;
+const routeToPools = (route) => {
+    switch (route.protocol) {
+        case router_sdk_1.Protocol.V4:
+        case router_sdk_1.Protocol.V3:
+        case router_sdk_1.Protocol.MIXED:
+            return route.pools;
+        case router_sdk_1.Protocol.V2:
+            return route.pairs;
+        default:
+            throw new Error(`Unsupported route ${JSON.stringify(route)}`);
+    }
+};
+exports.routeToPools = routeToPools;
+const poolToString = (pool) => {
+    if (pool instanceof v4_sdk_1.Pool) {
+        return ` -- ${pool.fee / 10000}% [${v4_sdk_1.Pool.getPoolId(pool.token0, pool.token1, pool.fee, 0, router_sdk_1.ADDRESS_ZERO)}]`;
+    }
+    else if (pool instanceof v3_sdk_1.Pool) {
+        return ` -- ${pool.fee / 10000}% [${v3_sdk_1.Pool.getAddress(pool.token0, pool.token1, pool.fee, undefined, addresses_1.V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`;
+    }
+    else if (pool instanceof v2_sdk_1.Pair) {
+        return ` -- [${v2_sdk_1.Pair.getAddress(pool.token0, pool.token1)}]`;
+    }
+    else {
+        throw new Error(`Unsupported pool ${JSON.stringify(pool)}`);
+    }
+};
+exports.poolToString = poolToString;
 const routeToString = (route) => {
     const routeStr = [];
-    const tokens = route.protocol === router_sdk_1.Protocol.V3
-        ? route.tokenPath
-        : // MixedRoute and V2Route have path
-            route.path;
+    const tokens = (0, exports.routeToTokens)(route);
     const tokenPath = lodash_1.default.map(tokens, (token) => `${token.symbol}`);
-    const pools = route.protocol === router_sdk_1.Protocol.V3 || route.protocol === router_sdk_1.Protocol.MIXED
-        ? route.pools
-        : route.pairs;
+    const pools = (0, exports.routeToPools)(route);
     const poolFeePath = lodash_1.default.map(pools, (pool) => {
-        return `${pool instanceof v3_sdk_1.Pool
-            ? ` -- ${pool.fee / 10000}% [${v3_sdk_1.Pool.getAddress(pool.token0, pool.token1, pool.fee, undefined, addresses_1.V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`
-            : ` -- [${v2_sdk_1.Pair.getAddress(pool.token0, pool.token1)}]`} --> `;
+        if (pool instanceof v2_sdk_1.Pair) {
+            return ` -- [${v2_sdk_1.Pair.getAddress(pool.token0, pool.token1)}]`;
+        }
+        else if (pool instanceof v3_sdk_1.Pool) {
+            return ` -- ${pool.fee / 10000}% [${v3_sdk_1.Pool.getAddress(pool.token0, pool.token1, pool.fee, undefined, addresses_1.V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`;
+        }
+        else if (pool instanceof v4_sdk_1.Pool) {
+            return ` -- ${pool.fee / 10000}% [${v4_sdk_1.Pool.getPoolId(pool.token0, pool.token1, pool.fee, 0, router_sdk_1.ADDRESS_ZERO)}]`;
+        }
+        else {
+            throw new Error(`Unsupported pool ${JSON.stringify(pool)}`);
+        }
+        return `${(0, exports.poolToString)(pool)} --> `;
     });
     for (let i = 0; i < tokenPath.length; i++) {
         routeStr.push(tokenPath[i]);
@@ -48,13 +96,43 @@ const routeAmountsToString = (routeAmounts) => {
     return lodash_1.default.join(routeStrings, ', ');
 };
 exports.routeAmountsToString = routeAmountsToString;
-const routeAmountToString = (routeAmount) => {
-    const { route, amount } = routeAmount;
-    return `${amount.toExact()} = ${(0, exports.routeToString)(route)}`;
-};
-exports.routeAmountToString = routeAmountToString;
-const poolToString = (p) => {
-    return `${p.token0.symbol}/${p.token1.symbol}${p instanceof v3_sdk_1.Pool ? `/${p.fee / 10000}%` : ``}`;
-};
-exports.poolToString = poolToString;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQXVDO0FBQ3ZDLDRDQUF1QztBQUN2QyxvREFBdUI7QUFLdkIsMkNBQXdEO0FBRXhELHdCQUFtQztBQUU1QixNQUFNLGFBQWEsR0FBRyxDQUMzQixLQUFxQyxFQUM3QixFQUFFO0lBQ1YsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLE1BQU0sTUFBTSxHQUNWLEtBQUssQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFO1FBQzVCLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUztRQUNqQixDQUFDLENBQUMsbUNBQW1DO1lBQ25DLEtBQUssQ0FBQyxJQUFJLENBQUM7SUFDakIsTUFBTSxTQUFTLEdBQUcsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUNULEtBQUssQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxxQkFBUSxDQUFDLEtBQUs7UUFDakUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLO1FBQ2IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDbEIsTUFBTSxXQUFXLEdBQUcsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDeEMsT0FBTyxHQUNMLElBQUksWUFBWSxhQUFJO1lBQ2xCLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxNQUFNLGFBQUksQ0FBQyxVQUFVLENBQzFDLElBQUksQ0FBQyxNQUFNLEVBQ1gsSUFBSSxDQUFD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
\ No newline at end of file
+function shouldWipeoutCachedRoutes(cachedRoutes, routingConfig) {
+    // In case of optimisticCachedRoutes, we don't want to wipe out the cache
+    // This is because the upstream client will indicate that it's a perf sensitive (likely online) request,
+    // such that we should still use the cached routes.
+    // In case of routing-api,
+    // when intent=quote, optimisticCachedRoutes will be true, it means it's an online quote request, and we should use the cached routes.
+    // when intent=caching, optimisticCachedRoutes will be false, it means it's an async routing lambda invocation for the benefit of
+    // non-perf-sensitive, so that we can nullify the retrieved cached routes, if certain condition meets.
+    if (routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.optimisticCachedRoutes) {
+        return false;
+    }
+    const containsExcludedProtocolPools = cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.routes.find((route) => {
+        switch (route.protocol) {
+            case router_sdk_1.Protocol.MIXED:
+                return (route.route.pools.filter((pool) => {
+                    return poolIsInExcludedProtocols(pool, routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.excludedProtocolsFromMixed);
+                }).length > 0);
+            default:
+                return false;
+        }
+    });
+    return containsExcludedProtocolPools !== undefined;
+}
+exports.shouldWipeoutCachedRoutes = shouldWipeoutCachedRoutes;
+function poolIsInExcludedProtocols(pool, excludedProtocolsFromMixed) {
+    var _a, _b, _c;
+    if (pool instanceof v4_sdk_1.Pool) {
+        return (_a = excludedProtocolsFromMixed === null || excludedProtocolsFromMixed === void 0 ? void 0 : excludedProtocolsFromMixed.includes(router_sdk_1.Protocol.V4)) !== null && _a !== void 0 ? _a : false;
+    }
+    else if (pool instanceof v3_sdk_1.Pool) {
+        return (_b = excludedProtocolsFromMixed === null || excludedProtocolsFromMixed === void 0 ? void 0 : excludedProtocolsFromMixed.includes(router_sdk_1.Protocol.V3)) !== null && _b !== void 0 ? _b : false;
+    }
+    else if (pool instanceof v2_sdk_1.Pair) {
+        return (_c = excludedProtocolsFromMixed === null || excludedProtocolsFromMixed === void 0 ? void 0 : excludedProtocolsFromMixed.includes(router_sdk_1.Protocol.V2)) !== null && _c !== void 0 ? _c : false;
+    }
+    else {
+        return false;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUE2RDtBQUM3RCxnREFBc0Q7QUFDdEQsNENBQXVDO0FBQ3ZDLDRDQUFpRDtBQUNqRCw0Q0FBaUQ7QUFDakQsb0RBQXVCO0FBUXZCLDJDQUF3RDtBQUd4RCx3QkFBbUM7QUFHNUIsTUFBTSxhQUFhLEdBQUcsQ0FBQyxLQUFzQixFQUFjLEVBQUU7SUFDbEUsUUFBUSxLQUFLLENBQUMsUUFBUSxFQUFFO1FBQ3RCLEtBQUsscUJBQVEsQ0FBQyxFQUFFO1lBQ2QsT0FBTyxLQUFLLENBQUMsWUFBWSxDQUFDO1FBQzVCLEtBQUsscUJBQVEsQ0FBQyxFQUFFO1lBQ2QsT0FBTyxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ3pCLEtBQUsscUJBQVEsQ0FBQyxFQUFFLENBQUM7UUFDakIsS0FBSyxxQkFBUSxDQUFDLEtBQUs7WUFDakIsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBQ3BCO1lBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQkFBcUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDakU7QUFDSCxDQUFDLENBQUM7QUFaVyxRQUFBLGFBQWEsaUJBWXhCO0FBRUssTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFzQixFQUFXLEVBQUU7SUFDOUQsUUFBUSxLQUFLLENBQUMsUUFBUSxFQUFFO1FBQ3RCLEtBQUsscUJBQVEsQ0FBQyxFQUFFLENBQUM7UUFDakIsS0FBSyxxQkFBUSxDQUFDLEVBQUUsQ0FBQztRQUNqQixLQUFLLHFCQUFRLENBQUMsS0FBSztZQUNqQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDckIsS0FBSyxxQkFBUSxDQUFDLEVBQUU7WUFDZCxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDckI7WUFDRSxNQUFNLElBQUksS0FB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-subgraph-provider.d.ts
new file mode 100644
index 0000000..f0da9e3
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-subgraph-provider.d.ts
@@ -0,0 +1,33 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { SubgraphPool } from '../routers/alpha-router/functions/get-candidate-pools';
+import { ICache } from './cache';
+import { ProviderConfig } from './provider';
+import { V3SubgraphPool } from './v3/subgraph-provider';
+declare type ChainTokenList = {
+    readonly [chainId in ChainId]: Token[];
+};
+export declare const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList;
+export interface IV3SubgraphProvider {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
+}
+export interface ISubgraphProvider<TSubgraphPool extends SubgraphPool> {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+}
+export declare abstract class CachingSubgraphProvider<TSubgraphPool extends SubgraphPool> implements ISubgraphProvider<TSubgraphPool> {
+    private chainId;
+    protected subgraphProvider: ISubgraphProvider<TSubgraphPool>;
+    private cache;
+    private protocol;
+    private SUBGRAPH_KEY;
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     * @param protocol Subgraph protocol version
+     */
+    constructor(chainId: ChainId, subgraphProvider: ISubgraphProvider<TSubgraphPool>, cache: ICache<TSubgraphPool[]>, protocol: Protocol);
+    getPools(): Promise<TSubgraphPool[]>;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-subgraph-provider.js
new file mode 100644
index 0000000..48e9500
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-subgraph-provider.js
@@ -0,0 +1,126 @@
+import { ChainId } from '@uniswap/sdk-core';
+import { WRAPPED_NATIVE_CURRENCY } from '../util';
+import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CEUR_CELO, CUSD_CELO, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, ETH_BNB, OP_OPTIMISM, USDB_BLAST, USDCE_ZKSYNC, USDC_ABSTRACT_MAINNET, USDC_ABSTRACT_TESTNET, USDC_ANIME, USDC_ANIME_TESTNET, USDC_ARBITRUM, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_BOB, USDC_CYBER, USDC_INK, USDC_MAINNET, USDC_MODE, USDC_MOONBEAM, USDC_NATIVE_ARBITRUM, USDC_OPTIMISM, USDC_POLYGON, USDC_REDSTONE, USDC_REDSTONE_GARNET, USDC_SHAPE, USDC_ZERO, USDC_ZKSYNC, USDT_ARBITRUM, USDT_BNB, USDT_MAINNET, USDT_OPTIMISM, WBTC_ARBITRUM, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WETH_POLYGON, WMATIC_POLYGON, WSTETH_MAINNET, } from './token-provider';
+export const BASES_TO_CHECK_TRADES_AGAINST = {
+    [ChainId.MAINNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],
+        DAI_MAINNET,
+        USDC_MAINNET,
+        USDT_MAINNET,
+        WBTC_MAINNET,
+        WSTETH_MAINNET,
+    ],
+    [ChainId.GOERLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GOERLI]],
+    [ChainId.SEPOLIA]: [WRAPPED_NATIVE_CURRENCY[ChainId.SEPOLIA]],
+    //v2 not deployed on [arbitrum, polygon, celo, gnosis, moonbeam, bnb, avalanche] and their testnets
+    [ChainId.OPTIMISM]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISM],
+        USDC_OPTIMISM,
+        DAI_OPTIMISM,
+        USDT_OPTIMISM,
+        WBTC_OPTIMISM,
+        OP_OPTIMISM,
+    ],
+    [ChainId.ARBITRUM_ONE]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_ONE],
+        WBTC_ARBITRUM,
+        DAI_ARBITRUM,
+        USDC_ARBITRUM,
+        USDC_NATIVE_ARBITRUM,
+        USDT_ARBITRUM,
+        ARB_ARBITRUM,
+    ],
+    [ChainId.ARBITRUM_GOERLI]: [],
+    [ChainId.ARBITRUM_SEPOLIA]: [],
+    [ChainId.OPTIMISM_GOERLI]: [],
+    [ChainId.OPTIMISM_SEPOLIA]: [],
+    [ChainId.POLYGON]: [USDC_POLYGON, WETH_POLYGON, WMATIC_POLYGON],
+    [ChainId.POLYGON_MUMBAI]: [],
+    [ChainId.CELO]: [CELO, CUSD_CELO, CEUR_CELO, DAI_CELO],
+    [ChainId.CELO_ALFAJORES]: [],
+    [ChainId.GNOSIS]: [],
+    [ChainId.MOONBEAM]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.MOONBEAM],
+        DAI_MOONBEAM,
+        USDC_MOONBEAM,
+        WBTC_MOONBEAM,
+    ],
+    [ChainId.BNB]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.BNB],
+        BUSD_BNB,
+        DAI_BNB,
+        USDC_BNB,
+        USDT_BNB,
+        BTC_BNB,
+        ETH_BNB,
+    ],
+    [ChainId.AVALANCHE]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.AVALANCHE],
+        USDC_AVAX,
+        DAI_AVAX,
+    ],
+    [ChainId.BASE_GOERLI]: [],
+    [ChainId.BASE]: [WRAPPED_NATIVE_CURRENCY[ChainId.BASE], USDC_BASE],
+    [ChainId.ZORA]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZORA]],
+    [ChainId.ZORA_SEPOLIA]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZORA_SEPOLIA]],
+    [ChainId.ROOTSTOCK]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROOTSTOCK]],
+    [ChainId.BLAST]: [WRAPPED_NATIVE_CURRENCY[ChainId.BLAST], USDB_BLAST],
+    [ChainId.ZKSYNC]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC],
+        USDCE_ZKSYNC,
+        USDC_ZKSYNC,
+    ],
+    [ChainId.ABSTRACT_TESTNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_TESTNET],
+        USDC_ABSTRACT_TESTNET,
+    ],
+    [ChainId.ZERO]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZERO], USDC_ZERO],
+    [ChainId.BOB]: [WRAPPED_NATIVE_CURRENCY[ChainId.BOB], USDC_BOB],
+    [ChainId.CYBER]: [WRAPPED_NATIVE_CURRENCY[ChainId.CYBER], USDC_CYBER],
+    [ChainId.SHAPE]: [WRAPPED_NATIVE_CURRENCY[ChainId.SHAPE], USDC_SHAPE],
+    [ChainId.INK]: [WRAPPED_NATIVE_CURRENCY[ChainId.INK], USDC_INK],
+    [ChainId.REDSTONE]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE],
+        USDC_REDSTONE,
+    ],
+    [ChainId.REDSTONE_GARNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE_GARNET],
+        USDC_REDSTONE_GARNET,
+    ],
+    [ChainId.ABSTRACT_MAINNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_MAINNET],
+        USDC_ABSTRACT_MAINNET,
+    ],
+    [ChainId.ANIME_TESTNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ANIME_TESTNET],
+        USDC_ANIME_TESTNET,
+    ],
+    [ChainId.ANIME]: [WRAPPED_NATIVE_CURRENCY[ChainId.ANIME], USDC_ANIME],
+    [ChainId.MODE]: [WRAPPED_NATIVE_CURRENCY[ChainId.MODE], USDC_MODE],
+};
+export class CachingSubgraphProvider {
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     * @param protocol Subgraph protocol version
+     */
+    constructor(chainId, subgraphProvider, cache, protocol) {
+        this.chainId = chainId;
+        this.subgraphProvider = subgraphProvider;
+        this.cache = cache;
+        this.protocol = protocol;
+        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-${this.protocol}-${chainId}`;
+    }
+    async getPools() {
+        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
+        if (cachedPools) {
+            return cachedPools;
+        }
+        const pools = await this.subgraphProvider.getPools();
+        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
+        return pools;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFHbkQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBSWxELE9BQU8sRUFDTCxZQUFZLEVBQ1osT0FBTyxFQUNQLFFBQVEsRUFDUixJQUFJLEVBQ0osU0FBUyxFQUNULFNBQVMsRUFDVCxZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxRQUFRLEVBQ1IsV0FBVyxFQUNYLFlBQVksRUFDWixZQUFZLEVBQ1osT0FBTyxFQUNQLFdBQVcsRUFDWCxVQUFVLEVBQ1YsWUFBWSxFQUNaLHFCQUFxQixFQUNyQixxQkFBcUIsRUFDckIsVUFBVSxFQUNWLGtCQUFrQixFQUNsQixhQUFhLEVBQ2IsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1IsUUFBUSxFQUNSLFVBQVUsRUFDVixRQUFRLEVBQ1IsWUFBWSxFQUNaLFNBQVMsRUFDVCxhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixZQUFZLEVBQ1osYUFBYSxFQUNiLG9CQUFvQixFQUNwQixVQUFVLEVBQ1YsU0FBUyxFQUNULFdBQVcsRUFDWCxhQUFhLEVBQ2IsUUFBUSxFQUNSLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxFQUNiLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxFQUNiLFlBQVksRUFDWixjQUFjLEVBQ2QsY0FBYyxHQUNmLE1BQU0sa0JBQWtCLENBQUM7QUFPMUIsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQW1CO0lBQzNELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUU7UUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-provider.js
index 4af90df..99d119e 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-provider.js
@@ -107,6 +107,42 @@ export const CACHE_SEED_TOKENS = {
     [ChainId.ZKSYNC]: {
         WETH: WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC],
     },
+    [ChainId.ABSTRACT_TESTNET]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_TESTNET],
+    },
+    [ChainId.ZERO]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.ZERO],
+    },
+    [ChainId.BOB]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.BOB],
+    },
+    [ChainId.CYBER]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.CYBER],
+    },
+    [ChainId.SHAPE]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.SHAPE],
+    },
+    [ChainId.INK]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.INK],
+    },
+    [ChainId.REDSTONE]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE],
+    },
+    [ChainId.REDSTONE_GARNET]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE_GARNET],
+    },
+    [ChainId.ABSTRACT_MAINNET]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_MAINNET],
+    },
+    [ChainId.ANIME_TESTNET]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.ANIME_TESTNET],
+    },
+    [ChainId.ANIME]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.ANIME],
+    },
+    [ChainId.MODE]: {
+        WETH: WRAPPED_NATIVE_CURRENCY[ChainId.MODE],
+    },
     // Currently we do not have providers for Moonbeam mainnet or Gnosis testnet
 };
 /**
@@ -197,4 +233,4 @@ export class CachingTokenProviderWithFallback {
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts
index 3747ebc..7d66d71 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts
@@ -1,7 +1,7 @@
 import { Protocol } from '@uniswap/router-sdk';
 import { Token } from '@uniswap/sdk-core';
-import { MixedRoute, V2Route, V3Route } from '../../../../routers';
-interface CachedRouteParams<Route extends V3Route | V2Route | MixedRoute> {
+import { SupportedRoutes } from '../../../../routers';
+interface CachedRouteParams<Route extends SupportedRoutes> {
     route: Route;
     percent: number;
 }
@@ -11,7 +11,7 @@ interface CachedRouteParams<Route extends V3Route | V2Route | MixedRoute> {
  * @export
  * @class CachedRoute
  */
-export declare class CachedRoute<Route extends V3Route | V2Route | MixedRoute> {
+export declare class CachedRoute<Route extends SupportedRoutes> {
     readonly route: Route;
     readonly percent: number;
     private hashCode;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js
index 885496e..11e984e 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js
@@ -1,5 +1,7 @@
 import { Protocol } from '@uniswap/router-sdk';
-import { Pool } from '@uniswap/v3-sdk';
+import { Pair } from '@uniswap/v2-sdk';
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
 /**
  * Class defining the route to cache
  *
@@ -21,41 +23,57 @@ export class CachedRoute {
     get protocol() {
         return this.route.protocol;
     }
+    // TODO: ROUTE-217 - Support native currency routing in V4
     get tokenIn() {
-        return this.route.input;
+        return this.route.input.wrapped;
     }
+    // TODO: ROUTE-217 - Support native currency routing in V4
     get tokenOut() {
-        return this.route.output;
+        return this.route.output.wrapped;
     }
     get routePath() {
-        if (this.protocol == Protocol.V3) {
-            const route = this.route;
-            return route.pools
-                .map((pool) => `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`)
-                .join('->');
-        }
-        else if (this.protocol == Protocol.V2) {
-            const route = this.route;
-            return route.pairs
-                .map((pair) => `[V2]${pair.token0.address}/${pair.token1.address}`)
-                .join('->');
-        }
-        else {
-            const route = this.route;
-            return route.pools
-                .map((pool) => {
-                if (pool instanceof Pool) {
-                    return `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`;
-                }
-                else {
-                    return `[V2]${pool.token0.address}/${pool.token1.address}`;
-                }
-            })
-                .join('->');
+        switch (this.protocol) {
+            case Protocol.V4:
+                // TODO: ROUTE-217 - Support native currency routing in V4
+                return this.route.pools
+                    .map((pool) => `[V4]${pool.token0.wrapped.address}/${pool.token1.wrapped.address}`)
+                    .join('->');
+            case Protocol.V3:
+                return this.route.pools
+                    .map((pool) => `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`)
+                    .join('->');
+            case Protocol.V2:
+                return this.route.pairs
+                    .map((pair) => `[V2]${pair.token0.address}/${pair.token1.address}`)
+                    .join('->');
+            case Protocol.MIXED:
+                return this.route.pools
+                    .map((pool) => {
+                    if (pool instanceof V4Pool) {
+                        // TODO: ROUTE-217 - Support native currency routing in V4
+                        return `[V4]${pool.token0.isToken
+                            ? pool.token0.wrapped.address
+                            : pool.token0.symbol}/${pool.token1.isToken
+                            ? pool.token1.wrapped.address
+                            : pool.token1.symbol}`;
+                    }
+                    else if (pool instanceof V3Pool) {
+                        return `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`;
+                    }
+                    else if (pool instanceof Pair) {
+                        return `[V2]${pool.token0.address}/${pool.token1.address}`;
+                    }
+                    else {
+                        throw new Error(`Unsupported pool type ${JSON.stringify(pool)}`);
+                    }
+                })
+                    .join('->');
+            default:
+                throw new Error(`Unsupported protocol ${this.protocol}`);
         }
     }
     get routeId() {
         return this.hashCode(this.routePath);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFL0MsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBU3ZDOzs7OztHQUtHO0FBQ0gsTUFBTSxPQUFPLFdBQVc7SUFRdEI7OztPQUdHO0lBQ0gsWUFBWSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQTRCO1FBVHhELHdFQUF3RTtRQUN4RSxvSUFBb0k7UUFDNUgsYUFBUSxHQUFHLENBQUMsR0FBVyxFQUFFLEVBQUUsQ0FDakMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQU92RSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUMzQixDQUFDO0lBRUQsSUFBVyxTQUFTO1FBQ2xCLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUMsRUFBRSxFQUFFO1lBQ2hDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFnQixDQUFDO1lBQ3BDLE9BQU8sS0FBSyxDQUFDLEtBQUs7aUJBQ2YsR0FBRyxDQUNGLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FDbEU7aUJBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2Y7YUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLEVBQUUsRUFBRTtZQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBZ0IsQ0FBQztZQUNwQyxPQUFPLEtBQUssQ0FBQyxLQUFLO2lCQUNmLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUNsRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDZjthQUFNO1lBQ0wsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQW1CLENBQUM7WUFDdkMsT0FBTyxLQUFLLENBQUMsS0FBSztpQkFDZixHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDWixJQUFJLElBQUksWUFBWSxJQUFJLEVBQUU7b0JBQ3hCLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7aUJBQ3hFO3FCQUFNO29CQUNMLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUM1RDtZQUNILENBQUMsQ0FBQztpQkFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDZjtJQUNILENBQUM7SUFFRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0YifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFL0MsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLElBQUksTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLElBQUksSUFBSSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQWVqRDs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxXQUFXO0lBUXRCOzs7T0FHRztJQUNILFlBQVksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUE0QjtRQVR4RCx3RUFBd0U7UUFDeEUsb0lBQW9JO1FBQzVILGFBQVEsR0FBRyxDQUFDLEdBQVcsRUFBRSxFQUFFLENBQ2pDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFPdkUsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDekIsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFFRCwwREFBMEQ7SUFDMUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQ2xDLENBQUM7SUFFRCwwREFBMEQ7SUFDMUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDbEIsUUFBUSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ3JCLEtBQUssUUFBUSxDQUFDLEVBQUU7Z0JBQ2QsMERBQTBEO2dCQUMxRCxPQUFRLElBQUksQ0FBQyxLQUFpQixDQUFDLEtBQUs7cUJBQ2pDLEdBQUcsQ0FDRixDQUFDLElBQUksRUFBRSxFQUFFLENBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQ3RFO3FCQUNBLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNoQixLQUFLLFFBQVEsQ0FBQyxFQUFFO2dCQUNkLE9BQVEsSUFBSSxDQUFDLEtBQWlCLENBQUMsS0FBSztxQkFDakMsR0FBRyxDQUNGLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FDbEU7cUJBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hCLEtBQUssUUFBUSxDQUFDLEVBQUU7Z0JBQ2QsT0FBUSxJQUFJLENBQUMsS0FBaUIsQ0FBQyxLQUFLO3FCQUNqQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztxQkFDbEUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hCLEtBQUssUUFBUSxDQUFDLEtBQUs7Z0JBQ2pCLE9BQVEsSUFBSSxDQUFDLEtBQW9CLENBQUMsS0FBSztxQkFDcEMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7b0JBQ1osSUFBSSxJQUFJLFlBQVksTUFBTSxFQUFFO3dCQUMxQiwwREFBMEQ7d0JBQzFELE9BQU8sT0FDTCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU87NEJBQ2pCLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPOzRCQUM3QixDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUNsQixJQUNFLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTzs0QkFDakIsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU87NEJBQzdCLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQ2xCLEVBQUUsQ0FBQztxQkFDSjt5QkFBTSxJQUFJLElBQUksWUFBWSxNQUFNLEVBQUU7d0JBQ2pDLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7cUJBQ3hFO3lCQUFNLElBQUksSUFBSSxZQUFZLElBQUksRUFBRTt3QkFDL0IsT0FBTyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7cUJBQzVEO3lCQUFNO3dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3FCQUNsRTtnQkFDSCxDQUFDLENBQUM7cUJBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hCO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsd0JBQXdCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO0lBQ0gsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts
index 88ad569..32acb4e 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts
@@ -1,12 +1,12 @@
 import { Protocol } from '@uniswap/router-sdk';
-import { ChainId, Token, TradeType } from '@uniswap/sdk-core';
-import { MixedRoute, RouteWithValidQuote, V2Route, V3Route } from '../../../../routers';
+import { ChainId, Currency, TradeType } from '@uniswap/sdk-core';
+import { RouteWithValidQuote, SupportedRoutes } from '../../../../routers';
 import { CachedRoute } from './cached-route';
 interface CachedRoutesParams {
-    routes: CachedRoute<V3Route | V2Route | MixedRoute>[];
+    routes: CachedRoute<SupportedRoutes>[];
     chainId: ChainId;
-    tokenIn: Token;
-    tokenOut: Token;
+    currencyIn: Currency;
+    currencyOut: Currency;
     protocolsCovered: Protocol[];
     blockNumber: number;
     tradeType: TradeType;
@@ -20,10 +20,10 @@ interface CachedRoutesParams {
  * @class CachedRoute
  */
 export declare class CachedRoutes {
-    readonly routes: CachedRoute<V3Route | V2Route | MixedRoute>[];
+    readonly routes: CachedRoute<SupportedRoutes>[];
     readonly chainId: ChainId;
-    readonly tokenIn: Token;
-    readonly tokenOut: Token;
+    readonly currencyIn: Currency;
+    readonly currencyOut: Currency;
     readonly protocolsCovered: Protocol[];
     readonly blockNumber: number;
     readonly tradeType: TradeType;
@@ -32,15 +32,15 @@ export declare class CachedRoutes {
     /**
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      * @param blocksToLive
      */
-    constructor({ routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive, }: CachedRoutesParams);
+    constructor({ routes, chainId, currencyIn, currencyOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive, }: CachedRoutesParams);
     /**
      * Factory method that creates a `CachedRoutes` object from an array of RouteWithValidQuote.
      *
@@ -48,14 +48,14 @@ export declare class CachedRoutes {
      * @static
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      */
-    static fromRoutesWithValidQuotes(routes: RouteWithValidQuote[], chainId: ChainId, tokenIn: Token, tokenOut: Token, protocolsCovered: Protocol[], blockNumber: number, tradeType: TradeType, originalAmount: string): CachedRoutes | undefined;
+    static fromRoutesWithValidQuotes(routes: RouteWithValidQuote[], chainId: ChainId, currencyIn: Currency, currencyOut: Currency, protocolsCovered: Protocol[], blockNumber: number, tradeType: TradeType, originalAmount: string): CachedRoutes | undefined;
     /**
      * Function to determine if, given a block number, the CachedRoute is expired or not.
      *
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js
index 81c3f69..0f01ddb 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js
@@ -10,19 +10,19 @@ export class CachedRoutes {
     /**
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      * @param blocksToLive
      */
-    constructor({ routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive = 0, }) {
+    constructor({ routes, chainId, currencyIn, currencyOut, protocolsCovered, blockNumber, tradeType, originalAmount, blocksToLive = 0, }) {
         this.routes = routes;
         this.chainId = chainId;
-        this.tokenIn = tokenIn;
-        this.tokenOut = tokenOut;
+        this.currencyIn = currencyIn;
+        this.currencyOut = currencyOut;
         this.protocolsCovered = protocolsCovered;
         this.blockNumber = blockNumber;
         this.tradeType = tradeType;
@@ -36,22 +36,22 @@ export class CachedRoutes {
      * @static
      * @param routes
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
+     * @param currencyIn
+     * @param currencyOut
      * @param protocolsCovered
      * @param blockNumber
      * @param tradeType
      * @param originalAmount
      */
-    static fromRoutesWithValidQuotes(routes, chainId, tokenIn, tokenOut, protocolsCovered, blockNumber, tradeType, originalAmount) {
+    static fromRoutesWithValidQuotes(routes, chainId, currencyIn, currencyOut, protocolsCovered, blockNumber, tradeType, originalAmount) {
         if (routes.length == 0)
             return undefined;
         const cachedRoutes = _.map(routes, (route) => new CachedRoute({ route: route.route, percent: route.percent }));
         return new CachedRoutes({
             routes: cachedRoutes,
             chainId,
-            tokenIn,
-            tokenOut,
+            currencyIn,
+            currencyOut,
             protocolsCovered,
             blockNumber,
             tradeType,
@@ -71,4 +71,4 @@ export class CachedRoutes {
         return blocksDifference <= blocksToLive;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQVN2QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQVl2Qjs7Ozs7Ozs7OztPQVVHO0lBQ0gsWUFBWSxFQUNWLE1BQU0sRUFDTixPQUFPLEVBQ1AsT0FBTyxFQUNQLFFBQVEsRUFDUixnQkFBZ0IsRUFDaEIsV0FBVyxFQUNYLFNBQVMsRUFDVCxjQUFjLEVBQ2QsWUFBWSxHQUFHLENBQUMsR0FDRztRQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDbkMsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSSxNQUFNLENBQUMseUJBQXlCLENBQ3JDLE1BQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQTRCLEVBQzVCLFdBQW1CLEVBQ25CLFNBQW9CLEVBQ3BCLGNBQXNCO1FBRXRCLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFFekMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FDeEIsTUFBTSxFQUNOLENBQUMsS0FBMEIsRUFBRSxFQUFFLENBQzdCLElBQUksV0FBVyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUNsRSxDQUFDO1FBRUYsT0FBTyxJQUFJLFlBQVksQ0FBQztZQUN0QixNQUFNLEVBQUUsWUFBWTtZQUNwQixPQUFPO1lBQ1AsT0FBTztZQUNQLFFBQVE7WUFDUixnQkFBZ0I7WUFDaEIsV0FBVztZQUNYLFNBQVM7WUFDVCxjQUFjO1NBQ2YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksVUFBVSxDQUFDLGtCQUEwQixFQUFFLFVBQVUsR0FBRyxLQUFLO1FBQzlELDJFQUEyRTtRQUMzRSxNQUFNLFlBQVksR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4RCxNQUFNLGdCQUFnQixHQUFHLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFFL0QsT0FBTyxnQkFBZ0IsSUFBSSxZQUFZLENBQUM7SUFDMUMsQ0FBQztDQUNGIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUl2QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQVl2Qjs7Ozs7Ozs7OztPQVVHO0lBQ0gsWUFBWSxFQUNWLE1BQU0sRUFDTixPQUFPLEVBQ1AsVUFBVSxFQUNWLFdBQVcsRUFDWCxnQkFBZ0IsRUFDaEIsV0FBVyxFQUNYLFNBQVMsRUFDVCxjQUFjLEVBQ2QsWUFBWSxHQUFHLENBQUMsR0FDRztRQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUMvQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDbkMsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSSxNQUFNLENBQUMseUJBQXlCLENBQ3JDLE1BQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLFVBQW9CLEVBQ3BCLFdBQXFCLEVBQ3JCLGdCQUE0QixFQUM1QixXQUFtQixFQUNuQixTQUFvQixFQUNwQixjQUFzQjtRQUV0QixJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBRXpDLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQ3hCLE1BQU0sRUFDTixDQUFDLEtBQTBCLEVBQUUsRUFBRSxDQUM3QixJQUFJLFdBQVcsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FDbEUsQ0FBQztRQUVGLE9BQU8sSUFBSSxZQUFZLENBQUM7WUFDdEIsTUFBTSxFQUFFLFlBQVk7WUFDcEIsT0FBTztZQUNQLFVBQVU7WUFDVixXQUFXO1lBQ1gsZ0JBQWdCO1lBQ2hCLFdBQVc7WUFDWCxTQUFTO1lBQ1QsY0FBYztTQUNmLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLFVBQVUsQ0FBQyxrQkFBMEIsRUFBRSxVQUFVLEdBQUcsS0FBSztRQUM5RCwyRUFBMkU7UUFDM0UsTUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEQsTUFBTSxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBRS9ELE9BQU8sZ0JBQWdCLElBQUksWUFBWSxDQUFDO0lBQzFDLENBQUM7Q0FDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts
index 8321a2d..2f1087c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts
@@ -1,11 +1,11 @@
 /**
- * Provider for getting token data from a Token List.
+ * Provider for getting currency data from a currency List.
  *
  * @export
  * @interface IRouteCachingProvider
  */
 import { Protocol } from '@uniswap/router-sdk';
-import { ChainId, Currency, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core';
+import { ChainId, Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core';
 import { CacheMode } from './model';
 import { CachedRoutes } from './model/cached-routes';
 /**
@@ -20,12 +20,12 @@ export declare abstract class IRouteCachingProvider {
      * @readonly
      * @param chainId
      * @param amount
-     * @param quoteToken
+     * @param quoteCurrency
      * @param tradeType
      * @param protocols
      * @param blockNumber
      */
-    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], blockNumber: number, optimistic?: boolean) => Promise<CachedRoutes | undefined>;
+    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteCurrency: Currency, tradeType: TradeType, protocols: Protocol[], blockNumber: number, optimistic?: boolean) => Promise<CachedRoutes | undefined>;
     /**
      * Final implementation of the public `setCachedRoute` method.
      * This method will set the blockToLive in the CachedRoutes object before calling the internal method to insert in cache.
@@ -44,17 +44,15 @@ export declare abstract class IRouteCachingProvider {
      */
     getCacheModeFromCachedRoutes(cachedRoutes: CachedRoutes, amount: CurrencyAmount<Currency>): Promise<CacheMode>;
     /**
-     * Returns the CacheMode for the given combination of chainId, tokenIn, tokenOut and tradetype
+     * Returns the CacheMode for the given combination of chainId, currencyIn, currencyOut and tradetype
      *
      * @public
      * @abstract
      * @param chainId
-     * @param tokenIn
-     * @param tokenOut
-     * @param tradeType
      * @param amount
+     * @param tradeType
      */
-    abstract getCacheMode(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[]): Promise<CacheMode>;
+    abstract getCacheMode(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteCurrency: Currency, tradeType: TradeType, protocols: Protocol[]): Promise<CacheMode>;
     protected filterExpiredCachedRoutes(cachedRoutes: CachedRoutes | undefined, blockNumber: number, optimistic: boolean): CachedRoutes | undefined;
     /**
      * Internal function to fetch the CachedRoute from the cache.
@@ -62,12 +60,12 @@ export declare abstract class IRouteCachingProvider {
      *
      * @param chainId
      * @param amount
-     * @param quoteToken
+     * @param quoteCurrency
      * @param tradeType
      * @param protocols
      * @protected
      */
-    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], currentBlockNumber: number, optimistic: boolean): Promise<CachedRoutes | undefined>;
+    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteCurrency: Currency, tradeType: TradeType, protocols: Protocol[], currentBlockNumber: number, optimistic: boolean): Promise<CachedRoutes | undefined>;
     /**
      * Internal function to insert the CachedRoute into cache.
      * Must be implemented.
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js
index 0176425..e600c29 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js
@@ -13,18 +13,18 @@ export class IRouteCachingProvider {
          * @readonly
          * @param chainId
          * @param amount
-         * @param quoteToken
+         * @param quoteCurrency
          * @param tradeType
          * @param protocols
          * @param blockNumber
          */
         this.getCachedRoute = async (
         // Defined as a readonly member instead of a regular function to make it final.
-        chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic = false) => {
-            if ((await this.getCacheMode(chainId, amount, quoteToken, tradeType, protocols)) == CacheMode.Darkmode) {
+        chainId, amount, quoteCurrency, tradeType, protocols, blockNumber, optimistic = false) => {
+            if ((await this.getCacheMode(chainId, amount, quoteCurrency, tradeType, protocols)) == CacheMode.Darkmode) {
                 return undefined;
             }
-            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic);
+            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteCurrency, tradeType, protocols, blockNumber, optimistic);
             return this.filterExpiredCachedRoutes(cachedRoute, blockNumber, optimistic);
         };
         /**
@@ -54,10 +54,10 @@ export class IRouteCachingProvider {
      * @param amount
      */
     getCacheModeFromCachedRoutes(cachedRoutes, amount) {
-        const quoteToken = cachedRoutes.tradeType == TradeType.EXACT_INPUT
-            ? cachedRoutes.tokenOut
-            : cachedRoutes.tokenIn;
-        return this.getCacheMode(cachedRoutes.chainId, amount, quoteToken, cachedRoutes.tradeType, cachedRoutes.protocolsCovered);
+        const quoteCurrency = cachedRoutes.tradeType == TradeType.EXACT_INPUT
+            ? cachedRoutes.currencyOut
+            : cachedRoutes.currencyIn;
+        return this.getCacheMode(cachedRoutes.chainId, amount, quoteCurrency, cachedRoutes.tradeType, cachedRoutes.protocolsCovered);
     }
     filterExpiredCachedRoutes(cachedRoutes, blockNumber, optimistic) {
         return (cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.notExpired(blockNumber, optimistic))
@@ -65,4 +65,4 @@ export class IRouteCachingProvider {
             : undefined;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE9BQU8sRUFLTCxTQUFTLEdBQ1YsTUFBTSxtQkFBbUIsQ0FBQztBQUUzQixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBR3BDOzs7R0FHRztBQUNILE1BQU0sT0FBZ0IscUJBQXFCO0lBQTNDO1FBQ0U7Ozs7Ozs7Ozs7O1dBV0c7UUFDYSxtQkFBYyxHQUFHLEtBQUs7UUFDcEMsK0VBQStFO1FBQy9FLE9BQWUsRUFDZixNQUFnQyxFQUNoQyxVQUFpQixFQUNqQixTQUFvQixFQUNwQixTQUFxQixFQUNyQixXQUFtQixFQUNuQixVQUFVLEdBQUcsS0FBSyxFQUNpQixFQUFFO1lBQ3JDLElBQ0UsQ0FBQyxNQUFNLElBQUksQ0FBQyxZQUFZLENBQ3RCLE9BQU8sRUFDUCxNQUFNLEVBQ04sVUFBVSxFQUNWLFNBQVMsRUFDVCxTQUFTLENBQ1YsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQ3hCO2dCQUNBLE9BQU8sU0FBUyxDQUFDO2FBQ2xCO1lBRUQsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUM1QyxPQUFPLEVBQ1AsTUFBTSxFQUNOLFVBQVUsRUFDVixTQUFTLEVBQ1QsU0FBUyxFQUNULFdBQVcsRUFDWCxVQUFVLENBQ1gsQ0FBQztZQUVGLE9BQU8sSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDOUUsQ0FBQyxDQUFDO1FBRUY7Ozs7Ozs7O1dBUUc7UUFDYSxtQkFBYyxHQUFHLEtBQUs7UUFDcEMsK0VBQStFO1FBQy9FLFlBQTBCLEVBQzFCLE1BQWdDLEVBQ2QsRUFBRTtZQUNwQixJQUNFLENBQUMsTUFBTSxJQUFJLENBQUMsNEJBQTRCLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUMvRCxTQUFTLENBQUMsUUFBUSxFQUNsQjtnQkFDQSxPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsWUFBWSxDQUFDLFlBQVksR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FDckQsWUFBWSxFQUNaLE1BQU0sQ0FDUCxDQUFDO1lBRUYsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUM7SUFzR0osQ0FBQztJQXBHQzs7Ozs7T0FLRztJQUNJLDRCQUE0QixDQUNqQyxZQUEwQixFQUMxQixNQUFnQztRQUVoQyxNQUFNLFVBQVUsR0FDZCxZQUFZLENBQUMsU0FBUyxJQUFJLFNBQVMsQ0FBQyxXQUFXO1lBQzdDLENBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUTtZQUN2QixDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztRQUUzQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQ3RCLFlBQVksQ0FBQyxPQUFPLEVBQ3BCLE1BQU0sRUFDTixVQUFVLEVBQ1YsWUFBWSxDQUFDLFNBQVMsRUFDdEIsWUFBWSxDQUFDLGdCQUFnQixDQUM5QixDQUFDO0lBQ0osQ0FBQztJQXFCUyx5QkFBeUIsQ0FDakMsWUFBc0MsRUFDdEMsV0FBbUIsRUFDbkIsVUFBbUI7UUFFbkIsT0FBTyxDQUFBLFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FBRSxVQUFVLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQztZQUN0RCxDQUFDLENBQUMsWUFBWTtZQUNkLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDaEIsQ0FBQztDQWlERiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE9BQU8sRUFJTCxTQUFTLEdBQ1YsTUFBTSxtQkFBbUIsQ0FBQztBQUUzQixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBR3BDOzs7R0FHRztBQUNILE1BQU0sT0FBZ0IscUJBQXFCO0lBQTNDO1FBQ0U7Ozs7Ozs7Ozs7O1dBV0c7UUFDYSxtQkFBYyxHQUFHLEtBQUs7UUFDcEMsK0VBQStFO1FBQy9FLE9BQWUsRUFDZixNQUFnQyxFQUNoQyxhQUF1QixFQUN2QixTQUFvQixFQUNwQixTQUFxQixFQUNyQixXQUFtQixFQUNuQixVQUFVLEdBQUcsS0FBSyxFQUNpQixFQUFFO1lBQ3JDLElBQ0UsQ0FBQyxNQUFNLElBQUksQ0FBQyxZQUFZLENBQ3RCLE9BQU8sRUFDUCxNQUFNLEVBQ04sYUFBYSxFQUNiLFNBQVMsRUFDVCxTQUFTLENBQ1YsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQ3hCO2dCQUNBLE9BQU8sU0FBUyxDQUFDO2FBQ2xCO1lBRUQsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUM1QyxPQUFPLEVBQ1AsTUFBTSxFQUNOLGFBQWEsRUFDYixTQUFTLEVBQ1QsU0FBUyxFQUNULFdBQVcsRUFDWCxVQUFVLENBQ1gsQ0FBQztZQUVGLE9BQU8sSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDOUUsQ0FBQyxDQUFDO1FBRUY7Ozs7Ozs7O1dBUUc7UUFDYSxtQkFBYyxHQUFHLEtBQUs7UUFDcEMsK0VBQStFO1FBQy9FLFlBQTBCLEVBQzFCLE1BQWdDLEVBQ2QsRUFBRTtZQUNwQixJQUNFLENBQUMsTUFBTSxJQUFJLENBQUMsNEJBQTRCLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUMvRCxTQUFTLENBQUMsUUFBUSxFQUNsQjtnQkFDQSxPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsWUFBWSxDQUFDLFlBQVksR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FDckQsWUFBWSxFQUNaLE1BQU0sQ0FDUCxDQUFDO1lBRUYsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUM7SUFvR0osQ0FBQztJQWxHQzs7Ozs7T0FLRztJQUNJLDRCQUE0QixDQUNqQyxZQUEwQixFQUMxQixNQUFnQztRQUVoQyxNQUFNLGFBQWEsR0FDakIsWUFBWSxDQUFDLFNBQVMsSUFBSSxTQUFTLENBQUMsV0FBVztZQUM3QyxDQUFDLENBQUMsWUFBWSxDQUFDLFdBQVc7WUFDMUIsQ0FBQyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUM7UUFFOUIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUN0QixZQUFZLENBQUMsT0FBTyxFQUNwQixNQUFNLEVBQ04sYUFBYSxFQUNiLFlBQVksQ0FBQyxTQUFTLEVBQ3RCLFlBQVksQ0FBQyxnQkFBZ0IsQ0FDOUIsQ0FBQztJQUNKLENBQUM7SUFtQlMseUJBQXlCLENBQ2pDLFlBQXNDLEVBQ3RDLFdBQW1CLEVBQ25CLFVBQW1CO1FBRW5CLE9BQU8sQ0FBQSxZQUFZLGFBQVosWUFBWSx1QkFBWixZQUFZLENBQUUsVUFBVSxDQUFDLFdBQVcsRUFBRSxVQUFVLENBQUM7WUFDdEQsQ0FBQyxDQUFDLFlBQVk7WUFDZCxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQ2hCLENBQUM7Q0FpREYifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.d.ts
index 0ba6372..e2adb6a 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.d.ts
@@ -6,11 +6,13 @@ import { ProviderConfig } from './provider';
 import { Simulator } from './simulation-provider';
 import { IV2PoolProvider } from './v2/pool-provider';
 import { IV3PoolProvider } from './v3/pool-provider';
+import { IV4PoolProvider } from './v4/pool-provider';
 export declare class EthEstimateGasSimulator extends Simulator {
     v2PoolProvider: IV2PoolProvider;
     v3PoolProvider: IV3PoolProvider;
+    v4PoolProvider: IV4PoolProvider;
     private overrideEstimateMultiplier;
-    constructor(chainId: ChainId, provider: JsonRpcProvider, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
+    constructor(chainId: ChainId, provider: JsonRpcProvider, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, v4PoolProvider: IV4PoolProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
         [chainId in ChainId]?: number;
     });
     ethEstimateGas(fromAddress: string, swapOptions: SwapOptions, route: SwapRoute, providerConfig?: ProviderConfig): Promise<SwapRoute>;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.js
index 2252961..cf00c88 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/eth-estimate-gas-provider.js
@@ -7,10 +7,11 @@ import { SimulationStatus, Simulator } from './simulation-provider';
 // We multiply eth estimate gas by this to add a buffer for gas limits
 const DEFAULT_ESTIMATE_MULTIPLIER = 1.2;
 export class EthEstimateGasSimulator extends Simulator {
-    constructor(chainId, provider, v2PoolProvider, v3PoolProvider, portionProvider, overrideEstimateMultiplier) {
+    constructor(chainId, provider, v2PoolProvider, v3PoolProvider, v4PoolProvider, portionProvider, overrideEstimateMultiplier) {
         super(provider, portionProvider, chainId);
         this.v2PoolProvider = v2PoolProvider;
         this.v3PoolProvider = v3PoolProvider;
+        this.v4PoolProvider = v4PoolProvider;
         this.overrideEstimateMultiplier = overrideEstimateMultiplier !== null && overrideEstimateMultiplier !== void 0 ? overrideEstimateMultiplier : {};
     }
     async ethEstimateGas(fromAddress, swapOptions, route, providerConfig) {
@@ -67,7 +68,7 @@ export class EthEstimateGasSimulator extends Simulator {
         }, 'Simulated using eth_estimateGas on SwapRouter02');
         const { estimatedGasUsedUSD, estimatedGasUsedQuoteToken, estimatedGasUsedGasToken, quoteGasAdjusted, } = await calculateGasUsed(route.quote.currency.chainId, route, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, this.provider, providerConfig);
         return {
-            ...initSwapRouteFromExisting(route, this.v2PoolProvider, this.v3PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken),
+            ...initSwapRouteFromExisting(route, this.v2PoolProvider, this.v3PoolProvider, this.v4PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken, providerConfig),
             simulationStatus: SimulationStatus.Succeeded,
         };
     }
@@ -94,4 +95,4 @@ export class EthEstimateGasSimulator extends Simulator {
         }
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFckQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRTVDLE9BQU8sRUFJTCxRQUFRLEdBQ1QsTUFBTSxZQUFZLENBQUM7QUFDcEIsT0FBTyxFQUFFLDRCQUE0QixFQUFFLEdBQUcsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUM1RCxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLHlCQUF5QixHQUMxQixNQUFNLDZCQUE2QixDQUFDO0FBSXJDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUlwRSxzRUFBc0U7QUFDdEUsTUFBTSwyQkFBMkIsR0FBRyxHQUFHLENBQUM7QUFFeEMsTUFBTSxPQUFPLHVCQUF3QixTQUFRLFNBQVM7SUFLcEQsWUFDRSxPQUFnQixFQUNoQixRQUF5QixFQUN6QixjQUErQixFQUMvQixjQUErQixFQUMvQixlQUFpQyxFQUNqQywwQkFBOEQ7UUFFOUQsS0FBSyxDQUFDLFFBQVEsRUFBRSxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLDBCQUEwQixHQUFHLDBCQUEwQixhQUExQiwwQkFBMEIsY0FBMUIsMEJBQTBCLEdBQUksRUFBRSxDQUFDO0lBQ3JFLENBQUM7SUFFRCxLQUFLLENBQUMsY0FBYyxDQUNsQixXQUFtQixFQUNuQixXQUF3QixFQUN4QixLQUFnQixFQUNoQixjQUErQjtRQUUvQixNQUFNLFVBQVUs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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvZXRoLWVzdGltYXRlLWdhcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFckQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRTVDLE9BQU8sRUFJTCxRQUFRLEdBQ1QsTUFBTSxZQUFZLENBQUM7QUFDcEIsT0FBTyxFQUFFLDRCQUE0QixFQUFFLEdBQUcsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUM1RCxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLHlCQUF5QixHQUMxQixNQUFNLDZCQUE2QixDQUFDO0FBSXJDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUtwRSxzRUFBc0U7QUFDdEUsTUFBTSwyQkFBMkIsR0FBRyxHQUFHLENBQUM7QUFFeEMsTUFBTSxPQUFPLHVCQUF3QixTQUFRLFNBQVM7SUFNcEQsWUFDRSxPQUFnQixFQUNoQixRQUF5QixFQUN6QixjQUErQixFQUMvQixjQUErQixFQUMvQixjQUErQixFQUMvQixlQUFpQyxFQUNqQywwQkFBOEQ7UUFFOUQsS0FBSyxDQUFDLFFBQVEsRUFBRSxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLDBCQUEwQixHQUFHLDBCQUEwQixhQUExQiwwQkFBMEIsY0FBMUIsMEJBQTBCLEdBQUksRUFBRSxDQUFDO0lBQ3JFLENBQUM7SUFFRCxLQUFLLENBQUMsY0FBYyxDQUNsQixXQUFtQixFQUNu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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts
index 7973a3e..8f1e24b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts
@@ -13,6 +13,7 @@ export * from './multicall-provider';
 export * from './multicall-uniswap-provider';
 export * from './on-chain-gas-price-provider';
 export * from './on-chain-quote-provider';
+export * from './pool-provider';
 export * from './simulation-provider';
 export * from './static-gas-price-provider';
 export * from './swap-router-provider';
@@ -36,3 +37,10 @@ export * from './v3/static-subgraph-provider';
 export * from './v3/subgraph-provider';
 export * from './v3/subgraph-provider-with-fallback';
 export * from './v3/uri-subgraph-provider';
+export * from './v4/caching-pool-provider';
+export * from './v4/caching-subgraph-provider';
+export * from './v4/pool-provider';
+export * from './v4/static-subgraph-provider';
+export * from './v4/subgraph-provider';
+export * from './v4/subgraph-provider-with-fallback';
+export * from './v4/uri-subgraph-provider';
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/index.js b/node_modules/@uniswap/smart-order-router/build/module/providers/index.js
index ba68f74..10b8847 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/index.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/index.js
@@ -13,6 +13,7 @@ export * from './multicall-provider';
 export * from './multicall-uniswap-provider';
 export * from './on-chain-gas-price-provider';
 export * from './on-chain-quote-provider';
+export * from './pool-provider';
 export * from './simulation-provider';
 export * from './static-gas-price-provider';
 export * from './swap-router-provider';
@@ -36,4 +37,11 @@ export * from './v3/static-subgraph-provider';
 export * from './v3/subgraph-provider';
 export * from './v3/subgraph-provider-with-fallback';
 export * from './v3/uri-subgraph-provider';
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDBCQUEwQixDQUFDO0FBQ3pDLGNBQWMsaUJBQWlCLENBQUM7QUFDaEMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsMkNBQTJDLENBQUM7QUFDMUQsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsMkJBQTJCLENBQUM7QUFDMUMsY0FBYyx1QkFBdUIsQ0FBQztBQUN0QyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLHlCQUF5QixDQUFDO0FBQ3hDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsc0NBQXNDLENBQUM7QUFDckQsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLDRCQUE0QixDQUFDIn0=
\ No newline at end of file
+export * from './v4/caching-pool-provider';
+export * from './v4/caching-subgraph-provider';
+export * from './v4/pool-provider';
+export * from './v4/static-subgraph-provider';
+export * from './v4/subgraph-provider';
+export * from './v4/subgraph-provider-with-fallback';
+export * from './v4/uri-subgraph-provider';
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDBCQUEwQixDQUFDO0FBQ3pDLGNBQWMsaUJBQWlCLENBQUM7QUFDaEMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsMkNBQTJDLENBQUM7QUFDMUQsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsMkJBQTJCLENBQUM7QUFDMUMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLGdDQUFnQyxDQUFDO0FBQy9DLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMseUJBQXlCLENBQUM7QUFDeEMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLGdDQUFnQyxDQUFDO0FBQy9DLGNBQWMsb0JBQW9CLENBQUM7QUFDbkMsY0FBYyxxQkFBcUIsQ0FBQztBQUNwQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLHNDQUFzQyxDQUFDO0FBQ3JELGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLGdDQUFnQyxDQUFDO0FBQy9DLGNBQWMsb0JBQW9CLENBQUM7QUFDbkMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsc0NBQXNDLENBQUM7QUFDckQsY0FBYyw0QkFBNEIsQ0FBQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-gas-price-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-gas-price-provider.js
index ce83c85..721801c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-gas-price-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-gas-price-provider.js
@@ -1,9 +1,12 @@
 import { ChainId } from '@uniswap/sdk-core';
+import { opStackChains } from '../util/l2FeeChains';
 import { IGasPriceProvider } from './gas-price-provider';
 const DEFAULT_EIP_1559_SUPPORTED_CHAINS = [
     ChainId.MAINNET,
     ChainId.GOERLI,
     ChainId.POLYGON_MUMBAI,
+    ChainId.ARBITRUM_ONE,
+    ...opStackChains,
 ];
 /**
  * Gets gas prices on chain. If the chain supports EIP-1559 and has the feeHistory API,
@@ -27,4 +30,4 @@ export class OnChainGasPriceProvider extends IGasPriceProvider {
         return this.legacyGasPriceProvider.getGasPrice(latestBlockNumber, requestBlockNumber);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tY2hhaW4tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9vbi1jaGFpbi1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRzVDLE9BQU8sRUFBWSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR25FLE1BQU0saUNBQWlDLEdBQUc7SUFDeEMsT0FBTyxDQUFDLE9BQU87SUFDZixPQUFPLENBQUMsTUFBTTtJQUNkLE9BQU8sQ0FBQyxjQUFjO0NBQ3ZCLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsaUJBQWlCO0lBQzVELFlBQ1ksT0FBZ0IsRUFDaEIsdUJBQWdELEVBQ2hELHNCQUE4QyxFQUM5QyxZQUF1QixpQ0FBaUM7UUFFbEUsS0FBSyxFQUFFLENBQUM7UUFMRSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7UUFDaEQsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtRQUM5QyxjQUFTLEdBQVQsU0FBUyxDQUErQztJQUdwRSxDQUFDO0lBRWUsS0FBSyxDQUFDLFdBQVcsQ0FDL0IsaUJBQXlCLEVBQ3pCLGtCQUEyQjtRQUUzQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUN6QyxPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxXQUFXLENBQzdDLGlCQUFpQixFQUNqQixrQkFBa0IsQ0FDbkIsQ0FBQztTQUNIO1FBRUQsT0FBTyxJQUFJLENBQUMsc0JBQXNCLENBQUMsV0FBVyxDQUM1QyxpQkFBaUIsRUFDakIsa0JBQWtCLENBQ25CLENBQUM7SUFDSixDQUFDO0NBQ0YifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tY2hhaW4tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9vbi1jaGFpbi1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRTVDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVwRCxPQUFPLEVBQVksaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUduRSxNQUFNLGlDQUFpQyxHQUFHO0lBQ3hDLE9BQU8sQ0FBQyxPQUFPO0lBQ2YsT0FBTyxDQUFDLE1BQU07SUFDZCxPQUFPLENBQUMsY0FBYztJQUN0QixPQUFPLENBQUMsWUFBWTtJQUNwQixHQUFHLGFBQWE7Q0FDakIsQ0FBQztBQUVGOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxpQkFBaUI7SUFDNUQsWUFDWSxPQUFnQixFQUNoQix1QkFBZ0QsRUFDaEQsc0JBQThDLEVBQzlDLFlBQXVCLGlDQUFpQztRQUVsRSxLQUFLLEVBQUUsQ0FBQztRQUxFLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUF5QjtRQUNoRCwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBQzlDLGNBQVMsR0FBVCxTQUFTLENBQStDO0lBR3BFLENBQUM7SUFFZSxLQUFLLENBQUMsV0FBVyxDQUMvQixpQkFBeUIsRUFDekIsa0JBQTJCO1FBRTNCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3pDLE9BQU8sSUFBSSxDQUFDLHVCQUF1QixDQUFDLFdBQVcsQ0FDN0MsaUJBQWlCLEVBQ2pCLGtCQUFrQixDQUNuQixDQUFDO1NBQ0g7UUFFRCxPQUFPLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLENBQzVDLGlCQUFpQixFQUNqQixrQkFBa0IsQ0FDbkIsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.d.ts
index 6299e86..7dcba35 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.d.ts
@@ -1,12 +1,43 @@
-import { BigNumber } from '@ethersproject/bignumber';
+import { BigNumber, BigNumberish } from '@ethersproject/bignumber';
+import { BytesLike } from '@ethersproject/bytes';
 import { BaseProvider } from '@ethersproject/providers';
+import { Protocol } from '@uniswap/router-sdk';
 import { ChainId } from '@uniswap/sdk-core';
 import { Options as RetryOptions } from 'async-retry';
-import { MixedRoute, V2Route, V3Route } from '../routers/router';
+import { SupportedRoutes, V3Route, V4Route } from '../routers/router';
 import { CurrencyAmount } from '../util/amounts';
 import { Result } from './multicall-provider';
 import { UniswapMulticallProvider } from './multicall-uniswap-provider';
 import { ProviderConfig } from './provider';
+/**
+ * Emulate on-chain [PathKey](https://github.com/Uniswap/v4-periphery/blob/main/src/libraries/PathKey.sol#L8) struct
+ */
+export declare type PathKey = {
+    intermediateCurrency: string;
+    fee: BigNumberish;
+    tickSpacing: BigNumberish;
+    hooks: string;
+    hookData: BytesLike;
+};
+export declare type SupportedPath = string | PathKey[];
+/**
+ * Emulate on-chain [QuoteExactParams](https://github.com/Uniswap/v4-periphery/blob/main/src/interfaces/IQuoter.sol#L34) struct
+ */
+export declare type QuoteExactParams = {
+    exactCurrency: string;
+    path: PathKey[];
+    exactAmount: BigNumberish;
+};
+/**
+ * Emulate on-chain [ExtraQuoteExactInputParams](https://github.com/Uniswap/mixed-quoter/blob/main/src/interfaces/IMixedRouteQuoterV2.sol#L44C12-L44C38) struct
+ */
+declare type NonEncodableData = {
+    hookData: BytesLike;
+};
+export declare type ExtraQuoteExactInputParams = {
+    nonEncodableData: NonEncodableData[];
+};
+export declare type QuoteInputType = QuoteExactParams[] | [string, string] | [string, ExtraQuoteExactInputParams, string];
 /**
  * An on chain quote for a swap.
  */
@@ -64,17 +95,18 @@ export declare type QuoteRetryOptions = RetryOptions;
 /**
  * The V3 route and a list of quotes for that route.
  */
-export declare type RouteWithQuotes<TRoute extends V3Route | V2Route | MixedRoute> = [
+export declare type RouteWithQuotes<TRoute extends SupportedRoutes> = [
     TRoute,
     AmountQuote[]
 ];
 /**
  * Final consolidated return type of all on-chain quotes.
  */
-export declare type OnChainQuotes<TRoute extends V3Route | V2Route | MixedRoute> = {
+export declare type OnChainQuotes<TRoute extends SupportedRoutes> = {
     routesWithQuotes: RouteWithQuotes<TRoute>[];
     blockNumber: BigNumber;
 };
+export declare type SupportedExactOutRoutes = V4Route | V3Route;
 /**
  * Provider for getting on chain quotes using routes containing V3 pools or V2 pools.
  *
@@ -92,7 +124,7 @@ export interface IOnChainQuoteProvider {
      * @returns For each route returns a RouteWithQuotes object that contains all the quotes.
      * @returns The blockNumber used when generating the quotes.
      */
-    getQuotesManyExactIn<TRoute extends V3Route | V2Route | MixedRoute>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactIn<TRoute extends SupportedRoutes>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
     /**
      * For every route, gets ane exactOut quote for every amount provided.
      * @notice This does not support quotes for MixedRoutes (routes with both V3 and V2 pools/pairs) or pure V2 routes
@@ -103,7 +135,7 @@ export interface IOnChainQuoteProvider {
      * @returns For each route returns a RouteWithQuotes object that contains all the quotes.
      * @returns The blockNumber used when generating the quotes.
      */
-    getQuotesManyExactOut<TRoute extends V3Route>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactOut<TRoute extends SupportedExactOutRoutes>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
 }
 /**
  * The parameters for the multicalls we make.
@@ -186,7 +218,7 @@ export declare class OnChainQuoteProvider implements IOnChainQuoteProvider {
     protected gasErrorFailureOverride: FailureOverrides;
     protected successRateFailureOverrides: FailureOverrides;
     protected blockNumberConfig: BlockNumberConfig;
-    protected quoterAddressOverride?: ((useMixedRouteQuoter: boolean) => string | undefined) | undefined;
+    protected quoterAddressOverride?: ((useMixedRouteQuoter: boolean, mixedRouteContainsV4Pool: boolean, protocol: Protocol) => string | undefined) | undefined;
     protected metricsPrefix: (chainId: ChainId, useMixedRouteQuoter: boolean, optimisticCachedRoutes: boolean) => string;
     /**
      * Creates an instance of OnChainQuoteProvider.
@@ -203,10 +235,14 @@ export declare class OnChainQuoteProvider implements IOnChainQuoteProvider {
      * @param [quoterAddressOverride] Overrides the address of the quoter contract to use.
      * @param metricsPrefix metrics prefix to differentiate between different instances of the quote provider.
      */
-    constructor(chainId: ChainId, provider: BaseProvider, multicall2Provider: UniswapMulticallProvider, retryOptions?: QuoteRetryOptions, batchParams?: (optimisticCachedRoutes: boolean, useMixedRouteQuoter: boolean) => BatchParams, gasErrorFailureOverride?: FailureOverrides, successRateFailureOverrides?: FailureOverrides, blockNumberConfig?: BlockNumberConfig, quoterAddressOverride?: ((useMixedRouteQuoter: boolean) => string | undefined) | undefined, metricsPrefix?: (chainId: ChainId, useMixedRouteQuoter: boolean, optimisticCachedRoutes: boolean) => string);
+    constructor(chainId: ChainId, provider: BaseProvider, multicall2Provider: UniswapMulticallProvider, retryOptions?: QuoteRetryOptions, batchParams?: (optimisticCachedRoutes: boolean, useMixedRouteQuoter: boolean) => BatchParams, gasErrorFailureOverride?: FailureOverrides, successRateFailureOverrides?: FailureOverrides, blockNumberConfig?: BlockNumberConfig, quoterAddressOverride?: ((useMixedRouteQuoter: boolean, mixedRouteContainsV4Pool: boolean, protocol: Protocol) => string | undefined) | undefined, metricsPrefix?: (chainId: ChainId, useMixedRouteQuoter: boolean, optimisticCachedRoutes: boolean) => string);
     private getQuoterAddress;
-    getQuotesManyExactIn<TRoute extends V3Route | V2Route | MixedRoute>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
-    getQuotesManyExactOut<TRoute extends V3Route>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactIn<TRoute extends SupportedRoutes>(amountIns: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    getQuotesManyExactOut<TRoute extends SupportedExactOutRoutes>(amountOuts: CurrencyAmount[], routes: TRoute[], providerConfig?: ProviderConfig): Promise<OnChainQuotes<TRoute>>;
+    private encodeRouteToPath;
+    convertV4RouteToPathKey(route: V4Route, exactOut: boolean): PathKey[];
+    private getContractInterface;
+    private consolidateResults;
     private getQuotesManyData;
     private partitionQuotes;
     private processQuoteResults;
@@ -218,5 +254,6 @@ export declare class OnChainQuoteProvider implements IOnChainQuoteProvider {
      * @param functionName
      * @param useMixedRouteQuoter true if there are ANY V2Routes or MixedRoutes in the routes parameter
      */
-    protected validateRoutes(routes: (V3Route | V2Route | MixedRoute)[], functionName: string, useMixedRouteQuoter: boolean): void;
+    protected validateRoutes(routes: SupportedRoutes[], functionName: string, useMixedRouteQuoter: boolean): void;
 }
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
index 339f34d..fb7ad74 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
@@ -2,14 +2,16 @@ import { BigNumber } from '@ethersproject/bignumber';
 import { encodeMixedRouteToPath, MixedRouteSDK, Protocol, } from '@uniswap/router-sdk';
 import { ChainId } from '@uniswap/sdk-core';
 import { encodeRouteToPath } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
 import retry from 'async-retry';
 import _ from 'lodash';
 import stats from 'stats-lite';
-import { V2Route } from '../routers/router';
+import { V2Route, } from '../routers/router';
 import { IMixedRouteQuoterV1__factory } from '../types/other/factories/IMixedRouteQuoterV1__factory';
+import { MixedRouteQuoterV2__factory } from '../types/other/factories/MixedRouteQuoterV2__factory';
+import { V4Quoter__factory } from '../types/other/factories/V4Quoter__factory';
 import { IQuoterV2__factory } from '../types/v3/factories/IQuoterV2__factory';
-import { ID_TO_NETWORK_NAME, metric, MetricLoggerUnit } from '../util';
-import { MIXED_ROUTE_QUOTER_V1_ADDRESSES, NEW_QUOTER_V2_ADDRESSES, } from '../util/addresses';
+import { ID_TO_NETWORK_NAME, metric, MetricLoggerUnit, MIXED_ROUTE_QUOTER_V1_ADDRESSES, MIXED_ROUTE_QUOTER_V2_ADDRESSES, NEW_QUOTER_V2_ADDRESSES, PROTOCOL_V4_QUOTER_ADDRESSES, QUOTER_V2_ADDRESSES, } from '../util';
 import { log } from '../util/log';
 import { DEFAULT_BLOCK_NUMBER_CONFIGS, DEFAULT_SUCCESS_RATE_FAILURE_OVERRIDES, } from '../util/onchainQuoteProviderConfigs';
 import { routeToString } from '../util/routes';
@@ -130,17 +132,22 @@ export class OnChainQuoteProvider {
         this.quoterAddressOverride = quoterAddressOverride;
         this.metricsPrefix = metricsPrefix;
     }
-    getQuoterAddress(useMixedRouteQuoter) {
+    getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol) {
+        var _a;
         if (this.quoterAddressOverride) {
-            const quoterAddress = this.quoterAddressOverride(useMixedRouteQuoter);
+            const quoterAddress = this.quoterAddressOverride(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol);
             if (!quoterAddress) {
                 throw new Error(`No address for the quoter contract on chain id: ${this.chainId}`);
             }
             return quoterAddress;
         }
         const quoterAddress = useMixedRouteQuoter
-            ? MIXED_ROUTE_QUOTER_V1_ADDRESSES[this.chainId]
-            : NEW_QUOTER_V2_ADDRESSES[this.chainId];
+            ? mixedRouteContainsV4Pool
+                ? MIXED_ROUTE_QUOTER_V2_ADDRESSES[this.chainId]
+                : MIXED_ROUTE_QUOTER_V1_ADDRESSES[this.chainId]
+            : protocol === Protocol.V3
+                ? (_a = NEW_QUOTER_V2_ADDRESSES[this.chainId]) !== null && _a !== void 0 ? _a : QUOTER_V2_ADDRESSES[this.chainId]
+                : PROTOCOL_V4_QUOTER_ADDRESSES[this.chainId];
         if (!quoterAddress) {
             throw new Error(`No address for the quoter contract on chain id: ${this.chainId}`);
         }
@@ -152,10 +159,185 @@ export class OnChainQuoteProvider {
     async getQuotesManyExactOut(amountOuts, routes, providerConfig) {
         return this.getQuotesManyData(amountOuts, routes, 'quoteExactOutput', providerConfig);
     }
+    encodeRouteToPath(route, functionName) {
+        switch (route.protocol) {
+            case Protocol.V3:
+                return encodeRouteToPath(route, functionName == 'quoteExactOutput' // For exactOut must be true to ensure the routes are reversed.
+                );
+            case Protocol.V4:
+                return this.convertV4RouteToPathKey(route, functionName == 'quoteExactOutput');
+            // We don't have onchain V2 quoter, but we do have a mixed quoter that can quote against v2 routes onchain
+            // Hence in case of V2 or mixed, we explicitly encode into mixed routes.
+            case Protocol.V2:
+            case Protocol.MIXED:
+                return encodeMixedRouteToPath(route instanceof V2Route
+                    ? new MixedRouteSDK(route.pairs, route.input, route.output)
+                    : route);
+            default:
+                throw new Error(`Unsupported protocol for the route: ${JSON.stringify(route)}`);
+        }
+    }
+    convertV4RouteToPathKey(route, exactOut) {
+        const firstInputToken = route.input.wrapped;
+        const { path } = route.pools.reduce(({ inputToken, path }, pool, index) => {
+            const outputToken = pool.token0.equals(inputToken)
+                ? pool.token1
+                : pool.token0;
+            const pathKey = {
+                intermediateCurrency: exactOut
+                    ? inputToken.wrapped.address
+                    : outputToken.wrapped.address,
+                hookData: '0x',
+                ...pool,
+            };
+            if (index === 0) {
+                return {
+                    inputToken: outputToken,
+                    path: [pathKey],
+                };
+            }
+            else {
+                return {
+                    inputToken: outputToken,
+                    path: [...path, pathKey],
+                };
+            }
+        }, { inputToken: firstInputToken, path: [] });
+        return path;
+    }
+    getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol) {
+        if (useMixedRouteQuoter) {
+            if (mixedRouteContainsV4Pool) {
+                return MixedRouteQuoterV2__factory.createInterface();
+            }
+            else {
+                return IMixedRouteQuoterV1__factory.createInterface();
+            }
+        }
+        switch (protocol) {
+            case Protocol.V3:
+                return IQuoterV2__factory.createInterface();
+            case Protocol.V4:
+                return V4Quoter__factory.createInterface();
+            default:
+                throw new Error(`Unsupported protocol: ${protocol}`);
+        }
+    }
+    async consolidateResults(protocol, useMixedRouteQuoter, mixedRouteContainsV4Pool, functionName, inputs, providerConfig, gasLimitOverride) {
+        if (protocol === Protocol.MIXED && mixedRouteContainsV4Pool) {
+            const mixedQuote = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: this.getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                contractInterface: this.getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                functionName,
+                functionParams: inputs,
+                providerConfig,
+                additionalConfig: {
+                    gasLimitPerCallOverride: gasLimitOverride,
+                },
+            });
+            return {
+                blockNumber: mixedQuote.blockNumber,
+                approxGasUsedPerSuccessCall: mixedQuote.approxGasUsedPerSuccessCall,
+                results: mixedQuote.results.map((result) => {
+                    if (result.success) {
+                        switch (functionName) {
+                            case 'quoteExactInput':
+                                return {
+                                    success: true,
+                                    result: [
+                                        result.result[0],
+                                        Array(inputs.length),
+                                        Array(inputs.length),
+                                        result.result[1],
+                                    ],
+                                };
+                            case 'quoteExactOutput':
+                            default:
+                                throw new Error(`Unsupported function name: ${functionName}`);
+                        }
+                    }
+                    else {
+                        return result;
+                    }
+                }),
+            };
+        }
+        else if (protocol === Protocol.V4) {
+            const results = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: this.getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                contractInterface: this.getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                functionName,
+                functionParams: inputs,
+                providerConfig,
+                additionalConfig: {
+                    gasLimitPerCallOverride: gasLimitOverride,
+                },
+            });
+            return {
+                blockNumber: results.blockNumber,
+                approxGasUsedPerSuccessCall: results.approxGasUsedPerSuccessCall,
+                results: results.results.map((result) => {
+                    var _a;
+                    if (result.success) {
+                        let deltaAmountsSum = BigNumber.from(0);
+                        result.result[0].forEach((result) => {
+                            deltaAmountsSum = deltaAmountsSum.add(result);
+                        });
+                        switch (functionName) {
+                            case 'quoteExactInput':
+                                return {
+                                    success: true,
+                                    result: [
+                                        (_a = result.result[0][result.result[0].length - 1]) === null || _a === void 0 ? void 0 : _a.mul(-1),
+                                        result.result[1],
+                                        result.result[2],
+                                        BigNumber.from(0),
+                                    ],
+                                };
+                            case 'quoteExactOutput':
+                                return {
+                                    success: true,
+                                    result: [
+                                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                                        result.result[0][0],
+                                        result.result[1],
+                                        result.result[2],
+                                        BigNumber.from(0),
+                                    ],
+                                };
+                            default:
+                                throw new Error(`Unsupported function name: ${functionName}`);
+                        }
+                    }
+                    else {
+                        return result;
+                    }
+                }),
+            };
+        }
+        else {
+            return await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: this.getQuoterAddress(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                contractInterface: this.getContractInterface(useMixedRouteQuoter, mixedRouteContainsV4Pool, protocol),
+                functionName,
+                functionParams: inputs,
+                providerConfig,
+                additionalConfig: {
+                    gasLimitPerCallOverride: gasLimitOverride,
+                },
+            });
+        }
+    }
     async getQuotesManyData(amounts, routes, functionName, _providerConfig) {
         var _a, _b;
         const useMixedRouteQuoter = routes.some((route) => route.protocol === Protocol.V2) ||
             routes.some((route) => route.protocol === Protocol.MIXED);
+        const useV4RouteQuoter = routes.some((route) => route.protocol === Protocol.V4) &&
+            !useMixedRouteQuoter;
+        const mixedRouteContainsV4Pool = useMixedRouteQuoter
+            ? routes.some((route) => route.protocol === Protocol.MIXED &&
+                route.pools.some((pool) => pool instanceof V4Pool))
+            : false;
         const optimisticCachedRoutes = (_a = _providerConfig === null || _providerConfig === void 0 ? void 0 : _providerConfig.optimisticCachedRoutes) !== null && _a !== void 0 ? _a : false;
         /// Validate that there are no incorrect routes / function combinations
         this.validateRoutes(routes, functionName, useMixedRouteQuoter);
@@ -170,16 +352,41 @@ export class OnChainQuoteProvider {
         };
         const inputs = _(routes)
             .flatMap((route) => {
-            const encodedRoute = route.protocol === Protocol.V3
-                ? encodeRouteToPath(route, functionName == 'quoteExactOutput' // For exactOut must be true to ensure the routes are reversed.
-                )
-                : encodeMixedRouteToPath(route instanceof V2Route
-                    ? new MixedRouteSDK(route.pairs, route.input, route.output)
-                    : route);
-            const routeInputs = amounts.map((amount) => [
-                encodedRoute,
-                `0x${amount.quotient.toString(16)}`,
-            ]);
+            const encodedRoute = this.encodeRouteToPath(route, functionName);
+            const routeInputs = amounts.map((amount) => {
+                switch (route.protocol) {
+                    case Protocol.V4:
+                        return [
+                            {
+                                exactCurrency: amount.currency.wrapped.address,
+                                path: encodedRoute,
+                                exactAmount: amount.quotient.toString(),
+                            },
+                        ];
+                    case Protocol.MIXED:
+                        if (mixedRouteContainsV4Pool) {
+                            return [
+                                encodedRoute,
+                                {
+                                    nonEncodableData: route.pools.map((_) => {
+                                        return {
+                                            hookData: '0x',
+                                        };
+                                    }),
+                                },
+                                amount.quotient.toString(),
+                            ];
+                        }
+                        else {
+                            return [encodedRoute, amount.quotient.toString()];
+                        }
+                    default:
+                        return [
+                            encodedRoute,
+                            `0x${amount.quotient.toString(16)}`,
+                        ];
+                }
+            });
             return routeInputs;
         })
             .value();
@@ -224,18 +431,12 @@ export class OnChainQuoteProvider {
                 const { inputs } = quoteState;
                 try {
                     totalCallsMade = totalCallsMade + 1;
-                    const results = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
-                        address: this.getQuoterAddress(useMixedRouteQuoter),
-                        contractInterface: useMixedRouteQuoter
-                            ? IMixedRouteQuoterV1__factory.createInterface()
-                            : IQuoterV2__factory.createInterface(),
-                        functionName,
-                        functionParams: inputs,
-                        providerConfig,
-                        additionalConfig: {
-                            gasLimitPerCallOverride: gasLimitOverride,
-                        },
-                    });
+                    const protocol = useMixedRouteQuoter
+                        ? Protocol.MIXED
+                        : useV4RouteQuoter
+                            ? Protocol.V4
+                            : Protocol.V3;
+                    const results = await this.consolidateResults(protocol, useMixedRouteQuoter, mixedRouteContainsV4Pool, functionName, inputs, providerConfig, gasLimitOverride);
                     const successRateError = this.validateSuccessRate(results.results, haveRetriedForSuccessRate, useMixedRouteQuoter, optimisticCachedRoutes);
                     if (successRateError) {
                         return {
@@ -541,4 +742,4 @@ export class OnChainQuoteProvider {
         }
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/pool-provider.d.ts
new file mode 100644
index 0000000..8f8cb90
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/pool-provider.d.ts
@@ -0,0 +1,45 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { ChainId, Currency } from '@uniswap/sdk-core';
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
+import { Options as RetryOptions } from 'async-retry';
+import { IMulticallProvider, Result } from './multicall-provider';
+import { ProviderConfig } from './provider';
+export declare type PoolConstruct<TCurrency extends Currency> = [
+    TCurrency,
+    TCurrency,
+    ...Array<string | number>
+];
+export declare type Pool = V3Pool | V4Pool;
+export declare type ISlot0 = {
+    sqrtPriceX96: BigNumber;
+    tick: number;
+};
+export declare type ILiquidity = {
+    liquidity: BigNumber;
+};
+export declare abstract class PoolProvider<TCurrency extends Currency, TPoolConstruct extends PoolConstruct<TCurrency>, TISlot0 extends ISlot0, TILiquidity extends ILiquidity, TPoolAccessor> {
+    protected chainId: ChainId;
+    protected multicall2Provider: IMulticallProvider;
+    protected retryOptions: RetryOptions;
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId: ChainId, multicall2Provider: IMulticallProvider, retryOptions?: RetryOptions);
+    protected getPoolsInternal(poolConstructs: TPoolConstruct[], providerConfig?: ProviderConfig): Promise<TPoolAccessor>;
+    protected abstract getLiquidityFunctionName(): string;
+    protected abstract getSlot0FunctionName(): string;
+    protected abstract getPoolsData<TReturn>(poolIdentifiers: string[], functionName: string, providerConfig?: ProviderConfig): Promise<Result<TReturn>[]>;
+    protected abstract getPoolIdentifier(pool: TPoolConstruct): {
+        poolIdentifier: string;
+        currency0: TCurrency;
+        currency1: TCurrency;
+    };
+    protected abstract instantiatePool(pool: TPoolConstruct, slot0: TISlot0, liquidity: TILiquidity): Pool;
+    protected abstract instantiatePoolAccessor(poolIdentifierToPool: {
+        [poolId: string]: Pool;
+    }): TPoolAccessor;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/pool-provider.js
new file mode 100644
index 0000000..8089659
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/pool-provider.js
@@ -0,0 +1,66 @@
+import _ from 'lodash';
+import { log, poolToString } from '../util';
+export class PoolProvider {
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId, multicall2Provider, retryOptions = {
+        retries: 2,
+        minTimeout: 50,
+        maxTimeout: 500,
+    }) {
+        this.chainId = chainId;
+        this.multicall2Provider = multicall2Provider;
+        this.retryOptions = retryOptions;
+    }
+    async getPoolsInternal(poolConstructs, providerConfig) {
+        const poolIdentifierSet = new Set();
+        const sortedCurrencyPairs = [];
+        const sortedPoolIdentifiers = [];
+        for (const poolConstruct of poolConstructs) {
+            const { poolIdentifier: poolIdentifier, currency0, currency1, } = this.getPoolIdentifier(poolConstruct);
+            if (poolIdentifierSet.has(poolIdentifier)) {
+                continue;
+            }
+            // It's the easiest way to change the pool construct in place, since we don't know the entire pool construct at compiling time.
+            poolConstruct[0] = currency0;
+            poolConstruct[1] = currency1;
+            poolIdentifierSet.add(poolIdentifier);
+            sortedCurrencyPairs.push(poolConstruct);
+            sortedPoolIdentifiers.push(poolIdentifier);
+        }
+        log.debug(`getPools called with ${poolConstructs.length} token pairs. Deduped down to ${poolIdentifierSet.size}`);
+        const [slot0Results, liquidityResults] = await Promise.all([
+            this.getPoolsData(sortedPoolIdentifiers, this.getSlot0FunctionName(), providerConfig),
+            this.getPoolsData(sortedPoolIdentifiers, this.getLiquidityFunctionName(), providerConfig),
+        ]);
+        log.info(`Got liquidity and slot0s for ${poolIdentifierSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
+            ? `as of block: ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}.`
+            : ``}`);
+        const poolIdentifierToPool = {};
+        const invalidPools = [];
+        for (let i = 0; i < sortedPoolIdentifiers.length; i++) {
+            const slot0Result = slot0Results[i];
+            const liquidityResult = liquidityResults[i];
+            // These properties tell us if a pool is valid and initialized or not.
+            if (!(slot0Result === null || slot0Result === void 0 ? void 0 : slot0Result.success) ||
+                !(liquidityResult === null || liquidityResult === void 0 ? void 0 : liquidityResult.success) ||
+                slot0Result.result.sqrtPriceX96.eq(0)) {
+                invalidPools.push(sortedCurrencyPairs[i]);
+                continue;
+            }
+            const slot0 = slot0Result.result;
+            const liquidity = liquidityResult.result[0];
+            const pool = this.instantiatePool(sortedCurrencyPairs[i], slot0, liquidity);
+            const poolIdentifier = sortedPoolIdentifiers[i];
+            poolIdentifierToPool[poolIdentifier] = pool;
+        }
+        const poolStrs = _.map(Object.values(poolIdentifierToPool), poolToString);
+        log.debug({ poolStrs }, `Found ${poolStrs.length} valid pools`);
+        return this.instantiatePoolAccessor(poolIdentifierToPool);
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLEdBQUcsRUFBRSxZQUFZLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFtQjVDLE1BQU0sT0FBZ0IsWUFBWTtJQU9oQzs7Ozs7T0FLRztJQUNILFlBQ1ksT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLGVBQTZCO1FBQ3JDLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsR0FBRztLQUNoQjtRQU5TLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxpQkFBWSxHQUFaLFlBQVksQ0FJckI7SUFDQSxDQUFDO0lBRU0sS0FBSyxDQUFDLGdCQUFnQixDQUM5QixjQUFnQyxFQUNoQyxjQUErQjtRQUUvQixNQUFNLGlCQUFpQixHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3pELE1BQU0sbUJBQW1CLEdBQTBCLEVBQUUsQ0FBQztRQUN0RCxNQUFNLHFCQUFxQixHQUFhLEVBQUUsQ0FBQztRQUUzQyxLQUFLLE1BQU0sYUFBYSxJQUFJLGNBQWMsRUFBRTtZQUMxQyxNQUFNLEVBQ0osY0FBYyxFQUFFLGNBQWMsRUFDOUIsU0FBUyxFQUNULFNBQVMsR0FDVixHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUUxQyxJQUFJLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsRUFBRTtnQkFDekMsU0FBUzthQUNWO1lBRUQsK0hBQStIO1lBQy9ILGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUM7WUFDN0IsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFHLFNBQVMs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.d.ts
index 837e241..9262da7 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.d.ts
@@ -1,6 +1,7 @@
 import { TradeType } from '@uniswap/sdk-core';
 import { RouteWithValidQuote, SwapOptions } from '../routers';
 import { CurrencyAmount } from '../util';
+import { ProviderConfig } from './provider';
 export interface IPortionProvider {
     /**
      * Get the portion amount for the given token out amount.
@@ -8,9 +9,11 @@ export interface IPortionProvider {
      *
      * @param tokenOutAmount the token out amount, either the quote for exact in, or the swapper requested amount for exact out
      * @param tradeType the trade type, exact in or exact out
+     * @param externalTransferFailed fees charged on token transfers where the to or from address is NOT the uniswap V2 pair address
+     * @param feeTakenOnTransfer double fee taken on transfer as part of universal router custody
      * @param swapConfig swap config, containing the portion related data
      */
-    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, tokenOutHasFot?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
+    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, externalTransferFailed?: boolean, feeTakenOnTransfer?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
     /**
      * Get the portion quote amount for the given portion amount.
      * Only applicable for exact out. For exact out, will return zero amount.
@@ -33,8 +36,9 @@ export interface IPortionProvider {
      * @param tradeType the trade type, exact in or exact out
      * @param routeWithQuotes the route with quotes
      * @param swapConfig swap config, containing the portion related data
+     * @param providerConfig provider config, for the FOT fee related data
      */
-    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions): RouteWithValidQuote[];
+    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions, providerConfig?: ProviderConfig): RouteWithValidQuote[];
     /**
      * Get the quote gas adjusted amount for exact in and exact out.
      * For exact in, quote amount is the same as the best swap quote.
@@ -73,9 +77,9 @@ export interface IPortionProvider {
     getQuoteGasAndPortionAdjusted(tradeType: TradeType, quoteGasAdjusted: CurrencyAmount, portionAmount?: CurrencyAmount): CurrencyAmount | undefined;
 }
 export declare class PortionProvider implements IPortionProvider {
-    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, tokenOutHasFot?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
+    getPortionAmount(tokenOutAmount: CurrencyAmount, tradeType: TradeType, externalTransferFailed?: boolean, feeTakenOnTransfer?: boolean, swapConfig?: SwapOptions): CurrencyAmount | undefined;
     getPortionQuoteAmount(tradeType: TradeType, quote: CurrencyAmount, portionAdjustedAmount: CurrencyAmount, portionAmount?: CurrencyAmount): CurrencyAmount | undefined;
-    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions): RouteWithValidQuote[];
+    getRouteWithQuotePortionAdjusted(tradeType: TradeType, routeWithQuotes: RouteWithValidQuote[], swapConfig?: SwapOptions, providerConfig?: ProviderConfig): RouteWithValidQuote[];
     getQuote(tradeType: TradeType, quote: CurrencyAmount, portionQuoteAmount?: CurrencyAmount): CurrencyAmount;
     getQuoteGasAdjusted(tradeType: TradeType, quoteGasAdjusted: CurrencyAmount, portionQuoteAmount?: CurrencyAmount): CurrencyAmount;
     getQuoteGasAndPortionAdjusted(tradeType: TradeType, quoteGasAdjusted: CurrencyAmount, portionAmount?: CurrencyAmount): CurrencyAmount | undefined;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.js
index 981346f..aa81d81 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/portion-provider.js
@@ -4,8 +4,10 @@ import { Fraction, TradeType } from '@uniswap/sdk-core';
 import { SwapType, } from '../routers';
 import { CurrencyAmount } from '../util';
 export class PortionProvider {
-    getPortionAmount(tokenOutAmount, tradeType, tokenOutHasFot, swapConfig) {
-        if (tokenOutHasFot || (swapConfig === null || swapConfig === void 0 ? void 0 : swapConfig.type) !== SwapType.UNIVERSAL_ROUTER) {
+    getPortionAmount(tokenOutAmount, tradeType, externalTransferFailed, feeTakenOnTransfer, swapConfig) {
+        if (externalTransferFailed ||
+            feeTakenOnTransfer ||
+            (swapConfig === null || swapConfig === void 0 ? void 0 : swapConfig.type) !== SwapType.UNIVERSAL_ROUTER) {
             return undefined;
         }
         const swapConfigUniversalRouter = swapConfig;
@@ -46,7 +48,7 @@ export class PortionProvider {
         //    because the portion amount calculated from the exact out has no way to account for the gas units.
         return CurrencyAmount.fromRawAmount(quote.currency, portionToPortionAdjustedAmountRatio.multiply(quote).quotient);
     }
-    getRouteWithQuotePortionAdjusted(tradeType, routeWithQuotes, swapConfig) {
+    getRouteWithQuotePortionAdjusted(tradeType, routeWithQuotes, swapConfig, providerConfig) {
         // the route with quote portion adjustment is only needed for exact in routes with quotes
         // because the route with quotes does not know the output amount needs to subtract the portion amount
         if (tradeType !== TradeType.EXACT_INPUT) {
@@ -58,10 +60,7 @@ export class PortionProvider {
             return routeWithQuotes;
         }
         return routeWithQuotes.map((routeWithQuote) => {
-            var _a;
-            const tokenOut = routeWithQuote.tokenPath[routeWithQuote.tokenPath.length - 1];
-            const tokenOutHasFot = tokenOut && ((_a = tokenOut.buyFeeBps) === null || _a === void 0 ? void 0 : _a.gt(0));
-            const portionAmount = this.getPortionAmount(routeWithQuote.quote, tradeType, tokenOutHasFot, swapConfig);
+            const portionAmount = this.getPortionAmount(routeWithQuote.quote, tradeType, providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.externalTransferFailed, providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.feeTakenOnTransfer, swapConfig);
             // This is a sub-optimal solution agreed among the teams to work around the exact in
             // portion amount issue for universal router.
             // The most optimal solution is to update router-sdk https://github.com/Uniswap/router-sdk/blob/main/src/entities/trade.ts#L215
@@ -112,4 +111,4 @@ export class PortionProvider {
         }
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9ydGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvcG9ydGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFeEQsT0FBTyxFQUlMLFFBQVEsR0FDVCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBeUd6QyxNQUFNLE9BQU8sZUFBZTtJQUMxQixnQkFBZ0IsQ0FDZCxjQUE4QixFQUM5QixTQUFvQixFQUNwQixjQUF3QixFQUN4QixVQUF3QjtRQUV4QixJQUFJLGNBQWMsSUFBSSxDQUFBLFVBQVUsYUFBVixVQUFVLHVCQUFWLFVBQVUsQ0FBRSxJQUFJLE1BQUssUUFBUSxDQUFDLGdCQUFnQixFQUFFO1lBQ3BFLE9BQU8sU0FBUyxDQUFDO1NBQ2xCO1FBRUQsTUFBTSx5QkFBeUIsR0FBRyxVQUF3QyxDQUFDO1FBQzNFLFFBQVEsU0FBUyxFQUFFO1lBQ2pCLEtBQUssU0FBUyxDQUFDLFdBQVc7Z0JBQ3hCLElBQ0UseUJBQXlCLENBQUMsR0FBRztvQkFDN0IseUJBQXlCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQ25EO29CQUNBLE9BQU8sY0FBYyxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQ25FO2dCQUVELE9BQU8sU0FBUyxDQUFDO1lBQ25CLEtBQUssU0FBUyxDQUFDLFlBQVk7Z0JBQ3pCLElBQ0UseUJBQXlCLENBQUMsT0FBTztvQkFDakMseUJBQXlCLENBQUMs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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9ydGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvcG9ydGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFeEQsT0FBTyxFQUlMLFFBQVEsR0FDVCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBZ0h6QyxNQUFNLE9BQU8sZUFBZTtJQUMxQixnQkFBZ0IsQ0FDZCxjQUE4QixFQUM5QixTQUFvQixFQUNwQixzQkFBZ0MsRUFDaEMsa0JBQTRCLEVBQzVCLFVBQXdCO1FBRXhCLElBQ0Usc0JBQXNCO1lBQ3RCLGtCQUFrQjtZQUNsQixDQUFBLFVBQVUsYUFBVixVQUFVLHVCQUFWLFVBQVUsQ0FBRSxJQUFJLE1BQUssUUFBUSxDQUFDLGdCQUFnQixFQUM5QztZQUNBLE9BQU8sU0FBUyxDQUFDO1NBQ2xCO1FBRUQsTUFBTSx5QkFBeUIsR0FBRyxVQUF3QyxDQUFDO1FBQzNFLFFBQVEsU0FBUyxFQUFFO1lBQ2pCLEtBQUssU0FBUyxDQUFDLFdBQVc7Z0JBQ3hCLElBQ0UseUJBQXlCLENBQUMsR0FBRztvQkFDN0IseUJBQXlCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQ25EO29CQUNBLE9BQU8sY0FBYyxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQ25FO2dCQUVELE9BQU8sU0FBUyxDQUFDO1lBQ25CLEtBQUssU0FBUyxDQUFDLFlBQVk7Z0JBQ3pCLElBQ0UseUJBQXlCLENBQUMsT0FBTztvQkFDakMseUJBQXlCLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUM1RDtvQkFDQSxPQUFPLGNBQWMsQ0FBQyxhQUFhLENBQ2pDLGNBQWMsQ0FBQyxRQUFRLEVBQ3ZCLHlCQUF5QixDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQ3BELENBQUM7aUJBQ0g7Z0JBRUQsT0FBTyxTQUFTLENBQUM7WUFDbkI7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsU0FBUyxFQUFFLENBQUMsQ0FBQztTQUN0RDtJQUNILENBQUM7SUFFRCxxQkFBcUIsQ0FDbkIsU0FBb0IsRUFDcEIsS0FBcUIsRUFDckIscUJBQXFDLEVBQ3JDLGFBQThCO1FBRTlCLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDbEIsT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFFRCwrQ0FBK0M7UUFDL0MsdUhBQXVIO1FBQ3ZILElBQUksU0FBUyxLQUFLLFNBQVMsQ0FBQyxZQUFZLEVBQUU7WUFDeEMsT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFFRCx3RUFBd0U7UUFDeEUsd0JBQXdCO1FBQ3hCLDJGQUEyRjtRQUMzRixNQUFNLG1DQUFtQyxHQUFHLElBQUksUUFBUSxDQUN0RCxhQUFhLENBQUMsUUFBUSxFQUN0QixxQkFBcUIsQ0FBQyxRQUFRLENBQy9CLENBQUM7UUFDRixrRUFBa0U7UUFDbEUsNEhBQTRIO1FBQzVILHNHQUFzRztRQUN0RyxnSEFBZ0g7UUFDaEgsdUdBQXVHO1FBQ3ZHLE9BQU8sY0FBYyxDQUFDLGFBQWEsQ0FDakMsS0FBSyxDQUFDLFFBQVEsRUFDZCxtQ0FBbUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUM3RCxDQUFDO0lBQ0osQ0FBQztJQUVELGdDQUFnQyxDQUM5QixTQUFvQixFQUNwQixlQUFzQyxFQUN0QyxVQUF3QixFQUN4QixjQUErQjtRQUUvQix5RkFBeUY7UUFDekYscUdBQXFHO1FBQ3JHLElBQUksU0FBUyxLQUFLLFNBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDdkMsT0FBTyxlQUFlLENBQUM7U0FDeEI7UUFFRCw4RUFBOEU7UUFDOUUsK0RBQStEO1FBQy9ELElBQUksQ0FBQSxVQUFVLGFBQVYsVUFBVSx1QkFBVixVQUFVLENBQUUsSUFBSSxNQUFLLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRTtZQUNsRCxPQUFPLGVBQWUsQ0FBQztTQUN4QjtRQUVELE9BQU8sZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLGNBQWMsRUFBRSxFQUFFO1lBQzVDLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FDekMsY0FBYyxDQUFDLEtBQUssRUFDcEIsU0FBUyxFQUNULGNBQWMsYUFBZCxjQUFjLHVCQUFkLGNBQWMsQ0FBRSxzQkFBc0IsRUFDdEMsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLGtCQUFrQixFQUNsQyxVQUFVLENBQ1gsQ0FBQztZQUVGLG9GQUFvRjtZQUNwRiw2Q0FBNkM7WUFDN0MsK0hBQStIO1lBQy9ILCtKQUErSjtZQUMvSixzSUFBc0k7WUFDdEksbUdBQW1HO1lBQ25HLDBHQUEwRztZQUMxRyw4R0FBOEc7WUFDOUcsSUFBSSxhQUFhLEVBQUU7Z0JBQ2pCLGNBQWMsQ0FBQyxLQUFLLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7YUFDckU7WUFFRCxPQUFPLGNBQWMsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRLENBQ04sU0FBb0IsRUFDcEIsS0FBcUIsRUFDckIsa0JBQW1DO1FBRW5DLFFBQVEsU0FBUyxFQUFFO1lBQ2pCLEtBQUssU0FBUyxDQUFDLFdBQVc7Z0JBQ3hCLE9BQU8sS0FBSyxDQUFDO1lBQ2YsS0FBSyxTQUFTLENBQUMsWUFBWTtnQkFDekIsT0FBTyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDekU7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsU0FBUyxFQUFFLENBQUMsQ0FBQztTQUN0RDtJQUNILENBQUM7SUFFRCxtQkFBbUIsQ0FDakIsU0FBb0IsRUFDcEIsZ0JBQWdDLEVBQ2hDLGtCQUFtQztRQUVuQyxRQUFRLFNBQVMsRUFBRTtZQUNqQixLQUFLLFNBQVMsQ0FBQyxXQUFXO2dCQUN4QixPQUFPLGdCQUFnQixDQUFDO1lBQzFCLEtBQUssU0FBUyxDQUFDLFlBQVk7Z0JBQ3pCLE9BQU8sa0JBQWtCO29CQUN2QixDQUFDLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDO29CQUMvQyxDQUFDLENBQUMsZ0JBQWdCLENBQUM7WUFDdkI7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsU0FBUyxFQUFFLENBQUMsQ0FBQztTQUN0RDtJQUNILENBQUM7SUFFRCw2QkFBNkIsQ0FDM0IsU0FBb0IsRUFDcEIsZ0JBQWdDLEVBQ2hDLGFBQThCO1FBRTlCLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDbEIsT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFFRCxRQUFRLFNBQVMsRUFBRTtZQUNqQixLQUFLLFNBQVMsQ0FBQyxXQUFXO2dCQUN4QixPQUFPLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUNsRCxLQUFLLFNBQVMsQ0FBQyxZQUFZO2dCQUN6QixPQUFPLGdCQUFnQixDQUFDO1lBQzFCO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLFNBQVMsRUFBRSxDQUFDLENBQUM7U0FDdEQ7SUFDSCxDQUFDO0NBQ0YifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts
index 735f4b9..e545b20 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts
@@ -1,3 +1,4 @@
+import { UniversalRouterVersion } from '@uniswap/universal-router-sdk';
 export declare type ProviderConfig = {
     /**
      * The block number to use when getting data on-chain.
@@ -18,6 +19,18 @@ export declare type ProviderConfig = {
      * Optimistic mode means that we will allow blocksToLive greater than 1.
      */
     optimisticCachedRoutes?: boolean;
+    /**
+     * FOT fees charged on token transfers where the to or from address is NOT the uniswap V2 pair address
+     */
+    externalTransferFailed?: boolean;
+    /**
+     * double FOT fee taken on transfer as part of universal router custody
+     */
+    feeTakenOnTransfer?: boolean;
+    /**
+     * The version of the universal router to use.
+     */
+    universalRouterVersion?: UniversalRouterVersion;
 };
 export declare type LocalCacheEntry<T> = {
     entry: T;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/simulation-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/simulation-provider.js
index d98e3ce..c79739c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/simulation-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/simulation-provider.js
@@ -1,10 +1,10 @@
 import { ChainId, TradeType } from '@uniswap/sdk-core';
-import { PERMIT2_ADDRESS } from '@uniswap/universal-router-sdk';
 import { BigNumber } from 'ethers/lib/ethers';
-import { SwapType } from '../routers';
+import { SwapType, } from '../routers';
 import { Erc20__factory } from '../types/other/factories/Erc20__factory';
 import { Permit2__factory } from '../types/other/factories/Permit2__factory';
 import { log, SWAP_ROUTER_02_ADDRESSES } from '../util';
+import { permit2Address } from '@uniswap/permit2-sdk';
 export var SimulationStatus;
 (function (SimulationStatus) {
     SimulationStatus[SimulationStatus["NotSupported"] = 0] = "NotSupported";
@@ -31,7 +31,9 @@ export class Simulator {
     }
     async simulate(fromAddress, swapOptions, swapRoute, amount, quote, providerConfig) {
         const neededBalance = swapRoute.trade.tradeType == TradeType.EXACT_INPUT ? amount : quote;
-        if ((neededBalance.currency.isNative && this.chainId == ChainId.MAINNET) ||
+        if (
+        // we assume we always have enough eth mainnet balance because we use beacon address later
+        (neededBalance.currency.isNative && this.chainId == ChainId.MAINNET) ||
             (await this.userHasSufficientBalance(fromAddress, swapRoute.trade.tradeType, amount, quote))) {
             log.info('User has sufficient balance to simulate. Simulating transaction.');
             try {
@@ -83,7 +85,7 @@ export class Simulator {
         // Check token has approved Permit2 more than expected amount.
         const tokenContract = Erc20__factory.connect(inputAmount.currency.wrapped.address, provider);
         if (swapOptions.type == SwapType.UNIVERSAL_ROUTER) {
-            const permit2Allowance = await tokenContract.allowance(fromAddress, PERMIT2_ADDRESS);
+            const permit2Allowance = await tokenContract.allowance(fromAddress, permit2Address(this.chainId));
             // If a permit has been provided we don't need to check if UR has already been allowed.
             if (swapOptions.inputTokenPermit) {
                 log.info({
@@ -93,7 +95,7 @@ export class Simulator {
                 return permit2Allowance.gte(BigNumber.from(inputAmount.quotient.toString()));
             }
             // Check UR has been approved from Permit2.
-            const permit2Contract = Permit2__factory.connect(PERMIT2_ADDRESS, provider);
+            const permit2Contract = Permit2__factory.connect(permit2Address(this.chainId), provider);
             const { amount: universalRouterAllowance, expiration: tokenExpiration } = await permit2Contract.allowance(fromAddress, inputAmount.currency.wrapped.address, SWAP_ROUTER_02_ADDRESSES(this.chainId));
             const nowTimestampS = Math.round(Date.now() / 1000);
             const inputAmountBN = BigNumber.from(inputAmount.quotient.toString());
@@ -132,4 +134,4 @@ export class Simulator {
         throw new Error(`Unsupported swap type ${swapOptions}`);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltdWxhdGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc2ltdWxhdGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNoRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFOUMsT0FBTyxFQUlMLFFBQVEsRUFDVCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDekUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDN0UsT0FBTyxFQUFrQixHQUFHLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFjeEUsTUFBTSxDQUFOLElBQVksZ0JBTVg7QUFORCxXQUFZLGdCQUFnQjtJQUMxQix1RUFBZ0IsQ0FBQTtJQUNoQiwyREFBVSxDQUFBO0lBQ1YsaUVBQWEsQ0FBQTtJQUNiLHFGQUF1QixDQUFBO0lBQ3ZCLHFFQUFlLENBQUE7QUFDakIsQ0FBQyxFQU5XLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFNM0I7QUFFRDs7Ozs7R0FLRztBQUNILE1BQU0sT0FBZ0IsU0FBUztJQUk3Qjs7O09BR0c7SUFDSCxZQUNFLFFBQXlCLEVBQ3pCLGVBQWlDLEVBQ3ZCLE9BQWdCO1FBQWhCLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFFMUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7SUFDekMsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFRLENBQ25CLFdBQW1CLEVBQ25CLFdBQXdCLEVBQ3hCLFNBQW9CLEVBQ3BCLE1BQXNC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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltdWxhdGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc2ltdWxhdGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUU5QyxPQUFPLEVBSUwsUUFBUSxHQUNULE1BQU0sWUFBWSxDQUFDO0FBQ3BCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUM3RSxPQUFPLEVBQWtCLEdBQUcsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV4RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFhdEQsTUFBTSxDQUFOLElBQVksZ0JBTVg7QUFORCxXQUFZLGdCQUFnQjtJQUMxQix1RUFBZ0IsQ0FBQTtJQUNoQiwyREFBVSxDQUFBO0lBQ1YsaUVBQWEsQ0FBQTtJQUNiLHFGQUF1QixDQUFBO0lBQ3ZCLHFFQUFlLENBQUE7QUFDakIsQ0FBQyxFQU5XLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFNM0I7QUFFRDs7Ozs7R0FLRztBQUNILE1BQU0sT0FBZ0IsU0FBUztJQUk3Qjs7O09BR0c7SUFDSCxZQUNFLFFBQXlCLEVBQ3pCLGVBQWlDLEVBQ3ZCLE9BQWdCO1FBQWhCLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFFMUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7SUFDekMsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFRLENBQ25CLFdBQW1CLEVBQ25CLFdBQXdCLEVBQ3hCLFNBQW9CLEVBQ3BCLE1BQXNC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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider-with-fallback.d.ts
new file mode 100644
index 0000000..a61c15b
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider-with-fallback.d.ts
@@ -0,0 +1,11 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { Token } from '@uniswap/sdk-core';
+import { SubgraphPool } from '../routers/alpha-router/functions/get-candidate-pools';
+import { ProviderConfig } from './provider';
+import { ISubgraphProvider } from './subgraph-provider';
+export declare abstract class SubgraphProviderWithFallBacks<TSubgraphPool extends SubgraphPool> implements ISubgraphProvider<TSubgraphPool> {
+    private fallbacks;
+    private protocol;
+    protected constructor(fallbacks: ISubgraphProvider<TSubgraphPool>[], protocol: Protocol);
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider-with-fallback.js
new file mode 100644
index 0000000..5d01c71
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider-with-fallback.js
@@ -0,0 +1,21 @@
+import { log } from '../util';
+export class SubgraphProviderWithFallBacks {
+    constructor(fallbacks, protocol) {
+        this.fallbacks = fallbacks;
+        this.protocol = protocol;
+    }
+    async getPools(tokenIn, tokenOut, providerConfig) {
+        for (let i = 0; i < this.fallbacks.length; i++) {
+            const provider = this.fallbacks[i];
+            try {
+                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);
+                return pools;
+            }
+            catch (err) {
+                log.info(`Failed to get subgraph pools for ${this.protocol} from fallback #${i}`);
+            }
+        }
+        throw new Error('Failed to get subgraph pools from any providers');
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBSTlCLE1BQU0sT0FBZ0IsNkJBQTZCO0lBSWpELFlBQ1UsU0FBNkMsRUFDN0MsUUFBa0I7UUFEbEIsY0FBUyxHQUFULFNBQVMsQ0FBb0M7UUFDN0MsYUFBUSxHQUFSLFFBQVEsQ0FBVTtJQUN6QixDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsT0FBZSxFQUNmLFFBQWdCLEVBQ2hCLGNBQStCO1FBRS9CLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM5QyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBQ3BDLElBQUk7Z0JBQ0YsTUFBTSxLQUFLLEdBQUcsTUFBTSxRQUFRLENBQUMsUUFBUSxDQUNuQyxPQUFPLEVBQ1AsUUFBUSxFQUNSLGNBQWMsQ0FDZixDQUFDO2dCQUNGLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFBQyxPQUFPLEdBQUcsRUFBRTtnQkFDWixHQUFHLENBQUMsSUFBSSxDQUNOLG9DQUFvQyxJQUFJLENBQUMsUUFBUSxtQkFBbUIsQ0FBQyxFQUFFLENBQ3hFLENBQUM7YUFDSDtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider.d.ts
new file mode 100644
index 0000000..a262d5d
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider.d.ts
@@ -0,0 +1,51 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { SubgraphPool } from '../routers/alpha-router/functions/get-candidate-pools';
+import { ProviderConfig } from './provider';
+export interface ISubgraphProvider<TSubgraphPool extends SubgraphPool> {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+}
+export declare type V3V4SubgraphPool = {
+    id: string;
+    feeTier: string;
+    liquidity: string;
+    token0: {
+        id: string;
+    };
+    token1: {
+        id: string;
+    };
+    tvlETH: number;
+    tvlUSD: number;
+};
+export declare type V3V4RawSubgraphPool = {
+    id: string;
+    feeTier: string;
+    liquidity: string;
+    token0: {
+        symbol: string;
+        id: string;
+    };
+    token1: {
+        symbol: string;
+        id: string;
+    };
+    totalValueLockedUSD: string;
+    totalValueLockedETH: string;
+    totalValueLockedUSDUntracked: string;
+};
+export declare abstract class SubgraphProvider<TRawSubgraphPool extends V3V4RawSubgraphPool, TSubgraphPool extends V3V4SubgraphPool> {
+    private protocol;
+    private chainId;
+    private retries;
+    private timeout;
+    private rollback;
+    private trackedEthThreshold;
+    private untrackedUsdThreshold;
+    private subgraphUrl?;
+    private client;
+    constructor(protocol: Protocol, chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrl?: string | undefined);
+    getPools(_tokenIn?: Token, _tokenOut?: Token, providerConfig?: ProviderConfig): Promise<TSubgraphPool[]>;
+    protected abstract subgraphQuery(blockNumber?: number): string;
+    protected abstract mapSubgraphPool(rawSubgraphPool: TRawSubgraphPool): TSubgraphPool;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider.js
new file mode 100644
index 0000000..3420bb2
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/subgraph-provider.js
@@ -0,0 +1,113 @@
+import retry from 'async-retry';
+import Timeout from 'await-timeout';
+import { gql, GraphQLClient } from 'graphql-request';
+import _ from 'lodash';
+import { log, metric } from '../util';
+const PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.
+export class SubgraphProvider {
+    constructor(protocol, chainId, retries = 2, timeout = 30000, rollback = true, trackedEthThreshold = 0.01, untrackedUsdThreshold = Number.MAX_VALUE, subgraphUrl) {
+        this.protocol = protocol;
+        this.chainId = chainId;
+        this.retries = retries;
+        this.timeout = timeout;
+        this.rollback = rollback;
+        this.trackedEthThreshold = trackedEthThreshold;
+        this.untrackedUsdThreshold = untrackedUsdThreshold;
+        this.subgraphUrl = subgraphUrl;
+        this.protocol = protocol;
+        if (!this.subgraphUrl) {
+            throw new Error(`No subgraph url for chain id: ${this.chainId}`);
+        }
+        this.client = new GraphQLClient(this.subgraphUrl);
+    }
+    async getPools(_tokenIn, _tokenOut, providerConfig) {
+        const beforeAll = Date.now();
+        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
+            ? await providerConfig.blockNumber
+            : undefined;
+        const query = gql `
+      ${this.subgraphQuery(blockNumber)}
+    `;
+        let pools = [];
+        log.info(`Getting ${this.protocol} pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
+            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`
+            : ''}.`);
+        let retries = 0;
+        await retry(async () => {
+            const timeout = new Timeout();
+            const getPools = async () => {
+                let lastId = '';
+                let pools = [];
+                let poolsPage = [];
+                // metrics variables
+                let totalPages = 0;
+                do {
+                    totalPages += 1;
+                    const poolsResult = await this.client.request(query, {
+                        pageSize: PAGE_SIZE,
+                        id: lastId,
+                    });
+                    poolsPage = poolsResult.pools;
+                    pools = pools.concat(poolsPage);
+                    lastId = pools[pools.length - 1].id;
+                    metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.paginate.pageSize`, poolsPage.length);
+                } while (poolsPage.length > 0);
+                metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.paginate`, totalPages);
+                metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.pools.length`, pools.length);
+                return pools;
+            };
+            try {
+                const getPoolsPromise = getPools();
+                const timerPromise = timeout.set(this.timeout).then(() => {
+                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);
+                });
+                pools = await Promise.race([getPoolsPromise, timerPromise]);
+                return;
+            }
+            catch (err) {
+                log.error({ err }, `Error fetching ${this.protocol} Subgraph Pools.`);
+                throw err;
+            }
+            finally {
+                timeout.clear();
+            }
+        }, {
+            retries: this.retries,
+            onRetry: (err, retry) => {
+                retries += 1;
+                if (this.rollback &&
+                    blockNumber &&
+                    _.includes(err.message, 'indexed up to')) {
+                    metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.indexError`, 1);
+                    blockNumber = blockNumber - 10;
+                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);
+                }
+                metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.timeout`, 1);
+                pools = [];
+                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);
+            },
+        });
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.retries`, retries);
+        const untrackedPools = pools.filter((pool) => parseInt(pool.liquidity) > 0 ||
+            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold ||
+            parseFloat(pool.totalValueLockedUSDUntracked) >
+                this.untrackedUsdThreshold);
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.untracked.length`, untrackedPools.length);
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.untracked.percent`, (untrackedPools.length / pools.length) * 100);
+        const beforeFilter = Date.now();
+        const poolsSanitized = pools
+            .filter((pool) => parseInt(pool.liquidity) > 0 ||
+            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold)
+            .map((pool) => {
+            return this.mapSubgraphPool(pool);
+        });
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.filter.latency`, Date.now() - beforeFilter);
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.filter.length`, poolsSanitized.length);
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.filter.percent`, (poolsSanitized.length / pools.length) * 100);
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools`, 1);
+        metric.putMetric(`${this.protocol}SubgraphProvider.chain_${this.chainId}.getPools.latency`, Date.now() - beforeAll);
+        log.info(`Got ${pools.length} ${this.protocol} pools from the subgraph. ${poolsSanitized.length} after filtering`);
+        return poolsSanitized;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sS0FBSyxNQUFNLGFBQWEsQ0FBQztBQUNoQyxPQUFPLE9BQU8sTUFBTSxlQUFlLENBQUM7QUFDcEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFhdEMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsK0NBQStDO0FBaUN2RSxNQUFNLE9BQWdCLGdCQUFnQjtJQU1wQyxZQUNVLFFBQWtCLEVBQ2xCLE9BQWdCLEVBQ2hCLFVBQVUsQ0FBQyxFQUNYLFVBQVUsS0FBSyxFQUNmLFdBQVcsSUFBSSxFQUNmLHNCQUFzQixJQUFJLEVBQzFCLHdCQUF3QixNQUFNLENBQUMsU0FBUyxFQUN4QyxXQUFvQjtRQVBwQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsWUFBTyxHQUFQLE9BQU8sQ0FBSTtRQUNYLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFDZixhQUFRLEdBQVIsUUFBUSxDQUFPO1FBQ2Ysd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFPO1FBQzFCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBbUI7UUFDeEMsZ0JBQVcsR0FBWCxXQUFXLENBQVM7UUFFNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDckIsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQ0FBaUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7U0FDbEU7UUFDRCxJ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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.d.ts
index 94b6b2f..8d8fc6b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.d.ts
@@ -6,6 +6,7 @@ import { IPortionProvider } from './portion-provider';
 import { SimulationResult, Simulator } from './simulation-provider';
 import { IV2PoolProvider } from './v2/pool-provider';
 import { IV3PoolProvider } from './v3/pool-provider';
+import { IV4PoolProvider } from './v4/pool-provider';
 export declare type TenderlyResponseUniversalRouter = {
     config: {
         url: string;
@@ -26,11 +27,19 @@ export declare type GasBody = {
     gas: string;
     gasUsed: string;
 };
+export declare type JsonRpcError = {
+    error: {
+        code: number;
+        message: string;
+        data: string;
+    };
+};
 export declare type TenderlyResponseEstimateGasBundle = {
     id: number;
     jsonrpc: string;
-    result: GasBody[];
+    result: Array<JsonRpcError | GasBody>;
 };
+export declare const TENDERLY_NOT_SUPPORTED_CHAINS: ChainId[];
 export declare class FallbackTenderlySimulator extends Simulator {
     private tenderlySimulator;
     private ethEstimateGasSimulator;
@@ -45,15 +54,16 @@ export declare class TenderlySimulator extends Simulator {
     private tenderlyNodeApiKey;
     private v2PoolProvider;
     private v3PoolProvider;
+    private v4PoolProvider;
     private overrideEstimateMultiplier;
     private tenderlyRequestTimeout?;
-    private tenderlyNodeApiSamplingPercent?;
+    private tenderlyNodeApiMigrationPercent?;
     private tenderlyNodeApiEnabledChains?;
     private tenderlyServiceInstance;
-    constructor(chainId: ChainId, tenderlyBaseUrl: string, tenderlyUser: string, tenderlyProject: string, tenderlyAccessKey: string, tenderlyNodeApiKey: string, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, provider: JsonRpcProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
+    constructor(chainId: ChainId, tenderlyBaseUrl: string, tenderlyUser: string, tenderlyProject: string, tenderlyAccessKey: string, tenderlyNodeApiKey: string, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, v4PoolProvider: IV4PoolProvider, provider: JsonRpcProvider, portionProvider: IPortionProvider, overrideEstimateMultiplier?: {
         [chainId in ChainId]?: number;
-    }, tenderlyRequestTimeout?: number, tenderlyNodeApiSamplingPercent?: number, tenderlyNodeApiEnabledChains?: ChainId[]);
+    }, tenderlyRequestTimeout?: number, tenderlyNodeApiMigrationPercent?: number, tenderlyNodeApiEnabledChains?: ChainId[]);
     simulateTransaction(fromAddress: string, swapOptions: SwapOptions, swapRoute: SwapRoute, providerConfig?: GasModelProviderConfig): Promise<SwapRoute>;
     private logTenderlyErrorResponse;
-    private sampleNodeEndpoint;
+    private requestNodeSimulation;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.js
index 12d9c70..d233db5 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/tenderly-simulation-provider.js
@@ -1,8 +1,9 @@
 import http from 'http';
 import https from 'https';
 import { MaxUint256 } from '@ethersproject/constants';
+import { permit2Address } from '@uniswap/permit2-sdk';
 import { ChainId } from '@uniswap/sdk-core';
-import { PERMIT2_ADDRESS, UNIVERSAL_ROUTER_ADDRESS, } from '@uniswap/universal-router-sdk';
+import { UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk';
 import axios from 'axios';
 import { BigNumber } from 'ethers/lib/ethers';
 import { metric, MetricLoggerUnit, SwapType, } from '../routers';
@@ -27,6 +28,23 @@ const TENDERLY_NODE_API = (chainId, tenderlyNodeApiKey) => {
             throw new Error(`ChainId ${chainId} does not correspond to a tenderly node endpoint`);
     }
 };
+export const TENDERLY_NOT_SUPPORTED_CHAINS = [
+    ChainId.CELO,
+    ChainId.CELO_ALFAJORES,
+    ChainId.ZKSYNC,
+    ChainId.ABSTRACT_TESTNET,
+    ChainId.ZERO,
+    ChainId.BOB,
+    ChainId.CYBER,
+    ChainId.SHAPE,
+    ChainId.INK,
+    ChainId.REDSTONE,
+    ChainId.REDSTONE_GARNET,
+    ChainId.ABSTRACT_MAINNET,
+    ChainId.ANIME_TESTNET,
+    ChainId.ANIME,
+    ChainId.MODE,
+];
 // We multiply tenderly gas limit by this to overestimate gas limit
 const DEFAULT_ESTIMATE_MULTIPLIER = 1.3;
 export class FallbackTenderlySimulator extends Simulator {
@@ -39,7 +57,7 @@ export class FallbackTenderlySimulator extends Simulator {
         // Make call to eth estimate gas if possible
         // For erc20s, we must check if the token allowance is sufficient
         const inputAmount = swapRoute.trade.inputAmount;
-        if ((inputAmount.currency.isNative && this.chainId == ChainId.MAINNET) ||
+        if (inputAmount.currency.isNative ||
             (await this.checkTokenApproved(fromAddress, inputAmount, swapOptions, this.provider))) {
             log.info('Simulating with eth_estimateGas since token is native or approved.');
             try {
@@ -48,7 +66,8 @@ export class FallbackTenderlySimulator extends Simulator {
             }
             catch (err) {
                 log.info({ err: err }, 'Error simulating using eth_estimateGas');
-                return { ...swapRoute, simulationStatus: SimulationStatus.Failed };
+                // If it fails, we should still try to simulate using Tenderly
+                // return { ...swapRoute, simulationStatus: SimulationStatus.Failed };
             }
         }
         try {
@@ -64,7 +83,7 @@ export class FallbackTenderlySimulator extends Simulator {
     }
 }
 export class TenderlySimulator extends Simulator {
-    constructor(chainId, tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, tenderlyNodeApiKey, v2PoolProvider, v3PoolProvider, provider, portionProvider, overrideEstimateMultiplier, tenderlyRequestTimeout, tenderlyNodeApiSamplingPercent, tenderlyNodeApiEnabledChains) {
+    constructor(chainId, tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, tenderlyNodeApiKey, v2PoolProvider, v3PoolProvider, v4PoolProvider, provider, portionProvider, overrideEstimateMultiplier, tenderlyRequestTimeout, tenderlyNodeApiMigrationPercent, tenderlyNodeApiEnabledChains) {
         super(provider, portionProvider, chainId);
         this.tenderlyNodeApiEnabledChains = [];
         this.tenderlyServiceInstance = axios.create({
@@ -80,18 +99,19 @@ export class TenderlySimulator extends Simulator {
         this.tenderlyNodeApiKey = tenderlyNodeApiKey;
         this.v2PoolProvider = v2PoolProvider;
         this.v3PoolProvider = v3PoolProvider;
+        this.v4PoolProvider = v4PoolProvider;
         this.overrideEstimateMultiplier = overrideEstimateMultiplier !== null && overrideEstimateMultiplier !== void 0 ? overrideEstimateMultiplier : {};
         this.tenderlyRequestTimeout = tenderlyRequestTimeout;
-        this.tenderlyNodeApiSamplingPercent = tenderlyNodeApiSamplingPercent;
+        this.tenderlyNodeApiMigrationPercent = tenderlyNodeApiMigrationPercent;
         this.tenderlyNodeApiEnabledChains = tenderlyNodeApiEnabledChains;
     }
     async simulateTransaction(fromAddress, swapOptions, swapRoute, providerConfig) {
-        var _a;
+        var _a, _b, _c;
         const currencyIn = swapRoute.trade.inputAmount.currency;
         const tokenIn = currencyIn.wrapped;
         const chainId = this.chainId;
-        if ([ChainId.CELO, ChainId.CELO_ALFAJORES].includes(chainId)) {
-            const msg = 'Celo not supported by Tenderly!';
+        if (TENDERLY_NOT_SUPPORTED_CHAINS.includes(chainId)) {
+            const msg = `${TENDERLY_NOT_SUPPORTED_CHAINS.toString()} not supported by Tenderly!`;
             log.info(msg);
             return { ...swapRoute, simulationStatus: SimulationStatus.NotSupported };
         }
@@ -118,13 +138,13 @@ export class TenderlySimulator extends Simulator {
             }
             // Do initial onboarding approval of Permit2.
             const erc20Interface = Erc20__factory.createInterface();
-            const approvePermit2Calldata = erc20Interface.encodeFunctionData('approve', [PERMIT2_ADDRESS, MaxUint256]);
+            const approvePermit2Calldata = erc20Interface.encodeFunctionData('approve', [permit2Address(this.chainId), MaxUint256]);
             // We are unsure if the users calldata contains a permit or not. We just
             // max approve the Universal Router from Permit2 instead, which will cover both cases.
             const permit2Interface = Permit2__factory.createInterface();
             const approveUniversalRouterCallData = permit2Interface.encodeFunctionData('approve', [
                 tokenIn.address,
-                UNIVERSAL_ROUTER_ADDRESS(this.chainId),
+                UNIVERSAL_ROUTER_ADDRESS(swapOptions.version, this.chainId),
                 MAX_UINT160,
                 Math.floor(new Date().getTime() / 1000) + 10000000,
             ]);
@@ -135,6 +155,7 @@ export class TenderlySimulator extends Simulator {
                 to: tokenIn.address,
                 value: '0',
                 from: fromAddress,
+                block_number: blockNumber,
                 simulation_type: TenderlySimulationType.QUICK,
                 save_if_fails: providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.saveTenderlySimulationIfFailed,
             };
@@ -142,9 +163,10 @@ export class TenderlySimulator extends Simulator {
                 network_id: chainId,
                 estimate_gas: true,
                 input: approveUniversalRouterCallData,
-                to: PERMIT2_ADDRESS,
+                to: permit2Address(this.chainId),
                 value: '0',
                 from: fromAddress,
+                block_number: blockNumber,
                 simulation_type: TenderlySimulationType.QUICK,
                 save_if_fails: providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.saveTenderlySimulationIfFailed,
             };
@@ -152,7 +174,7 @@ export class TenderlySimulator extends Simulator {
                 network_id: chainId,
                 input: calldata,
                 estimate_gas: true,
-                to: UNIVERSAL_ROUTER_ADDRESS(this.chainId),
+                to: UNIVERSAL_ROUTER_ADDRESS(swapOptions.version, this.chainId),
                 value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',
                 from: fromAddress,
                 block_number: blockNumber,
@@ -172,42 +194,75 @@ export class TenderlySimulator extends Simulator {
             const url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);
             metric.putMetric('TenderlySimulationUniversalRouterRequests', 1, MetricLoggerUnit.Count);
             const before = Date.now();
-            const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance
-                .post(url, body, opts)
-                .finally(() => {
-                metric.putMetric('TenderlySimulationLatencies', Date.now() - before, MetricLoggerUnit.Milliseconds);
-            });
-            // fire tenderly node endpoint sampling and forget
-            this.sampleNodeEndpoint(approvePermit2, approveUniversalRouter, swap, resp);
-            const latencies = Date.now() - before;
-            log.info(`Tenderly simulation universal router request body: ${JSON.stringify(body, null, 2)} with result ${JSON.stringify(resp, null, 2)}, having latencies ${latencies} in milliseconds.`);
-            metric.putMetric('TenderlySimulationUniversalRouterLatencies', Date.now() - before, MetricLoggerUnit.Milliseconds);
-            metric.putMetric(`TenderlySimulationUniversalRouterResponseStatus${httpStatus}`, 1, MetricLoggerUnit.Count);
-            // Validate tenderly response body
-            if (!resp ||
-                resp.simulation_results.length < 3 ||
-                !resp.simulation_results[2].transaction ||
-                resp.simulation_results[2].transaction.error_message) {
-                this.logTenderlyErrorResponse(resp);
-                return { ...swapRoute, simulationStatus: SimulationStatus.Failed };
+            if (Math.random() * 100 < ((_b = this.tenderlyNodeApiMigrationPercent) !== null && _b !== void 0 ? _b : 0) &&
+                ((_c = this.tenderlyNodeApiEnabledChains) !== null && _c !== void 0 ? _c : []).find((chainId) => chainId === this.chainId)) {
+                const { data: resp, status: httpStatus } = await this.requestNodeSimulation(approvePermit2, approveUniversalRouter, swap);
+                // We will maintain the original metrics TenderlySimulationUniversalRouterLatencies and TenderlySimulationUniversalRouterResponseStatus
+                // so that they don't provide the existing tenderly dashboard as well as simulation alerts
+                // In the meanwhile, we also add tenderly node metrics to distinguish from the tenderly api metrics
+                // Once we migrate to node endpoint 100%, original metrics TenderlySimulationUniversalRouterLatencies and TenderlySimulationUniversalRouterResponseStatus
+                // will work as is
+                metric.putMetric('TenderlySimulationUniversalRouterLatencies', Date.now() - before, MetricLoggerUnit.Milliseconds);
+                metric.putMetric('TenderlyNodeSimulationUniversalRouterLatencies', Date.now() - before, MetricLoggerUnit.Milliseconds);
+                metric.putMetric(`TenderlySimulationUniversalRouterResponseStatus${httpStatus}`, 1, MetricLoggerUnit.Count);
+                metric.putMetric(`TenderlyNodeSimulationUniversalRouterResponseStatus${httpStatus}`, 1, MetricLoggerUnit.Count);
+                // Validate tenderly response body
+                if (!resp ||
+                    !resp.result ||
+                    resp.result.length < 3 ||
+                    resp.result[2].error) {
+                    log.error({ resp }, `Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}.`);
+                    return { ...swapRoute, simulationStatus: SimulationStatus.Failed };
+                }
+                // Parse the gas used in the simulation response object, and then pad it so that we overestimate.
+                estimatedGasUsed = BigNumber.from((Number(resp.result[2].gas) * estimateMultiplier).toFixed(0));
+                log.info({
+                    body,
+                    approvePermit2GasUsed: resp.result[0].gasUsed,
+                    approveUniversalRouterGasUsed: resp.result[1].gasUsed,
+                    swapGasUsed: resp.result[2].gasUsed,
+                    approvePermit2Gas: resp.result[0].gas,
+                    approveUniversalRouterGas: resp.result[1].gas,
+                    swapGas: resp.result[2].gas,
+                    swapWithMultiplier: estimatedGasUsed.toString(),
+                }, 'Successfully Simulated Approvals + Swap via Tenderly node endpoint for Universal Router. Gas used.');
+            }
+            else {
+                const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance
+                    .post(url, body, opts)
+                    .finally(() => {
+                    metric.putMetric('TenderlySimulationLatencies', Date.now() - before, MetricLoggerUnit.Milliseconds);
+                });
+                metric.putMetric('TenderlySimulationUniversalRouterLatencies', Date.now() - before, MetricLoggerUnit.Milliseconds);
+                metric.putMetric('TenderlyApiSimulationUniversalRouterLatencies', Date.now() - before, MetricLoggerUnit.Milliseconds);
+                metric.putMetric(`TenderlySimulationUniversalRouterResponseStatus${httpStatus}`, 1, MetricLoggerUnit.Count);
+                metric.putMetric(`TenderlyApiSimulationUniversalRouterResponseStatus${httpStatus}`, 1, MetricLoggerUnit.Count);
+                // Validate tenderly response body
+                if (!resp ||
+                    resp.simulation_results.length < 3 ||
+                    !resp.simulation_results[2].transaction ||
+                    resp.simulation_results[2].transaction.error_message) {
+                    this.logTenderlyErrorResponse(resp);
+                    return { ...swapRoute, simulationStatus: SimulationStatus.Failed };
+                }
+                // Parse the gas used in the simulation response object, and then pad it so that we overestimate.
+                estimatedGasUsed = BigNumber.from((resp.simulation_results[2].transaction.gas * estimateMultiplier).toFixed(0));
+                log.info({
+                    body,
+                    approvePermit2GasUsed: resp.simulation_results[0].transaction.gas_used,
+                    approveUniversalRouterGasUsed: resp.simulation_results[1].transaction.gas_used,
+                    swapGasUsed: resp.simulation_results[2].transaction.gas_used,
+                    approvePermit2Gas: resp.simulation_results[0].transaction.gas,
+                    approveUniversalRouterGas: resp.simulation_results[1].transaction.gas,
+                    swapGas: resp.simulation_results[2].transaction.gas,
+                    swapWithMultiplier: estimatedGasUsed.toString(),
+                }, 'Successfully Simulated Approvals + Swap via Tenderly Api endpoint for Universal Router. Gas used.');
+                log.info({
+                    body,
+                    swapSimulation: resp.simulation_results[2].simulation,
+                    swapTransaction: resp.simulation_results[2].transaction,
+                }, 'Successful Tenderly Api endpoint Swap Simulation for Universal Router');
             }
-            // Parse the gas used in the simulation response object, and then pad it so that we overestimate.
-            estimatedGasUsed = BigNumber.from((resp.simulation_results[2].transaction.gas * estimateMultiplier).toFixed(0));
-            log.info({
-                body,
-                approvePermit2GasUsed: resp.simulation_results[0].transaction.gas_used,
-                approveUniversalRouterGasUsed: resp.simulation_results[1].transaction.gas_used,
-                swapGasUsed: resp.simulation_results[2].transaction.gas_used,
-                approvePermit2Gas: resp.simulation_results[0].transaction.gas,
-                approveUniversalRouterGas: resp.simulation_results[1].transaction.gas,
-                swapGas: resp.simulation_results[2].transaction.gas,
-                swapWithMultiplier: estimatedGasUsed.toString(),
-            }, 'Successfully Simulated Approvals + Swap via Tenderly for Universal Router. Gas used.');
-            log.info({
-                body,
-                swapSimulation: resp.simulation_results[2].simulation,
-                swapTransaction: resp.simulation_results[2].transaction,
-            }, 'Successful Tenderly Swap Simulation for Universal Router');
         }
         else if (swapOptions.type == SwapType.SWAP_ROUTER_02) {
             const approve = {
@@ -274,7 +329,7 @@ export class TenderlySimulator extends Simulator {
         }
         const { estimatedGasUsedUSD, estimatedGasUsedQuoteToken, estimatedGasUsedGasToken, quoteGasAdjusted, } = await calculateGasUsed(chainId, swapRoute, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, this.provider, providerConfig);
         return {
-            ...initSwapRouteFromExisting(swapRoute, this.v2PoolProvider, this.v3PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken),
+            ...initSwapRouteFromExisting(swapRoute, this.v2PoolProvider, this.v3PoolProvider, this.v4PoolProvider, this.portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken, providerConfig),
             simulationStatus: SimulationStatus.Succeeded,
         };
     }
@@ -313,76 +368,54 @@ export class TenderlySimulator extends Simulator {
                 : {},
         }, 'Failed to Simulate on Tenderly #3 Simulation');
     }
-    async sampleNodeEndpoint(approvePermit2, approveUniversalRouter, swap, gatewayResp) {
-        var _a, _b;
-        if (Math.random() * 100 < ((_a = this.tenderlyNodeApiSamplingPercent) !== null && _a !== void 0 ? _a : 0) &&
-            ((_b = this.tenderlyNodeApiEnabledChains) !== null && _b !== void 0 ? _b : []).find((chainId) => chainId === this.chainId)) {
-            const nodeEndpoint = TENDERLY_NODE_API(this.chainId, this.tenderlyNodeApiKey);
-            const body = {
-                id: 1,
-                jsonrpc: '2.0',
-                method: 'tenderly_estimateGasBundle',
-                params: [
-                    [
-                        {
-                            from: approvePermit2.from,
-                            to: approvePermit2.to,
-                            data: approvePermit2.input,
-                        },
-                        {
-                            from: approveUniversalRouter.from,
-                            to: approveUniversalRouter.to,
-                            data: approveUniversalRouter.input,
-                        },
-                        { from: swap.from, to: swap.to, data: swap.input },
-                    ],
-                    swap.block_number
-                        ? BigNumber.from(swap.block_number)
-                            .toHexString()
-                            .replace('0x0', '0x')
-                        : 'latest',
+    async requestNodeSimulation(approvePermit2, approveUniversalRouter, swap) {
+        const nodeEndpoint = TENDERLY_NODE_API(this.chainId, this.tenderlyNodeApiKey);
+        const blockNumber = swap.block_number
+            ? BigNumber.from(swap.block_number).toHexString().replace('0x0', '0x')
+            : 'latest';
+        const body = {
+            id: 1,
+            jsonrpc: '2.0',
+            method: 'tenderly_estimateGasBundle',
+            params: [
+                [
+                    {
+                        from: approvePermit2.from,
+                        to: approvePermit2.to,
+                        data: approvePermit2.input,
+                    },
+                    {
+                        from: approveUniversalRouter.from,
+                        to: approveUniversalRouter.to,
+                        data: approveUniversalRouter.input,
+                    },
+                    { from: swap.from, to: swap.to, data: swap.input },
                 ],
-            };
-            log.info(`About to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}.`);
-            const before = Date.now();
-            try {
-                // For now, we don't timeout tenderly node endpoint, but we should before we live switch to node endpoint
-                const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance.post(nodeEndpoint, body);
-                const latencies = Date.now() - before;
-                metric.putMetric('TenderlyNodeGasEstimateBundleLatencies', latencies, MetricLoggerUnit.Milliseconds);
-                metric.putMetric('TenderlyNodeGasEstimateBundleSuccess', 1, MetricLoggerUnit.Count);
-                log.info(`Tenderly estimate gas bundle request body: ${JSON.stringify(body, null, 2)} with http status ${httpStatus} result ${JSON.stringify(resp, null, 2)}, having latencies ${latencies} in milliseconds.`);
-                if (gatewayResp.simulation_results.length !== resp.result.length) {
-                    metric.putMetric('TenderlyNodeGasEstimateBundleLengthMismatch', 1, MetricLoggerUnit.Count);
-                    return;
-                }
-                let gasEstimateMismatch = false;
-                for (let i = 0; i <
-                    Math.min(gatewayResp.simulation_results.length, resp.result.length); i++) {
-                    const gatewayGas = gatewayResp.simulation_results[i].transaction.gas;
-                    const nodeGas = Number(resp.result[i].gas);
-                    const gatewayGasUsed = gatewayResp.simulation_results[i].transaction.gas_used;
-                    const nodeGasUsed = Number(resp.result[i].gasUsed);
-                    if (gatewayGas !== nodeGas) {
-                        log.error(`Gateway gas and node gas estimates do not match for index ${i}`, { gatewayGas, nodeGas });
-                        metric.putMetric(`TenderlyNodeGasEstimateBundleGasMismatch${i}`, 1, MetricLoggerUnit.Count);
-                        gasEstimateMismatch = true;
-                    }
-                    if (gatewayGasUsed !== nodeGasUsed) {
-                        log.error(`Gateway gas and node gas used estimates do not match for index ${i}`, { gatewayGasUsed, nodeGasUsed });
-                        metric.putMetric(`TenderlyNodeGasEstimateBundleGasUsedMismatch${i}`, 1, MetricLoggerUnit.Count);
-                        gasEstimateMismatch = true;
-                    }
-                }
-                if (!gasEstimateMismatch) {
-                    metric.putMetric('TenderlyNodeGasEstimateBundleMatch', 1, MetricLoggerUnit.Count);
-                }
-            }
-            catch (err) {
-                log.error(`Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}. Error: ${err}`);
-                metric.putMetric('TenderlyNodeGasEstimateBundleFailure', 1, MetricLoggerUnit.Count);
+                blockNumber,
+            ],
+        };
+        const opts = {
+            timeout: this.tenderlyRequestTimeout,
+        };
+        const before = Date.now();
+        try {
+            // For now, we don't timeout tenderly node endpoint, but we should before we live switch to node endpoint
+            const { data: resp, status: httpStatus } = await this.tenderlyServiceInstance.post(nodeEndpoint, body, opts);
+            const latencies = Date.now() - before;
+            metric.putMetric('TenderlyNodeGasEstimateBundleLatencies', latencies, MetricLoggerUnit.Milliseconds);
+            metric.putMetric('TenderlyNodeGasEstimateBundleSuccess', 1, MetricLoggerUnit.Count);
+            if (httpStatus !== 200) {
+                log.error(`Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}. HTTP Status: ${httpStatus}`, { resp });
+                return { data: resp, status: httpStatus };
             }
+            return { data: resp, status: httpStatus };
+        }
+        catch (err) {
+            log.error({ err }, `Failed to invoke Tenderly Node Endpoint for gas estimation bundle ${JSON.stringify(body, null, 2)}. Error: ${err}`);
+            metric.putMetric('TenderlyNodeGasEstimateBundleFailure', 1, MetricLoggerUnit.Count);
+            // we will have to re-throw the error, so that simulation-provider can catch the error, and return simulation status = failed
+            throw err;
         }
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.d.ts
index 6fdb25a..ab8b712 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.d.ts
@@ -10,6 +10,9 @@ declare type Address = string;
 export declare type TokenFeeResult = {
     buyFeeBps?: BigNumber;
     sellFeeBps?: BigNumber;
+    feeTakenOnTransfer?: boolean;
+    externalTransferFailed?: boolean;
+    sellReverted?: boolean;
 };
 export declare type TokenFeeMap = Record<Address, TokenFeeResult>;
 export interface ITokenFeeFetcher {
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.js
index b80c372..562c930 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.js
@@ -13,24 +13,24 @@ export const DEFAULT_TOKEN_FEE_RESULT = {
 const FEE_DETECTOR_ADDRESS = (chainId) => {
     switch (chainId) {
         case ChainId.MAINNET:
-            return '0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f';
+            return '0xbc708B192552e19A088b4C4B8772aEeA83bCf760';
         case ChainId.OPTIMISM:
-            return '0xa7c17505B43955A474fb6AFE61E093907a7567c9';
+            return '0x95aDC98A949dCD94645A8cD56830D86e4Cf34Eff';
         case ChainId.BNB:
-            return '0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB';
+            return '0xCF6220e4496B091a6b391D48e770f1FbaC63E740';
         case ChainId.POLYGON:
-            return '0x92bCCCb6c8c199AAcA38408621E38Ab6dBfA00B5';
+            return '0xC988e19819a63C0e487c6Ad8d6668Ac773923BF2';
         case ChainId.BASE:
-            return '0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB';
+            return '0xCF6220e4496B091a6b391D48e770f1FbaC63E740';
         case ChainId.ARBITRUM_ONE:
-            return '0x64CF365CC5CCf5E64380bc05Acd5df7D0618c118';
+            return '0x37324D81e318260DC4f0fCb68035028eFdE6F50e';
         case ChainId.CELO:
-            return '0x3dfF0145E68a5880EAbE8F56b6Bc30C4AdCF3413';
+            return '0x8eEa35913DdeD795001562f9bA5b282d3ac04B60';
         case ChainId.AVALANCHE:
-            return '0xBF2B9F6A6eCc4541b31ab2dCF8156D33644Ca3F3';
+            return '0x8269d47c4910B8c87789aA0eC128C11A8614dfC8';
         default:
             // just default to mainnet contract
-            return '0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f';
+            return '0xbc708B192552e19A088b4C4B8772aEeA83bCf760';
     }
 };
 // Amount has to be big enough to avoid rounding errors, but small enough that
@@ -75,15 +75,28 @@ export class OnChainTokenFeeFetcher {
                 // in case of FOT token fee fetch failure, we return null
                 // so that they won't get returned from the token-fee-fetcher
                 // and thus no fee will be applied, and the cache won't cache on FOT tokens with failed fee fetching
-                return { address, buyFeeBps: undefined, sellFeeBps: undefined };
+                return {
+                    address,
+                    buyFeeBps: undefined,
+                    sellFeeBps: undefined,
+                    feeTakenOnTransfer: false,
+                    externalTransferFailed: false,
+                    sellReverted: false,
+                };
             }
         }));
-        results.forEach(({ address, buyFeeBps, sellFeeBps }) => {
+        results.forEach(({ address, buyFeeBps, sellFeeBps, feeTakenOnTransfer, externalTransferFailed, sellReverted, }) => {
             if (buyFeeBps || sellFeeBps) {
-                tokenToResult[address] = { buyFeeBps, sellFeeBps };
+                tokenToResult[address] = {
+                    buyFeeBps,
+                    sellFeeBps,
+                    feeTakenOnTransfer,
+                    externalTransferFailed,
+                    sellReverted,
+                };
             }
         });
         return tokenToResult;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tZmVlLWZldGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Rva2VuLWZlZS1mZXRjaGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFFL0YsT0FBTyxFQUNMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLHVCQUF1QixHQUN4QixNQUFNLFNBQVMsQ0FBQztBQUlqQixNQUFNLHlCQUF5QixHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsTUFBTSwwQkFBMEIsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXJELHFDQUFxQztBQUNyQyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRztJQUN0QyxTQUFTLEVBQUUseUJBQXlCO0lBQ3BDLFVBQVUsRUFBRSwwQkFBMEI7Q0FDdkMsQ0FBQztBQVVGLG9EQUFvRDtBQUNwRCxNQUFNLG9CQUFvQixHQUFHLENBQUMsT0FBZ0IsRUFBRSxFQUFFO0lBQ2hELFFBQVEsT0FBTyxFQUFFO1FBQ2YsS0FBSyxPQUFPLENBQUMsT0FBTztZQUNsQixPQUFPLDRDQUE0QyxDQUFDO1FBQ3RELEtBQUssT0FBTyxDQUFDLFFBQVE7WUFDbkIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLE9BQU8sQ0FBQyxHQUFHO1lBQ2QsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLE9BQU8sQ0FBQyxPQUFPO1lBQ2xCLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxPQUFPLENBQUMsSUFBSTtZQUNmLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxPQUFP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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tZmVlLWZldGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Rva2VuLWZlZS1mZXRjaGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFFL0YsT0FBTyxFQUNMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLHVCQUF1QixHQUN4QixNQUFNLFNBQVMsQ0FBQztBQUlqQixNQUFNLHlCQUF5QixHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsTUFBTSwwQkFBMEIsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXJELHFDQUFxQztBQUNyQyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRztJQUN0QyxTQUFTLEVBQUUseUJBQXlCO0lBQ3BDLFVBQVUsRUFBRSwwQkFBMEI7Q0FDdkMsQ0FBQztBQWFGLG9EQUFvRDtBQUNwRCxNQUFNLG9CQUFvQixHQUFHLENBQUMsT0FBZ0IsRUFBRSxFQUFFO0lBQ2hELFFBQVEsT0FBTyxFQUFFO1FBQ2YsS0FBSyxPQUFPLENBQUMsT0FBTztZQUNsQixPQUFPLDRDQUE0QyxDQUFDO1FBQ3RELEtBQUssT0FBTyxDQUFDLFFBQVE7WUFDbkIsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLE9BQU8sQ0FBQyxHQUFHO1lBQ2QsT0FBTyw0Q0FBNEMsQ0FBQztRQUN0RCxLQUFLLE9BQU8sQ0FBQyxPQUFPO1lBQ2xCLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxPQUFPLENBQUMsSUFBSTtZQUNmLE9BQU8sNENBQTRDLENBQUM7UUFDdEQsS0FBSyxPQUFP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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.d.ts
index 52e4d4f..6c6518f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.d.ts
@@ -1,11 +1,11 @@
-import { ChainId, Token } from '@uniswap/sdk-core';
+import { ChainId, Currency } from '@uniswap/sdk-core';
 import { ICache } from './cache';
 import { ProviderConfig } from './provider';
 import { ITokenFeeFetcher, TokenFeeResult } from './token-fee-fetcher';
 import { TokenValidationResult } from './token-validator-provider';
 export declare const DEFAULT_TOKEN_PROPERTIES_RESULT: TokenPropertiesResult;
-export declare const POSITIVE_CACHE_ENTRY_TTL = 600;
-export declare const NEGATIVE_CACHE_ENTRY_TTL = 600;
+export declare const POSITIVE_CACHE_ENTRY_TTL = 1200;
+export declare const NEGATIVE_CACHE_ENTRY_TTL = 1200;
 declare type Address = string;
 export declare type TokenPropertiesResult = {
     tokenFeeResult?: TokenFeeResult;
@@ -13,7 +13,7 @@ export declare type TokenPropertiesResult = {
 };
 export declare type TokenPropertiesMap = Record<Address, TokenPropertiesResult>;
 export interface ITokenPropertiesProvider {
-    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+    getTokensProperties(currencies: Currency[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
 }
 export declare class TokenPropertiesProvider implements ITokenPropertiesProvider {
     private chainId;
@@ -24,7 +24,8 @@ export declare class TokenPropertiesProvider implements ITokenPropertiesProvider
     private negativeCacheEntryTTL;
     private CACHE_KEY;
     constructor(chainId: ChainId, tokenPropertiesCache: ICache<TokenPropertiesResult>, tokenFeeFetcher: ITokenFeeFetcher, allowList?: Set<string>, positiveCacheEntryTTL?: number, negativeCacheEntryTTL?: number);
-    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+    getTokensProperties(currencies: Currency[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
     private buildAddressesRaw;
+    private buildAddressesCacheKeys;
 }
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.js
index d74197f..460d120 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.js
@@ -1,12 +1,11 @@
-import { ChainId } from '@uniswap/sdk-core';
-import { log, metric, MetricLoggerUnit } from '../util';
+import { getAddressLowerCase, log, metric, MetricLoggerUnit } from '../util';
 import { DEFAULT_TOKEN_FEE_RESULT, } from './token-fee-fetcher';
 import { DEFAULT_ALLOWLIST, TokenValidationResult, } from './token-validator-provider';
 export const DEFAULT_TOKEN_PROPERTIES_RESULT = {
     tokenFeeResult: DEFAULT_TOKEN_FEE_RESULT,
 };
-export const POSITIVE_CACHE_ENTRY_TTL = 600; // 10 minutes in seconds
-export const NEGATIVE_CACHE_ENTRY_TTL = 600; // 10 minutes in seconds
+export const POSITIVE_CACHE_ENTRY_TTL = 1200; // 20 minutes in seconds
+export const NEGATIVE_CACHE_ENTRY_TTL = 1200; // 20 minutes in seconds
 export class TokenPropertiesProvider {
     constructor(chainId, tokenPropertiesCache, tokenFeeFetcher, allowList = DEFAULT_ALLOWLIST, positiveCacheEntryTTL = POSITIVE_CACHE_ENTRY_TTL, negativeCacheEntryTTL = NEGATIVE_CACHE_ENTRY_TTL) {
         this.chainId = chainId;
@@ -17,18 +16,18 @@ export class TokenPropertiesProvider {
         this.negativeCacheEntryTTL = negativeCacheEntryTTL;
         this.CACHE_KEY = (chainId, address) => `token-properties-${chainId}-${address}`;
     }
-    async getTokensProperties(tokens, providerConfig) {
+    async getTokensProperties(currencies, providerConfig) {
         const tokenToResult = {};
-        if (!(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.enableFeeOnTransferFeeFetching) ||
-            this.chainId !== ChainId.MAINNET) {
+        if (!(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.enableFeeOnTransferFeeFetching)) {
             return tokenToResult;
         }
         const addressesToFetchFeesOnchain = [];
-        const addressesRaw = this.buildAddressesRaw(tokens);
-        const tokenProperties = await this.tokenPropertiesCache.batchGet(addressesRaw);
+        const addressesRaw = this.buildAddressesRaw(currencies);
+        const addressesCacheKeys = this.buildAddressesCacheKeys(currencies);
+        const tokenProperties = await this.tokenPropertiesCache.batchGet(addressesCacheKeys);
         // Check if we have cached token validation results for any tokens.
         for (const address of addressesRaw) {
-            const cachedValue = tokenProperties[address];
+            const cachedValue = tokenProperties[this.CACHE_KEY(this.chainId, address.toLowerCase())];
             if (cachedValue) {
                 metric.putMetric('TokenPropertiesProviderBatchGetCacheHit', 1, MetricLoggerUnit.Count);
                 const tokenFee = cachedValue.tokenFeeResult;
@@ -91,15 +90,25 @@ export class TokenPropertiesProvider {
         }
         return tokenToResult;
     }
-    buildAddressesRaw(tokens) {
+    buildAddressesRaw(currencies) {
         const addressesRaw = new Set();
-        for (const token of tokens) {
-            const address = token.address.toLowerCase();
+        for (const currency of currencies) {
+            const address = getAddressLowerCase(currency);
             if (!addressesRaw.has(address)) {
                 addressesRaw.add(address);
             }
         }
         return addressesRaw;
     }
+    buildAddressesCacheKeys(currencies) {
+        const addressesCacheKeys = new Set();
+        for (const currency of currencies) {
+            const addressCacheKey = this.CACHE_KEY(this.chainId, getAddressLowerCase(currency));
+            if (!addressesCacheKeys.has(addressCacheKey)) {
+                addressesCacheKeys.add(addressCacheKey);
+            }
+        }
+        return addressesCacheKeys;
+    }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tcHJvcGVydGllcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdG9rZW4tcHJvcGVydGllcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFJeEQsT0FBTyxFQUNMLHdCQUF3QixHQUl6QixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFDTCxpQkFBaUIsRUFDakIscUJBQXFCLEdBQ3RCLE1BQU0sNEJBQTRCLENBQUM7QUFFcEMsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQTBCO0lBQ3BFLGNBQWMsRUFBRSx3QkFBd0I7Q0FDekMsQ0FBQztBQUNGLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLEdBQUcsQ0FBQyxDQUFDLHdCQUF3QjtBQUNyRSxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxHQUFHLENBQUMsQ0FBQyx3QkFBd0I7QUFnQnJFLE1BQU0sT0FBTyx1QkFBdUI7SUFJbEMsWUFDVSxPQUFnQixFQUNoQixvQkFBbUQsRUFDbkQsZUFBaUMsRUFDakMsWUFBWSxpQkFBaUIsRUFDN0Isd0JBQXdCLHdCQUF3QixFQUNoRCx3QkFBd0Isd0JBQXdCO1FBTGhELFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUErQjtRQUNuRCxvQkFBZSxHQUFmLGVBQWUsQ0FBa0I7UUFDakMsY0FBUyxHQUFULFNBQVMsQ0FBb0I7UUFDN0IsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEyQjtRQUNoRCwwQkFBcUIsR0FBckIscUJBQXFCLENBQTJCO1FBVGxELGNBQVMsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDeEQsb0JB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tcHJvcGVydGllcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdG9rZW4tcHJvcGVydGllcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUk3RSxPQUFPLEVBQ0wsd0JBQXdCLEdBSXpCLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixxQkFBcUIsR0FDdEIsTUFBTSw0QkFBNEIsQ0FBQztBQUVwQyxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBMEI7SUFDcEUsY0FBYyxFQUFFLHdCQUF3QjtDQUN6QyxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsSUFBSSxDQUFDLENBQUMsd0JBQXdCO0FBQ3RFLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLElBQUksQ0FBQyxDQUFDLHdCQUF3QjtBQWdCdEUsTUFBTSxPQUFPLHVCQUF1QjtJQUlsQyxZQUNVLE9BQWdCLEVBQ2hCLG9CQUFtRCxFQUNuRCxlQUFpQyxFQUNqQyxZQUFZLGlCQUFpQixFQUM3Qix3QkFBd0Isd0JBQXdCLEVBQ2hELHdCQUF3Qix3QkFBd0I7UUFMaEQsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQix5QkFBb0IsR0FBcEIsb0JBQW9CLENBQStCO1FBQ25ELG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtRQUNqQyxjQUFTLEdBQVQsU0FBUyxDQUFvQjtRQUM3QiwwQkFBcUIsR0FBckIscUJBQXFCLENBQTJCO1FBQ2hELDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBMkI7UUFUbEQsY0FBUyxHQUFHLENBQUMsT0FBZ0IsRUFBRSxPQUFlLEVBQUUsRUFBRSxDQUN4RCxvQkFBb0IsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
index 74ce338..38900b4 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
@@ -30,6 +30,7 @@ export declare const FEI_MAINNET: Token;
 export declare const UNI_MAINNET: Token;
 export declare const AAVE_MAINNET: Token;
 export declare const LIDO_MAINNET: Token;
+export declare const WSTETH_MAINNET: Token;
 export declare const USDC_SEPOLIA: Token;
 export declare const DAI_SEPOLIA: Token;
 export declare const USDC_GOERLI: Token;
@@ -106,6 +107,18 @@ export declare const USDC_ZORA: Token;
 export declare const USDC_ZKSYNC: Token;
 export declare const USDCE_ZKSYNC: Token;
 export declare const DAI_ZKSYNC: Token;
+export declare const USDC_ABSTRACT_TESTNET: Token;
+export declare const USDC_ZERO: Token;
+export declare const USDC_BOB: Token;
+export declare const USDC_CYBER: Token;
+export declare const USDC_SHAPE: Token;
+export declare const USDC_INK: Token;
+export declare const USDC_REDSTONE_GARNET: Token;
+export declare const USDC_REDSTONE: Token;
+export declare const USDC_ABSTRACT_MAINNET: Token;
+export declare const USDC_ANIME: Token;
+export declare const USDC_ANIME_TESTNET: Token;
+export declare const USDC_MODE: Token;
 export declare class TokenProvider implements ITokenProvider {
     private chainId;
     protected multicall2Provider: IMulticallProvider;
@@ -118,3 +131,5 @@ export declare const DAI_ON: (chainId: ChainId) => Token;
 export declare const USDT_ON: (chainId: ChainId) => Token;
 export declare const USDC_ON: (chainId: ChainId) => Token;
 export declare const WNATIVE_ON: (chainId: ChainId) => Token;
+export declare const V4_SEPOLIA_TEST_A: Token;
+export declare const V4_SEPOLIA_TEST_B: Token;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
index 1fe005e..56c8506 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
@@ -13,6 +13,7 @@ export const FEI_MAINNET = new Token(ChainId.MAINNET, '0x956F47F50A910163D8BF957
 export const UNI_MAINNET = new Token(ChainId.MAINNET, '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984', 18, 'UNI', 'Uniswap');
 export const AAVE_MAINNET = new Token(ChainId.MAINNET, '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', 18, 'AAVE', 'Aave Token');
 export const LIDO_MAINNET = new Token(ChainId.MAINNET, '0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32', 18, 'LDO', 'Lido DAO Token');
+export const WSTETH_MAINNET = new Token(ChainId.MAINNET, '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0', 18, 'wstETH', 'Wrapped liquid staked Ether');
 export const USDC_SEPOLIA = new Token(ChainId.SEPOLIA, '0x6f14C02Fc1F78322cFd7d707aB90f18baD3B54f5', 18, 'USDC', 'USDC Token');
 export const DAI_SEPOLIA = new Token(ChainId.SEPOLIA, '0x7AF17A48a6336F7dc1beF9D485139f7B6f4FB5C8', 18, 'DAI', 'DAI Token');
 export const USDC_GOERLI = new Token(ChainId.GOERLI, '0x07865c6e87b9f70255377e024ace6630c1eaa37f', 6, 'USDC', 'USD//C');
@@ -103,6 +104,18 @@ export const USDC_ZORA = new Token(ChainId.ZORA, '0xCccCCccc7021b32EBb4e8C08314b
 export const USDC_ZKSYNC = new Token(ChainId.ZKSYNC, '0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4', 6, 'USDC', 'USDC');
 export const USDCE_ZKSYNC = new Token(ChainId.ZKSYNC, '0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4', 6, 'USDC.e', 'Bridged USDC (zkSync)');
 export const DAI_ZKSYNC = new Token(ChainId.ZKSYNC, '0x4B9eb6c0b6ea15176BBF62841C6B2A8a398cb656', 18, 'DAI', 'Dai Stablecoin');
+export const USDC_ABSTRACT_TESTNET = new Token(ChainId.ABSTRACT_TESTNET, '0xe4C7fBB0a626ed208021ccabA6Be1566905E2dFc', 6, 'USDC', 'USDC');
+export const USDC_ZERO = new Token(ChainId.ZERO, '0x6a6394F47DD0BAF794808F2749C09bd4Ee874E70', 6, 'USDC', 'USDC');
+export const USDC_BOB = new Token(ChainId.BOB, '0xe75D0fB2C24A55cA1e3F96781a2bCC7bdba058F0', 6, 'USDC', 'USDC');
+export const USDC_CYBER = new Token(ChainId.CYBER, '0x81759adbf5520ad94da10991dfa29ff147d3337b', 6, 'USDC', 'USDC');
+export const USDC_SHAPE = new Token(ChainId.SHAPE, '0xdb7DD8B00EdC5778Fe00B2408bf35C7c054f8BBe', 6, 'USDC', 'USDC');
+export const USDC_INK = new Token(ChainId.INK, '0xF1815bd50389c46847f0Bda824eC8da914045D14', 6, 'USDC.e', 'Bridged USDC (Stargate)');
+export const USDC_REDSTONE_GARNET = new Token(ChainId.REDSTONE_GARNET, '0xD2cA61F265a2dA2d2CD7607F05C26eBfA18AD5F6', 6, 'mUSDC', 'Mock USDC');
+export const USDC_REDSTONE = new Token(ChainId.REDSTONE, '0xD5d59fC063e7548b6015A36fEb10B875924A19be', 6, 'USDC.e', 'Bridged USDC (Lattice)');
+export const USDC_ABSTRACT_MAINNET = new Token(ChainId.ABSTRACT_MAINNET, '0x84A71ccD554Cc1b02749b35d22F684CC8ec987e1', 6, 'USDC.e', 'Bridged USDC');
+export const USDC_ANIME = new Token(ChainId.ANIME, '0x401eCb1D350407f13ba348573E5630B83638E30D', 6, 'USDC', 'USDC');
+export const USDC_ANIME_TESTNET = new Token(ChainId.ANIME_TESTNET, '0x69D30A49fcbaB7142d604635772B7Eef958aE0bd', 6, 'USDC', 'USDC');
+export const USDC_MODE = new Token(ChainId.MODE, '0xd988097fb8612cc24eec14542bc03424c656005f', 6, 'USDC', 'USDC');
 export class TokenProvider {
     constructor(chainId, multicall2Provider) {
         this.chainId = chainId;
@@ -311,6 +324,26 @@ export const USDC_ON = (chainId) => {
             return USDC_ZORA;
         case ChainId.ZKSYNC:
             return USDCE_ZKSYNC;
+        case ChainId.ABSTRACT_TESTNET:
+            return USDC_ABSTRACT_TESTNET;
+        case ChainId.ZERO:
+            return USDC_ZERO;
+        case ChainId.BOB:
+            return USDC_BOB;
+        case ChainId.CYBER:
+            return USDC_CYBER;
+        case ChainId.SHAPE:
+            return USDC_SHAPE;
+        case ChainId.INK:
+            return USDC_INK;
+        case ChainId.REDSTONE_GARNET:
+            return USDC_REDSTONE_GARNET;
+        case ChainId.REDSTONE:
+            return USDC_REDSTONE;
+        case ChainId.ABSTRACT_MAINNET:
+            return USDC_ABSTRACT_MAINNET;
+        case ChainId.ANIME_TESTNET:
+            return USDC_ANIME_TESTNET;
         default:
             throw new Error(`Chain id: ${chainId} not supported`);
     }
@@ -318,4 +351,6 @@ export const USDC_ON = (chainId) => {
 export const WNATIVE_ON = (chainId) => {
     return WRAPPED_NATIVE_CURRENCY[chainId];
 };
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+export const V4_SEPOLIA_TEST_A = new Token(ChainId.SEPOLIA, '0x0275C79896215a790dD57F436E1103D4179213be', 18, 'A', 'MockA');
+export const V4_SEPOLIA_TEST_B = new Token(ChainId.SEPOLIA, '0x1a6990c77cfbba398beb230dd918e28aab71eec2', 18, 'B', 'MockB');
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.d.ts
index e854240..3237ca3 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.d.ts
@@ -1,4 +1,5 @@
 import { ChainId } from '@uniswap/sdk-core';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
 import { ICache } from './../cache';
 import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
 /**
@@ -7,11 +8,7 @@ import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
  * @export
  * @class CachingV2SubgraphProvider
  */
-export declare class CachingV2SubgraphProvider implements IV2SubgraphProvider {
-    private chainId;
-    protected subgraphProvider: IV2SubgraphProvider;
-    private cache;
-    private SUBGRAPH_KEY;
+export declare class CachingV2SubgraphProvider extends CachingSubgraphProvider<V2SubgraphPool> implements IV2SubgraphProvider {
     /**
      * Creates an instance of CachingV2SubgraphProvider.
      * @param chainId The chain id to use.
@@ -19,5 +16,4 @@ export declare class CachingV2SubgraphProvider implements IV2SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId: ChainId, subgraphProvider: IV2SubgraphProvider, cache: ICache<V2SubgraphPool[]>);
-    getPools(): Promise<V2SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js
index f963e1b..fbe9bb8 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js
@@ -1,10 +1,12 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
 /**
  * Provider for getting V2 pools, with functionality for caching the results.
  *
  * @export
  * @class CachingV2SubgraphProvider
  */
-export class CachingV2SubgraphProvider {
+export class CachingV2SubgraphProvider extends CachingSubgraphProvider {
     /**
      * Creates an instance of CachingV2SubgraphProvider.
      * @param chainId The chain id to use.
@@ -12,19 +14,7 @@ export class CachingV2SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId, subgraphProvider, cache) {
-        this.chainId = chainId;
-        this.subgraphProvider = subgraphProvider;
-        this.cache = cache;
-        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-v2-${chainId}`;
-    }
-    async getPools() {
-        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
-        if (cachedPools) {
-            return cachedPools;
-        }
-        const pools = await this.subgraphProvider.getPools();
-        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
-        return pools;
+        super(chainId, subgraphProvider, cache, Protocol.V2);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyx5QkFBeUI7SUFHcEM7Ozs7O09BS0c7SUFDSCxZQUNVLE9BQWdCLEVBQ2QsZ0JBQXFDLEVBQ3ZDLEtBQStCO1FBRi9CLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDZCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXFCO1FBQ3ZDLFVBQUssR0FBTCxLQUFLLENBQTBCO1FBWGpDLGlCQUFZLEdBQUcsQ0FBQyxPQUFnQixFQUFFLEVBQUUsQ0FBQyxxQkFBcUIsT0FBTyxFQUFFLENBQUM7SUFZekUsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRO1FBQ25CLE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUUxRSxJQUFJLFdBQVcsRUFBRTtZQUNmLE9BQU8sV0FBVyxDQUFDO1NBQ3BCO1FBRUQsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFckQsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUU3RCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFHL0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFLdkU7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8seUJBQ1gsU0FBUSx1QkFBdUM7SUFHL0M7Ozs7O09BS0c7SUFDSCxZQUNFLE9BQWdCLEVBQ2hCLGdCQUFxQyxFQUNyQyxLQUErQjtRQUUvQixLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
index 583a05b..7ce3ea0 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
@@ -3,7 +3,7 @@ import { Pair } from '@uniswap/v2-sdk';
 import _ from 'lodash';
 import { WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
 import { log } from '../../util/log';
-import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CEUR_CELO, CUSD_CELO, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, ETH_BNB, OP_OPTIMISM, USDB_BLAST, USDC_ARBITRUM, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_MAINNET, USDC_MOONBEAM, USDC_NATIVE_ARBITRUM, USDC_OPTIMISM, USDC_POLYGON, USDC_ZKSYNC, USDCE_ZKSYNC, USDT_ARBITRUM, USDT_BNB, USDT_MAINNET, USDT_OPTIMISM, WBTC_ARBITRUM, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WETH_POLYGON, WMATIC_POLYGON } from '../token-provider';
+import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CEUR_CELO, CUSD_CELO, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, ETH_BNB, OP_OPTIMISM, USDB_BLAST, USDCE_ZKSYNC, USDC_ABSTRACT_MAINNET, USDC_ABSTRACT_TESTNET, USDC_ANIME, USDC_ANIME_TESTNET, USDC_ARBITRUM, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_BOB, USDC_CYBER, USDC_INK, USDC_MAINNET, USDC_MODE, USDC_MOONBEAM, USDC_NATIVE_ARBITRUM, USDC_OPTIMISM, USDC_POLYGON, USDC_REDSTONE, USDC_REDSTONE_GARNET, USDC_SHAPE, USDC_ZERO, USDC_ZKSYNC, USDT_ARBITRUM, USDT_BNB, USDT_MAINNET, USDT_OPTIMISM, WBTC_ARBITRUM, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WETH_POLYGON, WMATIC_POLYGON, WSTETH_MAINNET, } from '../token-provider';
 const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.MAINNET]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],
@@ -11,6 +11,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
         USDC_MAINNET,
         USDT_MAINNET,
         WBTC_MAINNET,
+        WSTETH_MAINNET,
     ],
     [ChainId.GOERLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GOERLI]],
     [ChainId.SEPOLIA]: [WRAPPED_NATIVE_CURRENCY[ChainId.SEPOLIA]],
@@ -67,7 +68,38 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.ZORA_SEPOLIA]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZORA_SEPOLIA]],
     [ChainId.ROOTSTOCK]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROOTSTOCK]],
     [ChainId.BLAST]: [WRAPPED_NATIVE_CURRENCY[ChainId.BLAST], USDB_BLAST],
-    [ChainId.ZKSYNC]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC], USDCE_ZKSYNC, USDC_ZKSYNC],
+    [ChainId.ZKSYNC]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC],
+        USDCE_ZKSYNC,
+        USDC_ZKSYNC,
+    ],
+    [ChainId.ABSTRACT_TESTNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_TESTNET],
+        USDC_ABSTRACT_TESTNET,
+    ],
+    [ChainId.ZERO]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZERO], USDC_ZERO],
+    [ChainId.BOB]: [WRAPPED_NATIVE_CURRENCY[ChainId.BOB], USDC_BOB],
+    [ChainId.CYBER]: [WRAPPED_NATIVE_CURRENCY[ChainId.CYBER], USDC_CYBER],
+    [ChainId.SHAPE]: [WRAPPED_NATIVE_CURRENCY[ChainId.SHAPE], USDC_SHAPE],
+    [ChainId.INK]: [WRAPPED_NATIVE_CURRENCY[ChainId.INK], USDC_INK],
+    [ChainId.REDSTONE]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE],
+        USDC_REDSTONE,
+    ],
+    [ChainId.REDSTONE_GARNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE_GARNET],
+        USDC_REDSTONE_GARNET,
+    ],
+    [ChainId.ABSTRACT_MAINNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_MAINNET],
+        USDC_ABSTRACT_MAINNET,
+    ],
+    [ChainId.ANIME_TESTNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ANIME_TESTNET],
+        USDC_ANIME_TESTNET,
+    ],
+    [ChainId.ANIME]: [WRAPPED_NATIVE_CURRENCY[ChainId.ANIME], USDC_ANIME],
+    [ChainId.MODE]: [WRAPPED_NATIVE_CURRENCY[ChainId.MODE], USDC_MODE],
 };
 /**
  * Provider that does not get data from an external source and instead returns
@@ -126,4 +158,4 @@ export class StaticV2SubgraphProvider {
         return subgraphPools;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBUyxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFDTCxZQUFZLEVBQ1osT0FBTyxFQUNQLFFBQVEsRUFDUixJQUFJLEVBQ0osU0FBUyxFQUNULFNBQVMsRUFDVCxZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxRQUFRLEVBQ1IsV0FBVyxFQUNYLFlBQVksRUFDWixZQUFZLEVBQ1osT0FBTyxFQUNQLFdBQVcsRUFDWCxVQUFVLEVBQ1YsYUFBYSxFQUNiLFNBQVMsRUFDVCxTQUFTLEVBQ1QsUUFBUSxFQUNSLFlBQVksRUFDWixhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixZQUFZLEVBQ1osV0FBVyxFQUFFLFlBQVksRUFDekIsYUFBYSxFQUNiLFFBQVEsRUFDUixZQUFZLEVBQ1osYUFBYSxFQUNiLGFBQWEsRUFDYixZQUFZLEVBQ1osYUFBYSxFQUNiLGFBQWEsRUFDYixZQUFZLEVBQ1osY0FBYyxFQUNmLE1BQU0sbUJBQW1CLENBQUM7QUFRM0IsTUFBTSw2QkFBNkIsR0FBbUI7SUFDcEQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDakIsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6QyxXQUFXO1FBQ1gsWUFBWTtRQUNaLFlBQVk7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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBUyxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFDTCxZQUFZLEVBQ1osT0FBTyxFQUNQLFFBQVEsRUFDUixJQUFJLEVBQ0osU0FBUyxFQUNULFNBQVMsRUFDVCxZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxRQUFRLEVBQ1IsV0FBVyxFQUNYLFlBQVksRUFDWixZQUFZLEVBQ1osT0FBTyxFQUNQLFdBQVcsRUFDWCxVQUFVLEVBQ1YsWUFBWSxFQUNaLHFCQUFxQixFQUNyQixxQkFBcUIsRUFDckIsVUFBVSxFQUNWLGtCQUFrQixFQUNsQixhQUFhLEVBQ2IsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1IsUUFBUSxFQUNSLFVBQVUsRUFDVixRQUFRLEVBQ1IsWUFBWSxFQUNaLFNBQVMsRUFDVCxhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixZQUFZLEVBQ1osYUFBYSxFQUNiLG9CQUFvQixFQUNwQixVQUFVLEVBQ1YsU0FBUyxFQUNULFdBQVcsRUFDWCxhQUFhLEVBQ2IsUUFBUSxFQUNSLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxFQUNiLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxFQUNiLFlBQVksRUFDWixjQUFjLEVBQ2QsY0FBYyxHQUNmLE1BQU0s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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.d.ts
index 2321341..cf61ac1 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.d.ts
@@ -1,5 +1,4 @@
-import { Token } from '@uniswap/sdk-core';
-import { ProviderConfig } from '../provider';
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
 import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
 /**
  * Provider for getting V2 subgraph pools that falls back to a different provider
@@ -8,12 +7,10 @@ import { IV2SubgraphProvider, V2SubgraphPool } from './subgraph-provider';
  * @export
  * @class V2SubgraphProviderWithFallBacks
  */
-export declare class V2SubgraphProviderWithFallBacks implements IV2SubgraphProvider {
-    private fallbacks;
+export declare class V2SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks<V2SubgraphPool> implements IV2SubgraphProvider {
     /**
      * Creates an instance of V2SubgraphProviderWithFallBacks.
      * @param fallbacks Ordered list of `IV2SubgraphProvider` to try to get pools from.
      */
     constructor(fallbacks: IV2SubgraphProvider[]);
-    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V2SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.js
index 98ba2c7..5fba4bc 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider-with-fallback.js
@@ -1,4 +1,5 @@
-import { log } from '../../util';
+import { Protocol } from '@uniswap/router-sdk';
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
 /**
  * Provider for getting V2 subgraph pools that falls back to a different provider
  * in the event of failure.
@@ -6,26 +7,13 @@ import { log } from '../../util';
  * @export
  * @class V2SubgraphProviderWithFallBacks
  */
-export class V2SubgraphProviderWithFallBacks {
+export class V2SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks {
     /**
      * Creates an instance of V2SubgraphProviderWithFallBacks.
      * @param fallbacks Ordered list of `IV2SubgraphProvider` to try to get pools from.
      */
     constructor(fallbacks) {
-        this.fallbacks = fallbacks;
-    }
-    async getPools(tokenIn, tokenOut, providerConfig) {
-        for (let i = 0; i < this.fallbacks.length; i++) {
-            const provider = this.fallbacks[i];
-            try {
-                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);
-                return pools;
-            }
-            catch (err) {
-                log.info(`Failed to get subgraph pools for V2 from fallback #${i}`);
-            }
-        }
-        throw new Error('Failed to get subgraph pools from any providers');
+        super(fallbacks, Protocol.V2);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBS2pDOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUFDMUM7OztPQUdHO0lBQ0gsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFHbkY7Ozs7OztHQU1HO0FBQ0gsTUFBTSxPQUFPLCtCQUNYLFNBQVEsNkJBQTZDO0lBR3JEOzs7T0FHRztJQUNILFlBQVksU0FBZ0M7UUFDMUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider.js
index a10088d..db81014 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/subgraph-provider.js
@@ -81,7 +81,7 @@ export class V2SubgraphProvider {
                         onRetry: (err, retry) => {
                             pools = [];
                             retries += 1;
-                            log.info({ err }, `Failed request for page of pools from subgraph. Retry attempt: ${retry}`);
+                            log.error({ err, lastId }, `Failed request for page of pools from subgraph. Retry attempt: ${retry}. LastId: ${lastId}`);
                         },
                     });
                 } while (pairsPage.length > 0);
@@ -90,7 +90,6 @@ export class V2SubgraphProvider {
                 metric.putMetric(`V2SubgraphProvider.chain_${this.chainId}.getPools.paginate.retries`, retries);
                 return pairs;
             };
-            /* eslint-disable no-useless-catch */
             try {
                 const getPoolsPromise = getPools();
                 const timerPromise = timeout.set(this.timeout).then(() => {
@@ -100,12 +99,12 @@ export class V2SubgraphProvider {
                 return;
             }
             catch (err) {
+                log.error({ err }, 'Error fetching V2 Subgraph Pools.');
                 throw err;
             }
             finally {
                 timeout.clear();
             }
-            /* eslint-enable no-useless-catch */
         }, {
             retries: this.retries,
             onRetry: (err, retry) => {
@@ -129,7 +128,7 @@ export class V2SubgraphProvider {
         // Which helps filter pools with manipulated prices/liquidity.
         // TODO: Remove. Temporary fix to ensure tokens without trackedReserveETH are in the list.
         const FEI = '0x956f47f50a910163d8bf957cf5846d573e7f87ca';
-        const tracked = pools.filter(pool => pool.token0.id == FEI ||
+        const tracked = pools.filter((pool) => pool.token0.id == FEI ||
             pool.token1.id == FEI ||
             parseFloat(pool.trackedReserveETH) > this.trackedEthThreshold);
         metric.putMetric(`V2SubgraphProvider.chain_${this.chainId}.getPools.filter.length`, tracked.length);
@@ -165,4 +164,4 @@ export class V2SubgraphProvider {
         return poolsSanitized;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YyL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEtBQUssTUFBTSxhQUFhLENBQUM7QUFDaEMsT0FBTyxPQUFPLE1BQU0sZUFBZSxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxHQUFHLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDckQsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUErQjNDLE1BQU0scUJBQXFCLEdBQXNDO0lBQy9ELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLGtFQUFrRTtDQUNyRSxDQUFDO0FBRUYsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsK0NBQStDO0FBZ0J2RSxNQUFNLE9BQU8sa0JBQWtCO0lBRzdCLFlBQ1UsT0FBZ0IsRUFDaEIsVUFBVSxDQUFDLEVBQ1gsVUFBVSxNQUFNLEVBQ2hCLFdBQVcsSUFBSSxFQUNmLFdBQVcsU0FBUyxFQUNwQixzQkFBc0IsS0FBSyxFQUMzQix3QkFBd0IsTUFBTSxDQUFDLFNBQVMsRUFDeEMsbUJBQTRCOztRQVA1QixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQUk7UUFDWCxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQU87UUFDZixhQUFRLEdBQVIsUUFBUSxDQUFZO1FBQ3BCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBUTtRQUMzQiwwQkFBcUIsR0FBckIscUJBQXFCLENBQW1CO1FBQ3hD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.d.ts
index 8c30a1a..0c5c027 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.d.ts
@@ -1,4 +1,5 @@
 import { ChainId } from '@uniswap/sdk-core';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
 import { ICache } from './../cache';
 import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
 /**
@@ -7,11 +8,7 @@ import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
  * @export
  * @class CachingV3SubgraphProvider
  */
-export declare class CachingV3SubgraphProvider implements IV3SubgraphProvider {
-    private chainId;
-    protected subgraphProvider: IV3SubgraphProvider;
-    private cache;
-    private SUBGRAPH_KEY;
+export declare class CachingV3SubgraphProvider extends CachingSubgraphProvider<V3SubgraphPool> implements IV3SubgraphProvider {
     /**
      * Creates an instance of CachingV3SubgraphProvider.
      * @param chainId The chain id to use.
@@ -19,5 +16,4 @@ export declare class CachingV3SubgraphProvider implements IV3SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId: ChainId, subgraphProvider: IV3SubgraphProvider, cache: ICache<V3SubgraphPool[]>);
-    getPools(): Promise<V3SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js
index f20cd07..aa4e6a4 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js
@@ -1,10 +1,12 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
 /**
  * Provider for getting V3 pools, with functionality for caching the results.
  *
  * @export
  * @class CachingV3SubgraphProvider
  */
-export class CachingV3SubgraphProvider {
+export class CachingV3SubgraphProvider extends CachingSubgraphProvider {
     /**
      * Creates an instance of CachingV3SubgraphProvider.
      * @param chainId The chain id to use.
@@ -12,19 +14,7 @@ export class CachingV3SubgraphProvider {
      * @param cache Cache instance to hold cached pools.
      */
     constructor(chainId, subgraphProvider, cache) {
-        this.chainId = chainId;
-        this.subgraphProvider = subgraphProvider;
-        this.cache = cache;
-        this.SUBGRAPH_KEY = (chainId) => `subgraph-pools-${chainId}`;
-    }
-    async getPools() {
-        const cachedPools = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
-        if (cachedPools) {
-            return cachedPools;
-        }
-        const pools = await this.subgraphProvider.getPools();
-        await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
-        return pools;
+        super(chainId, subgraphProvider, cache, Protocol.V3);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyx5QkFBeUI7SUFHcEM7Ozs7O09BS0c7SUFDSCxZQUNVLE9BQWdCLEVBQ2QsZ0JBQXFDLEVBQ3ZDLEtBQStCO1FBRi9CLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDZCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXFCO1FBQ3ZDLFVBQUssR0FBTCxLQUFLLENBQTBCO1FBWGpDLGlCQUFZLEdBQUcsQ0FBQyxPQUFnQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsT0FBTyxFQUFFLENBQUM7SUFZdEUsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRO1FBQ25CLE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUUxRSxJQUFJLFdBQVcsRUFBRTtZQUNmLE9BQU8sV0FBVyxDQUFDO1NBQ3BCO1FBRUQsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFckQsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUU3RCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFJdkU7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8seUJBQ1gsU0FBUSx1QkFBdUM7SUFHL0M7Ozs7O09BS0c7SUFDSCxZQUNFLE9BQWdCLEVBQ2hCLGdCQUFxQyxFQUNyQyxLQUErQjtRQUUvQixLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.d.ts
index c5aba29..930f2ce 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.d.ts
@@ -1,8 +1,15 @@
+import { BigNumber } from '@ethersproject/bignumber';
 import { ChainId, Token } from '@uniswap/sdk-core';
 import { FeeAmount, Pool } from '@uniswap/v3-sdk';
 import { Options as RetryOptions } from 'async-retry';
-import { IMulticallProvider } from '../multicall-provider';
+import { IMulticallProvider, Result } from '../multicall-provider';
+import { ILiquidity, ISlot0, PoolProvider } from '../pool-provider';
 import { ProviderConfig } from '../provider';
+declare type V3ISlot0 = ISlot0 & {
+    sqrtPriceX96: BigNumber;
+    tick: number;
+};
+declare type V3ILiquidity = ILiquidity;
 /**
  * Provider or getting V3 pools.
  *
@@ -38,23 +45,33 @@ export declare type V3PoolAccessor = {
     getAllPools: () => Pool[];
 };
 export declare type V3PoolRetryOptions = RetryOptions;
-export declare class V3PoolProvider implements IV3PoolProvider {
-    protected chainId: ChainId;
-    protected multicall2Provider: IMulticallProvider;
-    protected retryOptions: V3PoolRetryOptions;
+export declare type V3PoolConstruct = [Token, Token, FeeAmount];
+export declare class V3PoolProvider extends PoolProvider<Token, V3PoolConstruct, V3ISlot0, V3ILiquidity, V3PoolAccessor> implements IV3PoolProvider {
     private POOL_ADDRESS_CACHE;
     /**
-     * Creates an instance of V3PoolProvider.
+     * Creates an instance of V4PoolProvider.
      * @param chainId The chain id to use.
      * @param multicall2Provider The multicall provider to use to get the pools.
      * @param retryOptions The retry options for each call to the multicall.
      */
     constructor(chainId: ChainId, multicall2Provider: IMulticallProvider, retryOptions?: V3PoolRetryOptions);
-    getPools(tokenPairs: [Token, Token, FeeAmount][], providerConfig?: ProviderConfig): Promise<V3PoolAccessor>;
+    getPools(tokenPairs: V3PoolConstruct[], providerConfig?: ProviderConfig): Promise<V3PoolAccessor>;
     getPoolAddress(tokenA: Token, tokenB: Token, feeAmount: FeeAmount): {
         poolAddress: string;
         token0: Token;
         token1: Token;
     };
-    private getPoolsData;
+    protected getLiquidityFunctionName(): string;
+    protected getSlot0FunctionName(): string;
+    protected getPoolsData<TReturn>(poolAddresses: string[], functionName: string, providerConfig?: ProviderConfig): Promise<Result<TReturn>[]>;
+    protected getPoolIdentifier(pool: V3PoolConstruct): {
+        poolIdentifier: string;
+        currency0: Token;
+        currency1: Token;
+    };
+    protected instantiatePool(pool: V3PoolConstruct, slot0: V3ISlot0, liquidity: V3ILiquidity): Pool;
+    protected instantiatePoolAccessor(poolIdentifierToPool: {
+        [p: string]: Pool;
+    }): V3PoolAccessor;
 }
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.js
index 62cb6bd..7783fb4 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/pool-provider.js
@@ -1,13 +1,12 @@
 import { computePoolAddress, Pool } from '@uniswap/v3-sdk';
 import retry from 'async-retry';
-import _ from 'lodash';
 import { IUniswapV3PoolState__factory } from '../../types/v3/factories/IUniswapV3PoolState__factory';
 import { V3_CORE_FACTORY_ADDRESSES } from '../../util/addresses';
 import { log } from '../../util/log';
-import { poolToString } from '../../util/routes';
-export class V3PoolProvider {
+import { PoolProvider } from '../pool-provider';
+export class V3PoolProvider extends PoolProvider {
     /**
-     * Creates an instance of V3PoolProvider.
+     * Creates an instance of V4PoolProvider.
      * @param chainId The chain id to use.
      * @param multicall2Provider The multicall provider to use to get the pools.
      * @param retryOptions The retry options for each call to the multicall.
@@ -17,79 +16,57 @@ export class V3PoolProvider {
         minTimeout: 50,
         maxTimeout: 500,
     }) {
-        this.chainId = chainId;
-        this.multicall2Provider = multicall2Provider;
-        this.retryOptions = retryOptions;
+        super(chainId, multicall2Provider, retryOptions);
         // Computing pool addresses is slow as it requires hashing, encoding etc.
         // Addresses never change so can always be cached.
         this.POOL_ADDRESS_CACHE = {};
     }
     async getPools(tokenPairs, providerConfig) {
-        const poolAddressSet = new Set();
-        const sortedTokenPairs = [];
-        const sortedPoolAddresses = [];
-        for (const tokenPair of tokenPairs) {
-            const [tokenA, tokenB, feeAmount] = tokenPair;
-            const { poolAddress, token0, token1 } = this.getPoolAddress(tokenA, tokenB, feeAmount);
-            if (poolAddressSet.has(poolAddress)) {
-                continue;
-            }
-            poolAddressSet.add(poolAddress);
-            sortedTokenPairs.push([token0, token1, feeAmount]);
-            sortedPoolAddresses.push(poolAddress);
-        }
-        log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);
-        const [slot0Results, liquidityResults] = await Promise.all([
-            this.getPoolsData(sortedPoolAddresses, 'slot0', providerConfig),
-            this.getPoolsData(sortedPoolAddresses, 'liquidity', providerConfig),
+        return await super.getPoolsInternal(tokenPairs, providerConfig);
+    }
+    getPoolAddress(tokenA, tokenB, feeAmount) {
+        const { poolIdentifier, currency0, currency1 } = this.getPoolIdentifier([
+            tokenA,
+            tokenB,
+            feeAmount,
         ]);
-        log.info(`Got liquidity and slot0s for ${poolAddressSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
-            ? `as of block: ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}.`
-            : ``}`);
-        const poolAddressToPool = {};
-        const invalidPools = [];
-        for (let i = 0; i < sortedPoolAddresses.length; i++) {
-            const slot0Result = slot0Results[i];
-            const liquidityResult = liquidityResults[i];
-            // These properties tell us if a pool is valid and initialized or not.
-            if (!(slot0Result === null || slot0Result === void 0 ? void 0 : slot0Result.success) ||
-                !(liquidityResult === null || liquidityResult === void 0 ? void 0 : liquidityResult.success) ||
-                slot0Result.result.sqrtPriceX96.eq(0)) {
-                const [token0, token1, fee] = sortedTokenPairs[i];
-                invalidPools.push([token0, token1, fee]);
-                continue;
-            }
-            const [token0, token1, fee] = sortedTokenPairs[i];
-            const slot0 = slot0Result.result;
-            const liquidity = liquidityResult.result[0];
-            const pool = new Pool(token0, token1, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick);
-            const poolAddress = sortedPoolAddresses[i];
-            poolAddressToPool[poolAddress] = pool;
-        }
-        if (invalidPools.length > 0) {
-            log.info({
-                invalidPools: _.map(invalidPools, ([token0, token1, fee]) => `${token0.symbol}/${token1.symbol}/${fee / 10000}%`),
-            }, `${invalidPools.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);
-        }
-        const poolStrs = _.map(Object.values(poolAddressToPool), poolToString);
-        log.debug({ poolStrs }, `Found ${poolStrs.length} valid pools`);
         return {
-            getPool: (tokenA, tokenB, feeAmount) => {
-                const { poolAddress } = this.getPoolAddress(tokenA, tokenB, feeAmount);
-                return poolAddressToPool[poolAddress];
-            },
-            getPoolByAddress: (address) => poolAddressToPool[address],
-            getAllPools: () => Object.values(poolAddressToPool),
+            poolAddress: poolIdentifier,
+            token0: currency0,
+            token1: currency1,
         };
     }
-    getPoolAddress(tokenA, tokenB, feeAmount) {
+    getLiquidityFunctionName() {
+        return 'liquidity';
+    }
+    getSlot0FunctionName() {
+        return 'slot0';
+    }
+    async getPoolsData(poolAddresses, functionName, providerConfig) {
+        const { results, blockNumber } = await retry(async () => {
+            return this.multicall2Provider.callSameFunctionOnMultipleContracts({
+                addresses: poolAddresses,
+                contractInterface: IUniswapV3PoolState__factory.createInterface(),
+                functionName: functionName,
+                providerConfig,
+            });
+        }, this.retryOptions);
+        log.debug(`Pool data fetched as of block ${blockNumber}`);
+        return results;
+    }
+    getPoolIdentifier(pool) {
+        const [tokenA, tokenB, feeAmount] = pool;
         const [token0, token1] = tokenA.sortsBefore(tokenB)
             ? [tokenA, tokenB]
             : [tokenB, tokenA];
         const cacheKey = `${this.chainId}/${token0.address}/${token1.address}/${feeAmount}`;
         const cachedAddress = this.POOL_ADDRESS_CACHE[cacheKey];
         if (cachedAddress) {
-            return { poolAddress: cachedAddress, token0, token1 };
+            return {
+                poolIdentifier: cachedAddress,
+                currency0: token0,
+                currency1: token1,
+            };
         }
         const poolAddress = computePoolAddress({
             factoryAddress: V3_CORE_FACTORY_ADDRESSES[this.chainId],
@@ -100,19 +77,25 @@ export class V3PoolProvider {
             chainId: this.chainId,
         });
         this.POOL_ADDRESS_CACHE[cacheKey] = poolAddress;
-        return { poolAddress, token0, token1 };
+        return {
+            poolIdentifier: poolAddress,
+            currency0: token0,
+            currency1: token1,
+        };
     }
-    async getPoolsData(poolAddresses, functionName, providerConfig) {
-        const { results, blockNumber } = await retry(async () => {
-            return this.multicall2Provider.callSameFunctionOnMultipleContracts({
-                addresses: poolAddresses,
-                contractInterface: IUniswapV3PoolState__factory.createInterface(),
-                functionName: functionName,
-                providerConfig,
-            });
-        }, this.retryOptions);
-        log.debug(`Pool data fetched as of block ${blockNumber}`);
-        return results;
+    instantiatePool(pool, slot0, liquidity) {
+        const [token0, token1, feeAmount] = pool;
+        return new Pool(token0, token1, feeAmount, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick);
+    }
+    instantiatePoolAccessor(poolIdentifierToPool) {
+        return {
+            getPool: (tokenA, tokenB, feeAmount) => {
+                const { poolAddress } = this.getPoolAddress(tokenA, tokenB, feeAmount);
+                return poolIdentifierToPool[poolAddress];
+            },
+            getPoolByAddress: (address) => poolIdentifierToPool[address],
+            getAllPools: () => Object.values(poolIdentifierToPool),
+        };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsa0JBQWtCLEVBQWEsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEUsT0FBTyxLQUFrQyxNQUFNLGFBQWEsQ0FBQztBQUM3RCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDckcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDakUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQThEakQsTUFBTSxPQUFPLGNBQWM7SUFLekI7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN0QyxlQUFtQztRQUMzQyxPQUFPLEVBQUUsQ0FBQztRQUNWLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLEdBQUc7S0FDaEI7UUFOUyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMsaUJBQVksR0FBWixZQUFZLENBSXJCO1FBakJILHlFQUF5RTtRQUN6RSxrREFBa0Q7UUFDMUMsdUJBQWtCLEdBQThCLEVBQUUsQ0FBQztJQWdCeEQsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQXVDLEVBQ3ZDLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sZ0JBQWdCLEdBQXFDLEVBQUUsQ0FBQztRQUM5RCxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUV6QyxLQUFLLE1BQU0sU0FB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsa0JBQWtCLEVBQWEsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEUsT0FBTyxLQUFrQyxNQUFNLGFBQWEsQ0FBQztBQUU3RCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNyRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckMsT0FBTyxFQUFzQixZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQXlEcEUsTUFBTSxPQUFPLGNBQ1gsU0FBUSxZQU1QO0lBT0Q7Ozs7O09BS0c7SUFDSCxZQUNFLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN0QyxlQUFtQztRQUNqQyxPQUFPLEVBQUUsQ0FBQztRQUNWLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLEdBQUc7S0FDaEI7UUFFRCxLQUFLLENBQUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFlBQVksQ0FBQyxDQUFDO1FBbkJuRCx5RUFBeUU7UUFDekUsa0RBQWtEO1FBQzFDLHVCQUFrQixHQUE4QixFQUFFLENBQUM7SUFrQjNELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBUSxDQUNuQixVQUE2QixFQUM3QixjQUErQjtRQUUvQixPQUFPLE1BQU0sS0FBSyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBRSxjQUFjLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRU0sY0FBYyxDQUNuQixNQUFhLEVBQ2IsTUFBYSxFQUNiLFNBQW9CO1FBRXBCLE1BQU0sRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxpQkFB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
index 6637dc1..d4230f2 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
@@ -6,7 +6,7 @@ import _ from 'lodash';
 import { unparseFeeAmount } from '../../util/amounts';
 import { WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
 import { log } from '../../util/log';
-import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GOERLI, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, ETH_BNB, OP_OPTIMISM, USDB_BLAST, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDC_ZKSYNC, USDCE_ZKSYNC, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GOERLI, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS } from '../token-provider';
+import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GOERLI, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, ETH_BNB, OP_OPTIMISM, USDB_BLAST, USDCE_ZKSYNC, USDC_ABSTRACT_MAINNET, USDC_ABSTRACT_TESTNET, USDC_ANIME, USDC_ANIME_TESTNET, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_BOB, USDC_CYBER, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_INK, USDC_MAINNET, USDC_MODE, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_REDSTONE, USDC_REDSTONE_GARNET, USDC_SEPOLIA, USDC_SHAPE, USDC_ZERO, USDC_ZKSYNC, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GOERLI, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WSTETH_MAINNET, WXDAI_GNOSIS, } from '../token-provider';
 const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.MAINNET]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],
@@ -14,6 +14,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
         USDC_MAINNET,
         USDT_MAINNET,
         WBTC_MAINNET,
+        WSTETH_MAINNET,
     ],
     [ChainId.GOERLI]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.GOERLI],
@@ -102,7 +103,38 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.ZORA_SEPOLIA]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZORA_SEPOLIA]],
     [ChainId.ROOTSTOCK]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROOTSTOCK]],
     [ChainId.BLAST]: [WRAPPED_NATIVE_CURRENCY[ChainId.BLAST], USDB_BLAST],
-    [ChainId.ZKSYNC]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC], USDCE_ZKSYNC, USDC_ZKSYNC],
+    [ChainId.ZKSYNC]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC],
+        USDCE_ZKSYNC,
+        USDC_ZKSYNC,
+    ],
+    [ChainId.ABSTRACT_TESTNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_TESTNET],
+        USDC_ABSTRACT_TESTNET,
+    ],
+    [ChainId.ZERO]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZERO], USDC_ZERO],
+    [ChainId.BOB]: [WRAPPED_NATIVE_CURRENCY[ChainId.BOB], USDC_BOB],
+    [ChainId.CYBER]: [WRAPPED_NATIVE_CURRENCY[ChainId.CYBER], USDC_CYBER],
+    [ChainId.SHAPE]: [WRAPPED_NATIVE_CURRENCY[ChainId.SHAPE], USDC_SHAPE],
+    [ChainId.INK]: [WRAPPED_NATIVE_CURRENCY[ChainId.INK], USDC_INK],
+    [ChainId.REDSTONE]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE],
+        USDC_REDSTONE,
+    ],
+    [ChainId.REDSTONE_GARNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE_GARNET],
+        USDC_REDSTONE_GARNET,
+    ],
+    [ChainId.ABSTRACT_MAINNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_MAINNET],
+        USDC_ABSTRACT_MAINNET,
+    ],
+    [ChainId.ANIME_TESTNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ANIME_TESTNET],
+        USDC_ANIME_TESTNET,
+    ],
+    [ChainId.ANIME]: [WRAPPED_NATIVE_CURRENCY[ChainId.ANIME], USDC_ANIME],
+    [ChainId.MODE]: [WRAPPED_NATIVE_CURRENCY[ChainId.MODE], USDC_MODE],
 };
 /**
  * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.
@@ -172,4 +204,4 @@ export class StaticV3SubgraphProvider {
         return subgraphPools;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xELE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE9BQU8sRUFDTCxZQUFZLEVBQ1osT0FBTyxFQUNQLFFBQVEsRUFDUixJQUFJLEVBQ0osY0FBYyxFQUNkLFNBQVMsRUFDVCxtQkFBbUIsRUFDbkIsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxRQUFRLEVBQ1Isa0JBQWtCLEVBQ2xCLFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsVUFBVSxFQUNWLGFBQWEsRUFDYixvQkFBb0IsRUFDcEIsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1Isb0JBQW9CLEVBQ3BCLFdBQVcsRUFDWCxZQUFZLEVBQ1osYUFBYSxFQUNiLGFBQWEsRUFDYixvQkFBb0IsRUFDcEIsWUFBWSxFQUNaLFlBQVksRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUN2QyxhQUFhLEVBQ2IsUUFBUSxF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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.d.ts
index 9a70262..1875038 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.d.ts
@@ -1,5 +1,4 @@
-import { Token } from '@uniswap/sdk-core';
-import { ProviderConfig } from '../provider';
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
 import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
 /**
  * Provider for getting V3 subgraph pools that falls back to a different provider
@@ -8,8 +7,6 @@ import { IV3SubgraphProvider, V3SubgraphPool } from './subgraph-provider';
  * @export
  * @class V3SubgraphProviderWithFallBacks
  */
-export declare class V3SubgraphProviderWithFallBacks implements IV3SubgraphProvider {
-    private fallbacks;
+export declare class V3SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks<V3SubgraphPool> implements IV3SubgraphProvider {
     constructor(fallbacks: IV3SubgraphProvider[]);
-    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.js
index 213cf5b..b726189 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider-with-fallback.js
@@ -1,4 +1,5 @@
-import { log } from '../../util';
+import { Protocol } from '@uniswap/router-sdk';
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
 /**
  * Provider for getting V3 subgraph pools that falls back to a different provider
  * in the event of failure.
@@ -6,22 +7,9 @@ import { log } from '../../util';
  * @export
  * @class V3SubgraphProviderWithFallBacks
  */
-export class V3SubgraphProviderWithFallBacks {
+export class V3SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks {
     constructor(fallbacks) {
-        this.fallbacks = fallbacks;
-    }
-    async getPools(tokenIn, tokenOut, providerConfig) {
-        for (let i = 0; i < this.fallbacks.length; i++) {
-            const provider = this.fallbacks[i];
-            try {
-                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);
-                return pools;
-            }
-            catch (err) {
-                log.info(`Failed to get subgraph pools for V3 from fallback #${i}`);
-            }
-        }
-        throw new Error('Failed to get subgraph pools from any providers');
+        super(fallbacks, Protocol.V3);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBS2pDOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUFDMUMsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFHbkY7Ozs7OztHQU1HO0FBQ0gsTUFBTSxPQUFPLCtCQUNYLFNBQVEsNkJBQTZDO0lBR3JELFlBQVksU0FBZ0M7UUFDMUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.d.ts
index 5dc70a2..0cb4ed0 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.d.ts
@@ -1,6 +1,6 @@
 import { ChainId, Token } from '@uniswap/sdk-core';
 import { ProviderConfig } from '../provider';
-import { V2SubgraphPool } from '../v2/subgraph-provider';
+import { SubgraphProvider } from '../subgraph-provider';
 export interface V3SubgraphPool {
     id: string;
     feeTier: string;
@@ -14,8 +14,22 @@ export interface V3SubgraphPool {
     tvlETH: number;
     tvlUSD: number;
 }
-export declare const printV3SubgraphPool: (s: V3SubgraphPool) => string;
-export declare const printV2SubgraphPool: (s: V2SubgraphPool) => string;
+export declare type V3RawSubgraphPool = {
+    id: string;
+    feeTier: string;
+    liquidity: string;
+    token0: {
+        symbol: string;
+        id: string;
+    };
+    token1: {
+        symbol: string;
+        id: string;
+    };
+    totalValueLockedUSD: string;
+    totalValueLockedETH: string;
+    totalValueLockedUSDUntracked: string;
+};
 /**
  * Provider for getting V3 pools from the Subgraph
  *
@@ -25,15 +39,8 @@ export declare const printV2SubgraphPool: (s: V2SubgraphPool) => string;
 export interface IV3SubgraphProvider {
     getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
 }
-export declare class V3SubgraphProvider implements IV3SubgraphProvider {
-    private chainId;
-    private retries;
-    private timeout;
-    private rollback;
-    private trackedEthThreshold;
-    private untrackedUsdThreshold;
-    private subgraphUrlOverride?;
-    private client;
-    constructor(chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrlOverride?: string | undefined);
-    getPools(_tokenIn?: Token, _tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V3SubgraphPool[]>;
+export declare class V3SubgraphProvider extends SubgraphProvider<V3RawSubgraphPool, V3SubgraphPool> implements IV3SubgraphProvider {
+    constructor(chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrlOverride?: string);
+    protected subgraphQuery(blockNumber?: number): string;
+    protected mapSubgraphPool(rawPool: V3RawSubgraphPool): V3SubgraphPool;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js
index 3774c60..d4d53d0 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js
@@ -1,11 +1,6 @@
+import { Protocol } from '@uniswap/router-sdk';
 import { ChainId } from '@uniswap/sdk-core';
-import retry from 'async-retry';
-import Timeout from 'await-timeout';
-import { gql, GraphQLClient } from 'graphql-request';
-import _ from 'lodash';
-import { log, metric } from '../../util';
-export const printV3SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}/${s.feeTier}`;
-export const printV2SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}`;
+import { SubgraphProvider } from '../subgraph-provider';
 const SUBGRAPH_URL_BY_CHAIN = {
     [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',
     [ChainId.OPTIMISM]: 'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis',
@@ -22,33 +17,16 @@ const SUBGRAPH_URL_BY_CHAIN = {
     [ChainId.BASE]: 'https://api.studio.thegraph.com/query/48211/uniswap-v3-base/version/latest',
     [ChainId.BLAST]: 'https://gateway-arbitrum.network.thegraph.com/api/0ae45f0bf40ae2e73119b44ccd755967/subgraphs/id/2LHovKznvo8YmKC9ZprPjsYAZDCc4K5q4AYz8s3cnQn1',
 };
-const PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.
-export class V3SubgraphProvider {
+export class V3SubgraphProvider extends SubgraphProvider {
     constructor(chainId, retries = 2, timeout = 30000, rollback = true, trackedEthThreshold = 0.01, untrackedUsdThreshold = Number.MAX_VALUE, subgraphUrlOverride) {
-        var _a;
-        this.chainId = chainId;
-        this.retries = retries;
-        this.timeout = timeout;
-        this.rollback = rollback;
-        this.trackedEthThreshold = trackedEthThreshold;
-        this.untrackedUsdThreshold = untrackedUsdThreshold;
-        this.subgraphUrlOverride = subgraphUrlOverride;
-        const subgraphUrl = (_a = this.subgraphUrlOverride) !== null && _a !== void 0 ? _a : SUBGRAPH_URL_BY_CHAIN[this.chainId];
-        if (!subgraphUrl) {
-            throw new Error(`No subgraph url for chain id: ${this.chainId}`);
-        }
-        this.client = new GraphQLClient(subgraphUrl);
+        super(Protocol.V3, chainId, retries, timeout, rollback, trackedEthThreshold, untrackedUsdThreshold, subgraphUrlOverride !== null && subgraphUrlOverride !== void 0 ? subgraphUrlOverride : SUBGRAPH_URL_BY_CHAIN[chainId]);
     }
-    async getPools(_tokenIn, _tokenOut, providerConfig) {
-        const beforeAll = Date.now();
-        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
-            ? await providerConfig.blockNumber
-            : undefined;
-        const query = gql `
-      query getPools($pageSize: Int!, $id: String) {
-        pools(
-          first: $pageSize
-          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}
+    subgraphQuery(blockNumber) {
+        return `
+    query getPools($pageSize: Int!, $id: String) {
+      pools(
+        first: $pageSize
+        ${blockNumber ? `block: { number: ${blockNumber} }` : ``}
           where: { id_gt: $id }
         ) {
           id
@@ -67,100 +45,22 @@ export class V3SubgraphProvider {
           totalValueLockedUSDUntracked
         }
       }
-    `;
-        let pools = [];
-        log.info(`Getting V3 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
-            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`
-            : ''}.`);
-        let retries = 0;
-        await retry(async () => {
-            const timeout = new Timeout();
-            const getPools = async () => {
-                let lastId = '';
-                let pools = [];
-                let poolsPage = [];
-                // metrics variables
-                let totalPages = 0;
-                do {
-                    totalPages += 1;
-                    const poolsResult = await this.client.request(query, {
-                        pageSize: PAGE_SIZE,
-                        id: lastId,
-                    });
-                    poolsPage = poolsResult.pools;
-                    pools = pools.concat(poolsPage);
-                    lastId = pools[pools.length - 1].id;
-                    metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.paginate.pageSize`, poolsPage.length);
-                } while (poolsPage.length > 0);
-                metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.paginate`, totalPages);
-                metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.pools.length`, pools.length);
-                return pools;
-            };
-            /* eslint-disable no-useless-catch */
-            try {
-                const getPoolsPromise = getPools();
-                const timerPromise = timeout.set(this.timeout).then(() => {
-                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);
-                });
-                pools = await Promise.race([getPoolsPromise, timerPromise]);
-                return;
-            }
-            catch (err) {
-                throw err;
-            }
-            finally {
-                timeout.clear();
-            }
-            /* eslint-enable no-useless-catch */
-        }, {
-            retries: this.retries,
-            onRetry: (err, retry) => {
-                retries += 1;
-                if (this.rollback &&
-                    blockNumber &&
-                    _.includes(err.message, 'indexed up to')) {
-                    metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.indexError`, 1);
-                    blockNumber = blockNumber - 10;
-                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);
-                }
-                metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.timeout`, 1);
-                pools = [];
-                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);
+   `;
+    }
+    mapSubgraphPool(rawPool) {
+        return {
+            id: rawPool.id,
+            feeTier: rawPool.feeTier,
+            liquidity: rawPool.liquidity,
+            token0: {
+                id: rawPool.token0.id,
+            },
+            token1: {
+                id: rawPool.token1.id,
             },
-        });
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.retries`, retries);
-        const untrackedPools = pools.filter(pool => parseInt(pool.liquidity) > 0 ||
-            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold ||
-            parseFloat(pool.totalValueLockedUSDUntracked) > this.untrackedUsdThreshold);
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.untracked.length`, untrackedPools.length);
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.untracked.percent`, (untrackedPools.length / pools.length) * 100);
-        const beforeFilter = Date.now();
-        const poolsSanitized = pools
-            .filter((pool) => parseInt(pool.liquidity) > 0 ||
-            parseFloat(pool.totalValueLockedETH) > this.trackedEthThreshold)
-            .map((pool) => {
-            const { totalValueLockedETH, totalValueLockedUSD } = pool;
-            return {
-                id: pool.id.toLowerCase(),
-                feeTier: pool.feeTier,
-                token0: {
-                    id: pool.token0.id.toLowerCase(),
-                },
-                token1: {
-                    id: pool.token1.id.toLowerCase(),
-                },
-                liquidity: pool.liquidity,
-                tvlETH: parseFloat(totalValueLockedETH),
-                tvlUSD: parseFloat(totalValueLockedUSD),
-            };
-        });
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.filter.latency`, Date.now() - beforeFilter);
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.filter.length`, poolsSanitized.length);
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.filter.percent`, (poolsSanitized.length / pools.length) * 100);
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools`, 1);
-        metric.putMetric(`V3SubgraphProvider.chain_${this.chainId}.getPools.latency`, Date.now() - beforeAll);
-        log.info(`Got ${pools.length} V3 pools from the subgraph. ${poolsSanitized.length} after filtering`);
-        return poolsSanitized;
+            tvlETH: parseFloat(rawPool.totalValueLockedETH),
+            tvlUSD: parseFloat(rawPool.totalValueLockedUSD),
+        };
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFHbkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFpQ3hELE1BQU0scUJBQXFCLEdBQXNDO0lBQy9ELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLDREQUE0RDtJQUM5RCxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEIsMkVBQTJFO0lBQzdFLGtDQUFrQztJQUNsQyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLEVBQUU7SUFDOUIsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQ3BCLG9FQUFvRTtJQUN0RSxrQ0FBa0M7SUFDbEMsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxFQUFFO0lBQzlCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLHNFQUFzRTtJQUN4RSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFDWixpRUFBaUU7SUFDbkUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQ2Qsb0VBQW9FO0lBQ3RFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUNYLHVFQUF1RTtJQUN6RSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFDakIsb0VBQW9FO0lBQ3RFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUNaLDRFQUE0RTtJQUM5RSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFDYiw4SUFBOEk7Q0FDakosQ0FBQztBQWdCRixNQUFNLE9BQU8sa0JBQ1gsU0FBUSxnQkFBbUQ7SUFHM0QsWUFDRSxPQUFnQixFQUNoQixPQUFPLEdBQUcsQ0FBQyxFQUNYLE9BQU8sR0FBRyxLQUFLLEVBQ2YsUUFBUSxHQUFHLElBQUksRUFDZixtQkFBbUIsR0FBRyxJQUFJLEVBQzFCLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQ3hDLG1CQUE0QjtRQUU1QixLQUFLLENBQ0gsUUFBUSxDQUFDLEVBQUUsRUFDWCxPQUFPLEVBQ1AsT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsbUJBQW1CLEVBQ25CLHFCQUFxQixFQUNyQixtQkFBbUIsYUFBbkIsbUJBQW1CLGNBQW5CLG1CQUFtQixHQUFJLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxDQUN0RCxDQUFDO0lBQ0osQ0FBQztJQUVrQixhQUFhLENBQUMsV0FBb0I7UUFDbkQsT0FBTzs7OztVQUlELFdBQVcsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLFdBQVcsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUI1RCxDQUFDO0lBQ0gsQ0FBQztJQUVrQixlQUFlLENBQ2hDLE9BQTBCO1FBRTFCLE9BQU87WUFDTCxFQUFFLEVBQUUsT0FBTyxDQUFDLEVBQUU7WUFDZCxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87WUFDeEIsU0FBUyxFQUFFLE9BQU8sQ0FBQyxTQUFTO1lBQzVCLE1BQU0sRUFBRTtnQkFDTixFQUFFLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2FBQ3RCO1lBQ0QsTUFBTSxFQUFFO2dCQUNOLEVBQUUsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7YUFDdEI7WUFDRCxNQUFNLEVBQUUsVUFBVSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztZQUMvQyxNQUFNLEVBQUUsVUFBVSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztTQUNoRCxDQUFDO0lBQ0osQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-pool-provider.d.ts
new file mode 100644
index 0000000..52106f2
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-pool-provider.d.ts
@@ -0,0 +1,24 @@
+import { ChainId, Currency } from '@uniswap/sdk-core';
+import { Pool } from '@uniswap/v4-sdk';
+import { ICache } from '../cache';
+import { ProviderConfig } from '../provider';
+import { IV4PoolProvider, V4PoolAccessor } from './pool-provider';
+export declare class CachingV4PoolProvider implements IV4PoolProvider {
+    protected chainId: ChainId;
+    protected poolProvider: IV4PoolProvider;
+    private cache;
+    private POOL_KEY;
+    /**
+     * Creates an instance of CachingV4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param poolProvider The provider to use to get the pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId: ChainId, poolProvider: IV4PoolProvider, cache: ICache<Pool>);
+    getPools(currencyPairs: [Currency, Currency, number, number, string][], providerConfig?: ProviderConfig): Promise<V4PoolAccessor>;
+    getPoolId(currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string): {
+        poolId: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-pool-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-pool-provider.js
new file mode 100644
index 0000000..b1afc66
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-pool-provider.js
@@ -0,0 +1,74 @@
+import _ from 'lodash';
+import { log, metric, MetricLoggerUnit } from '../../util';
+export class CachingV4PoolProvider {
+    /**
+     * Creates an instance of CachingV4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param poolProvider The provider to use to get the pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId, poolProvider, cache) {
+        this.chainId = chainId;
+        this.poolProvider = poolProvider;
+        this.cache = cache;
+        this.POOL_KEY = (chainId, address, blockNumber) => blockNumber
+            ? `pool-${chainId}-${address}-${blockNumber}`
+            : `pool-${chainId}-${address}`;
+    }
+    async getPools(currencyPairs, providerConfig) {
+        const poolIdSet = new Set();
+        const poolsToGetCurrencyPairs = [];
+        const poolsToGetIds = [];
+        const poolIdToPool = {};
+        const blockNumber = await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber);
+        for (const [currencyA, currencyB, feeAmount, tickSpacing, hooks,] of currencyPairs) {
+            const { poolId, currency0, currency1 } = this.getPoolId(currencyA, currencyB, feeAmount, tickSpacing, hooks);
+            if (poolIdSet.has(poolId)) {
+                continue;
+            }
+            poolIdSet.add(poolId);
+            const cachedPool = await this.cache.get(this.POOL_KEY(this.chainId, poolId, blockNumber));
+            if (cachedPool) {
+                metric.putMetric('V4_INMEMORY_CACHING_POOL_HIT_IN_MEMORY', 1, MetricLoggerUnit.None);
+                poolIdToPool[poolId] = cachedPool;
+                continue;
+            }
+            metric.putMetric('V4_INMEMORY_CACHING_POOL_MISS_NOT_IN_MEMORY', 1, MetricLoggerUnit.None);
+            poolsToGetCurrencyPairs.push([
+                currency0,
+                currency1,
+                feeAmount,
+                tickSpacing,
+                hooks,
+            ]);
+            poolsToGetIds.push(poolId);
+        }
+        log.info({
+            poolsFound: _.map(Object.values(poolIdToPool), (p) => `${p.token0.symbol} ${p.token1.symbol} ${p.fee}`),
+            poolsToGetTokenPairs: _.map(poolsToGetCurrencyPairs, (t) => `${t[0].symbol} ${t[1].symbol} ${t[2]}`),
+        }, `Found ${Object.keys(poolIdToPool).length} V4 pools already in local cache. About to get liquidity and slot0s for ${poolsToGetCurrencyPairs.length} pools.`);
+        if (poolsToGetCurrencyPairs.length > 0) {
+            const poolAccessor = await this.poolProvider.getPools(poolsToGetCurrencyPairs, providerConfig);
+            for (const address of poolsToGetIds) {
+                const pool = poolAccessor.getPoolById(address);
+                if (pool) {
+                    poolIdToPool[address] = pool;
+                    // We don't want to wait for this caching to complete before returning the pools.
+                    this.cache.set(this.POOL_KEY(this.chainId, address, blockNumber), pool);
+                }
+            }
+        }
+        return {
+            getPool: (currencyA, currencyB, fee, tickSpacing, hooks) => {
+                const { poolId } = this.poolProvider.getPoolId(currencyA, currencyB, fee, tickSpacing, hooks);
+                return poolIdToPool[poolId];
+            },
+            getPoolById: (poolId) => poolIdToPool[poolId],
+            getAllPools: () => Object.values(poolIdToPool),
+        };
+    }
+    getPoolId(currencyA, currencyB, fee, tickSpacing, hooks) {
+        return this.poolProvider.getPoolId(currencyA, currencyB, fee, tickSpacing, hooks);
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92NC9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBSzNELE1BQU0sT0FBTyxxQkFBcUI7SUFVaEM7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLFlBQTZCLEVBQy9CLEtBQW1CO1FBRmpCLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsaUJBQVksR0FBWixZQUFZLENBQWlCO1FBQy9CLFVBQUssR0FBTCxLQUFLLENBQWM7UUFsQnJCLGFBQVEsR0FBRyxDQUNqQixPQUFnQixFQUNoQixPQUFlLEVBQ2YsV0FBb0IsRUFDcEIsRUFBRSxDQUNGLFdBQVc7WUFDVCxDQUFDLENBQUMsUUFBUSxPQUFPLElBQUksT0FBTyxJQUFJLFdBQVcsRUFBRTtZQUM3QyxDQUFDLENBQUMsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFZaEMsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRLENBQ25CLGFBQTZELEVBQzdELGNBQStCO1FBRS9CLE1BQU0sU0FBUyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ2pELE1BQU0sdUJBQXVCLEdBRXpCLEVBQUUsQ0FBQztRQUNQLE1BQU0sYUFBYSxHQUFhLEVBQUUsQ0FBQztRQUNuQyxNQUFNLFlBQVksR0FBK0IsRUFBRSxDQUFDO1FBQ3BELE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQSxjQUFjLGFBQWQsY0FBYyx1QkFBZCxjQUFjLENBQUUsV0FBVyxDQUFBLENBQUM7UUFFdEQsS0FBSyxNQUFNLENBQ1QsU0FBUyxFQUNULFNBQVMsRUFDVCxTQUFTLEVBQ1QsV0FBVyxF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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-subgraph-provider.d.ts
new file mode 100644
index 0000000..eaf3167
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-subgraph-provider.d.ts
@@ -0,0 +1,19 @@
+import { ChainId } from '@uniswap/sdk-core';
+import { ICache } from '../cache';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+/**
+ * Provider for getting V4 pools, with functionality for caching the results.
+ *
+ * @export
+ * @class CachingV4SubgraphProvider
+ */
+export declare class CachingV4SubgraphProvider extends CachingSubgraphProvider<V4SubgraphPool> implements IV4SubgraphProvider {
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId: ChainId, subgraphProvider: IV4SubgraphProvider, cache: ICache<V4SubgraphPool[]>);
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-subgraph-provider.js
new file mode 100644
index 0000000..01b1cfc
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/caching-subgraph-provider.js
@@ -0,0 +1,20 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { CachingSubgraphProvider } from '../caching-subgraph-provider';
+/**
+ * Provider for getting V4 pools, with functionality for caching the results.
+ *
+ * @export
+ * @class CachingV4SubgraphProvider
+ */
+export class CachingV4SubgraphProvider extends CachingSubgraphProvider {
+    /**
+     * Creates an instance of CachingV3SubgraphProvider.
+     * @param chainId The chain id to use.
+     * @param subgraphProvider The provider to use to get the subgraph pools when not in the cache.
+     * @param cache Cache instance to hold cached pools.
+     */
+    constructor(chainId, subgraphProvider, cache) {
+        super(chainId, subgraphProvider, cache, Protocol.V4);
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjQvY2FjaGluZy1zdWJncmFwaC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFHL0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFHdkU7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8seUJBQ1gsU0FBUSx1QkFBdUM7SUFHL0M7Ozs7O09BS0c7SUFDSCxZQUNFLE9BQWdCLEVBQ2hCLGdCQUFxQyxFQUNyQyxLQUErQjtRQUUvQixLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/pool-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/pool-provider.d.ts
new file mode 100644
index 0000000..01a380e
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/pool-provider.d.ts
@@ -0,0 +1,57 @@
+import { ChainId, Currency } from '@uniswap/sdk-core';
+import { Pool } from '@uniswap/v4-sdk';
+import { Options as RetryOptions } from 'async-retry';
+import { IMulticallProvider, Result } from '../multicall-provider';
+import { ProviderConfig } from '../provider';
+import { ILiquidity, ISlot0, PoolProvider } from '../pool-provider';
+declare type V4ISlot0 = ISlot0 & {
+    poolId: string;
+    protocolFee: number;
+    lpFee: number;
+};
+declare type V4ILiquidity = ILiquidity;
+export interface IV4PoolProvider {
+    getPools(currencyPairs: V4PoolConstruct[], providerConfig?: ProviderConfig): Promise<V4PoolAccessor>;
+    getPoolId(currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string): {
+        poolId: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+}
+export declare type V4PoolAccessor = {
+    getPool: (currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string) => Pool | undefined;
+    getPoolById: (poolId: string) => Pool | undefined;
+    getAllPools: () => Pool[];
+};
+export declare type V4PoolRetryOptions = RetryOptions;
+export declare type V4PoolConstruct = [Currency, Currency, number, number, string];
+export declare function sortsBefore(currencyA: Currency, currencyB: Currency): boolean;
+export declare class V4PoolProvider extends PoolProvider<Currency, V4PoolConstruct, V4ISlot0, V4ILiquidity, V4PoolAccessor> implements IV4PoolProvider {
+    private POOL_ID_CACHE;
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId: ChainId, multicall2Provider: IMulticallProvider, retryOptions?: V4PoolRetryOptions);
+    getPools(currencyPairs: V4PoolConstruct[], providerConfig?: ProviderConfig): Promise<V4PoolAccessor>;
+    getPoolId(currencyA: Currency, currencyB: Currency, fee: number, tickSpacing: number, hooks: string): {
+        poolId: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+    protected getLiquidityFunctionName(): string;
+    protected getSlot0FunctionName(): string;
+    protected getPoolsData<TReturn>(poolIds: string[], functionName: string, providerConfig?: ProviderConfig): Promise<Result<TReturn>[]>;
+    protected getPoolIdentifier(pool: V4PoolConstruct): {
+        poolIdentifier: string;
+        currency0: Currency;
+        currency1: Currency;
+    };
+    protected instantiatePool(pool: V4PoolConstruct, slot0: V4ISlot0, liquidity: V4ILiquidity): Pool;
+    protected instantiatePoolAccessor(poolIdentifierToPool: {
+        [p: string]: Pool;
+    }): V4PoolAccessor;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/pool-provider.js
new file mode 100644
index 0000000..45fac1f
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/pool-provider.js
@@ -0,0 +1,108 @@
+import { ADDRESS_ZERO } from '@uniswap/router-sdk';
+import { Pool } from '@uniswap/v4-sdk';
+import retry from 'async-retry';
+import { log, STATE_VIEW_ADDRESSES } from '../../util';
+import { StateView__factory } from '../../types/other/factories/StateView__factory';
+import { PoolProvider } from '../pool-provider';
+// TODO: export sortsBefore from v4-sdk https://github.com/Uniswap/sdks/tree/main/sdks/v4-sdk/src/utils to avoid duplication
+export function sortsBefore(currencyA, currencyB) {
+    if (currencyA.isNative)
+        return true;
+    if (currencyB.isNative)
+        return false;
+    return currencyA.wrapped.sortsBefore(currencyB.wrapped);
+}
+export class V4PoolProvider extends PoolProvider {
+    /**
+     * Creates an instance of V4PoolProvider.
+     * @param chainId The chain id to use.
+     * @param multicall2Provider The multicall provider to use to get the pools.
+     * @param retryOptions The retry options for each call to the multicall.
+     */
+    constructor(chainId, multicall2Provider, retryOptions = {
+        retries: 2,
+        minTimeout: 50,
+        maxTimeout: 500,
+    }) {
+        super(chainId, multicall2Provider, retryOptions);
+        // Computing pool id is slow as it requires hashing, encoding etc.
+        // Addresses never change so can always be cached.
+        this.POOL_ID_CACHE = {};
+    }
+    async getPools(currencyPairs, providerConfig) {
+        return await super.getPoolsInternal(currencyPairs, providerConfig);
+    }
+    getPoolId(currencyA, currencyB, fee, tickSpacing, hooks) {
+        const { poolIdentifier, currency0, currency1 } = this.getPoolIdentifier([
+            currencyA,
+            currencyB,
+            fee,
+            tickSpacing,
+            hooks,
+        ]);
+        return { poolId: poolIdentifier, currency0, currency1 };
+    }
+    getLiquidityFunctionName() {
+        return 'getLiquidity';
+    }
+    getSlot0FunctionName() {
+        return 'getSlot0';
+    }
+    async getPoolsData(poolIds, functionName, providerConfig) {
+        const { results, blockNumber } = await retry(async () => {
+            // NOTE: V4 pools are a singleton living under PoolsManager.
+            // We have to retrieve the pool data from the state view contract.
+            // To begin with, we will be consistent with how v4 subgraph retrieves the pool state - via state view.
+            return this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
+                address: STATE_VIEW_ADDRESSES[this.chainId],
+                contractInterface: StateView__factory.createInterface(),
+                functionName: functionName,
+                functionParams: poolIds.map((poolId) => [poolId]),
+                providerConfig,
+            });
+        }, this.retryOptions);
+        log.debug(`Pool data fetched as of block ${blockNumber}`);
+        return results;
+    }
+    getPoolIdentifier(pool) {
+        const [currencyA, currencyB, fee, tickSpacing, hooks] = pool;
+        const [currency0, currency1] = sortsBefore(currencyA, currencyB)
+            ? [currencyA, currencyB]
+            : [currencyB, currencyA];
+        const currency0Addr = currency0.isNative
+            ? ADDRESS_ZERO
+            : currency0.wrapped.address;
+        const currency1Addr = currency1.isNative
+            ? ADDRESS_ZERO
+            : currency1.wrapped.address;
+        const cacheKey = `${this.chainId}/${currency0Addr}/${currency1Addr}/${fee}/${tickSpacing}/${hooks}`;
+        const cachedId = this.POOL_ID_CACHE[cacheKey];
+        if (cachedId) {
+            return { poolIdentifier: cachedId, currency0, currency1 };
+        }
+        const poolId = Pool.getPoolId(currency0, currency1, fee, tickSpacing, hooks);
+        this.POOL_ID_CACHE[cacheKey] = poolId;
+        return { poolIdentifier: poolId, currency0, currency1 };
+    }
+    instantiatePool(pool, slot0, liquidity) {
+        const [currency0, currency1, fee, tickSpacing, hooks] = pool;
+        return new Pool(currency0, currency1, fee, tickSpacing, hooks, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick);
+    }
+    instantiatePoolAccessor(poolIdentifierToPool) {
+        return {
+            getPool: (currencyA, currencyB, fee, tickSpacing, hooks) => {
+                const { poolIdentifier } = this.getPoolIdentifier([
+                    currencyA,
+                    currencyB,
+                    fee,
+                    tickSpacing,
+                    hooks,
+                ]);
+                return poolIdentifierToPool[poolIdentifier];
+            },
+            getPoolById: (poolId) => poolIdentifierToPool[poolId],
+            getAllPools: () => Object.values(poolIdentifierToPool),
+        };
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjQvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFbkQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sS0FBa0MsTUFBTSxhQUFhLENBQUM7QUFDN0QsT0FBTyxFQUFFLEdBQUcsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUl2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNwRixPQUFPLEVBQXNCLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBd0NwRSw0SEFBNEg7QUFDNUgsTUFBTSxVQUFVLFdBQVcsQ0FBQyxTQUFtQixFQUFFLFNBQW1CO0lBQ2xFLElBQUksU0FBUyxDQUFDLFFBQVE7UUFBRSxPQUFPLElBQUksQ0FBQztJQUNwQyxJQUFJLFNBQVMsQ0FBQyxRQUFRO1FBQUUsT0FBTyxLQUFLLENBQUM7SUFDckMsT0FBTyxTQUFTLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQUVELE1BQU0sT0FBTyxjQUNYLFNBQVEsWUFNUDtJQU9EOzs7OztPQUtHO0lBQ0gsWUFDRSxPQUFnQixFQUNoQixrQkFBc0MsRUFDdEMsZUFBbUM7UUFDakMsT0FBTyxFQUFFLENBQUM7UUFDVixVQUFVLEVBQUUsRUFBRTtRQUNkLFVBQVUsRUFBRSxHQUFHO0tBQ2hCO1FBRUQsS0FBSyxDQUFDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxZQUFZLENBQUMsQ0FBQztRQW5CbkQsa0VBQWtFO1FBQ2xFLGtEQUFrRDtRQUMxQyxrQkFBYSxHQUE4QixFQUFFLENBQUM7SUFrQnRELENBQUM7SUFFTSxL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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/static-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/static-subgraph-provider.d.ts
new file mode 100644
index 0000000..45f7180
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/static-subgraph-provider.d.ts
@@ -0,0 +1,10 @@
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { ProviderConfig } from '../provider';
+import { IV4PoolProvider } from './pool-provider';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+export declare class StaticV4SubgraphProvider implements IV4SubgraphProvider {
+    private chainId;
+    private poolProvider;
+    constructor(chainId: ChainId, poolProvider: IV4PoolProvider);
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V4SubgraphPool[]>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/static-subgraph-provider.js
new file mode 100644
index 0000000..079f999
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/static-subgraph-provider.js
@@ -0,0 +1,67 @@
+import { ADDRESS_ZERO, FeeAmount } from '@uniswap/v3-sdk';
+import { Pool } from '@uniswap/v4-sdk';
+import _ from 'lodash';
+import { log, unparseFeeAmount } from '../../util';
+import { BASES_TO_CHECK_TRADES_AGAINST } from '../caching-subgraph-provider';
+import JSBI from 'jsbi';
+export class StaticV4SubgraphProvider {
+    constructor(chainId, poolProvider) {
+        this.chainId = chainId;
+        this.poolProvider = poolProvider;
+    }
+    async getPools(tokenIn, tokenOut, providerConfig) {
+        log.info('In static subgraph provider for V4');
+        const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];
+        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));
+        if (tokenIn && tokenOut) {
+            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));
+        }
+        const pairs = _(basePairs)
+            .filter((tokens) => Boolean(tokens[0] && tokens[1]))
+            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))
+            .flatMap(([tokenA, tokenB]) => {
+            // TODO: we will follow up with expanding the fee tiers and tick spacing from just hard-coding from v3 for now.
+            return [
+                [tokenA, tokenB, FeeAmount.LOWEST, 1, ADDRESS_ZERO],
+                [tokenA, tokenB, FeeAmount.LOW, 10, ADDRESS_ZERO],
+                [tokenA, tokenB, FeeAmount.MEDIUM, 60, ADDRESS_ZERO],
+                [tokenA, tokenB, FeeAmount.HIGH, 200, ADDRESS_ZERO],
+            ];
+        })
+            .value();
+        log.info(`V4 Static subgraph provider about to get ${pairs.length} pools on-chain`);
+        const poolAccessor = await this.poolProvider.getPools(pairs, providerConfig);
+        const pools = poolAccessor.getAllPools();
+        const poolAddressSet = new Set();
+        const subgraphPools = _(pools)
+            .map((pool) => {
+            const { token0, token1, fee, tickSpacing, hooks, liquidity } = pool;
+            const poolAddress = Pool.getPoolId(token0, token1, fee, tickSpacing, hooks);
+            if (poolAddressSet.has(poolAddress)) {
+                return undefined;
+            }
+            poolAddressSet.add(poolAddress);
+            const liquidityNumber = JSBI.toNumber(liquidity);
+            return {
+                id: poolAddress,
+                feeTier: unparseFeeAmount(fee),
+                tickSpacing: tickSpacing.toString(),
+                hooks: hooks,
+                liquidity: liquidity.toString(),
+                token0: {
+                    id: token0.wrapped.address,
+                },
+                token1: {
+                    id: token1.wrapped.address,
+                },
+                // As a very rough proxy we just use liquidity for TVL.
+                tvlETH: liquidityNumber,
+                tvlUSD: liquidityNumber,
+            };
+        })
+            .compact()
+            .value();
+        return subgraphPools;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92NC9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFN0UsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBS3hCLE1BQU0sT0FBTyx3QkFBd0I7SUFDbkMsWUFDVSxPQUFnQixFQUNoQixZQUE2QjtRQUQ3QixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtJQUNwQyxDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsT0FBZSxFQUNmLFFBQWdCLEVBQ2hCLGNBQStCO1FBRS9CLEdBQUcsQ0FBQyxJQUFJLENBQUMsb0NBQW9DLENBQUMsQ0FBQztRQUMvQyxNQUFNLEtBQUssR0FBRyw2QkFBNkIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFMUQsTUFBTSxTQUFTLEdBQXFCLENBQUMsQ0FBQyxPQUFPLENBQzNDLEtBQUssRUFDTCxDQUFDLElBQUksRUFBb0IsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQ3hFLENBQUM7UUFFRixJQUFJLE9BQU8sSUFBSSxRQUFRLEVBQUU7WUFDdkIsU0FBUyxDQUFDLElB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider-with-fallback.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider-with-fallback.d.ts
new file mode 100644
index 0000000..db8e671
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider-with-fallback.d.ts
@@ -0,0 +1,5 @@
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+export declare class V4SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks<V4SubgraphPool> implements IV4SubgraphProvider {
+    constructor(fallbacks: IV4SubgraphProvider[]);
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider-with-fallback.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider-with-fallback.js
new file mode 100644
index 0000000..4e83159
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider-with-fallback.js
@@ -0,0 +1,8 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { SubgraphProviderWithFallBacks } from '../subgraph-provider-with-fallback';
+export class V4SubgraphProviderWithFallBacks extends SubgraphProviderWithFallBacks {
+    constructor(fallbacks) {
+        super(fallbacks, Protocol.V4);
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjQvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFHbkYsTUFBTSxPQUFPLCtCQUNYLFNBQVEsNkJBQTZDO0lBR3JELFlBQVksU0FBZ0M7UUFDMUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider.d.ts
new file mode 100644
index 0000000..38dd11a
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider.d.ts
@@ -0,0 +1,50 @@
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { ProviderConfig } from '../provider';
+import { SubgraphProvider } from '../subgraph-provider';
+export interface V4SubgraphPool {
+    id: string;
+    feeTier: string;
+    tickSpacing: string;
+    hooks: string;
+    liquidity: string;
+    token0: {
+        id: string;
+    };
+    token1: {
+        id: string;
+    };
+    tvlETH: number;
+    tvlUSD: number;
+}
+export declare type V4RawSubgraphPool = {
+    id: string;
+    feeTier: string;
+    tickSpacing: string;
+    hooks: string;
+    liquidity: string;
+    token0: {
+        symbol: string;
+        id: string;
+    };
+    token1: {
+        symbol: string;
+        id: string;
+    };
+    totalValueLockedUSD: string;
+    totalValueLockedETH: string;
+    totalValueLockedUSDUntracked: string;
+};
+/**
+ * Provider for getting V4 pools from the Subgraph
+ *
+ * @export
+ * @interface IV4SubgraphProvider
+ */
+export interface IV4SubgraphProvider {
+    getPools(tokenIn?: Token, tokenOut?: Token, providerConfig?: ProviderConfig): Promise<V4SubgraphPool[]>;
+}
+export declare class V4SubgraphProvider extends SubgraphProvider<V4RawSubgraphPool, V4SubgraphPool> implements IV4SubgraphProvider {
+    constructor(chainId: ChainId, retries?: number, timeout?: number, rollback?: boolean, trackedEthThreshold?: number, untrackedUsdThreshold?: number, subgraphUrlOverride?: string);
+    protected subgraphQuery(blockNumber?: number): string;
+    protected mapSubgraphPool(rawPool: V4RawSubgraphPool): V4SubgraphPool;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider.js
new file mode 100644
index 0000000..a841262
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/subgraph-provider.js
@@ -0,0 +1,57 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { ChainId } from '@uniswap/sdk-core';
+import { SubgraphProvider } from '../subgraph-provider';
+const SUBGRAPH_URL_BY_CHAIN = {
+    [ChainId.SEPOLIA]: '',
+};
+export class V4SubgraphProvider extends SubgraphProvider {
+    constructor(chainId, retries = 2, timeout = 30000, rollback = true, trackedEthThreshold = 0.01, untrackedUsdThreshold = Number.MAX_VALUE, subgraphUrlOverride) {
+        super(Protocol.V4, chainId, retries, timeout, rollback, trackedEthThreshold, untrackedUsdThreshold, subgraphUrlOverride !== null && subgraphUrlOverride !== void 0 ? subgraphUrlOverride : SUBGRAPH_URL_BY_CHAIN[chainId]);
+    }
+    subgraphQuery(blockNumber) {
+        return `
+    query getPools($pageSize: Int!, $id: String) {
+      pools(
+        first: $pageSize
+        ${blockNumber ? `block: { number: ${blockNumber} }` : ``}
+          where: { id_gt: $id }
+        ) {
+          id
+          token0 {
+            symbol
+            id
+          }
+          token1 {
+            symbol
+            id
+          }
+          feeTier
+          tickSpacing
+          hooks
+          liquidity
+          totalValueLockedUSD
+          totalValueLockedETH
+          totalValueLockedUSDUntracked
+        }
+      }
+   `;
+    }
+    mapSubgraphPool(rawPool) {
+        return {
+            id: rawPool.id,
+            feeTier: rawPool.feeTier,
+            tickSpacing: rawPool.tickSpacing,
+            hooks: rawPool.hooks,
+            liquidity: rawPool.liquidity,
+            token0: {
+                id: rawPool.token0.id,
+            },
+            token1: {
+                id: rawPool.token1.id,
+            },
+            tvlETH: parseFloat(rawPool.totalValueLockedETH),
+            tvlUSD: parseFloat(rawPool.totalValueLockedUSD),
+        };
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Y0L3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFHbkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFxQ3hELE1BQU0scUJBQXFCLEdBQXNDO0lBQy9ELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUU7Q0FDdEIsQ0FBQztBQWdCRixNQUFNLE9BQU8sa0JBQ1gsU0FBUSxnQkFBbUQ7SUFHM0QsWUFDRSxPQUFnQixFQUNoQixPQUFPLEdBQUcsQ0FBQyxFQUNYLE9BQU8sR0FBRyxLQUFLLEVBQ2YsUUFBUSxHQUFHLElBQUksRUFDZixtQkFBbUIsR0FBRyxJQUFJLEVBQzFCLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQ3hDLG1CQUE0QjtRQUU1QixLQUFLLENBQ0gsUUFBUSxDQUFDLEVBQUUsRUFDWCxPQUFPLEVBQ1AsT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsbUJBQW1CLEVBQ25CLHFCQUFxQixFQUNyQixtQkFBbUIsYUFBbkIsbUJBQW1CLGNBQW5CLG1CQUFtQixHQUFJLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxDQUN0RCxDQUFDO0lBQ0osQ0FBQztJQUVrQixhQUFhLENBQUMsV0FBb0I7UUFDbkQsT0FBTzs7OztVQUlELFdBQVcsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLFdBQVcsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFxQjVELENBQUM7SUFDSCxDQUFDO0lBRWtCLGVBQWUsQ0FDaEMsT0FBMEI7UUFFMUIsT0FBTztZQUNMLEVBQUUsRUFBRSxPQUFPLENBQUMsRUFBRTtZQUNkLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTztZQUN4QixXQUFXLEVBQUUsT0FBTyxDQUFDLFdBQVc7WUFDaEMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO1lBQ3BCLFNBQVMsRUFBRSxPQUFPLENBQUMsU0FBUztZQUM1QixNQUFNLEVBQUU7Z0JBQ04sRUFBRSxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTthQUN0QjtZQUNELE1BQU0sRUFBRTtnQkFDTixFQUFFLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2FBQ3RCO1lBQ0QsTUFBTSxFQUFFLFVBQVUsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUM7WUFDL0MsTUFBTSxFQUFFLFVBQVUsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUM7U0FDaEQsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/uri-subgraph-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/uri-subgraph-provider.d.ts
new file mode 100644
index 0000000..aa5347c
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/uri-subgraph-provider.d.ts
@@ -0,0 +1,4 @@
+import { URISubgraphProvider } from '../uri-subgraph-provider';
+import { IV4SubgraphProvider, V4SubgraphPool } from './subgraph-provider';
+export declare class V4URISubgraphProvider extends URISubgraphProvider<V4SubgraphPool> implements IV4SubgraphProvider {
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v4/uri-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/uri-subgraph-provider.js
new file mode 100644
index 0000000..1800e25
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v4/uri-subgraph-provider.js
@@ -0,0 +1,4 @@
+import { URISubgraphProvider } from '../uri-subgraph-provider';
+export class V4URISubgraphProvider extends URISubgraphProvider {
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJpLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92NC91cmktc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFHL0QsTUFBTSxPQUFPLHFCQUNYLFNBQVEsbUJBQW1DO0NBQ1YifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts
index fd25a6a..24e246b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts
@@ -2,7 +2,7 @@ import { BaseProvider } from '@ethersproject/providers';
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, TradeType } from '@uniswap/sdk-core';
 import { Position } from '@uniswap/v3-sdk';
-import { CacheMode, IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, ITokenPropertiesProvider, IV2QuoteProvider, IV2SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
+import { CacheMode, IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, ITokenPropertiesProvider, IV2QuoteProvider, IV2SubgraphProvider, IV4SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
 import { ITokenListProvider } from '../../providers/caching-token-list-provider';
 import { IGasPriceProvider } from '../../providers/gas-price-provider';
 import { IPortionProvider } from '../../providers/portion-provider';
@@ -14,8 +14,12 @@ import { IV3PoolProvider } from '../../providers/v3/pool-provider';
 import { IV3SubgraphProvider } from '../../providers/v3/subgraph-provider';
 import { CurrencyAmount } from '../../util/amounts';
 import { IRouter, ISwapToRatio, SwapAndAddConfig, SwapAndAddOptions, SwapOptions, SwapRoute, SwapToRatioResponse } from '../router';
+import { UniversalRouterVersion } from '@uniswap/universal-router-sdk';
+import { IV4PoolProvider } from '../../providers/v4/pool-provider';
+import { MixedRouteWithValidQuote, V3RouteWithValidQuote, V4RouteWithValidQuote } from './entities/route-with-valid-quote';
 import { IOnChainGasModelFactory, IV2GasModelFactory } from './gas-models/gas-model';
 import { MixedQuoter, V2Quoter, V3Quoter } from './quoters';
+import { V4Quoter } from './quoters/v4-quoter';
 export declare type AlphaRouterParams = {
     /**
      * The chain id for this instance of the Alpha Router.
@@ -30,6 +34,15 @@ export declare type AlphaRouterParams = {
      * like pools, tokens, quotes in batch.
      */
     multicall2Provider?: UniswapMulticallProvider;
+    /**
+     * The provider for getting all pools that exist on V4 from the Subgraph. The pools
+     * from this provider are filtered during the algorithm to a set of candidate pools.
+     */
+    v4SubgraphProvider?: IV4SubgraphProvider;
+    /**
+     * The provider for getting data about V4 pools.
+     */
+    v4PoolProvider?: IV4PoolProvider;
     /**
      * The provider for getting all pools that exist on V3 from the Subgraph. The pools
      * from this provider are filtered during the algorithm to a set of candidate pools.
@@ -65,11 +78,16 @@ export declare type AlphaRouterParams = {
      * algorithm.
      */
     gasPriceProvider?: IGasPriceProvider;
+    /**
+     * A factory for generating a gas model that is used when estimating the gas used by
+     * V4 routes.
+     */
+    v4GasModelFactory?: IOnChainGasModelFactory<V4RouteWithValidQuote>;
     /**
      * A factory for generating a gas model that is used when estimating the gas used by
      * V3 routes.
      */
-    v3GasModelFactory?: IOnChainGasModelFactory;
+    v3GasModelFactory?: IOnChainGasModelFactory<V3RouteWithValidQuote>;
     /**
      * A factory for generating a gas model that is used when estimating the gas used by
      * V2 routes.
@@ -79,7 +97,7 @@ export declare type AlphaRouterParams = {
      * A factory for generating a gas model that is used when estimating the gas used by
      * V3 routes.
      */
-    mixedRouteGasModelFactory?: IOnChainGasModelFactory;
+    mixedRouteGasModelFactory?: IOnChainGasModelFactory<MixedRouteWithValidQuote>;
     /**
      * A token list that specifies Token that should be blocked from routing through.
      * Defaults to Uniswap's unsupported token list.
@@ -118,6 +136,14 @@ export declare type AlphaRouterParams = {
      * All the supported v2 chains configuration
      */
     v2Supported?: ChainId[];
+    /**
+     * All the supported v4 chains configuration
+     */
+    v4Supported?: ChainId[];
+    /**
+     * The version of the universal router to use.
+     */
+    universalRouterVersion?: UniversalRouterVersion;
 };
 export declare class MapWithLowerCaseKey<V> extends Map<string, V> {
     set(key: string, value: V): this;
@@ -196,6 +222,10 @@ export declare type AlphaRouterConfig = {
      * will be used.
      */
     protocols?: Protocol[];
+    /**
+     * The protocols-version pools to be excluded from the mixed routes.
+     */
+    excludedProtocolsFromMixed?: Protocol[];
     /**
      * Config for selecting which pools to consider routing via on V2.
      */
@@ -204,6 +234,10 @@ export declare type AlphaRouterConfig = {
      * Config for selecting which pools to consider routing via on V3.
      */
     v3PoolSelection: ProtocolPoolSelection;
+    /**
+     * Config for selecting which pools to consider routing via on V4.
+     */
+    v4PoolSelection: ProtocolPoolSelection;
     /**
      * For each route, the maximum number of hops to consider. More hops will increase latency of the algorithm.
      */
@@ -274,11 +308,17 @@ export declare type AlphaRouterConfig = {
      * This requires a suitable Native/GasToken pool to exist on V3. If one does not exist this field will return null.
      */
     gasToken?: string;
+    /**
+     * The version of the universal router to use.
+     */
+    universalRouterVersion?: UniversalRouterVersion;
 };
 export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToRatio<AlphaRouterConfig, SwapAndAddConfig> {
     protected chainId: ChainId;
     protected provider: BaseProvider;
     protected multicall2Provider: UniswapMulticallProvider;
+    protected v4SubgraphProvider: IV4SubgraphProvider;
+    protected v4PoolProvider: IV4PoolProvider;
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
@@ -288,21 +328,25 @@ export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToR
     protected tokenProvider: ITokenProvider;
     protected gasPriceProvider: IGasPriceProvider;
     protected swapRouterProvider: ISwapRouterProvider;
-    protected v3GasModelFactory: IOnChainGasModelFactory;
+    protected v4GasModelFactory: IOnChainGasModelFactory<V4RouteWithValidQuote>;
+    protected v3GasModelFactory: IOnChainGasModelFactory<V3RouteWithValidQuote>;
     protected v2GasModelFactory: IV2GasModelFactory;
-    protected mixedRouteGasModelFactory: IOnChainGasModelFactory;
+    protected mixedRouteGasModelFactory: IOnChainGasModelFactory<MixedRouteWithValidQuote>;
     protected tokenValidatorProvider?: ITokenValidatorProvider;
     protected blockedTokenListProvider?: ITokenListProvider;
     protected l2GasDataProvider?: IL2GasDataProvider<ArbitrumGasData>;
     protected simulator?: Simulator;
     protected v2Quoter: V2Quoter;
     protected v3Quoter: V3Quoter;
+    protected v4Quoter: V4Quoter;
     protected mixedQuoter: MixedQuoter;
     protected routeCachingProvider?: IRouteCachingProvider;
     protected tokenPropertiesProvider: ITokenPropertiesProvider;
     protected portionProvider: IPortionProvider;
     protected v2Supported?: ChainId[];
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, }: AlphaRouterParams);
+    protected v4Supported?: ChainId[];
+    protected universalRouterVersion?: UniversalRouterVersion;
+    constructor({ chainId, provider, multicall2Provider, v4SubgraphProvider, v4PoolProvider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v4GasModelFactory, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, v4Supported, universalRouterVersion, }: AlphaRouterParams);
     routeToRatio(token0Balance: CurrencyAmount, token1Balance: CurrencyAmount, position: Position, swapAndAddConfig: SwapAndAddConfig, swapAndAddOptions?: SwapAndAddOptions, routingConfig?: Partial<AlphaRouterConfig>): Promise<SwapToRatioResponse>;
     /**
      * @inheritdoc IRouter
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
index 81e9298..9088c96 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
@@ -8,7 +8,7 @@ import retry from 'async-retry';
 import JSBI from 'jsbi';
 import _ from 'lodash';
 import NodeCache from 'node-cache';
-import { CachedRoutes, CacheMode, CachingGasStationProvider, CachingTokenProviderWithFallback, CachingV2PoolProvider, CachingV2SubgraphProvider, CachingV3PoolProvider, CachingV3SubgraphProvider, EIP1559GasPriceProvider, ETHGasStationInfoProvider, LegacyGasPriceProvider, NodeJSCache, OnChainGasPriceProvider, OnChainQuoteProvider, StaticV2SubgraphProvider, StaticV3SubgraphProvider, SwapRouterProvider, TokenPropertiesProvider, UniswapMulticallProvider, URISubgraphProvider, V2QuoteProvider, V2SubgraphProviderWithFallBacks, V3SubgraphProviderWithFallBacks, } from '../../providers';
+import { CachedRoutes, CacheMode, CachingGasStationProvider, CachingTokenProviderWithFallback, CachingV2PoolProvider, CachingV2SubgraphProvider, CachingV3PoolProvider, CachingV3SubgraphProvider, CachingV4SubgraphProvider, EIP1559GasPriceProvider, ETHGasStationInfoProvider, LegacyGasPriceProvider, NodeJSCache, OnChainGasPriceProvider, OnChainQuoteProvider, StaticV2SubgraphProvider, StaticV3SubgraphProvider, StaticV4SubgraphProvider, SwapRouterProvider, TokenPropertiesProvider, UniswapMulticallProvider, URISubgraphProvider, V2QuoteProvider, V2SubgraphProviderWithFallBacks, V3SubgraphProviderWithFallBacks, V4SubgraphProviderWithFallBacks, } from '../../providers';
 import { CachingTokenListProvider, } from '../../providers/caching-token-list-provider';
 import { PortionProvider, } from '../../providers/portion-provider';
 import { OnChainTokenFeeFetcher } from '../../providers/token-fee-fetcher';
@@ -18,25 +18,30 @@ import { V2PoolProvider, } from '../../providers/v2/pool-provider';
 import { ArbitrumGasDataProvider, } from '../../providers/v3/gas-data-provider';
 import { V3PoolProvider, } from '../../providers/v3/pool-provider';
 import { Erc20__factory } from '../../types/other/factories/Erc20__factory';
-import { SWAP_ROUTER_02_ADDRESSES, WRAPPED_NATIVE_CURRENCY } from '../../util';
+import { getAddress, getAddressLowerCase, shouldWipeoutCachedRoutes, SWAP_ROUTER_02_ADDRESSES, V4_SUPPORTED, WRAPPED_NATIVE_CURRENCY, } from '../../util';
 import { CurrencyAmount } from '../../util/amounts';
 import { ID_TO_CHAIN_ID, ID_TO_NETWORK_NAME, V2_SUPPORTED, } from '../../util/chains';
 import { getHighestLiquidityV3NativePool, getHighestLiquidityV3USDPool, } from '../../util/gas-factory-helpers';
 import { log } from '../../util/log';
 import { buildSwapMethodParameters, buildTrade, } from '../../util/methodParameters';
 import { metric, MetricLoggerUnit } from '../../util/metric';
-import { BATCH_PARAMS, BLOCK_NUMBER_CONFIGS, DEFAULT_BATCH_PARAMS, DEFAULT_BLOCK_NUMBER_CONFIGS, DEFAULT_GAS_ERROR_FAILURE_OVERRIDES, DEFAULT_RETRY_OPTIONS, DEFAULT_SUCCESS_RATE_FAILURE_OVERRIDES, GAS_ERROR_FAILURE_OVERRIDES, RETRY_OPTIONS, SUCCESS_RATE_FAILURE_OVERRIDES } from '../../util/onchainQuoteProviderConfigs';
+import { BATCH_PARAMS, BLOCK_NUMBER_CONFIGS, DEFAULT_BATCH_PARAMS, DEFAULT_BLOCK_NUMBER_CONFIGS, DEFAULT_GAS_ERROR_FAILURE_OVERRIDES, DEFAULT_RETRY_OPTIONS, DEFAULT_SUCCESS_RATE_FAILURE_OVERRIDES, GAS_ERROR_FAILURE_OVERRIDES, RETRY_OPTIONS, SUCCESS_RATE_FAILURE_OVERRIDES, } from '../../util/onchainQuoteProviderConfigs';
 import { UNSUPPORTED_TOKENS } from '../../util/unsupported-tokens';
-import { SwapToRatioStatus, } from '../router';
+import { SwapToRatioStatus, SwapType, } from '../router';
+import { UniversalRouterVersion } from '@uniswap/universal-router-sdk';
+import { CachingV4PoolProvider } from '../../providers/v4/caching-pool-provider';
+import { V4PoolProvider, } from '../../providers/v4/pool-provider';
 import { DEFAULT_ROUTING_CONFIG_BY_CHAIN, ETH_GAS_STATION_API_URL, } from './config';
 import { getBestSwapRoute } from './functions/best-swap-route';
 import { calculateRatioAmountIn } from './functions/calculate-ratio-amount-in';
-import { getV2CandidatePools, getV3CandidatePools, } from './functions/get-candidate-pools';
+import { getMixedCrossLiquidityCandidatePools, getV2CandidatePools, getV3CandidatePools, getV4CandidatePools, } from './functions/get-candidate-pools';
+import { NATIVE_OVERHEAD } from './gas-models/gas-costs';
 import { MixedRouteHeuristicGasModelFactory } from './gas-models/mixedRoute/mixed-route-heuristic-gas-model';
 import { V2HeuristicGasModelFactory } from './gas-models/v2/v2-heuristic-gas-model';
-import { NATIVE_OVERHEAD } from './gas-models/v3/gas-costs';
 import { V3HeuristicGasModelFactory } from './gas-models/v3/v3-heuristic-gas-model';
+import { V4HeuristicGasModelFactory } from './gas-models/v4/v4-heuristic-gas-model';
 import { MixedQuoter, V2Quoter, V3Quoter } from './quoters';
+import { V4Quoter } from './quoters/v4-quoter';
 export class MapWithLowerCaseKey extends Map {
     set(key, value) {
         return super.set(key.toLowerCase(), value);
@@ -49,11 +54,13 @@ export class LowerCaseStringArray extends Array {
     }
 }
 export class AlphaRouter {
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, }) {
+    constructor({ chainId, provider, multicall2Provider, v4SubgraphProvider, v4PoolProvider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v4GasModelFactory, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, portionProvider, v2Supported, v4Supported, universalRouterVersion, }) {
         this.chainId = chainId;
         this.provider = provider;
         this.multicall2Provider =
             multicall2Provider !== null && multicall2Provider !== void 0 ? multicall2Provider : new UniswapMulticallProvider(chainId, provider, 375000);
+        this.v4PoolProvider =
+            v4PoolProvider !== null && v4PoolProvider !== void 0 ? v4PoolProvider : new CachingV4PoolProvider(this.chainId, new V4PoolProvider(ID_TO_CHAIN_ID(chainId), this.multicall2Provider), new NodeJSCache(new NodeCache({ stdTTL: 360, useClones: false })));
         this.v3PoolProvider =
             v3PoolProvider !== null && v3PoolProvider !== void 0 ? v3PoolProvider : new CachingV3PoolProvider(this.chainId, new V3PoolProvider(ID_TO_CHAIN_ID(chainId), this.multicall2Provider), new NodeJSCache(new NodeCache({ stdTTL: 360, useClones: false })));
         this.simulator = simulator;
@@ -95,6 +102,15 @@ export class AlphaRouter {
                 case ChainId.BLAST:
                 case ChainId.ZORA:
                 case ChainId.BASE_GOERLI:
+                case ChainId.BOB:
+                case ChainId.CYBER:
+                case ChainId.SHAPE:
+                case ChainId.INK:
+                case ChainId.REDSTONE:
+                case ChainId.REDSTONE_GARNET:
+                case ChainId.ANIME_TESTNET:
+                case ChainId.MODE:
+                case ChainId.ANIME:
                     this.onChainQuoteProvider = new OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
                         retries: 2,
                         minTimeout: 100,
@@ -121,6 +137,9 @@ export class AlphaRouter {
                     });
                     break;
                 case ChainId.ZKSYNC:
+                case ChainId.ABSTRACT_TESTNET:
+                case ChainId.ABSTRACT_MAINNET:
+                case ChainId.ZERO:
                     this.onChainQuoteProvider = new OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
                         retries: 2,
                         minTimeout: 100,
@@ -238,6 +257,15 @@ export class AlphaRouter {
                 new StaticV3SubgraphProvider(chainId, this.v3PoolProvider),
             ]);
         }
+        if (v4SubgraphProvider) {
+            this.v4SubgraphProvider = v4SubgraphProvider;
+        }
+        else {
+            this.v4SubgraphProvider = new V4SubgraphProviderWithFallBacks([
+                new CachingV4SubgraphProvider(chainId, new URISubgraphProvider(chainId, `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v4/${chainName}.json`, undefined, 0), new NodeJSCache(new NodeCache({ stdTTL: 300, useClones: false }))),
+                new StaticV4SubgraphProvider(chainId, this.v4PoolProvider),
+            ]);
+        }
         let gasPriceProviderInstance;
         if (JsonRpcProvider.isProvider(this.provider)) {
             gasPriceProviderInstance = new OnChainGasPriceProvider(chainId, new EIP1559GasPriceProvider(this.provider), new LegacyGasPriceProvider(this.provider));
@@ -247,6 +275,8 @@ export class AlphaRouter {
         }
         this.gasPriceProvider =
             gasPriceProvider !== null && gasPriceProvider !== void 0 ? gasPriceProvider : new CachingGasStationProvider(chainId, gasPriceProviderInstance, new NodeJSCache(new NodeCache({ stdTTL: 7, useClones: false })));
+        this.v4GasModelFactory =
+            v4GasModelFactory !== null && v4GasModelFactory !== void 0 ? v4GasModelFactory : new V4HeuristicGasModelFactory(this.provider);
         this.v3GasModelFactory =
             v3GasModelFactory !== null && v3GasModelFactory !== void 0 ? v3GasModelFactory : new V3HeuristicGasModelFactory(this.provider);
         this.v2GasModelFactory =
@@ -264,8 +294,12 @@ export class AlphaRouter {
         // Quoters are an abstraction encapsulating the business logic of fetching routes and quotes.
         this.v2Quoter = new V2Quoter(this.v2SubgraphProvider, this.v2PoolProvider, this.v2QuoteProvider, this.v2GasModelFactory, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider, this.l2GasDataProvider);
         this.v3Quoter = new V3Quoter(this.v3SubgraphProvider, this.v3PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
-        this.mixedQuoter = new MixedQuoter(this.v3SubgraphProvider, this.v3PoolProvider, this.v2SubgraphProvider, this.v2PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
+        this.v4Quoter = new V4Quoter(this.v4SubgraphProvider, this.v4PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
+        this.mixedQuoter = new MixedQuoter(this.v4SubgraphProvider, this.v4PoolProvider, this.v3SubgraphProvider, this.v3PoolProvider, this.v2SubgraphProvider, this.v2PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
         this.v2Supported = v2Supported !== null && v2Supported !== void 0 ? v2Supported : V2_SUPPORTED;
+        this.v4Supported = v4Supported !== null && v4Supported !== void 0 ? v4Supported : V4_SUPPORTED;
+        this.universalRouterVersion =
+            universalRouterVersion !== null && universalRouterVersion !== void 0 ? universalRouterVersion : UniversalRouterVersion.V1_2;
     }
     async routeToRatio(token0Balance, token1Balance, position, swapAndAddConfig, swapAndAddOptions, routingConfig = DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId)) {
         if (token1Balance.currency.wrapped.sortsBefore(token0Balance.currency.wrapped)) {
@@ -394,16 +428,35 @@ export class AlphaRouter {
      * @inheritdoc IRouter
      */
     async route(amount, quoteCurrency, tradeType, swapConfig, partialRoutingConfig = {}) {
-        var _a, _c, _d, _e, _f, _g;
+        var _a, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
         const originalAmount = amount;
         const { currencyIn, currencyOut } = this.determineCurrencyInOutFromTradeType(tradeType, amount, quoteCurrency);
         const tokenIn = currencyIn.wrapped;
         const tokenOut = currencyOut.wrapped;
-        const tokenOutProperties = await this.tokenPropertiesProvider.getTokensProperties([tokenOut], partialRoutingConfig);
-        const buyFeeBps = (_c = (_a = tokenOutProperties[tokenOut.address.toLowerCase()]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.buyFeeBps;
-        const tokenOutHasFot = buyFeeBps && buyFeeBps.gt(0);
+        const tokenOutProperties = await this.tokenPropertiesProvider.getTokensProperties([currencyOut], partialRoutingConfig);
+        const feeTakenOnTransfer = (_c = (_a = tokenOutProperties[getAddressLowerCase(currencyOut)]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.feeTakenOnTransfer;
+        const externalTransferFailed = (_e = (_d = tokenOutProperties[getAddressLowerCase(currencyOut)]) === null || _d === void 0 ? void 0 : _d.tokenFeeResult) === null || _e === void 0 ? void 0 : _e.externalTransferFailed;
+        // We want to log the fee on transfer output tokens that we are taking fee or not
+        // Ideally the trade size (normalized in USD) would be ideal to log here, but we don't have spot price of output tokens here.
+        // We have to make sure token out is FOT with either buy/sell fee bps > 0
+        if (((_h = (_g = (_f = tokenOutProperties[getAddressLowerCase(currencyOut)]) === null || _f === void 0 ? void 0 : _f.tokenFeeResult) === null || _g === void 0 ? void 0 : _g.buyFeeBps) === null || _h === void 0 ? void 0 : _h.gt(0)) ||
+            ((_l = (_k = (_j = tokenOutProperties[getAddressLowerCase(currencyOut)]) === null || _j === void 0 ? void 0 : _j.tokenFeeResult) === null || _k === void 0 ? void 0 : _k.sellFeeBps) === null || _l === void 0 ? void 0 : _l.gt(0))) {
+            if (feeTakenOnTransfer || externalTransferFailed) {
+                // also to be extra safe, in case of FOT with feeTakenOnTransfer or externalTransferFailed,
+                // we nullify the fee and flat fee to avoid any potential issues.
+                // although neither web nor wallet should use the calldata returned from routing/SOR
+                if ((swapConfig === null || swapConfig === void 0 ? void 0 : swapConfig.type) === SwapType.UNIVERSAL_ROUTER) {
+                    swapConfig.fee = undefined;
+                    swapConfig.flatFee = undefined;
+                }
+                metric.putMetric('TokenOutFeeOnTransferNotTakingFee', 1, MetricLoggerUnit.Count);
+            }
+            else {
+                metric.putMetric('TokenOutFeeOnTransferTakingFee', 1, MetricLoggerUnit.Count);
+            }
+        }
         if (tradeType === TradeType.EXACT_OUTPUT) {
-            const portionAmount = this.portionProvider.getPortionAmount(amount, tradeType, tokenOutHasFot, swapConfig);
+            const portionAmount = this.portionProvider.getPortionAmount(amount, tradeType, feeTakenOnTransfer, externalTransferFailed, swapConfig);
             if (portionAmount && portionAmount.greaterThan(ZERO)) {
                 // In case of exact out swap, before we route, we need to make sure that the
                 // token out amount accounts for flat portion, and token in amount after the best swap route contains the token in equivalent of portion.
@@ -415,14 +468,14 @@ export class AlphaRouter {
             }
         }
         metric.setProperty('chainId', this.chainId);
-        metric.setProperty('pair', `${tokenIn.symbol}/${tokenOut.symbol}`);
-        metric.setProperty('tokenIn', tokenIn.address);
-        metric.setProperty('tokenOut', tokenOut.address);
+        metric.setProperty('pair', `${currencyIn.symbol}/${currencyOut.symbol}`);
+        metric.setProperty('tokenIn', getAddress(currencyIn));
+        metric.setProperty('tokenOut', getAddress(currencyOut));
         metric.setProperty('tradeType', tradeType === TradeType.EXACT_INPUT ? 'ExactIn' : 'ExactOut');
         metric.putMetric(`QuoteRequestedForChain${this.chainId}`, 1, MetricLoggerUnit.Count);
         // Get a block number to specify in all our calls. Ensures data we fetch from chain is
         // from the same block.
-        const blockNumber = (_d = partialRoutingConfig.blockNumber) !== null && _d !== void 0 ? _d : this.getBlockNumberPromise();
+        const blockNumber = (_m = partialRoutingConfig.blockNumber) !== null && _m !== void 0 ? _m : this.getBlockNumberPromise();
         const routingConfig = _.merge({
             // These settings could be changed by the partialRoutingConfig
             useCachedRoutes: true,
@@ -443,16 +496,21 @@ export class AlphaRouter {
             blockNumber,
             additionalGasOverhead: NATIVE_OVERHEAD(this.chainId, amount.currency, quoteCurrency),
             gasToken,
+            externalTransferFailed,
+            feeTakenOnTransfer,
         };
-        const { v2GasModel: v2GasModel, v3GasModel: v3GasModel, mixedRouteGasModel: mixedRouteGasModel, } = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, providerConfig);
+        const { v2GasModel: v2GasModel, v3GasModel: v3GasModel, v4GasModel: v4GasModel, mixedRouteGasModel: mixedRouteGasModel, } = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, providerConfig);
         // Create a Set to sanitize the protocols input, a Set of undefined becomes an empty set,
         // Then create an Array from the values of that Set.
         const protocols = Array.from(new Set(routingConfig.protocols).values());
-        const cacheMode = (_e = routingConfig.overwriteCacheMode) !== null && _e !== void 0 ? _e : (await ((_f = this.routeCachingProvider) === null || _f === void 0 ? void 0 : _f.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols)));
+        const cacheMode = (_o = routingConfig.overwriteCacheMode) !== null && _o !== void 0 ? _o : (await ((_p = this.routeCachingProvider) === null || _p === void 0 ? void 0 : _p.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols)));
         // Fetch CachedRoutes
         let cachedRoutes;
         if (routingConfig.useCachedRoutes && cacheMode !== CacheMode.Darkmode) {
-            cachedRoutes = await ((_g = this.routeCachingProvider) === null || _g === void 0 ? void 0 : _g.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber, routingConfig.optimisticCachedRoutes));
+            cachedRoutes = await ((_q = this.routeCachingProvider) === null || _q === void 0 ? void 0 : _q.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber, routingConfig.optimisticCachedRoutes));
+        }
+        if (shouldWipeoutCachedRoutes(cachedRoutes, routingConfig)) {
+            cachedRoutes = undefined;
         }
         metric.putMetric(routingConfig.useCachedRoutes
             ? 'GetQuoteUsingCachedRoutes'
@@ -488,11 +546,11 @@ export class AlphaRouter {
         }
         let swapRouteFromCachePromise = Promise.resolve(null);
         if (cachedRoutes) {
-            swapRouteFromCachePromise = this.getSwapRouteFromCache(cachedRoutes, await blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig);
+            swapRouteFromCachePromise = this.getSwapRouteFromCache(tokenIn, tokenOut, cachedRoutes, await blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig);
         }
         let swapRouteFromChainPromise = Promise.resolve(null);
         if (!cachedRoutes || cacheMode !== CacheMode.Livemode) {
-            swapRouteFromChainPromise = this.getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig);
+            swapRouteFromChainPromise = this.getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig);
         }
         const [swapRouteFromCache, swapRouteFromChain] = await Promise.all([
             swapRouteFromCachePromise,
@@ -518,28 +576,43 @@ export class AlphaRouter {
             // Only log if quoteDiff is different from 0, or if quoteGasAdjustedDiff and gasUsedDiff are both different from 0
             if (!quoteDiff.equalTo(0) ||
                 !(quoteGasAdjustedDiff.equalTo(0) || gasUsedDiff.eq(0))) {
-                // Calculates the percentage of the difference with respect to the quoteFromChain (not from cache)
-                const misquotePercent = quoteGasAdjustedDiff
-                    .divide(swapRouteFromChain.quoteGasAdjusted)
-                    .multiply(100);
-                metric.putMetric(`TapcompareCachedRoute_quoteGasAdjustedDiffPercent`, Number(misquotePercent.toExact()), MetricLoggerUnit.Percent);
-                log.warn({
-                    quoteFromChain: swapRouteFromChain.quote.toExact(),
-                    quoteFromCache: swapRouteFromCache.quote.toExact(),
-                    quoteDiff: quoteDiff.toExact(),
-                    quoteGasAdjustedFromChain: swapRouteFromChain.quoteGasAdjusted.toExact(),
-                    quoteGasAdjustedFromCache: swapRouteFromCache.quoteGasAdjusted.toExact(),
-                    quoteGasAdjustedDiff: quoteGasAdjustedDiff.toExact(),
-                    gasUsedFromChain: swapRouteFromChain.estimatedGasUsed.toString(),
-                    gasUsedFromCache: swapRouteFromCache.estimatedGasUsed.toString(),
-                    gasUsedDiff: gasUsedDiff.toString(),
-                    routesFromChain: swapRouteFromChain.routes.toString(),
-                    routesFromCache: swapRouteFromCache.routes.toString(),
-                    amount: amount.toExact(),
-                    originalAmount: cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.originalAmount,
-                    pair: this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType),
-                    blockNumber,
-                }, `Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);
+                try {
+                    // Calculates the percentage of the difference with respect to the quoteFromChain (not from cache)
+                    const misquotePercent = quoteGasAdjustedDiff
+                        .divide(swapRouteFromChain.quoteGasAdjusted)
+                        .multiply(100);
+                    metric.putMetric(`TapcompareCachedRoute_quoteGasAdjustedDiffPercent`, Number(misquotePercent.toExact()), MetricLoggerUnit.Percent);
+                    log.warn({
+                        quoteFromChain: swapRouteFromChain.quote.toExact(),
+                        quoteFromCache: swapRouteFromCache.quote.toExact(),
+                        quoteDiff: quoteDiff.toExact(),
+                        quoteGasAdjustedFromChain: swapRouteFromChain.quoteGasAdjusted.toExact(),
+                        quoteGasAdjustedFromCache: swapRouteFromCache.quoteGasAdjusted.toExact(),
+                        quoteGasAdjustedDiff: quoteGasAdjustedDiff.toExact(),
+                        gasUsedFromChain: swapRouteFromChain.estimatedGasUsed.toString(),
+                        gasUsedFromCache: swapRouteFromCache.estimatedGasUsed.toString(),
+                        gasUsedDiff: gasUsedDiff.toString(),
+                        routesFromChain: swapRouteFromChain.routes.toString(),
+                        routesFromCache: swapRouteFromCache.routes.toString(),
+                        amount: amount.toExact(),
+                        originalAmount: cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.originalAmount,
+                        pair: this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType),
+                        blockNumber,
+                    }, `Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);
+                }
+                catch (error) {
+                    // This is in response to the 'division by zero' error
+                    // during https://uniswapteam.slack.com/archives/C059TGEC57W/p1723997015399579
+                    if (error instanceof RangeError &&
+                        error.message.includes('Division by zero')) {
+                        log.error({
+                            quoteGasAdjustedDiff: quoteGasAdjustedDiff.toExact(),
+                            swapRouteFromChainQuoteGasAdjusted: swapRouteFromChain.quoteGasAdjusted.toExact(),
+                        }, 'Error calculating misquote percent');
+                        metric.putMetric(`TapcompareCachedRoute_quoteGasAdjustedDiffPercent_divzero`, 1, MetricLoggerUnit.Count);
+                    }
+                    // Log but don't throw here - this is only for logging.
+                }
             }
         }
         if (!swapRouteRaw) {
@@ -551,8 +624,7 @@ export class AlphaRouter {
             cacheMode !== CacheMode.Darkmode &&
             swapRouteFromChain) {
             // Generate the object to be cached
-            const routesToCache = CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes, this.chainId, tokenIn, tokenOut, protocols.sort(), // sort it for consistency in the order of the protocols.
-            await blockNumber, tradeType, amount.toExact());
+            const routesToCache = CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes, this.chainId, tokenIn, tokenOut, protocols.sort(), await blockNumber, tradeType, amount.toExact());
             if (routesToCache) {
                 // Attempt to insert the entry in cache. This is fire and forget promise.
                 // The catch method will prevent any exception from blocking the normal code execution.
@@ -586,7 +658,7 @@ export class AlphaRouter {
         const tokenOutAmount = tradeType === TradeType.EXACT_OUTPUT
             ? originalAmount // we need to pass in originalAmount instead of amount, because amount already added portionAmount in case of exact out swap
             : quote;
-        const portionAmount = this.portionProvider.getPortionAmount(tokenOutAmount, tradeType, tokenOutHasFot, swapConfig);
+        const portionAmount = this.portionProvider.getPortionAmount(tokenOutAmount, tradeType, feeTakenOnTransfer, externalTransferFailed, swapConfig);
         const portionQuoteAmount = this.portionProvider.getPortionQuoteAmount(tradeType, quote, amount, // we need to pass in amount instead of originalAmount here, because amount here needs to add the portion for exact out
         portionAmount);
         // we need to correct quote and quote gas adjusted for exact output when portion is part of the exact out swap
@@ -628,7 +700,12 @@ export class AlphaRouter {
         }
         return swapRoute;
     }
-    async getSwapRouteFromCache(cachedRoutes, blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig) {
+    async getSwapRouteFromCache(tokenIn, tokenOut, cachedRoutes, blockNumber, amount, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig) {
+        var _a, _c, _d, _e, _f, _g;
+        const tokenPairProperties = await this.tokenPropertiesProvider.getTokensProperties([tokenIn, tokenOut], providerConfig);
+        const sellTokenIsFot = (_d = (_c = (_a = tokenPairProperties[tokenIn.address.toLowerCase()]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.sellFeeBps) === null || _d === void 0 ? void 0 : _d.gt(0);
+        const buyTokenIsFot = (_g = (_f = (_e = tokenPairProperties[tokenOut.address.toLowerCase()]) === null || _e === void 0 ? void 0 : _e.tokenFeeResult) === null || _f === void 0 ? void 0 : _f.buyFeeBps) === null || _g === void 0 ? void 0 : _g.gt(0);
+        const fotInDirectSwap = sellTokenIsFot || buyTokenIsFot;
         log.info({
             protocols: cachedRoutes.protocolsCovered,
             tradeType: cachedRoutes.tradeType,
@@ -636,6 +713,7 @@ export class AlphaRouter {
             quoteBlockNumber: blockNumber,
         }, 'Routing across CachedRoute');
         const quotePromises = [];
+        const v4Routes = cachedRoutes.routes.filter((route) => route.protocol === Protocol.V4);
         const v3Routes = cachedRoutes.routes.filter((route) => route.protocol === Protocol.V3);
         const v2Routes = cachedRoutes.routes.filter((route) => route.protocol === Protocol.V2);
         const mixedRoutes = cachedRoutes.routes.filter((route) => route.protocol === Protocol.MIXED);
@@ -652,77 +730,119 @@ export class AlphaRouter {
             // In this case this means that there's no route, so we return null
             return Promise.resolve(null);
         }
-        if (v3Routes.length > 0) {
-            const v3RoutesFromCache = v3Routes.map((cachedRoute) => cachedRoute.route);
-            metric.putMetric('SwapRouteFromCache_V3_GetQuotes_Request', 1, MetricLoggerUnit.Count);
+        if (v4Routes.length > 0) {
+            const v4RoutesFromCache = v4Routes.map((cachedRoute) => cachedRoute.route);
+            metric.putMetric('SwapRouteFromCache_V4_GetQuotes_Request', 1, MetricLoggerUnit.Count);
             const beforeGetQuotes = Date.now();
-            quotePromises.push(this.v3Quoter
-                .getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel)
+            quotePromises.push(this.v4Quoter
+                .getQuotes(v4RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v4GasModel)
                 .then((result) => {
-                metric.putMetric(`SwapRouteFromCache_V3_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
+                metric.putMetric(`SwapRouteFromCache_V4_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
                 return result;
             }));
         }
+        if (!fotInDirectSwap) {
+            if (v3Routes.length > 0) {
+                const v3RoutesFromCache = v3Routes.map((cachedRoute) => cachedRoute.route);
+                metric.putMetric('SwapRouteFromCache_V3_GetQuotes_Request', 1, MetricLoggerUnit.Count);
+                const beforeGetQuotes = Date.now();
+                quotePromises.push(this.v3Quoter
+                    .getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel)
+                    .then((result) => {
+                    metric.putMetric(`SwapRouteFromCache_V3_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
+                    return result;
+                }));
+            }
+        }
         if (v2Routes.length > 0) {
             const v2RoutesFromCache = v2Routes.map((cachedRoute) => cachedRoute.route);
             metric.putMetric('SwapRouteFromCache_V2_GetQuotes_Request', 1, MetricLoggerUnit.Count);
             const beforeGetQuotes = Date.now();
             quotePromises.push(this.v2Quoter
-                .refreshRoutesThenGetQuotes(cachedRoutes.tokenIn, cachedRoutes.tokenOut, v2RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei)
+                .refreshRoutesThenGetQuotes(cachedRoutes.currencyIn.wrapped, cachedRoutes.currencyOut.wrapped, v2RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei)
                 .then((result) => {
                 metric.putMetric(`SwapRouteFromCache_V2_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
                 return result;
             }));
         }
-        if (mixedRoutes.length > 0) {
-            const mixedRoutesFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.route);
-            metric.putMetric('SwapRouteFromCache_Mixed_GetQuotes_Request', 1, MetricLoggerUnit.Count);
-            const beforeGetQuotes = Date.now();
-            quotePromises.push(this.mixedQuoter
-                .getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel)
-                .then((result) => {
-                metric.putMetric(`SwapRouteFromCache_Mixed_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
-                return result;
-            }));
+        if (!fotInDirectSwap) {
+            if (mixedRoutes.length > 0) {
+                const mixedRoutesFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.route);
+                metric.putMetric('SwapRouteFromCache_Mixed_GetQuotes_Request', 1, MetricLoggerUnit.Count);
+                const beforeGetQuotes = Date.now();
+                quotePromises.push(this.mixedQuoter
+                    .getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel)
+                    .then((result) => {
+                    metric.putMetric(`SwapRouteFromCache_Mixed_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
+                    return result;
+                }));
+            }
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = _.flatMap(getQuotesResults, (quoteResult) => quoteResult.routesWithValidQuotes);
-        return getBestSwapRoute(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, swapConfig);
+        return getBestSwapRoute(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig);
     }
-    async getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig) {
-        var _a;
+    async getSwapRouteFromChain(amount, tokenIn, tokenOut, protocols, quoteToken, tradeType, routingConfig, v3GasModel, v4GasModel, mixedRouteGasModel, gasPriceWei, v2GasModel, swapConfig, providerConfig) {
+        var _a, _c, _d, _e, _f, _g, _h, _j;
+        const tokenPairProperties = await this.tokenPropertiesProvider.getTokensProperties([tokenIn, tokenOut], providerConfig);
+        const sellTokenIsFot = (_d = (_c = (_a = tokenPairProperties[tokenIn.address.toLowerCase()]) === null || _a === void 0 ? void 0 : _a.tokenFeeResult) === null || _c === void 0 ? void 0 : _c.sellFeeBps) === null || _d === void 0 ? void 0 : _d.gt(0);
+        const buyTokenIsFot = (_g = (_f = (_e = tokenPairProperties[tokenOut.address.toLowerCase()]) === null || _e === void 0 ? void 0 : _e.tokenFeeResult) === null || _f === void 0 ? void 0 : _f.buyFeeBps) === null || _g === void 0 ? void 0 : _g.gt(0);
+        const fotInDirectSwap = sellTokenIsFot || buyTokenIsFot;
         // Generate our distribution of amounts, i.e. fractions of the input amount.
         // We will get quotes for fractions of the input amount for different routes, then
         // combine to generate split routes.
         const [percents, amounts] = this.getAmountDistribution(amount, routingConfig);
         const noProtocolsSpecified = protocols.length === 0;
+        const v4ProtocolSpecified = protocols.includes(Protocol.V4);
         const v3ProtocolSpecified = protocols.includes(Protocol.V3);
         const v2ProtocolSpecified = protocols.includes(Protocol.V2);
-        const v2SupportedInChain = (_a = this.v2Supported) === null || _a === void 0 ? void 0 : _a.includes(this.chainId);
+        const v2SupportedInChain = (_h = this.v2Supported) === null || _h === void 0 ? void 0 : _h.includes(this.chainId);
+        const v4SupportedInChain = (_j = this.v4Supported) === null || _j === void 0 ? void 0 : _j.includes(this.chainId);
         const shouldQueryMixedProtocol = protocols.includes(Protocol.MIXED) ||
-            (noProtocolsSpecified && v2SupportedInChain);
-        const mixedProtocolAllowed = [ChainId.MAINNET, ChainId.GOERLI].includes(this.chainId) &&
-            tradeType === TradeType.EXACT_INPUT;
+            (noProtocolsSpecified && v2SupportedInChain && v4SupportedInChain);
+        const mixedProtocolAllowed = [ChainId.MAINNET, ChainId.SEPOLIA, ChainId.GOERLI].includes(this.chainId) && tradeType === TradeType.EXACT_INPUT;
         const beforeGetCandidates = Date.now();
-        let v3CandidatePoolsPromise = Promise.resolve(undefined);
-        if (v3ProtocolSpecified ||
-            noProtocolsSpecified ||
+        let v4CandidatePoolsPromise = Promise.resolve(undefined);
+        // we are explicitly requiring people to specify v4 for now
+        if ((v4SupportedInChain && (v4ProtocolSpecified || noProtocolsSpecified)) ||
             (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
-            v3CandidatePoolsPromise = getV3CandidatePools({
+            // if (v4ProtocolSpecified || noProtocolsSpecified) {
+            v4CandidatePoolsPromise = getV4CandidatePools({
                 tokenIn,
                 tokenOut,
                 tokenProvider: this.tokenProvider,
                 blockedTokenListProvider: this.blockedTokenListProvider,
-                poolProvider: this.v3PoolProvider,
+                poolProvider: this.v4PoolProvider,
                 routeType: tradeType,
-                subgraphProvider: this.v3SubgraphProvider,
+                subgraphProvider: this.v4SubgraphProvider,
                 routingConfig,
                 chainId: this.chainId,
             }).then((candidatePools) => {
-                metric.putMetric('GetV3CandidatePools', Date.now() - beforeGetCandidates, MetricLoggerUnit.Milliseconds);
+                metric.putMetric('GetV4CandidatePools', Date.now() - beforeGetCandidates, MetricLoggerUnit.Milliseconds);
                 return candidatePools;
             });
         }
+        let v3CandidatePoolsPromise = Promise.resolve(undefined);
+        if (!fotInDirectSwap) {
+            if (v3ProtocolSpecified ||
+                noProtocolsSpecified ||
+                (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
+                v3CandidatePoolsPromise = getV3CandidatePools({
+                    tokenIn,
+                    tokenOut,
+                    tokenProvider: this.tokenProvider,
+                    blockedTokenListProvider: this.blockedTokenListProvider,
+                    poolProvider: this.v3PoolProvider,
+                    routeType: tradeType,
+                    subgraphProvider: this.v3SubgraphProvider,
+                    routingConfig,
+                    chainId: this.chainId,
+                }).then((candidatePools) => {
+                    metric.putMetric('GetV3CandidatePools', Date.now() - beforeGetCandidates, MetricLoggerUnit.Milliseconds);
+                    return candidatePools;
+                });
+            }
+        }
         let v2CandidatePoolsPromise = Promise.resolve(undefined);
         if ((v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) ||
             (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
@@ -745,18 +865,32 @@ export class AlphaRouter {
             });
         }
         const quotePromises = [];
-        // Maybe Quote V3 - if V3 is specified, or no protocol is specified
-        if (v3ProtocolSpecified || noProtocolsSpecified) {
-            log.info({ protocols, tradeType }, 'Routing across V3');
-            metric.putMetric('SwapRouteFromChain_V3_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
+        // for v4, for now we explicitly require people to specify
+        if (v4SupportedInChain && v4ProtocolSpecified) {
+            log.info({ protocols, tradeType }, 'Routing across V4');
+            metric.putMetric('SwapRouteFromChain_V4_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
             const beforeGetRoutesThenQuotes = Date.now();
-            quotePromises.push(v3CandidatePoolsPromise.then((v3CandidatePools) => this.v3Quoter
-                .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v3CandidatePools, tradeType, routingConfig, v3GasModel)
+            quotePromises.push(v4CandidatePoolsPromise.then((v4CandidatePools) => this.v4Quoter
+                .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v4CandidatePools, tradeType, routingConfig, v3GasModel)
                 .then((result) => {
-                metric.putMetric(`SwapRouteFromChain_V3_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
+                metric.putMetric(`SwapRouteFromChain_V4_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
                 return result;
             })));
         }
+        if (!fotInDirectSwap) {
+            // Maybe Quote V3 - if V3 is specified, or no protocol is specified
+            if (v3ProtocolSpecified || noProtocolsSpecified) {
+                log.info({ protocols, tradeType }, 'Routing across V3');
+                metric.putMetric('SwapRouteFromChain_V3_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
+                const beforeGetRoutesThenQuotes = Date.now();
+                quotePromises.push(v3CandidatePoolsPromise.then((v3CandidatePools) => this.v3Quoter
+                    .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v3CandidatePools, tradeType, routingConfig, v3GasModel)
+                    .then((result) => {
+                    metric.putMetric(`SwapRouteFromChain_V3_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
+                    return result;
+                })));
+            }
+        }
         // Maybe Quote V2 - if V2 is specified, or no protocol is specified AND v2 is supported in this chain
         if (v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) {
             log.info({ protocols, tradeType }, 'Routing across V2');
@@ -769,19 +903,42 @@ export class AlphaRouter {
                 return result;
             })));
         }
-        // Maybe Quote mixed routes
-        // if MixedProtocol is specified or no protocol is specified and v2 is supported AND tradeType is ExactIn
-        // AND is Mainnet or Gorli
-        if (shouldQueryMixedProtocol && mixedProtocolAllowed) {
-            log.info({ protocols, tradeType }, 'Routing across MixedRoutes');
-            metric.putMetric('SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
-            const beforeGetRoutesThenQuotes = Date.now();
-            quotePromises.push(Promise.all([v3CandidatePoolsPromise, v2CandidatePoolsPromise]).then(([v3CandidatePools, v2CandidatePools]) => this.mixedQuoter
-                .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, [v3CandidatePools, v2CandidatePools], tradeType, routingConfig, mixedRouteGasModel)
-                .then((result) => {
-                metric.putMetric(`SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
-                return result;
-            })));
+        if (!fotInDirectSwap) {
+            // Maybe Quote mixed routes
+            // if MixedProtocol is specified or no protocol is specified and v2 is supported AND tradeType is ExactIn
+            // AND is Mainnet or Gorli
+            if (shouldQueryMixedProtocol && mixedProtocolAllowed) {
+                log.info({ protocols, tradeType }, 'Routing across MixedRoutes');
+                metric.putMetric('SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
+                const beforeGetRoutesThenQuotes = Date.now();
+                quotePromises.push(Promise.all([
+                    v4CandidatePoolsPromise,
+                    v3CandidatePoolsPromise,
+                    v2CandidatePoolsPromise,
+                ]).then(async ([v4CandidatePools, v3CandidatePools, v2CandidatePools]) => {
+                    const crossLiquidityPools = await getMixedCrossLiquidityCandidatePools({
+                        tokenIn,
+                        tokenOut,
+                        blockNumber: routingConfig.blockNumber,
+                        v2SubgraphProvider: this.v2SubgraphProvider,
+                        v3SubgraphProvider: this.v3SubgraphProvider,
+                        v2Candidates: v2CandidatePools,
+                        v3Candidates: v3CandidatePools,
+                        v4Candidates: v4CandidatePools,
+                    });
+                    return this.mixedQuoter
+                        .getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, [
+                        v4CandidatePools,
+                        v3CandidatePools,
+                        v2CandidatePools,
+                        crossLiquidityPools,
+                    ], tradeType, routingConfig, mixedRouteGasModel)
+                        .then((result) => {
+                        metric.putMetric(`SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
+                        return result;
+                    });
+                }));
+            }
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = [];
@@ -797,7 +954,7 @@ export class AlphaRouter {
             return null;
         }
         // Given all the quotes for all the amounts for all the routes, find the best combination.
-        const bestSwapRoute = await getBestSwapRoute(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, swapConfig);
+        const bestSwapRoute = await getBestSwapRoute(amount, percents, allRoutesWithValidQuotes, tradeType, this.chainId, routingConfig, this.portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig);
         if (bestSwapRoute) {
             this.emitPoolSelectionMetrics(bestSwapRoute, allCandidatePools);
         }
@@ -861,14 +1018,16 @@ export class AlphaRouter {
             nativeAndSpecifiedGasTokenV3Pool: nativeAndSpecifiedGasTokenV3Pool,
         };
         const v2GasModelPromise = ((_a = this.v2Supported) === null || _a === void 0 ? void 0 : _a.includes(this.chainId))
-            ? this.v2GasModelFactory.buildGasModel({
+            ? this.v2GasModelFactory
+                .buildGasModel({
                 chainId: this.chainId,
                 gasPriceWei,
                 poolProvider: this.v2PoolProvider,
                 token: quoteToken,
                 l2GasDataProvider: this.l2GasDataProvider,
                 providerConfig: providerConfig,
-            }).catch(_ => undefined) // If v2 model throws uncaught exception, we return undefined v2 gas model, so there's a chance v3 route can go through
+            })
+                .catch((_) => undefined) // If v2 model throws uncaught exception, we return undefined v2 gas model, so there's a chance v3 route can go through
             : Promise.resolve(undefined);
         const v3GasModelPromise = this.v3GasModelFactory.buildGasModel({
             chainId: this.chainId,
@@ -880,6 +1039,16 @@ export class AlphaRouter {
             l2GasDataProvider: this.l2GasDataProvider,
             providerConfig: providerConfig,
         });
+        const v4GasModelPromise = this.v4GasModelFactory.buildGasModel({
+            chainId: this.chainId,
+            gasPriceWei,
+            pools,
+            amountToken,
+            quoteToken,
+            v2poolProvider: this.v2PoolProvider,
+            l2GasDataProvider: this.l2GasDataProvider,
+            providerConfig: providerConfig,
+        });
         const mixedRouteGasModelPromise = this.mixedRouteGasModelFactory.buildGasModel({
             chainId: this.chainId,
             gasPriceWei,
@@ -889,15 +1058,17 @@ export class AlphaRouter {
             v2poolProvider: this.v2PoolProvider,
             providerConfig: providerConfig,
         });
-        const [v2GasModel, v3GasModel, mixedRouteGasModel] = await Promise.all([
+        const [v2GasModel, v3GasModel, V4GasModel, mixedRouteGasModel] = await Promise.all([
             v2GasModelPromise,
             v3GasModelPromise,
+            v4GasModelPromise,
             mixedRouteGasModelPromise,
         ]);
         metric.putMetric('GasModelCreation', Date.now() - beforeGasModel, MetricLoggerUnit.Milliseconds);
         return {
             v2GasModel: v2GasModel,
             v3GasModel: v3GasModel,
+            v4GasModel: V4GasModel,
             mixedRouteGasModel: mixedRouteGasModel,
         };
     }
@@ -947,7 +1118,7 @@ export class AlphaRouter {
         const { routes: routeAmounts } = swapRouteRaw;
         _(routeAmounts)
             .flatMap((routeAmount) => {
-            const { poolAddresses } = routeAmount;
+            const { poolIdentifiers: poolAddresses } = routeAmount;
             return poolAddresses;
         })
             .forEach((address) => {
@@ -1078,4 +1249,4 @@ export class AlphaRouter {
         });
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxwaGEtcm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2FscGhhLXJvdXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFnQixlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN6RSxPQUFPLGtCQUFrQixNQUFNLDZCQUE2QixDQUFDO0FBQzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFTLElBQUksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hFLE9BQU8sRUFDTCxPQUFPLEVBRVAsUUFBUSxFQUVSLFNBQVMsR0FDVixNQUFNLG1CQUFtQixDQUFDO0FBRTNCLE9BQU8sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxRSxPQUFPLEtBQUssTUFBTSxhQUFhLENBQUM7QUFDaEMsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBQ3hCLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUN2QixPQUFPLFNBQVMsTUFBTSxZQUFZLENBQUM7QUFFbkMsT0FBTyxFQUNMLFlBQVksRUFDWixTQUFTLEVBQ1QseUJBQXlCLEVBQ3pCLGdDQUFnQyxFQUNoQyxxQkFBcUIsRUFDckIseUJBQXlCLEVBQ3pCLHFCQUFxQixFQUNyQix5QkFBeUIsRUFDekIseUJBQXlCLEVBQ3pCLHVCQUF1QixFQUN2Qix5QkFBeUIsRUFRekIsc0JBQXNCLEVBQ3RCLFdBQVcsRUFDWCx1QkFBdUIsRUFDdkIsb0JBQW9CLEVBRXBCLHdCQUF3QixFQUN4Qix3QkFBd0IsRUFDeEIsd0JBQXdCLEVBQ3hCLGtCQUFrQixFQUNsQix1QkFBdUIsRUFDdkIsd0JBQXdCLEVBQ3hCLG1CQUFtQixFQUNuQixlQUFlLEVBQ2YsK0JBQStCLEVB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js
index 9dcef29..f334f75 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js
@@ -26,6 +26,14 @@ export const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
                     topNWithEachBaseToken: 3,
                     topNWithBaseToken: 3,
                 },
+                v4PoolSelection: {
+                    topN: 2,
+                    topNDirectSwaps: 2,
+                    topNTokenInOut: 2,
+                    topNSecondHop: 1,
+                    topNWithEachBaseToken: 3,
+                    topNWithBaseToken: 3,
+                },
                 maxSwapsPerPath: 3,
                 minSplits: 1,
                 maxSplits: 7,
@@ -57,6 +65,14 @@ export const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
                     topNWithEachBaseToken: 3,
                     topNWithBaseToken: 2,
                 },
+                v4PoolSelection: {
+                    topN: 2,
+                    topNDirectSwaps: 2,
+                    topNTokenInOut: 2,
+                    topNSecondHop: 1,
+                    topNWithEachBaseToken: 3,
+                    topNWithBaseToken: 2,
+                },
                 maxSwapsPerPath: 2,
                 minSplits: 1,
                 maxSplits: 7,
@@ -83,6 +99,14 @@ export const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
                     topNWithEachBaseToken: 3,
                     topNWithBaseToken: 5,
                 },
+                v4PoolSelection: {
+                    topN: 2,
+                    topNDirectSwaps: 2,
+                    topNTokenInOut: 3,
+                    topNSecondHop: 1,
+                    topNWithEachBaseToken: 3,
+                    topNWithBaseToken: 5,
+                },
                 maxSwapsPerPath: 3,
                 minSplits: 1,
                 maxSplits: 7,
@@ -92,4 +116,4 @@ export const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
     }
 };
 export const ETH_GAS_STATION_API_URL = 'https://ethgasstation.info/api/ethgasAPI.json';
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUMsT0FBTyxFQUFxQixvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXpFLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFHLENBQzdDLE9BQWdCLEVBQ0csRUFBRTtJQUNyQixRQUFRLE9BQU8sRUFBRTtRQUNmLFdBQVc7UUFDWCxLQUFLLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDO1FBQzlCLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDekIsS0FBSyxPQUFPLENBQUMsS0FBSztZQUNoQixPQUFPO2dCQUNMLGVBQWUsRUFBRTtvQkFDZixJQUFJLEVBQUUsQ0FBQztvQkFDUCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLGFBQWEsRUFBRSxDQUFDO29CQUNoQixxQkFBcUIsRUFBRSxDQUFDO29CQUN4QixpQkFBaUIsRUFBRSxDQUFDO2lCQUNyQjtnQkFDRCxlQUFlLEVBQUU7b0JBQ2YsSUFBSSxFQUFFLENBQUM7b0JBQ1AsZUFBZSxFQUFFLENBQUM7b0JBQ2xCLGNBQWMsRUFBRSxDQUFDO29CQUNqQixhQUFhLEVBQUUsQ0FBQztvQkFDaEIscUJBQXFCLEVBQUUsQ0FBQztvQkFDeEIsaUJBQWlCLEVBQUUsQ0FBQztpQkFDckI7Z0JBQ0QsZUFBZSxFQUFFLENBQUM7Z0JBQ2xCLFNBQVMsRUFBRSxDQUFDO2dCQUNaLFNBQVMsRUFBRSxDQUFDO2dCQUNaLG1CQUFtQixFQUFFLEVBQUU7Z0JBQ3ZCLGtCQUFrQixFQUFFLEtBQUs7YUFDMUIsQ0FBQztRQUNKLHlHQUF5RztRQUN6Ryx1R0FBdUc7UUFDdkcsZ0VBQWdFO1FBQ2hFLEtBQUssT0FBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLE9BQU8sQ0FBQyxlQUFlLENBQUM7UUFDN0IsS0FBSyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDOUIsS0FBSyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssT0FBTyxDQUFDLGNBQWM7WUFDekIsT0FBTztnQkFDTCxlQUFlLEVBQUU7b0JBQ2YsSUFBSSxFQUFFLENBQUM7b0JBQ1AsZUFBZSxFQUFFLENBQUM7b0JBQ2xCLGNBQWMsRUFBRSxDQUFDO29CQUNqQixhQUFhLEVBQUUsQ0FBQztvQkFDaEIscUJBQXFCLEVBQUUsQ0FBQztvQkFDeEIsaUJBQWlCLEVBQUUsQ0FBQztpQkFDckI7Z0JBQ0QsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLGVBQWUsRUFBRSxDQUFDO29CQUNsQixjQUFjLEVBQUUsQ0FBQztvQkFDakIsYUFBYSxFQUFFLENBQUM7b0JBQ2hCLHFCQUFxQixFQUFFLENBQUM7b0JBQ3hCLGlCQUFpQixFQUFFLENBQUM7aUJBQ3JCO2dCQUNELGVBQWUsRUFBRSxDQUFDO2dCQUNsQixTQUFTLEVBQUUsQ0FBQztnQkFDWixTQUFTLEVBQUUsQ0FBQztnQkFDWixtQkFBbUIsRUFBRSxFQUFFO2dCQUN2QixrQkFBa0IsRUFBRSxLQUFLO2FBQzFCLENBQUM7UUFDSjtZQUNFLE9BQU87Z0JBQ0wsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLGVBQWUsRUFBRSxDQUFDO29CQUNsQixjQUFjLEVBQUUsQ0FBQztvQkFDakIsYUFBYSxFQUFFLENBQUM7b0JBQ2hCLHlCQUF5QixFQUFFLElBQUksb0JBQW9CLENBQ2pELDRDQUE0QyxDQUFDLGtCQUFrQjtxQkFDaEU7b0JBQ0QscUJBQXFCLEVBQUUsQ0FBQztvQkFDeEIsaUJBQWlCLEVBQUUsQ0FBQztpQkFDckI7Z0JBQ0QsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLGVBQWUsRUFBRSxDQUFDO29CQUNsQixjQUFjLEVBQUUsQ0FBQztvQkFDakIsYUFBYSxFQUFFLENBQUM7b0JBQ2hCLHFCQUFxQixFQUFFLENBQUM7b0JBQ3hCLGlCQUFpQixFQUFFLENBQUM7aUJBQ3JCO2dCQUNELGVBQWUsRUFBRSxDQUFDO2dCQUNsQixTQUFTLEVBQUUsQ0FBQztnQkFDWixTQUFTLEVBQUUsQ0FBQztnQkFDWixtQkFBbUIsRUFBRSxDQUFDO2dCQUN0QixrQkFBa0IsRUFBRSxLQUFLO2FBQzFCLENBQUM7S0FDTDtBQUNILENBQUMsQ0FBQztBQUNGLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUNsQywrQ0FBK0MsQ0FBQyJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUMsT0FBTyxFQUFxQixvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXpFLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFHLENBQzdDLE9BQWdCLEVBQ0csRUFBRTtJQUNyQixRQUFRLE9BQU8sRUFBRTtRQUNmLFdBQVc7UUFDWCxLQUFLLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDO1FBQzlCLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDekIsS0FBSyxPQUFPLENBQUMsS0FBSztZQUNoQixPQUFPO2dCQUNMLGVBQWUsRUFBRTtvQkFDZixJQUFJLEVBQUUsQ0FBQztvQkFDUCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsY0FBYyxFQUFFLENBQUM7b0JBQ2pCLGFBQWEsRUFBRSxDQUFDO29CQUNoQixxQkFBcUIsRUFBRSxDQUFDO29CQUN4QixpQkFBaUIsRUFBRSxDQUFDO2lCQUNyQjtnQkFDRCxlQUFlLEVBQUU7b0JBQ2YsSUFBSSxFQUFFLENBQUM7b0JBQ1AsZUFBZSxFQUFFLENBQUM7b0JBQ2xCLGNBQWMsRUFBRSxDQUFDO29CQUNqQixhQUFhLEVBQUUsQ0FBQztvQkFDaEIscUJBQXFCLEVBQUUsQ0FBQztvQkFDeEIsaUJBQWlCLEVBQUUsQ0FBQztpQkFDckI7Z0JBQ0QsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLGVBQWUsRUFBRSxDQUFDO29CQUNsQixjQUFjLEVBQUUsQ0FBQztvQkFDakIs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.d.ts
index 436dd4d..ede8ef4 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.d.ts
@@ -1,10 +1,11 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { Protocol } from '@uniswap/router-sdk';
-import { Token, TradeType } from '@uniswap/sdk-core';
+import { Currency, Token, TradeType } from '@uniswap/sdk-core';
+import { IV4PoolProvider } from '../../../providers';
 import { IV2PoolProvider } from '../../../providers/v2/pool-provider';
 import { IV3PoolProvider } from '../../../providers/v3/pool-provider';
 import { CurrencyAmount } from '../../../util/amounts';
-import { MixedRoute, V2Route, V3Route } from '../../router';
+import { MixedRoute, SupportedRoutes, V2Route, V3Route, V4Route } from '../../router';
 import { IGasModel } from '../gas-models/gas-model';
 /**
  * Represents a route, a quote for swapping some amount on it, and other
@@ -14,7 +15,7 @@ import { IGasModel } from '../gas-models/gas-model';
  * @interface IRouteWithValidQuote
  * @template Route
  */
-export interface IRouteWithValidQuote<Route extends V3Route | V2Route | MixedRoute> {
+export interface IRouteWithValidQuote<Route extends SupportedRoutes> {
     amount: CurrencyAmount;
     percent: number;
     quoteAdjustedForGas: CurrencyAmount;
@@ -25,8 +26,8 @@ export interface IRouteWithValidQuote<Route extends V3Route | V2Route | MixedRou
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
-    tokenPath: Token[];
+    poolIdentifiers: string[];
+    tokenPath: Currency[];
 }
 export declare type IV2RouteWithValidQuote = {
     protocol: Protocol.V2;
@@ -34,10 +35,13 @@ export declare type IV2RouteWithValidQuote = {
 export declare type IV3RouteWithValidQuote = {
     protocol: Protocol.V3;
 } & IRouteWithValidQuote<V3Route>;
+export declare type IV4RouteWithValidQuote = {
+    protocol: Protocol.V4;
+} & IRouteWithValidQuote<V4Route>;
 export declare type IMixedRouteWithValidQuote = {
     protocol: Protocol.MIXED;
 } & IRouteWithValidQuote<MixedRoute>;
-export declare type RouteWithValidQuote = V2RouteWithValidQuote | V3RouteWithValidQuote | MixedRouteWithValidQuote;
+export declare type RouteWithValidQuote = V2RouteWithValidQuote | V3RouteWithValidQuote | V4RouteWithValidQuote | MixedRouteWithValidQuote;
 export declare type V2RouteWithValidQuoteParams = {
     amount: CurrencyAmount;
     rawQuote: BigNumber;
@@ -71,7 +75,7 @@ export declare class V2RouteWithValidQuote implements IV2RouteWithValidQuote {
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
+    poolIdentifiers: string[];
     tokenPath: Token[];
     toString(): string;
     constructor({ amount, rawQuote, percent, route, gasModel, quoteToken, tradeType, v2PoolProvider, }: V2RouteWithValidQuoteParams);
@@ -115,11 +119,47 @@ export declare class V3RouteWithValidQuote implements IV3RouteWithValidQuote {
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
+    poolIdentifiers: string[];
     tokenPath: Token[];
     toString(): string;
     constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, gasModel, quoteToken, tradeType, v3PoolProvider, }: V3RouteWithValidQuoteParams);
 }
+export declare type V4RouteWithValidQuoteParams = {
+    amount: CurrencyAmount;
+    rawQuote: BigNumber;
+    sqrtPriceX96AfterList: BigNumber[];
+    initializedTicksCrossedList: number[];
+    quoterGasEstimate: BigNumber;
+    percent: number;
+    route: V4Route;
+    quoteToken: Token;
+    gasModel: IGasModel<V4RouteWithValidQuote>;
+    tradeType: TradeType;
+    v4PoolProvider: IV4PoolProvider;
+};
+export declare class V4RouteWithValidQuote implements IV4RouteWithValidQuote {
+    readonly protocol = Protocol.V4;
+    amount: CurrencyAmount;
+    rawQuote: BigNumber;
+    quote: CurrencyAmount;
+    quoteAdjustedForGas: CurrencyAmount;
+    sqrtPriceX96AfterList: BigNumber[];
+    initializedTicksCrossedList: number[];
+    quoterGasEstimate: BigNumber;
+    percent: number;
+    route: V4Route;
+    quoteToken: Token;
+    gasModel: IGasModel<V4RouteWithValidQuote>;
+    gasEstimate: BigNumber;
+    gasCostInToken: CurrencyAmount;
+    gasCostInUSD: CurrencyAmount;
+    gasCostInGasToken?: CurrencyAmount;
+    tradeType: TradeType;
+    poolIdentifiers: string[];
+    tokenPath: Currency[];
+    toString(): string;
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, gasModel, quoteToken, tradeType, v4PoolProvider, }: V4RouteWithValidQuoteParams);
+}
 export declare type MixedRouteWithValidQuoteParams = {
     amount: CurrencyAmount;
     rawQuote: BigNumber;
@@ -131,6 +171,7 @@ export declare type MixedRouteWithValidQuoteParams = {
     mixedRouteGasModel: IGasModel<MixedRouteWithValidQuote>;
     quoteToken: Token;
     tradeType: TradeType;
+    v4PoolProvider: IV4PoolProvider;
     v3PoolProvider: IV3PoolProvider;
     v2PoolProvider: IV2PoolProvider;
 };
@@ -160,8 +201,8 @@ export declare class MixedRouteWithValidQuote implements IMixedRouteWithValidQuo
     gasCostInUSD: CurrencyAmount;
     gasCostInGasToken?: CurrencyAmount;
     tradeType: TradeType;
-    poolAddresses: string[];
-    tokenPath: Token[];
+    poolIdentifiers: string[];
+    tokenPath: Currency[];
     toString(): string;
-    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v3PoolProvider, v2PoolProvider, }: MixedRouteWithValidQuoteParams);
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v4PoolProvider, v3PoolProvider, v2PoolProvider, }: MixedRouteWithValidQuoteParams);
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.js
index 8936c4d..83712fe 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/entities/route-with-valid-quote.js
@@ -1,7 +1,9 @@
 import { Protocol } from '@uniswap/router-sdk';
 import { TradeType } from '@uniswap/sdk-core';
-import { Pool } from '@uniswap/v3-sdk';
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
 import _ from 'lodash';
+import { Pair } from '@uniswap/v2-sdk';
 import { CurrencyAmount } from '../../../util/amounts';
 import { routeToString } from '../../../util/routes';
 /**
@@ -37,7 +39,7 @@ export class V2RouteWithValidQuote {
             const quoteGasAdjusted = this.quote.add(gasCostInToken);
             this.quoteAdjustedForGas = quoteGasAdjusted;
         }
-        this.poolAddresses = _.map(route.pairs, (p) => v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress);
+        this.poolIdentifiers = _.map(route.pairs, (p) => v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress);
         this.tokenPath = this.route.path;
     }
     toString() {
@@ -80,13 +82,48 @@ export class V3RouteWithValidQuote {
             const quoteGasAdjusted = this.quote.add(gasCostInToken);
             this.quoteAdjustedForGas = quoteGasAdjusted;
         }
-        this.poolAddresses = _.map(route.pools, (p) => v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress);
+        this.poolIdentifiers = _.map(route.pools, (p) => v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress);
         this.tokenPath = this.route.tokenPath;
     }
     toString() {
         return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`;
     }
 }
+export class V4RouteWithValidQuote {
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, gasModel, quoteToken, tradeType, v4PoolProvider, }) {
+        this.protocol = Protocol.V4;
+        this.amount = amount;
+        this.rawQuote = rawQuote;
+        this.sqrtPriceX96AfterList = sqrtPriceX96AfterList;
+        this.initializedTicksCrossedList = initializedTicksCrossedList;
+        this.quoterGasEstimate = quoterGasEstimate;
+        this.quote = CurrencyAmount.fromRawAmount(quoteToken, rawQuote.toString());
+        this.percent = percent;
+        this.route = route;
+        this.gasModel = gasModel;
+        this.quoteToken = quoteToken;
+        this.tradeType = tradeType;
+        const { gasEstimate, gasCostInToken, gasCostInUSD, gasCostInGasToken } = this.gasModel.estimateGasCost(this);
+        this.gasCostInToken = gasCostInToken;
+        this.gasCostInUSD = gasCostInUSD;
+        this.gasEstimate = gasEstimate;
+        this.gasCostInGasToken = gasCostInGasToken;
+        // If its exact out, we need to request *more* of the input token to account for the gas.
+        if (this.tradeType == TradeType.EXACT_INPUT) {
+            const quoteGasAdjusted = this.quote.subtract(gasCostInToken);
+            this.quoteAdjustedForGas = quoteGasAdjusted;
+        }
+        else {
+            const quoteGasAdjusted = this.quote.add(gasCostInToken);
+            this.quoteAdjustedForGas = quoteGasAdjusted;
+        }
+        this.poolIdentifiers = _.map(route.pools, (p) => v4PoolProvider.getPoolId(p.token0, p.token1, p.fee, p.tickSpacing, p.hooks).poolId);
+        this.tokenPath = this.route.currencyPath;
+    }
+    toString() {
+        return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`;
+    }
+}
 /**
  * Represents a quote for swapping on a Mixed Route. Contains all information
  * such as the route used, the amount specified by the user, the type of quote
@@ -96,7 +133,7 @@ export class V3RouteWithValidQuote {
  * @class MixedRouteWithValidQuote
  */
 export class MixedRouteWithValidQuote {
-    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v3PoolProvider, v2PoolProvider, }) {
+    constructor({ amount, rawQuote, sqrtPriceX96AfterList, initializedTicksCrossedList, quoterGasEstimate, percent, route, mixedRouteGasModel, quoteToken, tradeType, v4PoolProvider, v3PoolProvider, v2PoolProvider, }) {
         this.protocol = Protocol.MIXED;
         this.amount = amount;
         this.rawQuote = rawQuote;
@@ -123,10 +160,20 @@ export class MixedRouteWithValidQuote {
             const quoteGasAdjusted = this.quote.add(gasCostInToken);
             this.quoteAdjustedForGas = quoteGasAdjusted;
         }
-        this.poolAddresses = _.map(route.pools, (p) => {
-            return p instanceof Pool
-                ? v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee).poolAddress
-                : v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress;
+        this.poolIdentifiers = _.map(route.pools, (p) => {
+            if (p instanceof V4Pool) {
+                return v4PoolProvider.getPoolId(p.token0, p.token1, p.fee, p.tickSpacing, p.hooks).poolId;
+            }
+            else if (p instanceof V3Pool) {
+                return v3PoolProvider.getPoolAddress(p.token0, p.token1, p.fee)
+                    .poolAddress;
+            }
+            else if (p instanceof Pair) {
+                return v2PoolProvider.getPoolAddress(p.token0, p.token1).poolAddress;
+            }
+            else {
+                throw new Error(`Unknown pool type ${JSON.stringify(p)}`);
+            }
         });
         this.tokenPath = this.route.path;
     }
@@ -134,4 +181,4 @@ export class MixedRouteWithValidQuote {
         return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtd2l0aC12YWxpZC1xdW90ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9lbnRpdGllcy9yb3V0ZS13aXRoLXZhbGlkLXF1b3RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQVMsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUl2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBMkRyRDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFPLHFCQUFxQjtJQTJCaEMsWUFBWSxFQUNWLE1BQU0sRUFDTixRQUFRLEVBQ1IsT0FBTyxFQUNQLEtBQUssRUFDTCxRQUFRLEVBQ1IsVUFBVSxFQUNWLFNBQVMsRUFDVCxjQUFjLEdBQ2M7UUFuQ2QsYUFBUSxHQUFHLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFvQ3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxLQUFLLEdBQUcsY0FBYyxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.d.ts
index 99bfd96..3bbba0b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.d.ts
@@ -5,7 +5,8 @@ import { CurrencyAmount } from '../../../util/amounts';
 import { SwapOptions } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { IGasModel } from '../gas-models';
-import { RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote } from './../entities/route-with-valid-quote';
+import { ProviderConfig } from '../../../providers/provider';
+import { RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote, V4RouteWithValidQuote } from './../entities/route-with-valid-quote';
 export declare type BestSwapRoute = {
     quote: CurrencyAmount;
     quoteGasAdjusted: CurrencyAmount;
@@ -15,7 +16,7 @@ export declare type BestSwapRoute = {
     estimatedGasUsedGasToken?: CurrencyAmount;
     routes: RouteWithValidQuote[];
 };
-export declare function getBestSwapRoute(amount: CurrencyAmount, percents: number[], routesWithValidQuotes: RouteWithValidQuote[], routeType: TradeType, chainId: ChainId, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, swapConfig?: SwapOptions): Promise<BestSwapRoute | null>;
+export declare function getBestSwapRoute(amount: CurrencyAmount, percents: number[], routesWithValidQuotes: RouteWithValidQuote[], routeType: TradeType, chainId: ChainId, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, v4GasModel?: IGasModel<V4RouteWithValidQuote>, swapConfig?: SwapOptions, providerConfig?: ProviderConfig): Promise<BestSwapRoute | null>;
 export declare function getBestSwapRouteBy(routeType: TradeType, percentToQuotes: {
     [percent: number]: RouteWithValidQuote[];
-}, percents: number[], chainId: ChainId, by: (routeQuote: RouteWithValidQuote) => CurrencyAmount, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, swapConfig?: SwapOptions): Promise<BestSwapRoute | undefined>;
+}, percents: number[], chainId: ChainId, by: (routeQuote: RouteWithValidQuote) => CurrencyAmount, routingConfig: AlphaRouterConfig, portionProvider: IPortionProvider, v2GasModel?: IGasModel<V2RouteWithValidQuote>, v3GasModel?: IGasModel<V3RouteWithValidQuote>, v4GasModel?: IGasModel<V4RouteWithValidQuote>, swapConfig?: SwapOptions, providerConfig?: ProviderConfig): Promise<BestSwapRoute | undefined>;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.js
index 575136a..e3fbc3e 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/best-swap-route.js
@@ -5,13 +5,13 @@ import JSBI from 'jsbi';
 import _ from 'lodash';
 import FixedReverseHeap from 'mnemonist/fixed-reverse-heap';
 import Queue from 'mnemonist/queue';
-import { HAS_L1_FEE, V2_SUPPORTED } from '../../../util';
+import { HAS_L1_FEE, V2_SUPPORTED, V4_SUPPORTED } from '../../../util';
 import { CurrencyAmount } from '../../../util/amounts';
 import { log } from '../../../util/log';
 import { metric, MetricLoggerUnit } from '../../../util/metric';
 import { routeAmountsToString, routeToString } from '../../../util/routes';
 import { usdGasTokensByChain } from '../gas-models';
-export async function getBestSwapRoute(amount, percents, routesWithValidQuotes, routeType, chainId, routingConfig, portionProvider, v2GasModel, v3GasModel, swapConfig) {
+export async function getBestSwapRoute(amount, percents, routesWithValidQuotes, routeType, chainId, routingConfig, portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig) {
     const now = Date.now();
     const { forceMixedRoutes } = routingConfig;
     /// Like with forceCrossProtocol, we apply that logic here when determining the bestSwapRoute
@@ -37,7 +37,7 @@ export async function getBestSwapRoute(amount, percents, routesWithValidQuotes,
     }
     metric.putMetric('BuildRouteWithValidQuoteObjects', Date.now() - now, MetricLoggerUnit.Milliseconds);
     // Given all the valid quotes for each percentage find the optimal route.
-    const swapRoute = await getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, (rq) => rq.quoteAdjustedForGas, routingConfig, portionProvider, v2GasModel, v3GasModel, swapConfig);
+    const swapRoute = await getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, (rq) => rq.quoteAdjustedForGas, routingConfig, portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig);
     // It is possible we were unable to find any valid route given the quotes.
     if (!swapRoute) {
         return null;
@@ -68,7 +68,7 @@ export async function getBestSwapRoute(amount, percents, routesWithValidQuotes,
     }, `Found best swap route. ${routeAmounts.length} split.`);
     return swapRoute;
 }
-export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, by, routingConfig, portionProvider, v2GasModel, v3GasModel, swapConfig) {
+export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, chainId, by, routingConfig, portionProvider, v2GasModel, v3GasModel, v4GasModel, swapConfig, providerConfig) {
     var _a;
     // Build a map of percentage to sorted list of quotes, with the biggest quote being first in the list.
     const percentToSortedQuotes = _.mapValues(percentToQuotes, (routeQuotes) => {
@@ -196,10 +196,13 @@ export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, c
                     const quoteNew = sumFn(quotesNew);
                     let gasCostL1QuoteToken = CurrencyAmount.fromRawAmount(quoteNew.currency, 0);
                     if (HAS_L1_FEE.includes(chainId)) {
-                        if (v2GasModel == undefined && v3GasModel == undefined) {
+                        if (v2GasModel == undefined &&
+                            v3GasModel == undefined &&
+                            v4GasModel == undefined) {
                             throw new Error("Can't compute L1 gas fees.");
                         }
                         else {
+                            // ROUTE-249: consoliate L1 + L2 gas fee adjustment within best-swap-route
                             const v2Routes = curRoutesNew.filter((routes) => routes.protocol === Protocol.V2);
                             if (v2Routes.length > 0 && V2_SUPPORTED.includes(chainId)) {
                                 if (v2GasModel) {
@@ -214,6 +217,13 @@ export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, c
                                     gasCostL1QuoteToken = gasCostL1QuoteToken.add(v3GasCostL1.gasCostL1QuoteToken);
                                 }
                             }
+                            const v4Routes = curRoutesNew.filter((routes) => routes.protocol === Protocol.V4);
+                            if (v4Routes.length > 0 && V4_SUPPORTED.includes(chainId)) {
+                                if (v4GasModel) {
+                                    const v4GasCostL1 = await v4GasModel.calculateL1GasFees(v4Routes);
+                                    gasCostL1QuoteToken = gasCostL1QuoteToken.add(v4GasCostL1.gasCostL1QuoteToken);
+                                }
+                            }
                         }
                     }
                     const quoteAfterL1Adjust = routeType == TradeType.EXACT_INPUT
@@ -274,7 +284,10 @@ export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, c
     };
     // If swapping on an L2 that includes a L1 security fee, calculate the fee and include it in the gas adjusted quotes
     if (HAS_L1_FEE.includes(chainId)) {
-        if (v2GasModel == undefined && v3GasModel == undefined) {
+        // ROUTE-249: consoliate L1 + L2 gas fee adjustment within best-swap-route
+        if (v2GasModel == undefined &&
+            v3GasModel == undefined &&
+            v4GasModel == undefined) {
             throw new Error("Can't compute L1 gas fees.");
         }
         else {
@@ -345,6 +358,37 @@ export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, c
                         gasCostsL1ToL2.gasCostL1QuoteToken.add(v3GasCostL1.gasCostL1QuoteToken);
                 }
             }
+            const v4Routes = bestSwap.filter((routes) => routes.protocol === Protocol.V4);
+            if (v4Routes.length > 0 && V4_SUPPORTED.includes(chainId)) {
+                if (v4GasModel) {
+                    const v4GasCostL1 = await v4GasModel.calculateL1GasFees(v4Routes);
+                    gasCostsL1ToL2.gasUsedL1 = gasCostsL1ToL2.gasUsedL1.add(v4GasCostL1.gasUsedL1);
+                    gasCostsL1ToL2.gasUsedL1OnL2 = gasCostsL1ToL2.gasUsedL1OnL2.add(v4GasCostL1.gasUsedL1OnL2);
+                    if (gasCostsL1ToL2.gasCostL1USD.currency.equals(v4GasCostL1.gasCostL1USD.currency)) {
+                        gasCostsL1ToL2.gasCostL1USD = gasCostsL1ToL2.gasCostL1USD.add(v4GasCostL1.gasCostL1USD);
+                    }
+                    else {
+                        // This is to handle the case where gasCostsL1ToL2.gasCostL1USD and v4GasCostL1.gasCostL1USD have different currencies.
+                        //
+                        // gasCostsL1ToL2.gasCostL1USD was initially hardcoded to CurrencyAmount.fromRawAmount(usdGasTokensByChain[chainId]![0]!, 0)
+                        // (https://github.com/Uniswap/smart-order-router/blob/main/src/routers/alpha-router/functions/best-swap-route.ts#L438)
+                        // , where usdGasTokensByChain is coded in the descending order of decimals per chain,
+                        // e.g. Arbitrum_one DAI (18 decimals), USDC bridged (6 decimals), USDC native (6 decimals)
+                        // so gasCostsL1ToL2.gasCostL1USD will have DAI as currency.
+                        //
+                        // For v4GasCostL1.gasCostL1USD, it's calculated within getHighestLiquidityV3USDPool among usdGasTokensByChain[chainId]!,
+                        // (https://github.com/Uniswap/smart-order-router/blob/1c93e133c46af545f8a3d8af7fca3f1f2dcf597d/src/util/gas-factory-helpers.ts#L110)
+                        // , so the code will actually see which USD pool has the highest liquidity, if any.
+                        // e.g. Arbitrum_one on v3 has highest liquidity on USDC native
+                        // so v4GasCostL1.gasCostL1USD will have USDC native as currency.
+                        //
+                        // We will re-assign gasCostsL1ToL2.gasCostL1USD to v3GasCostL1.gasCostL1USD in this case.
+                        gasCostsL1ToL2.gasCostL1USD = v4GasCostL1.gasCostL1USD;
+                    }
+                    gasCostsL1ToL2.gasCostL1QuoteToken =
+                        gasCostsL1ToL2.gasCostL1QuoteToken.add(v4GasCostL1.gasCostL1QuoteToken);
+                }
+            }
         }
     }
     const { gasUsedL1OnL2, gasCostL1USD, gasCostL1QuoteToken } = gasCostsL1ToL2;
@@ -356,6 +400,11 @@ export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, c
         if (decimalsDiff == 0) {
             return CurrencyAmount.fromRawAmount(usdToken, routeWithValidQuote.gasCostInUSD.quotient);
         }
+        if (decimalsDiff < 0 && chainId === 324) {
+            log.error(`Decimals diff is negative for ZkSync. This should not happen.
+          usdTokenDecimals ${usdTokenDecimals} routeWithValidQuote.gasCostInUSD.currency.decimals
+          ${routeWithValidQuote.gasCostInUSD.currency.decimals} ${JSON.stringify(routeWithValidQuote)}`);
+        }
         return CurrencyAmount.fromRawAmount(usdToken, JSBI.multiply(routeWithValidQuote.gasCostInUSD.quotient, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimalsDiff))));
     })
         .value();
@@ -409,7 +458,7 @@ export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, c
         estimatedGasUsedUSD,
         estimatedGasUsedQuoteToken,
         estimatedGasUsedGasToken,
-        routes: portionProvider.getRouteWithQuotePortionAdjusted(routeType, routeWithQuotes, swapConfig),
+        routes: portionProvider.getRouteWithQuotePortionAdjusted(routeType, routeWithQuotes, swapConfig, providerConfig),
     };
 }
 // We do not allow pools to be re-used across split routes, as swapping through a pool changes the pools state.
@@ -417,7 +466,7 @@ export async function getBestSwapRouteBy(routeType, percentToQuotes, percents, c
 const findFirstRouteNotUsingUsedPools = (usedRoutes, candidateRouteQuotes, forceCrossProtocol) => {
     const poolAddressSet = new Set();
     const usedPoolAddresses = _(usedRoutes)
-        .flatMap((r) => r.poolAddresses)
+        .flatMap((r) => r.poolIdentifiers)
         .value();
     for (const poolAddress of usedPoolAddresses) {
         poolAddressSet.add(poolAddress);
@@ -431,7 +480,7 @@ const findFirstRouteNotUsingUsedPools = (usedRoutes, candidateRouteQuotes, force
         protocolsSet.add(protocol);
     }
     for (const routeQuote of candidateRouteQuotes) {
-        const { poolAddresses, protocol } = routeQuote;
+        const { poolIdentifiers: poolAddresses, protocol } = routeQuote;
         if (poolAddresses.some((poolAddress) => poolAddressSet.has(poolAddress))) {
             continue;
         }
@@ -445,4 +494,4 @@ const findFirstRouteNotUsingUsedPools = (usedRoutes, candidateRouteQuotes, force
     }
     return null;
 };
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.d.ts
index 09afa6f..fc586cb 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.d.ts
@@ -1,8 +1,11 @@
-import { Token } from '@uniswap/sdk-core';
+import { Currency, Token } from '@uniswap/sdk-core';
 import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
-import { MixedRoute, V2Route, V3Route } from '../../router';
-export declare function computeAllV3Routes(tokenIn: Token, tokenOut: Token, pools: Pool[], maxHops: number): V3Route[];
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
+import { TPool } from '@uniswap/router-sdk/dist/utils/TPool';
+import { MixedRoute, SupportedRoutes, V2Route, V3Route, V4Route } from '../../router';
+export declare function computeAllV4Routes(tokenIn: Currency, tokenOut: Currency, pools: V4Pool[], maxHops: number): V4Route[];
+export declare function computeAllV3Routes(tokenIn: Token, tokenOut: Token, pools: V3Pool[], maxHops: number): V3Route[];
 export declare function computeAllV2Routes(tokenIn: Token, tokenOut: Token, pools: Pair[], maxHops: number): V2Route[];
-export declare function computeAllMixedRoutes(tokenIn: Token, tokenOut: Token, parts: (Pool | Pair)[], maxHops: number): MixedRoute[];
-export declare function computeAllRoutes<TPool extends Pair | Pool, TRoute extends V3Route | V2Route | MixedRoute>(tokenIn: Token, tokenOut: Token, buildRoute: (route: TPool[], tokenIn: Token, tokenOut: Token) => TRoute, pools: TPool[], maxHops: number): TRoute[];
+export declare function computeAllMixedRoutes(tokenIn: Token, tokenOut: Token, parts: TPool[], maxHops: number): MixedRoute[];
+export declare function computeAllRoutes<TypePool extends TPool, TRoute extends SupportedRoutes>(tokenIn: Token, tokenOut: Token, buildRoute: (route: TypePool[], tokenIn: Token, tokenOut: Token) => TRoute, pools: TypePool[], maxHops: number): TRoute[];
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js
index 328f54f..009dd23 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js
@@ -1,8 +1,15 @@
 import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
 import { log } from '../../../util/log';
 import { poolToString, routeToString } from '../../../util/routes';
-import { MixedRoute, V2Route, V3Route } from '../../router';
+import { MixedRoute, V2Route, V3Route, V4Route, } from '../../router';
+export function computeAllV4Routes(tokenIn, tokenOut, pools, maxHops) {
+    // TODO: ROUTE-217 - Support native currency routing in V4
+    return computeAllRoutes(tokenIn.wrapped, tokenOut.wrapped, (route, tokenIn, tokenOut) => {
+        return new V4Route(route, tokenIn, tokenOut);
+    }, pools, maxHops);
+}
 export function computeAllV3Routes(tokenIn, tokenOut, pools, maxHops) {
     return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {
         return new V3Route(route, tokenIn, tokenOut);
@@ -17,9 +24,10 @@ export function computeAllMixedRoutes(tokenIn, tokenOut, parts, maxHops) {
     const routesRaw = computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {
         return new MixedRoute(route, tokenIn, tokenOut);
     }, parts, maxHops);
-    /// filter out pure v3 and v2 routes
+    /// filter out pure v4 and v3 and v2 routes
     return routesRaw.filter((route) => {
-        return (!route.pools.every((pool) => pool instanceof Pool) &&
+        return (!route.pools.every((pool) => pool instanceof V4Pool) &&
+            !route.pools.every((pool) => pool instanceof V3Pool) &&
             !route.pools.every((pool) => pool instanceof Pair));
     });
 }
@@ -48,16 +56,17 @@ export function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops)
             const currentTokenOut = curPool.token0.equals(previousTokenOut)
                 ? curPool.token1
                 : curPool.token0;
-            if (tokensVisited.has(currentTokenOut.address.toLowerCase())) {
+            // TODO: ROUTE-217 - Support native currency routing in V4
+            if (tokensVisited.has(currentTokenOut.wrapped.address.toLowerCase())) {
                 continue;
             }
-            tokensVisited.add(currentTokenOut.address.toLowerCase());
+            tokensVisited.add(currentTokenOut.wrapped.address.toLowerCase());
             currentRoute.push(curPool);
             poolsUsed[i] = true;
-            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, currentTokenOut);
+            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, currentTokenOut.wrapped);
             poolsUsed[i] = false;
             currentRoute.pop();
-            tokensVisited.delete(currentTokenOut.address.toLowerCase());
+            tokensVisited.delete(currentTokenOut.wrapped.address.toLowerCase());
         }
     };
     computeRoutes(tokenIn, tokenOut, [], poolsUsed, new Set([tokenIn.address.toLowerCase()]));
@@ -67,4 +76,4 @@ export function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops)
     }, `Computed ${routes.length} possible routes for type ${(_a = routes[0]) === null || _a === void 0 ? void 0 : _a.protocol}.`);
     return routes;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV2QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEMsT0FBTyxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFNUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVBQ0wsT0FBTyxDQUNSLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLElBQUksTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLElBQUksSUFBSSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUdqRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEMsT0FBTyxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRSxPQUFPLEVBQ0wsVUFBVSxFQUVWLE9BQU8sRUFDUCxPQUFPLEVBQ1AsT0FBTyxHQUNSLE1BQU0sY0FBYyxDQUFDO0FBRXRCLE1BQU0sVUFBVSxrQkFBa0IsQ0FDaEMsT0FBaUIsRUFDakIsUUFBa0IsRUFDbEIsS0FBZSxFQUNmLE9BQWU7SUFFZiwwREFBMEQ7SUFDMUQsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxDQUFDLE9BQU8sRUFDZixRQUFRLENBQUMsT0FBTyxFQUNoQixDQUFDLEtBQWUsRUFBRSxPQUFpQixFQUFFLFFBQWtCLEVBQUUsRUFBRTtRQUN6RCxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUNELEtBQUssRUFDTCxPQUFPLENBQ1IsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLFVBQVUsa0JBQWtCLENBQ2hDLE9BQWMsRUFDZCxRQUFlLEVBQ2YsS0FBZSxFQUNmLE9BQWU7SUFFZixPQUFPLGdCQUFnQixDQUNyQixPQUFPLEVBQ1AsUUFBUSxFQUNSLENBQUMsS0FBZSxF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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts
index 07db71c..c44248a 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts
@@ -1,28 +1,48 @@
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Token, TradeType } from '@uniswap/sdk-core';
-import { ITokenListProvider, IV2SubgraphProvider, V2SubgraphPool } from '../../../providers';
+import { ITokenListProvider, IV2SubgraphProvider, IV4PoolProvider, IV4SubgraphProvider, V2SubgraphPool, V4PoolAccessor, V4SubgraphPool } from '../../../providers';
 import { ITokenProvider } from '../../../providers/token-provider';
 import { IV2PoolProvider, V2PoolAccessor } from '../../../providers/v2/pool-provider';
 import { IV3PoolProvider, V3PoolAccessor } from '../../../providers/v3/pool-provider';
 import { IV3SubgraphProvider, V3SubgraphPool } from '../../../providers/v3/subgraph-provider';
 import { AlphaRouterConfig } from '../alpha-router';
-export declare type PoolId = {
-    id: string;
-};
+export declare type SubgraphPool = V2SubgraphPool | V3SubgraphPool | V4SubgraphPool;
 export declare type CandidatePoolsBySelectionCriteria = {
     protocol: Protocol;
     selections: CandidatePoolsSelections;
 };
+export declare type SupportedCandidatePools = V2CandidatePools | V3CandidatePools | V4CandidatePools;
 export declare type CandidatePoolsSelections = {
-    topByBaseWithTokenIn: PoolId[];
-    topByBaseWithTokenOut: PoolId[];
-    topByDirectSwapPool: PoolId[];
-    topByEthQuoteTokenPool: PoolId[];
-    topByTVL: PoolId[];
-    topByTVLUsingTokenIn: PoolId[];
-    topByTVLUsingTokenOut: PoolId[];
-    topByTVLUsingTokenInSecondHops: PoolId[];
-    topByTVLUsingTokenOutSecondHops: PoolId[];
+    topByBaseWithTokenIn: SubgraphPool[];
+    topByBaseWithTokenOut: SubgraphPool[];
+    topByDirectSwapPool: SubgraphPool[];
+    topByEthQuoteTokenPool: SubgraphPool[];
+    topByTVL: SubgraphPool[];
+    topByTVLUsingTokenIn: SubgraphPool[];
+    topByTVLUsingTokenOut: SubgraphPool[];
+    topByTVLUsingTokenInSecondHops: SubgraphPool[];
+    topByTVLUsingTokenOutSecondHops: SubgraphPool[];
+};
+export declare type MixedCrossLiquidityCandidatePoolsParams = {
+    tokenIn: Token;
+    tokenOut: Token;
+    v2SubgraphProvider: IV2SubgraphProvider;
+    v3SubgraphProvider: IV3SubgraphProvider;
+    v2Candidates?: V2CandidatePools;
+    v3Candidates?: V3CandidatePools;
+    v4Candidates?: V4CandidatePools;
+    blockNumber?: number | Promise<number>;
+};
+export declare type V4GetCandidatePoolsParams = {
+    tokenIn: Token;
+    tokenOut: Token;
+    routeType: TradeType;
+    routingConfig: AlphaRouterConfig;
+    subgraphProvider: IV4SubgraphProvider;
+    tokenProvider: ITokenProvider;
+    poolProvider: IV4PoolProvider;
+    blockedTokenListProvider?: ITokenListProvider;
+    chainId: ChainId;
 };
 export declare type V3GetCandidatePoolsParams = {
     tokenIn: Token;
@@ -47,15 +67,38 @@ export declare type V2GetCandidatePoolsParams = {
     chainId: ChainId;
 };
 export declare type MixedRouteGetCandidatePoolsParams = {
+    v4CandidatePools: V4CandidatePools;
     v3CandidatePools: V3CandidatePools;
     v2CandidatePools: V2CandidatePools;
+    crossLiquidityPools: CrossLiquidityCandidatePools;
     routingConfig: AlphaRouterConfig;
     tokenProvider: ITokenProvider;
     v2poolProvider: IV2PoolProvider;
     v3poolProvider: IV3PoolProvider;
+    v4PoolProvider: IV4PoolProvider;
     blockedTokenListProvider?: ITokenListProvider;
     chainId: ChainId;
 };
+export declare type CrossLiquidityCandidatePools = {
+    v2Pools: V2SubgraphPool[];
+    v3Pools: V3SubgraphPool[];
+};
+/**
+ * Function that finds any missing pools that were not selected by the heuristic but that would
+ *   create a route with the topPool by TVL with either tokenIn or tokenOut across protocols.
+ *
+ *   e.g. In V2CandidatePools we found that wstETH/DOG is the most liquid pool,
+ *        then in V3CandidatePools ETH/wstETH is *not* the most liquid pool, so it is not selected
+ *        This process will look for that pool in order to complete the route.
+ *
+ */
+export declare function getMixedCrossLiquidityCandidatePools({ tokenIn, tokenOut, blockNumber, v2SubgraphProvider, v3SubgraphProvider, v2Candidates, v3Candidates, }: MixedCrossLiquidityCandidatePoolsParams): Promise<CrossLiquidityCandidatePools>;
+export declare type V4CandidatePools = {
+    poolAccessor: V4PoolAccessor;
+    candidatePools: CandidatePoolsBySelectionCriteria;
+    subgraphPools: V4SubgraphPool[];
+};
+export declare function getV4CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V4GetCandidatePoolsParams): Promise<V4CandidatePools>;
 export declare type V3CandidatePools = {
     poolAccessor: V3PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
@@ -71,7 +114,8 @@ export declare function getV2CandidatePools({ tokenIn, tokenOut, routeType, rout
 export declare type MixedCandidatePools = {
     V2poolAccessor: V2PoolAccessor;
     V3poolAccessor: V3PoolAccessor;
+    V4poolAccessor: V4PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
-    subgraphPools: (V2SubgraphPool | V3SubgraphPool)[];
+    subgraphPools: SubgraphPool[];
 };
-export declare function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }: MixedRouteGetCandidatePoolsParams): Promise<MixedCandidatePools>;
+export declare function getMixedRouteCandidatePools({ v4CandidatePools, v3CandidatePools, v2CandidatePools, crossLiquidityPools, routingConfig, tokenProvider, v4PoolProvider, v3poolProvider, v2poolProvider, }: MixedRouteGetCandidatePoolsParams): Promise<MixedCandidatePools>;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
index 22cbf4a..b2eb725 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
@@ -1,9 +1,9 @@
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, TradeType } from '@uniswap/sdk-core';
-import { FeeAmount } from '@uniswap/v3-sdk';
+import { ADDRESS_ZERO, FeeAmount } from '@uniswap/v3-sdk';
 import _ from 'lodash';
-import { DAI_OPTIMISM_SEPOLIA, USDC_ARBITRUM_SEPOLIA, USDC_OPTIMISM_SEPOLIA, USDT_OPTIMISM_SEPOLIA, WBTC_OPTIMISM_SEPOLIA } from '../../../providers';
-import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, FEI_MAINNET, USDB_BLAST, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WGLMR_MOONBEAM, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../../../providers/token-provider';
+import { DAI_OPTIMISM_SEPOLIA, USDC_ARBITRUM_SEPOLIA, USDC_OPTIMISM_SEPOLIA, USDT_OPTIMISM_SEPOLIA, WBTC_OPTIMISM_SEPOLIA, } from '../../../providers';
+import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, FEI_MAINNET, USDB_BLAST, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WGLMR_MOONBEAM, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WSTETH_MAINNET, WXDAI_GNOSIS, } from '../../../providers/token-provider';
 import { unparseFeeAmount, WRAPPED_NATIVE_CURRENCY } from '../../../util';
 import { parseFeeAmount } from '../../../util/amounts';
 import { log } from '../../../util/log';
@@ -16,6 +16,7 @@ const baseTokensByChain = {
         DAI_MAINNET,
         WRAPPED_NATIVE_CURRENCY[1],
         FEI_MAINNET,
+        WSTETH_MAINNET,
     ],
     [ChainId.OPTIMISM]: [
         DAI_OPTIMISM,
@@ -65,6 +66,24 @@ const baseTokensByChain = {
     [ChainId.BLAST]: [WRAPPED_NATIVE_CURRENCY[ChainId.BLAST], USDB_BLAST],
     [ChainId.ZORA]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZORA]],
     [ChainId.ZKSYNC]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC]],
+    [ChainId.ABSTRACT_TESTNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_TESTNET],
+    ],
+    [ChainId.ZERO]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZERO]],
+    [ChainId.BOB]: [WRAPPED_NATIVE_CURRENCY[ChainId.BOB]],
+    [ChainId.CYBER]: [WRAPPED_NATIVE_CURRENCY[ChainId.CYBER]],
+    [ChainId.SHAPE]: [WRAPPED_NATIVE_CURRENCY[ChainId.SHAPE]],
+    [ChainId.INK]: [WRAPPED_NATIVE_CURRENCY[ChainId.INK]],
+    [ChainId.REDSTONE]: [WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE]],
+    [ChainId.REDSTONE_GARNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE_GARNET],
+    ],
+    [ChainId.ABSTRACT_MAINNET]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_MAINNET],
+    ],
+    [ChainId.ANIME_TESTNET]: [WRAPPED_NATIVE_CURRENCY[ChainId.ANIME_TESTNET]],
+    [ChainId.ANIME]: [WRAPPED_NATIVE_CURRENCY[ChainId.ANIME]],
+    [ChainId.MODE]: [WRAPPED_NATIVE_CURRENCY[ChainId.MODE]],
 };
 class SubcategorySelectionPools {
     constructor(pools, poolsNeeded) {
@@ -75,6 +94,381 @@ class SubcategorySelectionPools {
         return this.pools.length >= this.poolsNeeded;
     }
 }
+/**
+ * Function that finds any missing pools that were not selected by the heuristic but that would
+ *   create a route with the topPool by TVL with either tokenIn or tokenOut across protocols.
+ *
+ *   e.g. In V2CandidatePools we found that wstETH/DOG is the most liquid pool,
+ *        then in V3CandidatePools ETH/wstETH is *not* the most liquid pool, so it is not selected
+ *        This process will look for that pool in order to complete the route.
+ *
+ */
+export async function getMixedCrossLiquidityCandidatePools({ tokenIn, tokenOut, blockNumber, v2SubgraphProvider, v3SubgraphProvider, v2Candidates, v3Candidates, }) {
+    const v2Pools = (await v2SubgraphProvider.getPools(tokenIn, tokenOut, {
+        blockNumber,
+    })).sort((a, b) => b.reserve - a.reserve);
+    const v3Pools = (await v3SubgraphProvider.getPools(tokenIn, tokenOut, {
+        blockNumber,
+    })).sort((a, b) => b.tvlUSD - a.tvlUSD);
+    const tokenInAddress = tokenIn.address.toLowerCase();
+    const tokenOutAddress = tokenOut.address.toLowerCase();
+    const v2SelectedPools = findCrossProtocolMissingPools(tokenInAddress, tokenOutAddress, v2Pools, v2Candidates, v3Candidates);
+    const v3SelectedPools = findCrossProtocolMissingPools(tokenInAddress, tokenOutAddress, v3Pools, v3Candidates, v2Candidates);
+    const selectedV2Pools = [
+        v2SelectedPools.forTokenIn,
+        v2SelectedPools.forTokenOut,
+    ].filter((pool) => pool !== undefined);
+    const selectedV3Pools = [
+        v3SelectedPools.forTokenIn,
+        v3SelectedPools.forTokenOut,
+    ].filter((pool) => pool !== undefined);
+    return {
+        v2Pools: selectedV2Pools,
+        v3Pools: selectedV3Pools,
+    };
+}
+function findCrossProtocolMissingPools(tokenInAddress, tokenOutAddress, pools, candidatesInProtocolToSearch, candidatesInContextProtocol) {
+    var _a;
+    const selectedPools = {};
+    const previouslySelectedPools = new Set((_a = candidatesInProtocolToSearch === null || candidatesInProtocolToSearch === void 0 ? void 0 : candidatesInProtocolToSearch.subgraphPools.map((pool) => pool.id)) !== null && _a !== void 0 ? _a : []);
+    const topPoolByTvlWithTokenOut = candidatesInContextProtocol === null || candidatesInContextProtocol === void 0 ? void 0 : candidatesInContextProtocol.candidatePools.selections.topByTVLUsingTokenOut[0];
+    const crossTokenAgainstTokenOut = (topPoolByTvlWithTokenOut === null || topPoolByTvlWithTokenOut === void 0 ? void 0 : topPoolByTvlWithTokenOut.token0.id.toLowerCase()) === tokenOutAddress
+        ? topPoolByTvlWithTokenOut === null || topPoolByTvlWithTokenOut === void 0 ? void 0 : topPoolByTvlWithTokenOut.token1.id.toLowerCase()
+        : topPoolByTvlWithTokenOut === null || topPoolByTvlWithTokenOut === void 0 ? void 0 : topPoolByTvlWithTokenOut.token0.id.toLowerCase();
+    const topPoolByTvlWithTokenIn = candidatesInContextProtocol === null || candidatesInContextProtocol === void 0 ? void 0 : candidatesInContextProtocol.candidatePools.selections.topByTVLUsingTokenIn[0];
+    const crossTokenAgainstTokenIn = (topPoolByTvlWithTokenIn === null || topPoolByTvlWithTokenIn === void 0 ? void 0 : topPoolByTvlWithTokenIn.token0.id.toLowerCase()) === tokenInAddress
+        ? topPoolByTvlWithTokenIn === null || topPoolByTvlWithTokenIn === void 0 ? void 0 : topPoolByTvlWithTokenIn.token1.id.toLowerCase()
+        : topPoolByTvlWithTokenIn === null || topPoolByTvlWithTokenIn === void 0 ? void 0 : topPoolByTvlWithTokenIn.token0.id.toLowerCase();
+    for (const pool of pools) {
+        // If we already found both pools for tokenIn and tokenOut. break out of this for loop.
+        if (selectedPools.forTokenIn !== undefined &&
+            selectedPools.forTokenOut !== undefined) {
+            break;
+        }
+        // If the pool has already been selected. continue to the next pool.
+        if (previouslySelectedPools.has(pool.id.toLowerCase())) {
+            continue;
+        }
+        const poolToken0Address = pool.token0.id.toLowerCase();
+        const poolToken1Address = pool.token1.id.toLowerCase();
+        // If we haven't selected the pool for tokenIn, and we found a pool matching the tokenOut, and the intermediateToken, select this pool
+        if (selectedPools.forTokenIn === undefined &&
+            ((poolToken0Address === tokenOutAddress &&
+                poolToken1Address === crossTokenAgainstTokenIn) ||
+                (poolToken1Address === tokenOutAddress &&
+                    poolToken0Address === crossTokenAgainstTokenIn))) {
+            selectedPools.forTokenIn = pool;
+        }
+        // If we haven't selected the pool for tokenOut, and we found a pool matching the tokenIn, and the intermediateToken, select this pool
+        if (selectedPools.forTokenOut === undefined &&
+            ((poolToken0Address === tokenInAddress &&
+                poolToken1Address === crossTokenAgainstTokenOut) ||
+                (poolToken1Address === tokenInAddress &&
+                    poolToken0Address === crossTokenAgainstTokenOut))) {
+            selectedPools.forTokenOut = pool;
+        }
+    }
+    return selectedPools;
+}
+// TODO: ROUTE-241 - refactor getV3CandidatePools against getV4CandidatePools
+export async function getV4CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
+    var _a, _b, _c, _d, _e;
+    const { blockNumber, v4PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNSecondHopForTokenAddress, tokensToAvoidOnSecondHops, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
+    const tokenInAddress = tokenIn.address.toLowerCase();
+    const tokenOutAddress = tokenOut.address.toLowerCase();
+    const beforeSubgraphPools = Date.now();
+    const allPools = await subgraphProvider.getPools(tokenIn, tokenOut, {
+        blockNumber,
+    });
+    log.info({ samplePools: allPools.slice(0, 3) }, 'Got all pools from V4 subgraph provider');
+    // Although this is less of an optimization than the V2 equivalent,
+    // save some time copying objects by mutating the underlying pool directly.
+    for (const pool of allPools) {
+        pool.token0.id = pool.token0.id.toLowerCase();
+        pool.token1.id = pool.token1.id.toLowerCase();
+    }
+    metric.putMetric('V4SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
+    // Only consider pools where neither tokens are in the blocked token list.
+    let filteredPools = allPools;
+    if (blockedTokenListProvider) {
+        filteredPools = [];
+        for (const pool of allPools) {
+            const token0InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token0.id);
+            const token1InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token1.id);
+            if (token0InBlocklist || token1InBlocklist) {
+                continue;
+            }
+            filteredPools.push(pool);
+        }
+    }
+    // Sort by tvlUSD in descending order
+    const subgraphPoolsSorted = filteredPools.sort((a, b) => b.tvlUSD - a.tvlUSD);
+    log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);
+    const poolAddressesSoFar = new Set();
+    const addToAddressSet = (pools) => {
+        _(pools)
+            .map((pool) => pool.id)
+            .forEach((poolAddress) => poolAddressesSoFar.add(poolAddress));
+    };
+    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];
+    const topByBaseWithTokenIn = _(baseTokens)
+        .flatMap((token) => {
+        return _(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            const tokenAddress = token.address.toLowerCase();
+            return ((subgraphPool.token0.id == tokenAddress &&
+                subgraphPool.token1.id == tokenInAddress) ||
+                (subgraphPool.token1.id == tokenAddress &&
+                    subgraphPool.token0.id == tokenInAddress));
+        })
+            .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+            .slice(0, topNWithEachBaseToken)
+            .value();
+    })
+        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+        .slice(0, topNWithBaseToken)
+        .value();
+    const topByBaseWithTokenOut = _(baseTokens)
+        .flatMap((token) => {
+        return _(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            const tokenAddress = token.address.toLowerCase();
+            return ((subgraphPool.token0.id == tokenAddress &&
+                subgraphPool.token1.id == tokenOutAddress) ||
+                (subgraphPool.token1.id == tokenAddress &&
+                    subgraphPool.token0.id == tokenOutAddress));
+        })
+            .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+            .slice(0, topNWithEachBaseToken)
+            .value();
+    })
+        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
+        .slice(0, topNWithBaseToken)
+        .value();
+    let top2DirectSwapPool = _(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return (!poolAddressesSoFar.has(subgraphPool.id) &&
+            ((subgraphPool.token0.id == tokenInAddress &&
+                subgraphPool.token1.id == tokenOutAddress) ||
+                (subgraphPool.token1.id == tokenInAddress &&
+                    subgraphPool.token0.id == tokenOutAddress)));
+    })
+        .slice(0, topNDirectSwaps)
+        .value();
+    if (top2DirectSwapPool.length == 0 && topNDirectSwaps > 0) {
+        // If we requested direct swap pools but did not find any in the subgraph query.
+        // Optimistically add them into the query regardless. Invalid pools ones will be dropped anyway
+        // when we query the pool on-chain. Ensures that new pools for new pairs can be swapped on immediately.
+        top2DirectSwapPool = _.map([
+            [FeeAmount.HIGH, 200, ADDRESS_ZERO],
+            [FeeAmount.MEDIUM, 60, ADDRESS_ZERO],
+            [FeeAmount.LOW, 10, ADDRESS_ZERO],
+            [FeeAmount.LOWEST, 1, ADDRESS_ZERO],
+        ], (poolParams) => {
+            const [fee, tickSpacing, hooks] = poolParams;
+            const { currency0, currency1, poolId } = poolProvider.getPoolId(tokenIn, tokenOut, fee, tickSpacing, hooks);
+            return {
+                id: poolId,
+                feeTier: unparseFeeAmount(fee),
+                tickSpacing: tickSpacing.toString(),
+                hooks: hooks,
+                liquidity: '10000',
+                token0: {
+                    id: currency0.wrapped.address,
+                },
+                token1: {
+                    id: currency1.wrapped.address,
+                },
+                tvlETH: 10000,
+                tvlUSD: 10000,
+            };
+        });
+    }
+    addToAddressSet(top2DirectSwapPool);
+    const wrappedNativeAddress = (_b = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _b === void 0 ? void 0 : _b.address.toLowerCase();
+    // Main reason we need this is for gas estimates, only needed if token out is not native.
+    // We don't check the seen address set because if we've already added pools for getting native quotes
+    // theres no need to add more.
+    let top2EthQuoteTokenPool = [];
+    if ((((_c = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _c === void 0 ? void 0 : _c.symbol) ==
+        ((_d = WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET]) === null || _d === void 0 ? void 0 : _d.symbol) &&
+        tokenOut.symbol != 'WETH' &&
+        tokenOut.symbol != 'WETH9' &&
+        tokenOut.symbol != 'ETH') ||
+        (((_e = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _e === void 0 ? void 0 : _e.symbol) == WMATIC_POLYGON.symbol &&
+            tokenOut.symbol != 'MATIC' &&
+            tokenOut.symbol != 'WMATIC')) {
+        top2EthQuoteTokenPool = _(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            if (routeType == TradeType.EXACT_INPUT) {
+                return ((subgraphPool.token0.id == wrappedNativeAddress &&
+                    subgraphPool.token1.id == tokenOutAddress) ||
+                    (subgraphPool.token1.id == wrappedNativeAddress &&
+                        subgraphPool.token0.id == tokenOutAddress));
+            }
+            else {
+                return ((subgraphPool.token0.id == wrappedNativeAddress &&
+                    subgraphPool.token1.id == tokenInAddress) ||
+                    (subgraphPool.token1.id == wrappedNativeAddress &&
+                        subgraphPool.token0.id == tokenInAddress));
+            }
+        })
+            .slice(0, 1)
+            .value();
+    }
+    addToAddressSet(top2EthQuoteTokenPool);
+    const topByTVL = _(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return !poolAddressesSoFar.has(subgraphPool.id);
+    })
+        .slice(0, topN)
+        .value();
+    addToAddressSet(topByTVL);
+    const topByTVLUsingTokenIn = _(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return (!poolAddressesSoFar.has(subgraphPool.id) &&
+            (subgraphPool.token0.id == tokenInAddress ||
+                subgraphPool.token1.id == tokenInAddress));
+    })
+        .slice(0, topNTokenInOut)
+        .value();
+    addToAddressSet(topByTVLUsingTokenIn);
+    const topByTVLUsingTokenOut = _(subgraphPoolsSorted)
+        .filter((subgraphPool) => {
+        return (!poolAddressesSoFar.has(subgraphPool.id) &&
+            (subgraphPool.token0.id == tokenOutAddress ||
+                subgraphPool.token1.id == tokenOutAddress));
+    })
+        .slice(0, topNTokenInOut)
+        .value();
+    addToAddressSet(topByTVLUsingTokenOut);
+    const topByTVLUsingTokenInSecondHops = _(topByTVLUsingTokenIn)
+        .map((subgraphPool) => {
+        return tokenInAddress == subgraphPool.token0.id
+            ? subgraphPool.token1.id
+            : subgraphPool.token0.id;
+    })
+        .flatMap((secondHopId) => {
+        var _a;
+        return _(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            return (!poolAddressesSoFar.has(subgraphPool.id) &&
+                !(tokensToAvoidOnSecondHops === null || tokensToAvoidOnSecondHops === void 0 ? void 0 : tokensToAvoidOnSecondHops.includes(secondHopId.toLowerCase())) &&
+                (subgraphPool.token0.id == secondHopId ||
+                    subgraphPool.token1.id == secondHopId));
+        })
+            .slice(0, (_a = topNSecondHopForTokenAddress === null || topNSecondHopForTokenAddress === void 0 ? void 0 : topNSecondHopForTokenAddress.get(secondHopId)) !== null && _a !== void 0 ? _a : topNSecondHop)
+            .value();
+    })
+        .uniqBy((pool) => pool.id)
+        .value();
+    addToAddressSet(topByTVLUsingTokenInSecondHops);
+    const topByTVLUsingTokenOutSecondHops = _(topByTVLUsingTokenOut)
+        .map((subgraphPool) => {
+        return tokenOutAddress == subgraphPool.token0.id
+            ? subgraphPool.token1.id
+            : subgraphPool.token0.id;
+    })
+        .flatMap((secondHopId) => {
+        var _a;
+        return _(subgraphPoolsSorted)
+            .filter((subgraphPool) => {
+            return (!poolAddressesSoFar.has(subgraphPool.id) &&
+                !(tokensToAvoidOnSecondHops === null || tokensToAvoidOnSecondHops === void 0 ? void 0 : tokensToAvoidOnSecondHops.includes(secondHopId.toLowerCase())) &&
+                (subgraphPool.token0.id == secondHopId ||
+                    subgraphPool.token1.id == secondHopId));
+        })
+            .slice(0, (_a = topNSecondHopForTokenAddress === null || topNSecondHopForTokenAddress === void 0 ? void 0 : topNSecondHopForTokenAddress.get(secondHopId)) !== null && _a !== void 0 ? _a : topNSecondHop)
+            .value();
+    })
+        .uniqBy((pool) => pool.id)
+        .value();
+    addToAddressSet(topByTVLUsingTokenOutSecondHops);
+    const subgraphPools = _([
+        ...topByBaseWithTokenIn,
+        ...topByBaseWithTokenOut,
+        ...top2DirectSwapPool,
+        ...top2EthQuoteTokenPool,
+        ...topByTVL,
+        ...topByTVLUsingTokenIn,
+        ...topByTVLUsingTokenOut,
+        ...topByTVLUsingTokenInSecondHops,
+        ...topByTVLUsingTokenOutSecondHops,
+    ])
+        .compact()
+        .uniqBy((pool) => pool.id)
+        .value();
+    const tokenAddresses = _(subgraphPools)
+        .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])
+        .compact()
+        .uniq()
+        .value();
+    log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V4 pools we are considering`);
+    const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, {
+        blockNumber,
+    });
+    const printV4SubgraphPool = (s) => {
+        var _a, _b, _c, _d;
+        return `${(_b = (_a = tokenAccessor.getTokenByAddress(s.token0.id)) === null || _a === void 0 ? void 0 : _a.symbol) !== null && _b !== void 0 ? _b : s.token0.id}/${(_d = (_c = tokenAccessor.getTokenByAddress(s.token1.id)) === null || _c === void 0 ? void 0 : _c.symbol) !== null && _d !== void 0 ? _d : s.token1.id}/${s.feeTier}/${s.tickSpacing}/${s.hooks}`;
+    };
+    log.info({
+        topByBaseWithTokenIn: topByBaseWithTokenIn.map(printV4SubgraphPool),
+        topByBaseWithTokenOut: topByBaseWithTokenOut.map(printV4SubgraphPool),
+        topByTVL: topByTVL.map(printV4SubgraphPool),
+        topByTVLUsingTokenIn: topByTVLUsingTokenIn.map(printV4SubgraphPool),
+        topByTVLUsingTokenOut: topByTVLUsingTokenOut.map(printV4SubgraphPool),
+        topByTVLUsingTokenInSecondHops: topByTVLUsingTokenInSecondHops.map(printV4SubgraphPool),
+        topByTVLUsingTokenOutSecondHops: topByTVLUsingTokenOutSecondHops.map(printV4SubgraphPool),
+        top2DirectSwap: top2DirectSwapPool.map(printV4SubgraphPool),
+        top2EthQuotePool: top2EthQuoteTokenPool.map(printV4SubgraphPool),
+    }, `V4 Candidate Pools`);
+    const tokenPairsRaw = _.map(subgraphPools, (subgraphPool) => {
+        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);
+        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);
+        let fee;
+        try {
+            fee = Number(subgraphPool.feeTier);
+        }
+        catch (err) {
+            log.info({ subgraphPool }, `Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier} because fee tier not supported`);
+            return undefined;
+        }
+        if (!tokenA || !tokenB) {
+            log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee} because ${tokenA ? subgraphPool.token1.id : subgraphPool.token0.id} not found by token provider`);
+            return undefined;
+        }
+        return [
+            tokenA,
+            tokenB,
+            fee,
+            Number(subgraphPool.tickSpacing),
+            subgraphPool.hooks,
+        ];
+    });
+    const tokenPairs = _.compact(tokenPairsRaw);
+    metric.putMetric('V4PoolsFilterLoad', Date.now() - beforePoolsFiltered, MetricLoggerUnit.Milliseconds);
+    const beforePoolsLoad = Date.now();
+    const poolAccessor = await poolProvider.getPools(tokenPairs, {
+        blockNumber,
+    });
+    metric.putMetric('V4PoolsLoad', Date.now() - beforePoolsLoad, MetricLoggerUnit.Milliseconds);
+    const poolsBySelection = {
+        protocol: Protocol.V4,
+        selections: {
+            topByBaseWithTokenIn,
+            topByBaseWithTokenOut,
+            topByDirectSwapPool: top2DirectSwapPool,
+            topByEthQuoteTokenPool: top2EthQuoteTokenPool,
+            topByTVL,
+            topByTVLUsingTokenIn,
+            topByTVLUsingTokenOut,
+            topByTVLUsingTokenInSecondHops,
+            topByTVLUsingTokenOutSecondHops,
+        },
+    };
+    return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };
+}
 export async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
     var _a, _b, _c, _d, _e;
     const { blockNumber, v3PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNSecondHopForTokenAddress, tokensToAvoidOnSecondHops, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
@@ -747,9 +1141,12 @@ export async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routin
     };
     return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };
 }
-export async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }) {
+export async function getMixedRouteCandidatePools({ v4CandidatePools, v3CandidatePools, v2CandidatePools, crossLiquidityPools, routingConfig, tokenProvider, v4PoolProvider, v3poolProvider, v2poolProvider, }) {
     const beforeSubgraphPools = Date.now();
-    const [{ subgraphPools: V3subgraphPools, candidatePools: V3candidatePools }, { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools },] = [v3CandidatePools, v2CandidatePools];
+    const [{ subgraphPools: V4subgraphPools, candidatePools: V4candidatePools }, { subgraphPools: V3subgraphPools, candidatePools: V3candidatePools }, { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools },] = [v4CandidatePools, v3CandidatePools, v2CandidatePools];
+    // Injects the liquidity pools found by the getMixedCrossLiquidityCandidatePools function
+    V2subgraphPools.push(...crossLiquidityPools.v2Pools);
+    V3subgraphPools.push(...crossLiquidityPools.v3Pools);
     metric.putMetric('MixedSubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);
     const beforePoolsFiltered = Date.now();
     /**
@@ -768,6 +1165,8 @@ export async function getMixedRouteCandidatePools({ v3CandidatePools, v2Candidat
         ...V2candidatePools.selections.topByBaseWithTokenOut,
         /// Direct swap:
         ...V2candidatePools.selections.topByDirectSwapPool,
+        // Cross Liquidity (has to be added to be considered):
+        ...crossLiquidityPools.v2Pools,
     ].map((poolId) => poolId.id));
     const V2topByTVLSortedPools = _(V2subgraphPools)
         .filter((pool) => V2topByTVLPoolIds.has(pool.id))
@@ -777,6 +1176,9 @@ export async function getMixedRouteCandidatePools({ v3CandidatePools, v2Candidat
     const V3sortedPools = _(V3subgraphPools)
         .sortBy((pool) => -pool.tvlUSD)
         .value();
+    const V4sortedPools = _(V4subgraphPools)
+        .sortBy((pool) => -pool.tvlUSD)
+        .value();
     /// Finding pools with greater reserveUSD on v2 than tvlUSD on v3, or if there is no v3 liquidity
     const buildV2Pools = [];
     V2topByTVLSortedPools.forEach((V2subgraphPool) => {
@@ -803,9 +1205,32 @@ export async function getMixedRouteCandidatePools({ v3CandidatePools, v2Candidat
             }, `MixedRoute heuristic, found a V2 pool with no V3 counterpart`);
             buildV2Pools.push(V2subgraphPool);
         }
+        const V4subgraphPool = V4sortedPools.find((pool) => (pool.token0.id == V2subgraphPool.token0.id &&
+            pool.token1.id == V2subgraphPool.token1.id) ||
+            (pool.token0.id == V2subgraphPool.token1.id &&
+                pool.token1.id == V2subgraphPool.token0.id));
+        if (V4subgraphPool) {
+            if (V2subgraphPool.reserveUSD > V4subgraphPool.tvlUSD) {
+                log.info({
+                    token0: V2subgraphPool.token0.id,
+                    token1: V2subgraphPool.token1.id,
+                    v2reserveUSD: V2subgraphPool.reserveUSD,
+                    v4tvlUSD: V4subgraphPool.tvlUSD,
+                }, `MixedRoute heuristic, found a V2 pool with higher liquidity than its V4 counterpart`);
+                buildV2Pools.push(V2subgraphPool);
+            }
+        }
+        else {
+            log.info({
+                token0: V2subgraphPool.token0.id,
+                token1: V2subgraphPool.token1.id,
+                v2reserveUSD: V2subgraphPool.reserveUSD,
+            }, `MixedRoute heuristic, found a V2 pool with no V3 counterpart`);
+            buildV2Pools.push(V2subgraphPool);
+        }
     });
     log.info(buildV2Pools.length, `Number of V2 candidate pools that fit first heuristic`);
-    const subgraphPools = [...buildV2Pools, ...V3sortedPools];
+    const subgraphPools = [...buildV2Pools, ...V3sortedPools, ...V4sortedPools];
     const tokenAddresses = _(subgraphPools)
         .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])
         .compact()
@@ -813,6 +1238,30 @@ export async function getMixedRouteCandidatePools({ v3CandidatePools, v2Candidat
         .value();
     log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} pools we are considering`);
     const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, routingConfig);
+    const V4tokenPairsRaw = _.map(V4sortedPools, (subgraphPool) => {
+        const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);
+        const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);
+        let fee;
+        try {
+            fee = Number(subgraphPool.feeTier);
+        }
+        catch (err) {
+            log.info({ subgraphPool }, `Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier}/${subgraphPool.tickSpacing}/${subgraphPool.hooks} because fee tier not supported`);
+            return undefined;
+        }
+        if (!tokenA || !tokenB) {
+            log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee}/${subgraphPool.tickSpacing}/${subgraphPool.hooks} because ${tokenA ? subgraphPool.token1.id : subgraphPool.token0.id} not found by token provider`);
+            return undefined;
+        }
+        return [
+            tokenA,
+            tokenB,
+            fee,
+            Number(subgraphPool.tickSpacing),
+            subgraphPool.hooks,
+        ];
+    });
+    const V4tokenPairs = _.compact(V4tokenPairsRaw);
     const V3tokenPairsRaw = _.map(V3sortedPools, (subgraphPool) => {
         const tokenA = tokenAccessor.getTokenByAddress(subgraphPool.token0.id);
         const tokenB = tokenAccessor.getTokenByAddress(subgraphPool.token1.id);
@@ -843,9 +1292,10 @@ export async function getMixedRouteCandidatePools({ v3CandidatePools, v2Candidat
     const V2tokenPairs = _.compact(V2tokenPairsRaw);
     metric.putMetric('MixedPoolsFilterLoad', Date.now() - beforePoolsFiltered, MetricLoggerUnit.Milliseconds);
     const beforePoolsLoad = Date.now();
-    const [V2poolAccessor, V3poolAccessor] = await Promise.all([
+    const [V2poolAccessor, V3poolAccessor, V4poolAccessor] = await Promise.all([
         v2poolProvider.getPools(V2tokenPairs, routingConfig),
         v3poolProvider.getPools(V3tokenPairs, routingConfig),
+        v4PoolProvider.getPools(V4tokenPairs, routingConfig),
     ]);
     metric.putMetric('MixedPoolsLoad', Date.now() - beforePoolsLoad, MetricLoggerUnit.Milliseconds);
     /// @dev a bit tricky here since the original V2CandidateSelections object included pools that we may have dropped
@@ -854,6 +1304,7 @@ export async function getMixedRouteCandidatePools({ v3CandidatePools, v2Candidat
         return [
             ...buildV2Pools.filter((pool) => V2candidatePools.selections[key].map((p) => p.id).includes(pool.id)),
             ...V3candidatePools.selections[key],
+            ...V4candidatePools.selections[key],
         ];
     };
     const poolsBySelection = {
@@ -873,8 +1324,9 @@ export async function getMixedRouteCandidatePools({ v3CandidatePools, v2Candidat
     return {
         V2poolAccessor,
         V3poolAccessor,
+        V4poolAccessor,
         candidatePools: poolsBySelection,
         subgraphPools,
     };
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-costs.d.ts
similarity index 90%
rename from node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.d.ts
rename to node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-costs.d.ts
index af0d85b..9b48b3a 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-costs.d.ts
@@ -1,12 +1,12 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { ChainId, Currency } from '@uniswap/sdk-core';
-import { V3Route } from '../../../router';
+import { V3Route, V4Route } from '../../router';
 export declare const COST_PER_UNINIT_TICK: BigNumber;
 export declare const BASE_SWAP_COST: (id: ChainId) => BigNumber;
 export declare const COST_PER_INIT_TICK: (id: ChainId) => BigNumber;
 export declare const COST_PER_HOP: (id: ChainId) => BigNumber;
 export declare const SINGLE_HOP_OVERHEAD: (_id: ChainId) => BigNumber;
-export declare const TOKEN_OVERHEAD: (id: ChainId, route: V3Route) => BigNumber;
+export declare const TOKEN_OVERHEAD: (id: ChainId, route: V3Route | V4Route) => BigNumber;
 export declare const NATIVE_WRAP_OVERHEAD: (id: ChainId) => BigNumber;
 export declare const NATIVE_UNWRAP_OVERHEAD: (id: ChainId) => BigNumber;
 export declare const NATIVE_OVERHEAD: (chainId: ChainId, amount: Currency, quote: Currency) => BigNumber;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-costs.js
new file mode 100644
index 0000000..18307af
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-costs.js
@@ -0,0 +1,192 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { ChainId } from '@uniswap/sdk-core';
+import { Protocol } from '@uniswap/router-sdk';
+import { AAVE_MAINNET, LIDO_MAINNET } from '../../../providers';
+// Cost for crossing an uninitialized tick.
+export const COST_PER_UNINIT_TICK = BigNumber.from(0);
+//l2 execution fee on optimism is roughly the same as mainnet
+export const BASE_SWAP_COST = (id) => {
+    switch (id) {
+        case ChainId.MAINNET:
+        case ChainId.GOERLI:
+        case ChainId.SEPOLIA:
+        case ChainId.OPTIMISM:
+        case ChainId.OPTIMISM_GOERLI:
+        case ChainId.OPTIMISM_SEPOLIA:
+        case ChainId.BNB:
+        case ChainId.AVALANCHE:
+        case ChainId.BASE:
+        case ChainId.BASE_GOERLI:
+        case ChainId.ZORA:
+        case ChainId.ZORA_SEPOLIA:
+        case ChainId.ROOTSTOCK:
+        case ChainId.BLAST:
+        case ChainId.ZKSYNC:
+        case ChainId.ABSTRACT_TESTNET:
+        case ChainId.ZERO:
+        case ChainId.BOB:
+        case ChainId.CYBER:
+        case ChainId.SHAPE:
+        case ChainId.INK:
+        case ChainId.REDSTONE:
+        case ChainId.REDSTONE_GARNET:
+        case ChainId.ABSTRACT_MAINNET:
+        case ChainId.ANIME_TESTNET:
+        case ChainId.ANIME:
+        case ChainId.MODE:
+            return BigNumber.from(2000);
+        case ChainId.ARBITRUM_ONE:
+        case ChainId.ARBITRUM_GOERLI:
+        case ChainId.ARBITRUM_SEPOLIA:
+            return BigNumber.from(5000);
+        case ChainId.POLYGON:
+        case ChainId.POLYGON_MUMBAI:
+            return BigNumber.from(2000);
+        case ChainId.CELO:
+        case ChainId.CELO_ALFAJORES:
+            return BigNumber.from(2000);
+        //TODO determine if sufficient
+        case ChainId.GNOSIS:
+            return BigNumber.from(2000);
+        case ChainId.MOONBEAM:
+            return BigNumber.from(2000);
+    }
+};
+export const COST_PER_INIT_TICK = (id) => {
+    switch (id) {
+        case ChainId.MAINNET:
+        case ChainId.GOERLI:
+        case ChainId.SEPOLIA:
+        case ChainId.BNB:
+        case ChainId.AVALANCHE:
+            return BigNumber.from(31000);
+        case ChainId.OPTIMISM:
+        case ChainId.OPTIMISM_GOERLI:
+        case ChainId.OPTIMISM_SEPOLIA:
+        case ChainId.BASE:
+        case ChainId.BASE_GOERLI:
+        case ChainId.ZORA:
+        case ChainId.ZORA_SEPOLIA:
+        case ChainId.ROOTSTOCK:
+        case ChainId.BLAST:
+        case ChainId.ZKSYNC:
+        case ChainId.ABSTRACT_TESTNET:
+        case ChainId.ZERO:
+        case ChainId.BOB:
+        case ChainId.CYBER:
+        case ChainId.SHAPE:
+        case ChainId.INK:
+        case ChainId.REDSTONE:
+        case ChainId.REDSTONE_GARNET:
+        case ChainId.ABSTRACT_MAINNET:
+        case ChainId.ANIME_TESTNET:
+        case ChainId.ANIME:
+        case ChainId.MODE:
+            return BigNumber.from(31000);
+        case ChainId.ARBITRUM_ONE:
+        case ChainId.ARBITRUM_GOERLI:
+        case ChainId.ARBITRUM_SEPOLIA:
+            return BigNumber.from(31000);
+        case ChainId.POLYGON:
+        case ChainId.POLYGON_MUMBAI:
+            return BigNumber.from(31000);
+        case ChainId.CELO:
+        case ChainId.CELO_ALFAJORES:
+            return BigNumber.from(31000);
+        case ChainId.GNOSIS:
+            return BigNumber.from(31000);
+        case ChainId.MOONBEAM:
+            return BigNumber.from(31000);
+    }
+};
+export const COST_PER_HOP = (id) => {
+    switch (id) {
+        case ChainId.MAINNET:
+        case ChainId.GOERLI:
+        case ChainId.SEPOLIA:
+        case ChainId.BNB:
+        case ChainId.OPTIMISM:
+        case ChainId.OPTIMISM_GOERLI:
+        case ChainId.OPTIMISM_SEPOLIA:
+        case ChainId.AVALANCHE:
+        case ChainId.BASE:
+        case ChainId.BASE_GOERLI:
+        case ChainId.ZORA:
+        case ChainId.ZORA_SEPOLIA:
+        case ChainId.ROOTSTOCK:
+        case ChainId.BLAST:
+        case ChainId.ZKSYNC:
+        case ChainId.ABSTRACT_TESTNET:
+        case ChainId.ZERO:
+        case ChainId.BOB:
+        case ChainId.CYBER:
+        case ChainId.SHAPE:
+        case ChainId.INK:
+        case ChainId.REDSTONE:
+        case ChainId.REDSTONE_GARNET:
+        case ChainId.ABSTRACT_MAINNET:
+        case ChainId.ANIME_TESTNET:
+        case ChainId.ANIME:
+        case ChainId.MODE:
+            return BigNumber.from(80000);
+        case ChainId.ARBITRUM_ONE:
+        case ChainId.ARBITRUM_GOERLI:
+        case ChainId.ARBITRUM_SEPOLIA:
+            return BigNumber.from(80000);
+        case ChainId.POLYGON:
+        case ChainId.POLYGON_MUMBAI:
+            return BigNumber.from(80000);
+        case ChainId.CELO:
+        case ChainId.CELO_ALFAJORES:
+            return BigNumber.from(80000);
+        case ChainId.GNOSIS:
+            return BigNumber.from(80000);
+        case ChainId.MOONBEAM:
+            return BigNumber.from(80000);
+    }
+};
+export const SINGLE_HOP_OVERHEAD = (_id) => {
+    return BigNumber.from(15000);
+};
+export const TOKEN_OVERHEAD = (id, route) => {
+    const currencies = route.protocol === Protocol.V4 ? route.currencyPath : route.tokenPath;
+    let overhead = BigNumber.from(0);
+    if (id == ChainId.MAINNET) {
+        // AAVE's transfer contains expensive governance snapshotting logic. We estimate
+        // it at around 150k.
+        if (currencies.some((t) => t.equals(AAVE_MAINNET))) {
+            overhead = overhead.add(150000);
+        }
+        // LDO's reaches out to an external token controller which adds a large overhead
+        // of around 150k.
+        if (currencies.some((t) => t.equals(LIDO_MAINNET))) {
+            overhead = overhead.add(150000);
+        }
+    }
+    return overhead;
+};
+// TODO: change per chain
+export const NATIVE_WRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return BigNumber.from(27938);
+    }
+};
+export const NATIVE_UNWRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return BigNumber.from(36000);
+    }
+};
+export const NATIVE_OVERHEAD = (chainId, amount, quote) => {
+    if (amount.isNative) {
+        // need to wrap eth in
+        return NATIVE_WRAP_OVERHEAD(chainId);
+    }
+    if (quote.isNative) {
+        // need to unwrap eth out
+        return NATIVE_UNWRAP_OVERHEAD(chainId);
+    }
+    return BigNumber.from(0);
+};
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts
index c09521f..058b0a8 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts
@@ -6,7 +6,7 @@ import { ProviderConfig } from '../../../providers/provider';
 import { IV2PoolProvider } from '../../../providers/v2/pool-provider';
 import { ArbitrumGasData, IL2GasDataProvider } from '../../../providers/v3/gas-data-provider';
 import { CurrencyAmount } from '../../../util/amounts';
-import { MixedRouteWithValidQuote, RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote } from '../entities/route-with-valid-quote';
+import { MixedRouteWithValidQuote, RouteWithValidQuote, V2RouteWithValidQuote, V3RouteWithValidQuote, V4RouteWithValidQuote } from '../entities/route-with-valid-quote';
 export declare const usdGasTokensByChain: {
     [chainId in ChainId]?: Token[];
 };
@@ -47,6 +47,7 @@ export declare type LiquidityCalculationPools = {
 export declare type GasModelType = {
     v2GasModel?: IGasModel<V2RouteWithValidQuote>;
     v3GasModel: IGasModel<V3RouteWithValidQuote>;
+    v4GasModel: IGasModel<V4RouteWithValidQuote>;
     mixedRouteGasModel: IGasModel<MixedRouteWithValidQuote>;
 };
 /**
@@ -99,7 +100,8 @@ export declare abstract class IV2GasModelFactory {
  * @abstract
  * @class IOnChainGasModelFactory
  */
-export declare abstract class IOnChainGasModelFactory {
-    abstract buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote | MixedRouteWithValidQuote>>;
+export declare abstract class IOnChainGasModelFactory<TRouteWithValidQuote extends RouteWithValidQuote> {
+    abstract buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<TRouteWithValidQuote>>;
+    protected totalInitializedTicksCrossed(initializedTicksCrossedList: number[]): number;
 }
 export declare const getQuoteThroughNativePool: (chainId: ChainId, nativeTokenAmount: CurrencyAmountRaw<Token>, nativeTokenPool: Pool | Pair) => CurrencyAmount;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
index 64a988a..6b939f6 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
@@ -1,5 +1,5 @@
 import { ChainId, } from '@uniswap/sdk-core';
-import { CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_GOERLI, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_OPTIMISM_SEPOLIA, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, DAI_ZKSYNC, USDB_BLAST, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_ARBITRUM_SEPOLIA, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_BRIDGED_AVAX, USDC_CELO, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_NATIVE_ARBITRUM, USDC_NATIVE_AVAX, USDC_NATIVE_BASE, USDC_NATIVE_CELO, USDC_NATIVE_OPTIMISM, USDC_NATIVE_POLYGON, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_OPTIMISM_SEPOLIA, USDC_POLYGON, USDC_SEPOLIA, USDC_WORMHOLE_CELO, USDC_ZKSYNC, USDC_ZORA, USDCE_ZKSYNC, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, USDT_OPTIMISM_SEPOLIA, WBTC_GOERLI } from '../../../providers/token-provider';
+import { CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_GOERLI, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_OPTIMISM_SEPOLIA, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, DAI_ZKSYNC, USDB_BLAST, USDCE_ZKSYNC, USDC_ABSTRACT_MAINNET, USDC_ABSTRACT_TESTNET, USDC_ANIME, USDC_ANIME_TESTNET, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_ARBITRUM_SEPOLIA, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_BOB, USDC_BRIDGED_AVAX, USDC_CELO, USDC_CYBER, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_INK, USDC_MAINNET, USDC_MODE, USDC_MOONBEAM, USDC_NATIVE_ARBITRUM, USDC_NATIVE_AVAX, USDC_NATIVE_BASE, USDC_NATIVE_CELO, USDC_NATIVE_OPTIMISM, USDC_NATIVE_POLYGON, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_OPTIMISM_SEPOLIA, USDC_POLYGON, USDC_REDSTONE, USDC_REDSTONE_GARNET, USDC_SEPOLIA, USDC_SHAPE, USDC_WORMHOLE_CELO, USDC_ZERO, USDC_ZKSYNC, USDC_ZORA, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, USDT_OPTIMISM_SEPOLIA, WBTC_GOERLI, } from '../../../providers/token-provider';
 import { WRAPPED_NATIVE_CURRENCY } from '../../../util';
 // When adding new usd gas tokens, ensure the tokens are ordered
 // from tokens with highest decimals to lowest decimals. For example,
@@ -48,7 +48,19 @@ export const usdGasTokensByChain = {
     [ChainId.BASE]: [USDC_BASE, USDC_NATIVE_BASE],
     [ChainId.BLAST]: [USDB_BLAST],
     [ChainId.ZORA]: [USDC_ZORA],
-    [ChainId.ZKSYNC]: [USDCE_ZKSYNC, USDC_ZKSYNC, DAI_ZKSYNC],
+    [ChainId.ZKSYNC]: [DAI_ZKSYNC, USDCE_ZKSYNC, USDC_ZKSYNC],
+    [ChainId.ABSTRACT_TESTNET]: [USDC_ABSTRACT_TESTNET],
+    [ChainId.ZERO]: [USDC_ZERO],
+    [ChainId.BOB]: [USDC_BOB],
+    [ChainId.CYBER]: [USDC_CYBER],
+    [ChainId.SHAPE]: [USDC_SHAPE],
+    [ChainId.INK]: [USDC_INK],
+    [ChainId.REDSTONE]: [USDC_REDSTONE],
+    [ChainId.REDSTONE_GARNET]: [USDC_REDSTONE_GARNET],
+    [ChainId.ABSTRACT_MAINNET]: [USDC_ABSTRACT_MAINNET],
+    [ChainId.ANIME_TESTNET]: [USDC_ANIME_TESTNET],
+    [ChainId.ANIME]: [USDC_ANIME],
+    [ChainId.MODE]: [USDC_MODE],
 };
 /**
  * Factory for building gas models that can be used with any route to generate
@@ -75,6 +87,18 @@ export class IV2GasModelFactory {
  * @class IOnChainGasModelFactory
  */
 export class IOnChainGasModelFactory {
+    totalInitializedTicksCrossed(initializedTicksCrossedList) {
+        let ticksCrossed = 0;
+        for (let i = 0; i < initializedTicksCrossedList.length; i++) {
+            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+            if (initializedTicksCrossedList[i] > 0) {
+                // Quoter returns Array<number of calls to crossTick + 1>, so we need to subtract 1 here.
+                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                ticksCrossed += initializedTicksCrossedList[i] - 1;
+            }
+        }
+        return ticksCrossed;
+    }
 }
 // Determines if native currency is token0
 // Gets the native price of the pool, dependent on 0 or 1
@@ -89,4 +113,4 @@ export const getQuoteThroughNativePool = (chainId, nativeTokenAmount, nativeToke
     // return gas cost in terms of the non native currency
     return nativeTokenPrice.quote(nativeTokenAmount);
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFDTCxPQUFPLEdBR1IsTUFBTSxtQkFBbUIsQ0FBQztBQUszQixPQUFPLEVBQ0wsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsb0JBQW9CLEVBQ3BCLGtCQUFrQixFQUNsQixXQUFXLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFDbkMsYUFBYSxFQUNiLG9CQUFvQixFQUNwQixxQkFBcUIsRUFDckIsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1IsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxvQkFBb0IsRUFDcEIsV0FBVyxFQUNYLFlBQVksRUFDWixhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLGdCQUFnQixFQUNoQixnQkFBZ0IsRUFDaEIsZ0JBQWdCLEVBQ2hCLG9CQUFvQixFQUNwQixtQkFBbUIsRUFDbkIsYUFBYSxFQUNiLG9CQUFvQixFQUNwQixxQkFBcUIsRUFDckIsWUFBWSxFQUNaLFlBQVksRUFDWixrQkFBa0IsRUFDbEIsV0FBVyxFQUNYLFNBQVMsRUFBRSxZQUFZLEVBQ3ZCLGFBQWEsRUFDYixRQUFRLEVBQ1IsV0FBVyxFQUNYLFlBQVksRUFDWixhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLHFCQUFxQixFQUNyQixXQUFXLEVBQ1osTUFBTSxtQ0FBbUMsQ0FBQztBQU0zQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFTeEQsZ0VBQWdFO0FBQ2hFLHFFQUFxRTtBQUNyRSw0RUFBNEU7QUFDNUUsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQXVDO0lBQ3JFLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFDTCxPQUFPLEdBR1IsTUFBTSxtQkFBbUIsQ0FBQztBQUszQixPQUFPLEVBQ0wsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsb0JBQW9CLEVBQ3BCLGtCQUFrQixFQUNsQixXQUFXLEVBQ1gsVUFBVSxFQUNWLFVBQVUsRUFDVixZQUFZLEVBQ1oscUJBQXFCLEVBQ3JCLHFCQUFxQixFQUNyQixVQUFVLEVBQ1Ysa0JBQWtCLEVBQ2xCLGFBQWEsRUFDYixvQkFBb0IsRUFDcEIscUJBQXFCLEVBQ3JCLFNBQVMsRUFDVCxTQUFTLEVBQ1QsUUFBUSxFQUNSLFFBQVEsRUFDUixpQkFBaUIsRUFDakIsU0FBUyxFQUNULFVBQVUsRUFDVixvQkFBb0IsRUFDcEIsV0FBVyxFQUNYLFFBQVEsRUFDUixZQUFZLEVBQ1osU0FBUyxFQUNULGFBQWEsRUFDYixvQkFBb0IsRUFDcEIsZ0JBQWdCLEVBQ2hCLGdCQUFnQixFQUNoQixnQkFBZ0IsRUFDaEIsb0JBQW9CLEVBQ3BCLG1CQUFtQixFQUNuQixhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLHFCQUFxQixFQUNyQixZQUFZLEVBQ1osYUFBYSxFQUNiLG9CQUFvQixFQUNwQixZQUFZLEVBQ1osVUFBVSxFQUNWLGtCQUFrQixFQUNsQixTQUFTLEVBQ1QsV0FBVyxFQUNYLFNBQVMsRUFDVCxhQUFhLEVBQ2IsUUFBUSxFQUNSLFdBQVcsRUFDWCxZQUFZLEVBQ1osYUFBYSxFQUNiLG9CQUFvQixFQUNwQixxQkFBcUIsRUFDckIsV0FBVyxHQUNaLE1BQU0sbUNBQW1D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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
index 9291918..2e90348 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
@@ -18,8 +18,7 @@ import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } f
  * @export
  * @class MixedRouteHeuristicGasModelFactory
  */
-export declare class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory {
-    constructor();
+export declare class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory<MixedRouteWithValidQuote> {
     buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<MixedRouteWithValidQuote>>;
     private estimateGas;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
index 8be2125..3c98612 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
@@ -1,16 +1,16 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { partitionMixedRouteByProtocol } from '@uniswap/router-sdk';
 import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
 import JSBI from 'jsbi';
-import _ from 'lodash';
 import { WRAPPED_NATIVE_CURRENCY } from '../../../..';
 import { log } from '../../../../util';
 import { CurrencyAmount } from '../../../../util/amounts';
 import { getV2NativePool } from '../../../../util/gas-factory-helpers';
+import { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK, } from '../gas-costs';
 import { getQuoteThroughNativePool, IOnChainGasModelFactory, } from '../gas-model';
 import { BASE_SWAP_COST as BASE_SWAP_COST_V2, COST_PER_EXTRA_HOP as COST_PER_EXTRA_HOP_V2, } from '../v2/v2-heuristic-gas-model';
-import { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK, } from '../v3/gas-costs';
 /**
  * Computes a gas estimate for a mixed route swap using heuristics.
  * Considers number of hops in the route, number of ticks crossed
@@ -30,9 +30,6 @@ import { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK,
  * @class MixedRouteHeuristicGasModelFactory
  */
 export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory {
-    constructor() {
-        super();
-    }
     async buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }) {
         const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
         const usdPool = pools.usdPool;
@@ -100,30 +97,47 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
         };
     }
     estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
-        const totalInitializedTicksCrossed = BigNumber.from(Math.max(1, _.sum(routeWithValidQuote.initializedTicksCrossedList)));
+        const totalInitializedTicksCrossed = this.totalInitializedTicksCrossed(routeWithValidQuote.initializedTicksCrossedList);
         /**
          * Since we must make a separate call to multicall for each v3 and v2 section, we will have to
          * add the BASE_SWAP_COST to each section.
          */
+        let baseGasUseV2Only = BigNumber.from(0);
+        let baseGasUseV3Only = BigNumber.from(0);
         let baseGasUse = BigNumber.from(0);
+        let routeContainsV4Pool = false;
         const route = routeWithValidQuote.route;
         const res = partitionMixedRouteByProtocol(route);
         res.map((section) => {
-            if (section.every((pool) => pool instanceof Pool)) {
-                baseGasUse = baseGasUse.add(BASE_SWAP_COST(chainId));
-                baseGasUse = baseGasUse.add(COST_PER_HOP(chainId).mul(section.length));
+            if (section.every((pool) => pool instanceof V3Pool)) {
+                baseGasUseV3Only = baseGasUseV3Only.add(BASE_SWAP_COST(chainId));
+                baseGasUseV3Only = baseGasUseV3Only.add(COST_PER_HOP(chainId).mul(section.length));
+                baseGasUse = baseGasUse.add(baseGasUseV3Only);
             }
             else if (section.every((pool) => pool instanceof Pair)) {
-                baseGasUse = baseGasUse.add(BASE_SWAP_COST_V2);
-                baseGasUse = baseGasUse.add(
+                baseGasUseV2Only = baseGasUseV2Only.add(BASE_SWAP_COST_V2);
+                baseGasUseV2Only = baseGasUseV2Only.add(
                 /// same behavior in v2 heuristic gas model factory
                 COST_PER_EXTRA_HOP_V2.mul(section.length - 1));
+                baseGasUse = baseGasUse.add(baseGasUseV2Only);
+            }
+            else if (section.every((pool) => pool instanceof V4Pool)) {
+                routeContainsV4Pool = true;
             }
         });
         const tickGasUse = COST_PER_INIT_TICK(chainId).mul(totalInitializedTicksCrossed);
         const uninitializedTickGasUse = COST_PER_UNINIT_TICK.mul(0);
-        // base estimate gas used based on chainId estimates for hops and ticks gas useage
-        baseGasUse = baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);
+        if (routeContainsV4Pool) {
+            // If the route contains a V4 pool, we know we are hitting mixed quoter V2, not mixed quoter V1,
+            // Hence we already know the v3 and v4 hops part of the quoter gas estimate.
+            // We only need to add the base gas use for the v2 part of the route,
+            // because mixed quoter doesn't have a way to estimate gas for v2 pools swaps.
+            baseGasUse = baseGasUseV2Only.add(routeWithValidQuote.quoterGasEstimate);
+        }
+        else {
+            // base estimate gas used based on chainId estimates for hops and ticks gas useage
+            baseGasUse = baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);
+        }
         if (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) {
             baseGasUse = baseGasUse.add(providerConfig.additionalGasOverhead);
         }
@@ -137,4 +151,4 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFcEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN0RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUV2RSxPQUFPLEVBR0wseUJBQXlCLEVBRXpCLHVCQUF1QixHQUN4QixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQ0wsY0FBYyxJQUFJLGlCQUFpQixFQUNuQyxrQkFBa0IsSUFBSSxxQkFBcUIsR0FDNUMsTUFBTSw4QkFBOEIsQ0FBQztBQUN0QyxPQUFPLEVBQ0wsY0FBYyxFQUNkLFlBQVksRUFDWixrQkFBa0IsRUFDbEIsb0JBQW9CLEdBQ3JCLE1BQU0saUJBQWlCLENBQUM7QUFFekI7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBTSxPQUFPLGtDQUFtQyxTQUFRLHVCQUF1QjtJQUM3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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFcEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLElBQUksTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLElBQUksSUFBSSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFHeEIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN2QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRXZFLE9BQU8sRUFDTCxjQUFjLEVBQ2QsWUFBWSxFQUNaLGtCQUFrQixFQUNsQixvQkFBb0IsR0FDckIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxFQUdMLHlCQUF5QixFQUV6Qix1QkFBdUIsR0FDeEIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxFQUNMLGNBQWMsSUFBSSxpQkFBaUIsRUFDbkMsa0JBQWtCLElBQUkscUJBQXFCLEdBQzVDLE1BQU0sOEJBQThCLENBQUM7QUFFdEM7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.d.ts
new file mode 100644
index 0000000..00f761d
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.d.ts
@@ -0,0 +1,15 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { BaseProvider } from '@ethersproject/providers';
+import { ChainId } from '@uniswap/sdk-core';
+import { V3RouteWithValidQuote, V4RouteWithValidQuote } from '../entities';
+import { BuildOnChainGasModelFactoryType, GasModelProviderConfig, IGasModel, IOnChainGasModelFactory } from './gas-model';
+export declare abstract class TickBasedHeuristicGasModelFactory<TRouteWithValidQuote extends V3RouteWithValidQuote | V4RouteWithValidQuote> extends IOnChainGasModelFactory<TRouteWithValidQuote> {
+    protected provider: BaseProvider;
+    protected constructor(provider: BaseProvider);
+    protected buildGasModelInternal({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<TRouteWithValidQuote>>;
+    protected estimateGas(routeWithValidQuote: TRouteWithValidQuote, gasPriceWei: BigNumber, chainId: ChainId, providerConfig?: GasModelProviderConfig): {
+        totalGasCostNativeCurrency: import("@uniswap/sdk-core").CurrencyAmount<import("@uniswap/sdk-core").Token>;
+        totalInitializedTicksCrossed: number;
+        baseGasUse: BigNumber;
+    };
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.js
new file mode 100644
index 0000000..47720e2
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.js
@@ -0,0 +1,182 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { Price } from '@uniswap/sdk-core';
+import { CurrencyAmount, log, WRAPPED_NATIVE_CURRENCY } from '../../../util';
+import { calculateL1GasFeesHelper } from '../../../util/gas-factory-helpers';
+import { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK, SINGLE_HOP_OVERHEAD, TOKEN_OVERHEAD, } from './gas-costs';
+import { getQuoteThroughNativePool, IOnChainGasModelFactory, } from './gas-model';
+export class TickBasedHeuristicGasModelFactory extends IOnChainGasModelFactory {
+    constructor(provider) {
+        super();
+        this.provider = provider;
+    }
+    async buildGasModelInternal({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }) {
+        const l2GasData = l2GasDataProvider
+            ? await l2GasDataProvider.getGasData(providerConfig)
+            : undefined;
+        const usdPool = pools.usdPool;
+        const calculateL1GasFees = async (route) => {
+            return await calculateL1GasFeesHelper(route, chainId, usdPool, quoteToken, pools.nativeAndQuoteTokenV3Pool, this.provider, l2GasData, providerConfig);
+        };
+        const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
+        let nativeAmountPool = null;
+        if (!amountToken.equals(nativeCurrency)) {
+            nativeAmountPool = pools.nativeAndAmountTokenV3Pool;
+        }
+        const usdToken = usdPool.token0.equals(nativeCurrency)
+            ? usdPool.token1
+            : usdPool.token0;
+        const estimateGasCost = (routeWithValidQuote) => {
+            var _a;
+            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
+            /** ------ MARK: USD logic  -------- */
+            // We only need to go through V2 and V3 USD pools for now,
+            // because v4 pools don't have deep liquidity yet.
+            // If one day, we see v3 usd pools have much deeper liquidity than v2/v3 usd pools, then we will add v4 pools for gas cost
+            const gasCostInTermsOfUSD = getQuoteThroughNativePool(chainId, totalGasCostNativeCurrency, usdPool);
+            /** ------ MARK: Conditional logic run if gasToken is specified  -------- */
+            const nativeAndSpecifiedGasTokenPool = pools.nativeAndSpecifiedGasTokenV3Pool;
+            let gasCostInTermsOfGasToken = undefined;
+            // we don't want to fetch the gasToken pool if the gasToken is the native currency
+            if (nativeAndSpecifiedGasTokenPool) {
+                // We only need to go through V2 and V3 USD pools for now,
+                // because v4 pools don't have deep liquidity yet.
+                // If one day, we see v3 usd pools have much deeper liquidity than v2/v3 usd pools, then we will add v4 pools for gas cost
+                gasCostInTermsOfGasToken = getQuoteThroughNativePool(chainId, totalGasCostNativeCurrency, nativeAndSpecifiedGasTokenPool);
+            }
+            // if the gasToken is the native currency, we can just use the totalGasCostNativeCurrency
+            else if ((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.gasToken) === null || _a === void 0 ? void 0 : _a.equals(nativeCurrency)) {
+                gasCostInTermsOfGasToken = totalGasCostNativeCurrency;
+            }
+            /** ------ MARK: return early if quoteToken is wrapped native currency ------- */
+            if (quoteToken.equals(nativeCurrency)) {
+                return {
+                    gasEstimate: baseGasUse,
+                    gasCostInToken: totalGasCostNativeCurrency,
+                    gasCostInUSD: gasCostInTermsOfUSD,
+                    gasCostInGasToken: gasCostInTermsOfGasToken,
+                };
+            }
+            /** ------ MARK: Main gas logic in terms of quote token -------- */
+            // Since the quote token is not in the native currency, we convert the gas cost to be in terms of the quote token.
+            // We do this by getting the highest liquidity <quoteToken>/<nativeCurrency> pool. eg. <quoteToken>/ETH pool.
+            const nativeAndQuoteTokenPool = pools.nativeAndQuoteTokenV3Pool;
+            let gasCostInTermsOfQuoteToken = null;
+            if (nativeAndQuoteTokenPool) {
+                // We only need to go through V2 and V3 USD pools for now,
+                // because v4 pools don't have deep liquidity yet.
+                // If one day, we see v3 usd pools have much deeper liquidity than v2/v3 usd pools, then we will add v4 pools for gas cost
+                gasCostInTermsOfQuoteToken = getQuoteThroughNativePool(chainId, totalGasCostNativeCurrency, nativeAndQuoteTokenPool);
+            }
+            // We may have a nativeAmountPool, but not a nativePool
+            else {
+                log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`);
+            }
+            /** ------ MARK: (V3 and V4 ONLY) Logic for calculating synthetic gas cost in terms of amount token -------- */
+            // TODO: evaluate effectiveness and potentially refactor
+            // Highest liquidity pool for the non quote token / ETH
+            // A pool with the non quote token / ETH should not be required and errors should be handled separately
+            if (nativeAmountPool) {
+                // get current execution price (amountToken / quoteToken)
+                const executionPrice = new Price(routeWithValidQuote.amount.currency, routeWithValidQuote.quote.currency, routeWithValidQuote.amount.quotient, routeWithValidQuote.quote.quotient);
+                const inputIsToken0 = nativeAmountPool.token0.address == nativeCurrency.address;
+                // ratio of input / native
+                const nativeAndAmountTokenPrice = inputIsToken0
+                    ? nativeAmountPool.token0Price
+                    : nativeAmountPool.token1Price;
+                const gasCostInTermsOfAmountToken = nativeAndAmountTokenPrice.quote(totalGasCostNativeCurrency);
+                // Convert gasCostInTermsOfAmountToken to quote token using execution price
+                let syntheticGasCostInTermsOfQuoteToken;
+                try {
+                    syntheticGasCostInTermsOfQuoteToken = executionPrice.quote(gasCostInTermsOfAmountToken);
+                }
+                catch (err) {
+                    if (err instanceof RangeError &&
+                        err.message.includes('Division by zero')) {
+                        // If the quote fails (division by zero), set syntheticGasCostInTermsOfQuoteToken to null
+                        syntheticGasCostInTermsOfQuoteToken = null;
+                    }
+                    else {
+                        // any other error, throw
+                        throw err;
+                    }
+                }
+                // Note that the syntheticGasCost being lessThan the original quoted value is not always strictly better
+                // e.g. the scenario where the amountToken/ETH pool is very illiquid as well and returns an extremely small number
+                // however, it is better to have the gasEstimation be almost 0 than almost infinity, as the user will still receive a quote
+                if (syntheticGasCostInTermsOfQuoteToken !== null &&
+                    (gasCostInTermsOfQuoteToken === null ||
+                        syntheticGasCostInTermsOfQuoteToken.lessThan(gasCostInTermsOfQuoteToken.asFraction))) {
+                    log.info({
+                        nativeAndAmountTokenPrice: nativeAndAmountTokenPrice.toSignificant(6),
+                        gasCostInTermsOfQuoteToken: gasCostInTermsOfQuoteToken
+                            ? gasCostInTermsOfQuoteToken.toExact()
+                            : 0,
+                        gasCostInTermsOfAmountToken: gasCostInTermsOfAmountToken.toExact(),
+                        executionPrice: executionPrice.toSignificant(6),
+                        syntheticGasCostInTermsOfQuoteToken: syntheticGasCostInTermsOfQuoteToken === null || syntheticGasCostInTermsOfQuoteToken === void 0 ? void 0 : syntheticGasCostInTermsOfQuoteToken.toSignificant(6),
+                    }, 'New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original');
+                    gasCostInTermsOfQuoteToken = syntheticGasCostInTermsOfQuoteToken;
+                }
+            }
+            // If gasCostInTermsOfQuoteToken is null, both attempts to calculate gasCostInTermsOfQuoteToken failed (nativePool and amountNativePool)
+            if (gasCostInTermsOfQuoteToken === null) {
+                log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol}, or amount Token, ${amountToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);
+                return {
+                    gasEstimate: baseGasUse,
+                    gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),
+                    gasCostInUSD: CurrencyAmount.fromRawAmount(usdToken, 0),
+                };
+            }
+            return {
+                gasEstimate: baseGasUse,
+                gasCostInToken: gasCostInTermsOfQuoteToken,
+                gasCostInUSD: gasCostInTermsOfUSD,
+                gasCostInGasToken: gasCostInTermsOfGasToken,
+            };
+        };
+        return {
+            estimateGasCost: estimateGasCost.bind(this),
+            calculateL1GasFees,
+        };
+    }
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
+        var _a;
+        const totalInitializedTicksCrossed = this.totalInitializedTicksCrossed(routeWithValidQuote.initializedTicksCrossedList);
+        const totalHops = BigNumber.from(routeWithValidQuote.route.pools.length);
+        let hopsGasUse = COST_PER_HOP(chainId).mul(totalHops);
+        // We have observed that this algorithm tends to underestimate single hop swaps.
+        // We add a buffer in the case of a single hop swap.
+        if (totalHops.eq(1)) {
+            hopsGasUse = hopsGasUse.add(SINGLE_HOP_OVERHEAD(chainId));
+        }
+        // Some tokens have extremely expensive transferFrom functions, which causes
+        // us to underestimate them by a large amount. For known tokens, we apply an
+        // adjustment.
+        const tokenOverhead = TOKEN_OVERHEAD(chainId, routeWithValidQuote.route);
+        const tickGasUse = COST_PER_INIT_TICK(chainId).mul(totalInitializedTicksCrossed);
+        const uninitializedTickGasUse = COST_PER_UNINIT_TICK.mul(0);
+        /*
+        // Eventually we can just use the quoter gas estimate for the base gas use
+        // It will be more accurate than doing the offchain gas estimate like below
+        // It will become more critical when we are going to support v4 hookful routing,
+        // where we have no idea how much gas the hook(s) will cost.
+        // const baseGasUse = routeWithValidQuote.quoterGasEstimate
+        */
+        // base estimate gas used based on chainId estimates for hops and ticks gas useage
+        const baseGasUse = BASE_SWAP_COST(chainId)
+            .add(hopsGasUse)
+            .add(tokenOverhead)
+            .add(tickGasUse)
+            .add(uninitializedTickGasUse)
+            .add((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) !== null && _a !== void 0 ? _a : BigNumber.from(0));
+        const baseGasCostWei = gasPriceWei.mul(baseGasUse);
+        const wrappedCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
+        const totalGasCostNativeCurrency = CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
+        return {
+            totalGasCostNativeCurrency,
+            totalInitializedTicksCrossed,
+            baseGasUse,
+        };
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGljay1iYXNlZC1oZXVyaXN0aWMtZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdGljay1iYXNlZC1oZXVyaXN0aWMtZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQVcsS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFN0UsT0FBTyxFQUNMLGNBQWMsRUFDZCxZQUFZLEVBQ1osa0JBQWtCLEVBQ2xCLG9CQUFvQixFQUNwQixtQkFBbUIsRUFDbkIsY0FBYyxHQUNmLE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFHTCx5QkFBeUIsRUFFekIsdUJBQXVCLEdBQ3hCLE1BQU0sYUFBYSxDQUFDO0FBRXJCLE1BQU0sT0FBZ0IsaUNBRXBCLFNBQVEsdUJBQTZDO0lBR3JELFlBQXNCLFFBQXNCO1FBQzFDLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDM0IsQ0FBQztJQUVTLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxFQUNwQyxPQUFPLEVBQ1AsV0FBVyxFQUNYLEtBQUssRUFDTCxXQUFXLEVBQ1gsVUFBVSxFQUNWLGlCQUFpQixFQUNqQixjQUFjLEdBQ2tCO1FBR2hDLE1BQU0sU0FBUyxHQUFHLGlCQUFpQjtZQUNqQyxDQUFDLENBQUMsTUFBTSxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDO1lBQ3BELENBQUMsQ0FBQyxTQUFTLENBQUM7UUFFZCxNQUFNLE9BQU8sR0FBUyxL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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
index 1bae61e..ee33a71 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
@@ -1,7 +1,7 @@
 import { BigNumber } from '@ethersproject/bignumber';
+import { BaseProvider } from '@ethersproject/providers';
 import { V2RouteWithValidQuote } from '../../entities/route-with-valid-quote';
 import { BuildV2GasModelFactoryType, IGasModel, IV2GasModelFactory } from '../gas-model';
-import { BaseProvider } from '@ethersproject/providers';
 export declare const BASE_SWAP_COST: BigNumber;
 export declare const COST_PER_EXTRA_HOP: BigNumber;
 /**
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
index 3fbd3d3..35d799b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
@@ -159,4 +159,4 @@ export class V2HeuristicGasModelFactory extends IV2GasModelFactory {
         return maxPool;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUl2QixPQUFPLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFDTCx3QkFBd0IsRUFDeEIsZUFBZSxHQUNoQixNQUFNLHNDQUFzQyxDQUFDO0FBRTlDLE9BQU8sRUFHTCx5QkFBeUIsRUFFekIsa0JBQWtCLEVBQ2xCLG1CQUFtQixHQUNwQixNQUFNLGNBQWMsQ0FBQztBQUd0Qix3REFBd0Q7QUFDeEQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyw2Q0FBNkM7QUFFbkcsdUNBQXVDO0FBQ3ZDLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyw0Q0FBNEM7QUFFckc7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFDSCxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsa0JBQWtCO0lBR2hFLFlBQVksUUFBc0I7UUFDaEMsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBRU0sS0FBSyxDQUFDLGFBQWEsQ0FBQyxFQUN6QixPQUFPLEVBQ1AsV0FBVyxFQUNYLFlBQVksRUFDWixLQUFLLEVBQ0wsaUJBQWlCLEVBQ2pCLGNBQWMsR0FDYTtRQUMzQixNQUFNLFNBQVMsR0FBRyxpQkFBaUI7WUFDakMsQ0FBQyxDQUFDLE1BQU0saUJBQWlCLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQztZQUNwRCxDQUFDLENBQUMsU0FBUyxDQUFDO1FBRWQsTUFBTSxjQUFjLEdBQWtCLElBQUksQ0FBQywwQkFBMEIsQ0FDbkUsT0FBTyxFQUNQLFlBQVksRUFDWixjQUFjLENBQ2YsQ0FBQztRQUVGLCtHQUErRztRQUMvRyxNQUFNLHFDQUFxQyxHQUN6QyxDQUFBLGNBQWMsYUFBZCxjQUFjLHVCQUFkLGNBQWMsQ0FBRSxRQUFRO1lBQ3hCLENBQUMsQ0FBQSxjQUFjLGFBQWQsY0FBYyx1QkFBZCxjQUFjLENBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUUsQ0FBQyxDQUFBO1lBQ2pFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUNiLE9BQU8sRUFDUCxjQUFjLENBQUMsUUFBUSxFQUN2QixZQUFZLEVBQ1osY0FBYyxDQUNmO1lBQ0gsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFNUIsTUFBTSxDQUFDLE9BQU8sRUFBRSw4QkFBOEIsQ0FBQyxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQztZQUNsRSxjQUFjO1lBQ2QscUNBQXFDO1NBQ3RDLENBQUMsQ0FBQztRQUVILElBQUksT0FBTyxHQUFnQixJQUFJLENBQUM7UUFDaEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsRUFBRTtZQUNwRCxPQUFPLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUM3QixPQUFPLEVBQ1AsS0FBSyxFQUNMLFlBQVksRUFDWixjQUFjLENBQ2YsQ0FBQztTQUNIO1FBRUQsTUFBTSxRQUFRLEdBQ1osT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksdUJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsT0FBTztZQUNqRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU07WUFDaEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFFckIsTUFBTSxrQkFBa0IsR0FBRyxLQUFLLEVBQzlCLEtBQThCLEVBTTdCLEVBQUU7WUFDSCxNQUFNLFVBQVUsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ2hFLENBQUMsQ0FBQyxNQUFNLGVBQWUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLGNBQWMsQ0FBQztnQkFDNUQsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUVULE9BQU8sTUFBTSx3QkFBd0IsQ0FDbkMsS0FBSyxFQUNMLE9BQU8sRUFDUCxPQUFPLEVBQ1AsS0FBSyxFQUNMLFVBQVUsRUFDVixJQUFJLENBQUMsUUFBUSxFQUNiLFNBQVMsQ0FDVixDQUFDO1FBQ0osQ0FBQyxDQUFDO1FBRUYsT0FBTztZQUNMLGVBQWUsRUFBRSxDQUFDLG1CQUEwQyxFQUFFLEVBQUU7O2dCQUM5RCxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQy9DLG1CQUFtQixFQUNuQixXQUFXLEVBQ1gsT0FBTyxFQUNQLGNBQWMsQ0FDZixDQUFDO2dCQUVGLHVDQUF1QztnQkFDdkMsTUFBTSxtQkFBbUIsR0FBRyx5QkFBeUIsQ0FDbkQsT0FBTyxFQUNQLFlBQVksRUFDWixPQUFPLENBQ1IsQ0FBQztnQkFFRiw0RUFBNEU7Z0JBQzVFLElBQUksd0JBQXdCLEdBQStCLFNBQVMsQ0FBQztnQkFDckUsSUFBSSw4QkFBOEIsRUFBRTtvQkFDbEMsd0JBQXdCLEdBQUcseUJBQXlCLENBQ2xELE9BQU8sRUFDUCxZQUFZLEVBQ1osOEJBQThCLENBQy9CLENBQUM7aUJBQ0g7Z0JBQ0QsMkVBQTJFO3FCQUN0RSxJQUNILE1BQUEsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLFFBQVEsMENBQUUsTUFBTSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDLEVBQ25FO29CQUNBLHdCQUF3QixHQUFHLFlBQVksQ0FBQztpQkFDekM7Z0JBRUQsaUZBQWlGO2dCQUNqRixJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsRUFBRTtvQkFDbkQsT0FBTzt3QkFDTCxXQUFXLEVBQUUsTUFBTTt3QkFDbkIsY0FBYyxFQUFFLFlBQVk7d0JBQzVCLFlBQVksRUFBRSxtQkFBbUI7d0JBQ2pDLGlCQUFpQixFQUFFLHdCQUF3QjtxQkFDNUMsQ0FBQztpQkFDSDtnQkFFRCw2RkFBNkY7Z0JBQzdGLGdFQUFnRTtnQkFDaEUsSUFBSSxDQUFDLE9BQU8sRUFBRTtvQkFDWixHQUFHLENBQUMsSUFBSSxDQUNOLDZHQUE2RyxDQUM5RyxDQUFDO29CQUNGLE9BQU87d0JBQ0wsV0FBVyxFQUFFLE1BQU07d0JBQ25CLGNBQWMsRUFBRSxjQUFjLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7d0JBQ3RELFlBQVksRUFBRSxjQUFjLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7cUJBQ3hELENBQUM7aUJBQ0g7Z0JBRUQsTUFBTSwwQkFBMEIsR0FBRyx5QkFBeUIsQ0FDMUQsT0FBTyxFQUNQLFlBQVksRUFDWixPQUFPLENBQ1IsQ0FBQztnQkFFRixPQUFPO29CQUNMLFdBQVcsRUFBRSxNQUFNO29CQUNuQixjQUFjLEVBQUUsMEJBQTBCO29CQUMxQyxZQUFZLEVBQUUsbUJBQW9CO29CQUNsQyxpQkFBaUIsRUFBRSx3QkFBd0I7aUJBQzVDLENBQUM7WUFDSixDQUFDO1lBQ0Qsa0JBQWtCO1NBQ25CLENBQUM7SUFDSixDQUFDO0lBRU8sV0FBVyxDQUNqQixtQkFBMEMsRUFDMUMsV0FBc0IsRUFDdEIsT0FBZ0IsRUFDaEIsY0FBdUM7UUFFdkMsTUFBTSxJQUFJLEdBQUcsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDcEQsSUFBSSxNQUFNLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbEUsSUFBSSxjQUFjLGFBQWQsY0FBYyx1QkFBZCxjQUFjLENBQUUscUJBQXFCLEVBQUU7WUFDekMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLHFCQUFxQixDQUFDLENBQUM7U0FDM0Q7UUFFRCxNQUFNLGVBQWUsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRWhELE1BQU0sSUFBSSxHQUFHLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBRS9DLE1BQU0sWUFBWSxHQUFHLGNBQWMsQ0FBQyxhQUFhLENBQy9DLElBQUksRUFDSixlQUFlLENBQUMsUUFBUSxFQUFFLENBQzNCLENBQUM7UUFFRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFTyxLQUFLLENBQUMsVUFBVSxDQUN0QixPQUFnQixFQUNoQixLQUFZLEVBQ1osWUFBNkIsRUFDN0IsY0FBK0I7UUFFL0IsTUFBTSxJQUFJLEdBQUcsdUJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUM7UUFFL0MsTUFBTSxZQUFZLEdBQUcsTUFBTSxZQUFZLENBQUMsUUFBUSxDQUM5QyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQ2YsY0FBYyxDQUNmLENBQUM7UUFDRixNQUFNLElBQUksR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUUvQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2pFLEdBQUcsQ0FBQyxLQUFLLENBQ1A7Z0JBQ0UsSUFBSTtnQkFDSixLQUFLO2dCQUNMLFFBQVEsRUFBRSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsUUFBUSxDQUFDLE9BQU8sRUFBRTtnQkFDbEMsUUFBUSxFQUFFLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxRQUFRLENBQUMsT0FBTyxFQUFFO2FBQ25DLEVBQ0QseUNBQXlDLEtBQUssQ0FBQyxNQUFNLDJCQUEyQixDQUNqRixDQUFDO1lBRUYsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVPLEtBQUssQ0FBQywwQkFBMEIsQ0FDdEMsT0FBZ0IsRUFDaEIsWUFBNkIsRUFDN0IsY0FBK0I7UUFFL0IsTUFBTSxTQUFTLEdBQUcsbUJBQW1CLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFL0MsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNkLE1BQU0sSUFBSSxLQUFLLENBQ2IseURBQXlELE9BQU8sRUFBRSxDQUNuRSxDQUFDO1NBQ0g7UUFFRCxNQUFNLFFBQVEsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUF3QixTQUFTLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDO1lBQ3JFLFFBQVE7WUFDUix1QkFBdUIsQ0FBQyxPQUFPLENBQUU7U0FDbEMsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxZQUFZLEdBQUcsTUFBTSxZQUFZLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUMzRSxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDNUMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FDcEIsUUFBUSxFQUNSLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FDUCxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQzVCLGlIQUFpSDtZQUNqSCxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDO2dCQUNwRCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUUsQ0FBQyxDQUFDLENBQzNELENBQUM7UUFFRixJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQ3JCLEdBQUcsQ0FBQyxLQUFLLENBQ1AsRUFBRSxLQUFLLEVBQUUsRUFDVCx5REFBeUQsQ0FDMUQsQ0FBQztZQUNGLE1BQU0sSUFBSSxLQUFLLENBQUMsbURBQW1ELENBQUMsQ0FBQztTQUN0RTtRQUVELE1BQU0sT0FBTyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDdEMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUUsQ0FBQyxFQUFFO2dCQUN6RCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ25EO2lCQUFNO2dCQUNMLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDbkQ7UUFDSCxDQUFDLENBQVMsQ0FBQztRQUVYLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7Q0FDRiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUt2QixPQUFPLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFDTCx3QkFBd0IsRUFDeEIsZUFBZSxHQUNoQixNQUFNLHNDQUFzQyxDQUFDO0FBRTlDLE9BQU8sRUFHTCx5QkFBeUIsRUFFekIsa0JBQWtCLEVBQ2xCLG1CQUFtQixHQUNwQixNQUFNLGNBQWMsQ0FBQztBQUV0Qix3REFBd0Q7QUFDeEQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyw2Q0FBNkM7QUFFbkcsdUNBQXVDO0FBQ3ZDLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyw0Q0FBNEM7QUFFckc7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFDSCxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsa0JBQWtCO0lBR2hFLFlBQVksUUFBc0I7UUFDaEMsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBRU0sS0FBSyxDQUFDLGFBQWEsQ0FBQyxFQUN6QixPQUFPLEVBQ1AsV0FBVyxFQUNYLFlBQVksRUFDWixLQUFLLEVBQ0wsaUJBQWlCLEVBQ2pCLGNBQWMs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
deleted file mode 100644
index 24e3976..0000000
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
+++ /dev/null
@@ -1,155 +0,0 @@
-import { BigNumber } from '@ethersproject/bignumber';
-import { ChainId } from '@uniswap/sdk-core';
-import { AAVE_MAINNET, LIDO_MAINNET } from '../../../../providers';
-// Cost for crossing an uninitialized tick.
-export const COST_PER_UNINIT_TICK = BigNumber.from(0);
-//l2 execution fee on optimism is roughly the same as mainnet
-export const BASE_SWAP_COST = (id) => {
-    switch (id) {
-        case ChainId.MAINNET:
-        case ChainId.GOERLI:
-        case ChainId.SEPOLIA:
-        case ChainId.OPTIMISM:
-        case ChainId.OPTIMISM_GOERLI:
-        case ChainId.OPTIMISM_SEPOLIA:
-        case ChainId.BNB:
-        case ChainId.AVALANCHE:
-        case ChainId.BASE:
-        case ChainId.BASE_GOERLI:
-        case ChainId.ZORA:
-        case ChainId.ZORA_SEPOLIA:
-        case ChainId.ROOTSTOCK:
-        case ChainId.BLAST:
-        case ChainId.ZKSYNC:
-            return BigNumber.from(2000);
-        case ChainId.ARBITRUM_ONE:
-        case ChainId.ARBITRUM_GOERLI:
-        case ChainId.ARBITRUM_SEPOLIA:
-            return BigNumber.from(5000);
-        case ChainId.POLYGON:
-        case ChainId.POLYGON_MUMBAI:
-            return BigNumber.from(2000);
-        case ChainId.CELO:
-        case ChainId.CELO_ALFAJORES:
-            return BigNumber.from(2000);
-        //TODO determine if sufficient
-        case ChainId.GNOSIS:
-            return BigNumber.from(2000);
-        case ChainId.MOONBEAM:
-            return BigNumber.from(2000);
-    }
-};
-export const COST_PER_INIT_TICK = (id) => {
-    switch (id) {
-        case ChainId.MAINNET:
-        case ChainId.GOERLI:
-        case ChainId.SEPOLIA:
-        case ChainId.BNB:
-        case ChainId.AVALANCHE:
-            return BigNumber.from(31000);
-        case ChainId.OPTIMISM:
-        case ChainId.OPTIMISM_GOERLI:
-        case ChainId.OPTIMISM_SEPOLIA:
-        case ChainId.BASE:
-        case ChainId.BASE_GOERLI:
-        case ChainId.ZORA:
-        case ChainId.ZORA_SEPOLIA:
-        case ChainId.ROOTSTOCK:
-        case ChainId.BLAST:
-        case ChainId.ZKSYNC:
-            return BigNumber.from(31000);
-        case ChainId.ARBITRUM_ONE:
-        case ChainId.ARBITRUM_GOERLI:
-        case ChainId.ARBITRUM_SEPOLIA:
-            return BigNumber.from(31000);
-        case ChainId.POLYGON:
-        case ChainId.POLYGON_MUMBAI:
-            return BigNumber.from(31000);
-        case ChainId.CELO:
-        case ChainId.CELO_ALFAJORES:
-            return BigNumber.from(31000);
-        case ChainId.GNOSIS:
-            return BigNumber.from(31000);
-        case ChainId.MOONBEAM:
-            return BigNumber.from(31000);
-    }
-};
-export const COST_PER_HOP = (id) => {
-    switch (id) {
-        case ChainId.MAINNET:
-        case ChainId.GOERLI:
-        case ChainId.SEPOLIA:
-        case ChainId.BNB:
-        case ChainId.OPTIMISM:
-        case ChainId.OPTIMISM_GOERLI:
-        case ChainId.OPTIMISM_SEPOLIA:
-        case ChainId.AVALANCHE:
-        case ChainId.BASE:
-        case ChainId.BASE_GOERLI:
-        case ChainId.ZORA:
-        case ChainId.ZORA_SEPOLIA:
-        case ChainId.ROOTSTOCK:
-        case ChainId.BLAST:
-        case ChainId.ZKSYNC:
-            return BigNumber.from(80000);
-        case ChainId.ARBITRUM_ONE:
-        case ChainId.ARBITRUM_GOERLI:
-        case ChainId.ARBITRUM_SEPOLIA:
-            return BigNumber.from(80000);
-        case ChainId.POLYGON:
-        case ChainId.POLYGON_MUMBAI:
-            return BigNumber.from(80000);
-        case ChainId.CELO:
-        case ChainId.CELO_ALFAJORES:
-            return BigNumber.from(80000);
-        case ChainId.GNOSIS:
-            return BigNumber.from(80000);
-        case ChainId.MOONBEAM:
-            return BigNumber.from(80000);
-    }
-};
-export const SINGLE_HOP_OVERHEAD = (_id) => {
-    return BigNumber.from(15000);
-};
-export const TOKEN_OVERHEAD = (id, route) => {
-    const tokens = route.tokenPath;
-    let overhead = BigNumber.from(0);
-    if (id == ChainId.MAINNET) {
-        // AAVE's transfer contains expensive governance snapshotting logic. We estimate
-        // it at around 150k.
-        if (tokens.some((t) => t.equals(AAVE_MAINNET))) {
-            overhead = overhead.add(150000);
-        }
-        // LDO's reaches out to an external token controller which adds a large overhead
-        // of around 150k.
-        if (tokens.some((t) => t.equals(LIDO_MAINNET))) {
-            overhead = overhead.add(150000);
-        }
-    }
-    return overhead;
-};
-// TODO: change per chain
-export const NATIVE_WRAP_OVERHEAD = (id) => {
-    switch (id) {
-        default:
-            return BigNumber.from(27938);
-    }
-};
-export const NATIVE_UNWRAP_OVERHEAD = (id) => {
-    switch (id) {
-        default:
-            return BigNumber.from(36000);
-    }
-};
-export const NATIVE_OVERHEAD = (chainId, amount, quote) => {
-    if (amount.isNative) {
-        // need to wrap eth in
-        return NATIVE_WRAP_OVERHEAD(chainId);
-    }
-    if (quote.isNative) {
-        // need to unwrap eth out
-        return NATIVE_UNWRAP_OVERHEAD(chainId);
-    }
-    return BigNumber.from(0);
-};
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxFQUFtQixNQUFNLG1CQUFtQixDQUFDO0FBRTdELE9BQU8sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFHbkUsMkNBQTJDO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFdEQsNkRBQTZEO0FBQzdELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQVcsRUFBYSxFQUFFO0lBQ3ZELFFBQVEsRUFBRSxFQUFFO1FBQ1YsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLEtBQUssT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUNwQixLQUFLLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ3RCLEtBQUssT0FBTyxDQUFDLGVBQWUsQ0FBQztRQUM3QixLQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztRQUM5QixLQUFLLE9BQU8sQ0FBQyxHQUFHLENBQUM7UUFDakIsS0FBSyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBQ3ZCLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDekIsS0FBSyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssT0FBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDdkIsS0FBSyxPQUFPLENBQUMsS0FBSyxDQUFDO1FB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
index 3962e32..8c0af96 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
@@ -1,6 +1,7 @@
 import { V3RouteWithValidQuote } from '../../entities/route-with-valid-quote';
-import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } from '../gas-model';
+import { BuildOnChainGasModelFactoryType, IGasModel } from '../gas-model';
 import { BaseProvider } from '@ethersproject/providers';
+import { TickBasedHeuristicGasModelFactory } from '../tick-based-heuristic-gas-model';
 /**
  * Computes a gas estimate for a V3 swap using heuristics.
  * Considers number of hops in the route, number of ticks crossed
@@ -19,9 +20,7 @@ import { BaseProvider } from '@ethersproject/providers';
  * @export
  * @class V3HeuristicGasModelFactory
  */
-export declare class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
-    private provider;
+export declare class V3HeuristicGasModelFactory extends TickBasedHeuristicGasModelFactory<V3RouteWithValidQuote> {
     constructor(provider: BaseProvider);
-    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
-    private estimateGas;
+    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
index 2c237c0..718cf29 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
@@ -1,12 +1,4 @@
-import { BigNumber } from '@ethersproject/bignumber';
-import { Price } from '@uniswap/sdk-core';
-import _ from 'lodash';
-import { WRAPPED_NATIVE_CURRENCY } from '../../../..';
-import { CurrencyAmount } from '../../../../util/amounts';
-import { calculateL1GasFeesHelper } from '../../../../util/gas-factory-helpers';
-import { log } from '../../../../util/log';
-import { getQuoteThroughNativePool, IOnChainGasModelFactory, } from '../gas-model';
-import { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK, SINGLE_HOP_OVERHEAD, TOKEN_OVERHEAD, } from './gas-costs';
+import { TickBasedHeuristicGasModelFactory } from '../tick-based-heuristic-gas-model';
 /**
  * Computes a gas estimate for a V3 swap using heuristics.
  * Considers number of hops in the route, number of ticks crossed
@@ -25,148 +17,21 @@ import { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK,
  * @export
  * @class V3HeuristicGasModelFactory
  */
-export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
+export class V3HeuristicGasModelFactory extends TickBasedHeuristicGasModelFactory {
     constructor(provider) {
-        super();
-        this.provider = provider;
+        super(provider);
     }
-    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }) {
-        const l2GasData = l2GasDataProvider
-            ? await l2GasDataProvider.getGasData(providerConfig)
-            : undefined;
-        const usdPool = pools.usdPool;
-        const calculateL1GasFees = async (route) => {
-            return await calculateL1GasFeesHelper(route, chainId, usdPool, quoteToken, pools.nativeAndQuoteTokenV3Pool, this.provider, l2GasData);
-        };
-        const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
-        let nativeAmountPool = null;
-        if (!amountToken.equals(nativeCurrency)) {
-            nativeAmountPool = pools.nativeAndAmountTokenV3Pool;
-        }
-        const usdToken = usdPool.token0.equals(nativeCurrency)
-            ? usdPool.token1
-            : usdPool.token0;
-        const estimateGasCost = (routeWithValidQuote) => {
-            var _a;
-            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
-            /** ------ MARK: USD logic  -------- */
-            const gasCostInTermsOfUSD = getQuoteThroughNativePool(chainId, totalGasCostNativeCurrency, usdPool);
-            /** ------ MARK: Conditional logic run if gasToken is specified  -------- */
-            const nativeAndSpecifiedGasTokenPool = pools.nativeAndSpecifiedGasTokenV3Pool;
-            let gasCostInTermsOfGasToken = undefined;
-            // we don't want to fetch the gasToken pool if the gasToken is the native currency
-            if (nativeAndSpecifiedGasTokenPool) {
-                gasCostInTermsOfGasToken = getQuoteThroughNativePool(chainId, totalGasCostNativeCurrency, nativeAndSpecifiedGasTokenPool);
-            }
-            // if the gasToken is the native currency, we can just use the totalGasCostNativeCurrency
-            else if ((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.gasToken) === null || _a === void 0 ? void 0 : _a.equals(nativeCurrency)) {
-                gasCostInTermsOfGasToken = totalGasCostNativeCurrency;
-            }
-            /** ------ MARK: return early if quoteToken is wrapped native currency ------- */
-            if (quoteToken.equals(nativeCurrency)) {
-                return {
-                    gasEstimate: baseGasUse,
-                    gasCostInToken: totalGasCostNativeCurrency,
-                    gasCostInUSD: gasCostInTermsOfUSD,
-                    gasCostInGasToken: gasCostInTermsOfGasToken,
-                };
-            }
-            /** ------ MARK: Main gas logic in terms of quote token -------- */
-            // Since the quote token is not in the native currency, we convert the gas cost to be in terms of the quote token.
-            // We do this by getting the highest liquidity <quoteToken>/<nativeCurrency> pool. eg. <quoteToken>/ETH pool.
-            const nativeAndQuoteTokenPool = pools.nativeAndQuoteTokenV3Pool;
-            let gasCostInTermsOfQuoteToken = null;
-            if (nativeAndQuoteTokenPool) {
-                gasCostInTermsOfQuoteToken = getQuoteThroughNativePool(chainId, totalGasCostNativeCurrency, nativeAndQuoteTokenPool);
-            }
-            // We may have a nativeAmountPool, but not a nativePool
-            else {
-                log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`);
-            }
-            /** ------ MARK: (V3 ONLY) Logic for calculating synthetic gas cost in terms of amount token -------- */
-            // TODO: evaluate effectiveness and potentially refactor
-            // Highest liquidity pool for the non quote token / ETH
-            // A pool with the non quote token / ETH should not be required and errors should be handled separately
-            if (nativeAmountPool) {
-                // get current execution price (amountToken / quoteToken)
-                const executionPrice = new Price(routeWithValidQuote.amount.currency, routeWithValidQuote.quote.currency, routeWithValidQuote.amount.quotient, routeWithValidQuote.quote.quotient);
-                const inputIsToken0 = nativeAmountPool.token0.address == nativeCurrency.address;
-                // ratio of input / native
-                const nativeAndAmountTokenPrice = inputIsToken0
-                    ? nativeAmountPool.token0Price
-                    : nativeAmountPool.token1Price;
-                const gasCostInTermsOfAmountToken = nativeAndAmountTokenPrice.quote(totalGasCostNativeCurrency);
-                // Convert gasCostInTermsOfAmountToken to quote token using execution price
-                const syntheticGasCostInTermsOfQuoteToken = executionPrice.quote(gasCostInTermsOfAmountToken);
-                // Note that the syntheticGasCost being lessThan the original quoted value is not always strictly better
-                // e.g. the scenario where the amountToken/ETH pool is very illiquid as well and returns an extremely small number
-                // however, it is better to have the gasEstimation be almost 0 than almost infinity, as the user will still receive a quote
-                if (gasCostInTermsOfQuoteToken === null ||
-                    syntheticGasCostInTermsOfQuoteToken.lessThan(gasCostInTermsOfQuoteToken.asFraction)) {
-                    log.info({
-                        nativeAndAmountTokenPrice: nativeAndAmountTokenPrice.toSignificant(6),
-                        gasCostInTermsOfQuoteToken: gasCostInTermsOfQuoteToken
-                            ? gasCostInTermsOfQuoteToken.toExact()
-                            : 0,
-                        gasCostInTermsOfAmountToken: gasCostInTermsOfAmountToken.toExact(),
-                        executionPrice: executionPrice.toSignificant(6),
-                        syntheticGasCostInTermsOfQuoteToken: syntheticGasCostInTermsOfQuoteToken.toSignificant(6),
-                    }, 'New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original');
-                    gasCostInTermsOfQuoteToken = syntheticGasCostInTermsOfQuoteToken;
-                }
-            }
-            // If gasCostInTermsOfQuoteToken is null, both attempts to calculate gasCostInTermsOfQuoteToken failed (nativePool and amountNativePool)
-            if (gasCostInTermsOfQuoteToken === null) {
-                log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol}, or amount Token, ${amountToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);
-                return {
-                    gasEstimate: baseGasUse,
-                    gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),
-                    gasCostInUSD: CurrencyAmount.fromRawAmount(usdToken, 0),
-                };
-            }
-            return {
-                gasEstimate: baseGasUse,
-                gasCostInToken: gasCostInTermsOfQuoteToken,
-                gasCostInUSD: gasCostInTermsOfUSD,
-                gasCostInGasToken: gasCostInTermsOfGasToken,
-            };
-        };
-        return {
-            estimateGasCost: estimateGasCost.bind(this),
-            calculateL1GasFees,
-        };
-    }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
-        var _a;
-        const totalInitializedTicksCrossed = BigNumber.from(Math.max(1, _.sum(routeWithValidQuote.initializedTicksCrossedList)));
-        const totalHops = BigNumber.from(routeWithValidQuote.route.pools.length);
-        let hopsGasUse = COST_PER_HOP(chainId).mul(totalHops);
-        // We have observed that this algorithm tends to underestimate single hop swaps.
-        // We add a buffer in the case of a single hop swap.
-        if (totalHops.eq(1)) {
-            hopsGasUse = hopsGasUse.add(SINGLE_HOP_OVERHEAD(chainId));
-        }
-        // Some tokens have extremely expensive transferFrom functions, which causes
-        // us to underestimate them by a large amount. For known tokens, we apply an
-        // adjustment.
-        const tokenOverhead = TOKEN_OVERHEAD(chainId, routeWithValidQuote.route);
-        const tickGasUse = COST_PER_INIT_TICK(chainId).mul(totalInitializedTicksCrossed);
-        const uninitializedTickGasUse = COST_PER_UNINIT_TICK.mul(0);
-        // base estimate gas used based on chainId estimates for hops and ticks gas useage
-        const baseGasUse = BASE_SWAP_COST(chainId)
-            .add(hopsGasUse)
-            .add(tokenOverhead)
-            .add(tickGasUse)
-            .add(uninitializedTickGasUse)
-            .add((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) !== null && _a !== void 0 ? _a : BigNumber.from(0));
-        const baseGasCostWei = gasPriceWei.mul(baseGasUse);
-        const wrappedCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
-        const totalGasCostNativeCurrency = CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
-        return {
-            totalGasCostNativeCurrency,
-            totalInitializedTicksCrossed,
-            baseGasUse,
-        };
+    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }) {
+        return await super.buildGasModelInternal({
+            chainId,
+            gasPriceWei,
+            pools,
+            amountToken,
+            quoteToken,
+            v2poolProvider,
+            l2GasDataProvider,
+            providerConfig,
+        });
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YzL3YzLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3JELE9BQU8sRUFBVyxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVuRCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFM0MsT0FBTyxFQUdMLHlCQUF5QixFQUV6Qix1QkFBdUIsR0FDeEIsTUFBTSxjQUFjLENBQUM7QUFFdEIsT0FBTyxFQUNMLGNBQWMsRUFDZCxZQUFZLEVBQ1osa0JBQWtCLEVBQ2xCLG9CQUFvQixFQUNwQixtQkFBbUIsRUFDbkIsY0FBYyxHQUNmLE1BQU0sYUFBYSxDQUFDO0FBR3JCOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUNILE1BQU0sT0FBTywwQkFBMkIsU0FBUSx1QkFBdUI7SUFHckUsWUFBWSxRQUFzQjtRQUNoQyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsS0FBSyxFQUNMLFdBQVcsRUFDWCxVQUFVLEVBQ1YsaUJBQWlCLEVBQ2pCLGNBQWMsR0FDa0I7UUFHaEMsTUFBTSxTQUFTLEdB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YzL3YzLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFdEY7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBTSxPQUFPLDBCQUEyQixTQUFRLGlDQUF3RDtJQUN0RyxZQUFZLFFBQXNCO1FBQ2hDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQixDQUFDO0lBRWUsS0FBSyxDQUFDLGFBQWEsQ0FBQyxFQUNsQyxPQUFPLEVBQ1AsV0FBVyxFQUNYLEtBQUssRUFDTCxXQUFXLEVBQ1gsVUFBVSxFQUNWLGNBQWMsRUFDZCxpQkFBaUIsRUFDakIsY0FBYyxHQUNrQjtRQUdoQyxPQUFPLE1BQU0sS0FBSyxDQUFDLHFCQUFxQixDQUFDO1lBQ3ZDLE9BQU87WUFDUCxXQUFXO1lBQ1gsS0FBSztZQUNMLFdBQVc7WUFDWCxVQUFVO1lBQ1YsY0FBYztZQUNkLGlCQUFpQjtZQUNqQixjQUFjO1NBQ2YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.d.ts
new file mode 100644
index 0000000..98d9e76
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.d.ts
@@ -0,0 +1,8 @@
+import { BaseProvider } from '@ethersproject/providers';
+import { V4RouteWithValidQuote } from '../../entities';
+import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } from '../gas-model';
+import { TickBasedHeuristicGasModelFactory } from '../tick-based-heuristic-gas-model';
+export declare class V4HeuristicGasModelFactory extends TickBasedHeuristicGasModelFactory<V4RouteWithValidQuote> implements IOnChainGasModelFactory<V4RouteWithValidQuote> {
+    constructor(provider: BaseProvider);
+    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V4RouteWithValidQuote>>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.js
new file mode 100644
index 0000000..6283a5d
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.js
@@ -0,0 +1,19 @@
+import { TickBasedHeuristicGasModelFactory } from '../tick-based-heuristic-gas-model';
+export class V4HeuristicGasModelFactory extends TickBasedHeuristicGasModelFactory {
+    constructor(provider) {
+        super(provider);
+    }
+    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, v2poolProvider, l2GasDataProvider, providerConfig, }) {
+        return await super.buildGasModelInternal({
+            chainId,
+            gasPriceWei,
+            pools,
+            amountToken,
+            quoteToken,
+            v2poolProvider,
+            l2GasDataProvider,
+            providerConfig,
+        });
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjQtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3Y0L3Y0LWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0EsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFdEYsTUFBTSxPQUFPLDBCQUNYLFNBQVEsaUNBQXdEO0lBR2hFLFlBQVksUUFBc0I7UUFDaEMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsS0FBSyxFQUNMLFdBQVcsRUFDWCxVQUFVLEVBQ1YsY0FBYyxFQUNkLGlCQUFpQixFQUNqQixjQUFjLEdBQ2tCO1FBR2hDLE9BQU8sTUFBTSxLQUFLLENBQUMscUJBQXFCLENBQUM7WUFDdkMsT0FBTztZQUNQLFdBQVc7WUFDWCxLQUFLO1lBQ0wsV0FBVztZQUNYLFVBQVU7WUFDVixjQUFjO1lBQ2QsaUJBQWlCO1lBQ2pCLGNBQWM7U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0YifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts
index 9a16400..1aaf618 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts
@@ -1,15 +1,14 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, Token, TradeType } from '@uniswap/sdk-core';
-import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
 import { ITokenListProvider, ITokenProvider, ITokenValidatorProvider, TokenValidationResult } from '../../../providers';
 import { CurrencyAmount } from '../../../util';
-import { MixedRoute, V2Route, V3Route } from '../../router';
+import { SupportedRoutes } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { RouteWithValidQuote } from '../entities/route-with-valid-quote';
-import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, CrossLiquidityCandidatePools, SupportedCandidatePools, V2CandidatePools, V3CandidatePools, V4CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
+import { TPool } from '@uniswap/router-sdk/dist/utils/TPool';
 import { GetQuotesResult, GetRoutesResult } from './model/results';
 /**
  * Interface for a Quoter.
@@ -19,7 +18,12 @@ import { GetQuotesResult, GetRoutesResult } from './model/results';
  * @template CandidatePools
  * @template Route
  */
-export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools | V3CandidatePools | [V3CandidatePools, V2CandidatePools], Route extends V2Route | V3Route | MixedRoute> {
+export declare abstract class BaseQuoter<CandidatePools extends SupportedCandidatePools | [
+    V4CandidatePools,
+    V3CandidatePools,
+    V2CandidatePools,
+    CrossLiquidityCandidatePools
+], Route extends SupportedRoutes, TCurrency extends Currency> {
     protected tokenProvider: ITokenProvider;
     protected chainId: ChainId;
     protected protocol: Protocol;
@@ -38,7 +42,7 @@ export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools
      * @param routingConfig
      * @returns Promise<GetRoutesResult<Route>>
      */
-    protected abstract getRoutes(tokenIn: Token, tokenOut: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
+    protected abstract getRoutes(tokenIn: TCurrency, tokenOut: TCurrency, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
     /**
      * Public method that will fetch quotes for the combination of every route and every amount.
      *
@@ -68,6 +72,6 @@ export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools
      * @param gasModel the gasModel to be used for estimating gas cost
      * @param gasPriceWei instead of passing gasModel, gasPriceWei is used to generate a gasModel
      */
-    getRoutesThenQuotes(tokenIn: Token, tokenOut: Token, amount: CurrencyAmount, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
-    protected applyTokenValidatorToPools<T extends Pool | Pair>(pools: T[], isInvalidFn: (token: Currency, tokenValidation: TokenValidationResult | undefined) => boolean): Promise<T[]>;
+    getRoutesThenQuotes(tokenIn: TCurrency, tokenOut: TCurrency, amount: CurrencyAmount, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
+    protected applyTokenValidatorToPools<T extends TPool>(pools: T[], isInvalidFn: (token: Currency, tokenValidation: TokenValidationResult | undefined) => boolean): Promise<T[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js
index ba8386f..30428d0 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js
@@ -52,10 +52,10 @@ export class BaseQuoter {
         }
         log.info(`Running token validator on ${pools.length} pools`);
         const tokens = _.flatMap(pools, (pool) => [pool.token0, pool.token1]);
-        const tokenValidationResults = await this.tokenValidatorProvider.validateTokens(tokens);
+        const tokenValidationResults = await this.tokenValidatorProvider.validateTokens(tokens.map((token) => token.wrapped));
         const poolsFiltered = _.filter(pools, (pool) => {
-            const token0Validation = tokenValidationResults.getValidationByToken(pool.token0);
-            const token1Validation = tokenValidationResults.getValidationByToken(pool.token1);
+            const token0Validation = tokenValidationResults.getValidationByToken(pool.token0.wrapped);
+            const token1Validation = tokenValidationResults.getValidationByToken(pool.token1.wrapped);
             const token0Invalid = isInvalidFn(pool.token0, token0Validation);
             const token1Invalid = isInvalidFn(pool.token1, token1Validation);
             if (token0Invalid || token1Invalid) {
@@ -66,4 +66,4 @@ export class BaseQuoter {
         return poolsFiltered;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFRdkIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLFlBQVksR0FDYixNQUFNLGVBQWUsQ0FBQztBQWF2Qjs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFnQixVQUFVO0lBYTlCLFlBQ0UsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsUUFBa0IsRUFDbEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztRQUNuQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsd0JBQXdCLEdBQUcsd0JBQXdCLENBQUM7UUFDekQsSUFBSSxDQUFDLHNCQUFzQixHQUFHLHNCQUFzQixDQUFDO0lBQ3ZELENBQUM7SUFnREQ7Ozs7Ozs7Ozs7Ozs7T0FhRztJQUNJLG1CQUFtQixDQUN4QixPQUFjLEVBQ2QsUUFBZSxFQUNmLE1BQXNCLEVBQ3RCLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLGNBQThCLEVBQzlCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDbkIsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLEVBQ2QsU0FBUyxFQUNULGFBQWEsQ0FDZCxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFO1lBQ3RCLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNuQyxN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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFRdkIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLFlBQVksR0FDYixNQUFNLGVBQWUsQ0FBQztBQWlCdkI7Ozs7Ozs7R0FPRztBQUNILE1BQU0sT0FBZ0IsVUFBVTtJQWtCOUIsWUFDRSxhQUE2QixFQUM3QixPQUFnQixFQUNoQixRQUFrQixFQUNsQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyx3QkFBd0IsR0FBRyx3QkFBd0IsQ0FBQztRQUN6RCxJQUFJLENBQUMsc0JBQXNCLEdBQUcsc0JBQXNCLENBQUM7SUFDdkQsQ0FBQztJQWdERDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0ksbUJBQW1CLENBQ3hCLE9BQWtCLEVBQ2xCLFFBQW1CLEVBQ25CLE1BQXNCLEVBQ3RCLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLGNBQThCLEVBQzlCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDbkIsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLEVBQ2QsU0FBUyxFQUNULGFBQWEsQ0FDZCxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFO1lBQ3RCLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dC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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts
index 6c5906d..8d01162 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts
@@ -1,23 +1,32 @@
 import { ChainId, Token, TradeType } from '@uniswap/sdk-core';
-import { IOnChainQuoteProvider, ITokenListProvider, ITokenProvider, ITokenValidatorProvider, IV2PoolProvider, IV2SubgraphProvider, IV3PoolProvider, IV3SubgraphProvider } from '../../../providers';
+import { IOnChainQuoteProvider, ITokenListProvider, ITokenProvider, ITokenValidatorProvider, IV2PoolProvider, IV2SubgraphProvider, IV3PoolProvider, IV3SubgraphProvider, IV4PoolProvider, IV4SubgraphProvider } from '../../../providers';
 import { CurrencyAmount } from '../../../util';
 import { MixedRoute } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { MixedRouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, CrossLiquidityCandidatePools, V2CandidatePools, V3CandidatePools, V4CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult, GetRoutesResult } from './model';
 export declare class MixedQuoter extends BaseQuoter<[
+    V4CandidatePools,
     V3CandidatePools,
-    V2CandidatePools
-], MixedRoute> {
+    V2CandidatePools,
+    CrossLiquidityCandidatePools
+], MixedRoute, Token> {
+    protected v4SubgraphProvider: IV4SubgraphProvider;
+    protected v4PoolProvider: IV4PoolProvider;
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
-    constructor(v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, v3v2candidatePools: [V3CandidatePools, V2CandidatePools], tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
+    constructor(v4SubgraphProvider: IV4SubgraphProvider, v4PoolProvider: IV4PoolProvider, v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v4v3v2candidatePools: [
+        V4CandidatePools,
+        V3CandidatePools,
+        V2CandidatePools,
+        CrossLiquidityCandidatePools
+    ], tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
     getQuotes(routes: MixedRoute[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<MixedRouteWithValidQuote>): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js
index 4c12072..ade3fe0 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js
@@ -8,32 +8,48 @@ import { computeAllMixedRoutes } from '../functions/compute-all-routes';
 import { getMixedRouteCandidatePools, } from '../functions/get-candidate-pools';
 import { BaseQuoter } from './base-quoter';
 export class MixedQuoter extends BaseQuoter {
-    constructor(v3SubgraphProvider, v3PoolProvider, v2SubgraphProvider, v2PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
+    constructor(v4SubgraphProvider, v4PoolProvider, v3SubgraphProvider, v3PoolProvider, v2SubgraphProvider, v2PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
         super(tokenProvider, chainId, Protocol.MIXED, blockedTokenListProvider, tokenValidatorProvider);
+        this.v4SubgraphProvider = v4SubgraphProvider;
+        this.v4PoolProvider = v4PoolProvider;
         this.v3SubgraphProvider = v3SubgraphProvider;
         this.v3PoolProvider = v3PoolProvider;
         this.v2SubgraphProvider = v2SubgraphProvider;
         this.v2PoolProvider = v2PoolProvider;
         this.onChainQuoteProvider = onChainQuoteProvider;
     }
-    async getRoutes(tokenIn, tokenOut, v3v2candidatePools, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v4v3v2candidatePools, tradeType, routingConfig) {
+        var _a, _b, _c;
         const beforeGetRoutes = Date.now();
         if (tradeType != TradeType.EXACT_INPUT) {
             throw new Error('Mixed route quotes are not supported for EXACT_OUTPUT');
         }
-        const [v3CandidatePools, v2CandidatePools] = v3v2candidatePools;
-        const { V2poolAccessor, V3poolAccessor, candidatePools: mixedRouteCandidatePools, } = await getMixedRouteCandidatePools({
+        const [v4CandidatePools, v3CandidatePools, v2CandidatePools, crossLiquidityPools,] = v4v3v2candidatePools;
+        const { V2poolAccessor, V3poolAccessor, V4poolAccessor, candidatePools: mixedRouteCandidatePools, } = await getMixedRouteCandidatePools({
+            v4CandidatePools,
             v3CandidatePools,
             v2CandidatePools,
+            crossLiquidityPools,
             tokenProvider: this.tokenProvider,
+            v4PoolProvider: this.v4PoolProvider,
             v3poolProvider: this.v3PoolProvider,
             v2poolProvider: this.v2PoolProvider,
             routingConfig,
             chainId: this.chainId,
         });
+        const V4poolsRaw = V4poolAccessor.getAllPools();
         const V3poolsRaw = V3poolAccessor.getAllPools();
         const V2poolsRaw = V2poolAccessor.getAllPools();
-        const poolsRaw = [...V3poolsRaw, ...V2poolsRaw];
+        const poolsRaw = [];
+        if (!((_a = routingConfig.excludedProtocolsFromMixed) === null || _a === void 0 ? void 0 : _a.includes(Protocol.V4))) {
+            poolsRaw.push(...V4poolsRaw);
+        }
+        if (!((_b = routingConfig.excludedProtocolsFromMixed) === null || _b === void 0 ? void 0 : _b.includes(Protocol.V3))) {
+            poolsRaw.push(...V3poolsRaw);
+        }
+        if (!((_c = routingConfig.excludedProtocolsFromMixed) === null || _c === void 0 ? void 0 : _c.includes(Protocol.V2))) {
+            poolsRaw.push(...V2poolsRaw);
+        }
         const candidatePools = mixedRouteCandidatePools;
         // Drop any pools that contain fee on transfer tokens (not supported by v3) or have issues with being transferred.
         const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
@@ -57,7 +73,7 @@ export class MixedQuoter extends BaseQuoter {
         const routes = computeAllMixedRoutes(tokenIn, tokenOut, pools, maxSwapsPerPath);
         metric.putMetric('MixedGetRoutesLoad', Date.now() - beforeGetRoutes, MetricLoggerUnit.Milliseconds);
         return {
-            routes,
+            routes: routes,
             candidatePools,
         };
     }
@@ -107,6 +123,7 @@ export class MixedQuoter extends BaseQuoter {
                     mixedRouteGasModel: gasModel,
                     quoteToken,
                     tradeType,
+                    v4PoolProvider: this.v4PoolProvider,
                     v3PoolProvider: this.v3PoolProvider,
                     v2PoolProvider: this.v2PoolProvider,
                 });
@@ -120,4 +137,4 @@ export class MixedQuoter extends BaseQuoter {
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBU0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLGFBQWEsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDeEUsT0FBTyxFQUVMLDJCQUEyQixHQUc1QixNQUFNLGtDQUFrQyxDQUFDO0FBRzFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLFdBQVksU0FBUSxVQUdoQztJQU9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixvQkFBMkMsRUFDM0MsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxLQUFLLENBQ0gsYUFBYSxFQUNiLE9BQU8sRUFDUCxRQUFRLENBQUMsS0FBSyxFQUNkLHdCQUF3QixFQUN4QixzQkFBc0IsQ0FDdkIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsa0JBQWtC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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBV0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLGFBQWEsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDeEUsT0FBTyxFQUdMLDJCQUEyQixHQUk1QixNQUFNLGtDQUFrQyxDQUFDO0FBRzFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLFdBQVksU0FBUSxVQVNoQztJQVNDLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixrQkFBdUMsRUFDdkMsY0FBK0IsRUFDL0Isb0JBQTJDLEVBQzNDLGFBQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLHdCQUE2QyxFQUM3QyxzQkFBZ0Q7UUFFaEQsS0FBSyxDQUNILGFBQWEsRUFDYixPQUFPLEVBQ1AsUUFBUSxDQUFDLEtBQUssRUFDZCx3QkFBd0IsRUFDeEIsc0JBQXNCLENBQ3ZCLENBQUM7UUFDRixJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7SUFDbkQsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWMsRUFDZCxRQUFlLEVBQ2Ysb0JBS0MsRUFDRCxTQUFvQixFQUNwQixhQUFnQzs7UUFFaEMsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBRW5DLElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDdEMsTUFBTSxJQUFJLEtBQUssQ0FBQyx1REFBdUQsQ0FBQyxDQUFDO1NBQzFFO1FBRUQsTUFBTSxDQUNKLGdCQUFnQixFQUNoQixnQkFBZ0IsRUFDaEIsZ0JBQWdCLEVBQ2hCLG1CQUFtQixFQUNwQixHQUFHLG9CQUFvQixDQUFDO1FBRXpCLE1BQU0sRUFDSixjQUFjLEVBQ2QsY0FBYyxFQUNkLGNBQWMsRUFDZCxjQUFjLEVBQUUsd0JBQXdCLEdBQ3pDLEdBQUcsTUFBTSwyQkFBMkIsQ0FBQztZQUNwQyxnQkFBZ0I7WUFDaEIsZ0JBQWdCO1lBQ2hCLGdCQUFnQjtZQUNoQixtQkFBbUI7WUFDbkIsYUFBYSxFQUFFLElBQUksQ0FBQyxhQUFhO1lBQ2pDLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztZQUNuQyxjQUFjLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDbkMsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO1lBQ25DLGFBQWE7WUFDYixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87U0FDdEIsQ0FBQyxDQUFDO1FBRUgsTUFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hELE1BQU0sVUFBVSxHQUFHLGNBQWMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNoRCxNQUFNLFVBQVUsR0FBRyxjQUFjLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFaEQsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxDQUFBLE1BQUEsYUFBYSxDQUFDLDBCQUEwQiwwQ0FBRSxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFBLEVBQUU7WUFDcEUsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDO1NBQzlCO1FBQ0QsSUFBSSxDQUFDLENBQUEsTUFBQSxhQUFhLENBQUMsMEJBQTBCLDBDQUFFLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUEsRUFBRTtZQUNwRSxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUM7U0FDOUI7UUFDRCxJQUFJLENBQUMsQ0FBQSxNQUFBLGFBQWEsQ0FBQywwQkFBMEIsMENBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQSxFQUFFO1lBQ3BFLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQztTQUM5QjtRQUVELE1BQU0sY0FBYyxHQUFHLHdCQUF3QixDQUFDO1FBRWhELGtIQUFrSDtRQUNsSCxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQywwQkFBMEIsQ0FDakQsUUFBUSxFQUNSLENBQ0UsS0FBZSxFQUNmLGVBQWtELEVBQ3pDLEVBQUU7WUFDWCwwRUFBMEU7WUFDMUUsSUFBSSxDQUFDLGVBQWUsRUFBRTtnQkFDcEIsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELDJFQUEyRTtZQUMzRSxnRkFBZ0Y7WUFDaEYsNEVBQTRFO1lBQzVFLFdBQVc7WUFDWCxFQUFFO1lBQ0YsSUFDRSxlQUFlLElBQUkscUJBQXFCLENBQUMsR0FBRztnQkFDNUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsRUFDakQ7Z0JBQ0EsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELE9BQU8sQ0FDTCxlQUFlLElBQUkscUJBQXFCLENBQUMsR0FBRztnQkFDNUMsZUFBZSxJQUFJLHFCQUFxQixDQUFDLEdBQUcsQ0FDN0MsQ0FBQztRQUNKLENBQUMsQ0FDRixDQUFDO1FBRUYsTUFBTSxFQUFFLGVBQWUsRUFBRSxHQUFHLGFBQWEsQ0FBQztRQUUxQyxNQUFNLE1BQU0sR0FBRyxxQkFBcUIsQ0FDbEMsT0FBTyxFQUNQLFFBQVEsRUFDUixLQUFLLEVBQ0wsZUFBZSxDQUNoQixDQUFDO1FBRUYsTUFBTSxDQUFDLFNBQVMsQ0FDZCxvQkFBb0IsRUFDcEIsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLGVBQWUsRUFDNUIsZ0JBQWdCLENBQUMsWUFBWSxDQUM5QixDQUFDO1FBRUYsT0FBTztZQUNMLE1BQU0sRUFBRSxNQUFNO1lBQ2QsY0FBYztTQUNmLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFNBQVMsQ0FDcEIsTUFBb0IsRUFDcEIsT0FBeUIsRUFDekIsUUFBa0IsRUFDbEIsVUFBaUIsRUFDakIsU0FBb0IsRUFDcEIsYUFBZ0MsRUFDaEMsY0FBa0QsRUFDbEQsUUFBOEM7UUFFOUMsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ25DLEdBQUcsQ0FBQyxJQUFJLENBQUMsOEJBQThCLENBQUMsQ0FBQztRQUN6QyxJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDMUIsTUFBTSxJQUFJLEtBQUssQ0FDYixnRUFBZ0UsQ0FDakUsQ0FBQztTQUNIO1FBQ0QsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUN0QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxDQUFDO1NBQ3REO1FBRUQsNkVBQTZFO1FBQzdFLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQ2pFLElBQUksQ0FBQyxvQkFBb0IsQ0FDMUIsQ0FBQztRQUVGLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNoQyxHQUFHLENBQUMsSUFBSSxDQUNOLGdDQUFnQyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsT0FBTyxDQUFDLE1BQU0scUJBQXFCLENBQ2pHLENBQUM7UUFFRixNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxNQUFNLE9BQU8sQ0FDeEMsT0FBTyxFQUNQLE1BQU0sRUFDTixhQUFhLENBQ2QsQ0FBQztRQUVGLE1BQU0sQ0FBQyxTQUFTLENBQ2QsaUJBQWlCLEVBQ2pCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxZQUFZLEVBQ3pCLGdCQUFnQixDQUFDLFlBQVksQ0FDOUIsQ0FBQztRQUVGLE1BQU0sQ0FBQyxTQUFTLENBQ2Qsb0JBQW9CLEVBQ3BCLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQzthQUNoQixHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7YUFDbEMsR0FBRyxFQUFFLEVBQ1IsZ0JBQWdCLENBQUMsS0FBSyxDQUN2QixDQUFDO1FBRUYsTUFBTSxxQkFBcUIsR0FBRyxFQUFFLENBQUM7UUFFakMsS0FBSyxNQUFNLGNBQWMsSUFBSSxnQkFBZ0IsRUFBRTtZQUM3QyxNQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLGNBQWMsQ0FBQztZQUV2QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDdEMsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBRSxDQUFDO2dCQUM3QixNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFFLENBQUM7Z0JBQy9CLE1BQU0sRUFDSixLQUFLLEVBQ0wsTUFBTSxFQUNOLHFCQUFxQixFQUNyQiwyQkFBMkIsRUFDM0IsV0FBVyxHQUNaLEdBQUcsV0FBVyxDQUFDO2dCQUVoQixJQUNFLENBQUMsS0FBSztvQkFDTixDQUFDLHFCQUFxQjtvQkFDdEIsQ0FBQywyQkFBMkI7b0JBQzVCLENBQUMsV0FBVyxFQUNaO29CQUNBLEdBQUcsQ0FBQyxLQUFLLENBQ1A7d0JBQ0UsS0FBSyxFQUFFLGFBQWEsQ0FBQyxLQUFLLENBQUM7d0JBQzNCLFdBQVc7cUJBQ1osRUFDRCx3Q0FBd0MsQ0FDekMsQ0FBQztvQkFDRixTQUFTO2lCQUNWO2dCQUVELE1BQU0sbUJBQW1CLEdBQUcsSUFBSSx3QkFBd0IsQ0FBQztvQkFDdkQsS0FBSztvQkFDTCxRQUFRLEVBQUUsS0FBSztvQkFDZixNQUFNO29CQUNOLE9BQU87b0JBQ1AscUJBQXFCO29CQUNyQiwyQkFBMkI7b0JBQzNCLGlCQUFpQixFQUFFLFdBQVc7b0JBQzlCLGtCQUFrQixFQUFFLFFBQVE7b0JBQzVCLFVBQVU7b0JBQ1YsU0FBUztvQkFDVCxjQUFjLEVBQUUsSUFBSSxDQUFDLGNBQWM7b0JBQ25DLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztvQkFDbkMsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO2lCQUNwQyxDQUFDLENBQUM7Z0JBRUgscUJBQXFCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7YUFDakQ7U0FDRjtRQUVELE1BQU0sQ0FBQyxTQUFTLENBQ2Qsb0JBQW9CLEVBQ3BCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxlQUFlLEVBQzVCLGdCQUFnQixDQUFDLFlBQVksQ0FDOUIsQ0FBQztRQUVGLE9BQU87WUFDTCxxQkFBcUI7WUFDckIsY0FBYztTQUNmLENBQUM7SUFDSixDQUFDO0NBQ0YifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/model/results/get-routes-result.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/model/results/get-routes-result.d.ts
index cc7c407..29d43a3 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/model/results/get-routes-result.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/model/results/get-routes-result.d.ts
@@ -1,6 +1,6 @@
-import { MixedRoute, V2Route, V3Route } from '../../../../router';
+import { SupportedRoutes } from '../../../../router';
 import { CandidatePoolsBySelectionCriteria } from '../../../functions/get-candidate-pools';
-export interface GetRoutesResult<Route extends V2Route | V3Route | MixedRoute> {
+export interface GetRoutesResult<Route extends SupportedRoutes> {
     routes: Route[];
     candidatePools: CandidatePoolsBySelectionCriteria;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts
index 4a8bab3..4d255ba 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts
@@ -11,7 +11,7 @@ import { ArbitrumGasData, IL2GasDataProvider } from '../../../providers/v3/gas-d
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V2Quoter extends BaseQuoter<V2CandidatePools, V2Route> {
+export declare class V2Quoter extends BaseQuoter<V2CandidatePools, V2Route, Token> {
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected v2QuoteProvider: IV2QuoteProvider;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js
index 5b53032..a8afa4c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js
@@ -5,7 +5,7 @@ import { TokenValidationResult, } from '../../../providers';
 import { log, metric, MetricLoggerUnit, routeToString, } from '../../../util';
 import { V2RouteWithValidQuote } from '../entities';
 import { computeAllV2Routes } from '../functions/compute-all-routes';
-import { NATIVE_OVERHEAD } from '../gas-models/v3/gas-costs';
+import { NATIVE_OVERHEAD } from '../gas-models/gas-costs';
 import { BaseQuoter } from './base-quoter';
 export class V2Quoter extends BaseQuoter {
     constructor(v2SubgraphProvider, v2PoolProvider, v2QuoteProvider, v2GasModelFactory, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider, l2GasDataProvider) {
@@ -134,4 +134,4 @@ export class V2Quoter extends BaseQuoter {
         });
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBT0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLGFBQWEsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFNckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBTTdELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJM0MsTUFBTSxPQUFPLFFBQVMsU0FBUSxVQUFxQztJQU9qRSxZQUNFLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixlQUFpQyxFQUNqQyxpQkFBcUMsRUFDckMsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRCxFQUNoRCxpQkFBdUQ7UUFFdkQsS0FBSyxDQUNILGFBQWEsRUFDYixPQUFPLEVBQ1AsUUFBUSxDQUFDLEVBQUUsRUFDWCx3QkFBd0IsRUFDeEIsc0JBQXNCLENBQ3ZCLENBQUM7UUFDRixJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFl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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBT0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLGFBQWEsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFNckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBTTFELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJM0MsTUFBTSxPQUFPLFFBQVMsU0FBUSxVQUE0QztJQU94RSxZQUNFLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixlQUFpQyxFQUNqQyxpQkFBcUMsRUFDckMsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRCxFQUNoRCxpQkFBdUQ7UUFFdkQsS0FBSyxDQUNILGFBQWEsRUFDYixPQUFPLEVBQ1AsUUFBUSxDQUFDLEVBQUUsRUFDWCx3QkFBd0IsRUFDeEIsc0JBQXNCLENBQ3ZCLENBQUM7UUFDRixJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFl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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts
index 39550d6..7e1bdde 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts
@@ -9,7 +9,7 @@ import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V3Quoter extends BaseQuoter<V3CandidatePools, V3Route> {
+export declare class V3Quoter extends BaseQuoter<V3CandidatePools, V3Route, Token> {
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js
index b08dd0f..b28d542 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js
@@ -107,4 +107,4 @@ export class V3Quoter extends BaseQuoter {
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBT0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLGFBQWEsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFPckUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQXFDO0lBS2pFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxFQUNQLFFBQVEsQ0FBQyxFQUFFLEVBQ1gsd0JBQXdCLEVBQ3hCLHNCQUFzQixDQUN2QixDQUFDO1FBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixn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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBT0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLGFBQWEsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFPckUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQTRDO0lBS3hFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxFQUNQLFFBQVEsQ0FBQyxFQUFFLEVBQ1gsd0JBQXdCLEVBQ3hCLHNCQUFzQixDQUN2QixDQUFDO1FBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixn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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v4-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v4-quoter.d.ts
new file mode 100644
index 0000000..f1e5531
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v4-quoter.d.ts
@@ -0,0 +1,18 @@
+import { ChainId, Currency, Token, TradeType } from '@uniswap/sdk-core';
+import { IOnChainQuoteProvider, ITokenListProvider, ITokenProvider, ITokenValidatorProvider, IV4PoolProvider, IV4SubgraphProvider } from '../../../providers';
+import { CurrencyAmount } from '../../../util';
+import { V4Route } from '../../router';
+import { AlphaRouterConfig } from '../alpha-router';
+import { RouteWithValidQuote } from '../entities';
+import { CandidatePoolsBySelectionCriteria, V4CandidatePools } from '../functions/get-candidate-pools';
+import { IGasModel } from '../gas-models';
+import { BaseQuoter } from './base-quoter';
+import { GetQuotesResult, GetRoutesResult } from './model';
+export declare class V4Quoter extends BaseQuoter<V4CandidatePools, V4Route, Currency> {
+    protected v4SubgraphProvider: IV4SubgraphProvider;
+    protected v4PoolProvider: IV4PoolProvider;
+    protected onChainQuoteProvider: IOnChainQuoteProvider;
+    constructor(v4SubgraphProvider: IV4SubgraphProvider, v4PoolProvider: IV4PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
+    protected getRoutes(tokenIn: Currency, tokenOut: Currency, v4CandidatePools: V4CandidatePools, _tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V4Route>>;
+    getQuotes(routes: V4Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<RouteWithValidQuote>): Promise<GetQuotesResult>;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v4-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v4-quoter.js
new file mode 100644
index 0000000..2c22dfd
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v4-quoter.js
@@ -0,0 +1,110 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { TradeType } from '@uniswap/sdk-core';
+import _ from 'lodash';
+import { TokenValidationResult, } from '../../../providers';
+import { log, metric, MetricLoggerUnit, routeToString, } from '../../../util';
+import { V4RouteWithValidQuote } from '../entities';
+import { computeAllV4Routes } from '../functions/compute-all-routes';
+import { BaseQuoter } from './base-quoter';
+export class V4Quoter extends BaseQuoter {
+    constructor(v4SubgraphProvider, v4PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
+        super(tokenProvider, chainId, Protocol.V4, blockedTokenListProvider, tokenValidatorProvider);
+        this.v4SubgraphProvider = v4SubgraphProvider;
+        this.v4PoolProvider = v4PoolProvider;
+        this.onChainQuoteProvider = onChainQuoteProvider;
+    }
+    async getRoutes(tokenIn, tokenOut, v4CandidatePools, _tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
+        // Fetch all the pools that we will consider routing via. There are thousands
+        // of pools, so we filter them to a set of candidate pools that we expect will
+        // result in good prices.
+        const { poolAccessor, candidatePools } = v4CandidatePools;
+        const poolsRaw = poolAccessor.getAllPools();
+        // Drop any pools that contain fee on transfer tokens (not supported by v4) or have issues with being transferred.
+        const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
+            // If there is no available validation result we assume the token is fine.
+            if (!tokenValidation) {
+                return false;
+            }
+            // Only filters out *intermediate* pools that involve tokens that we detect
+            // cant be transferred. This prevents us trying to route through tokens that may
+            // not be transferrable, but allows users to still swap those tokens if they
+            // specify.
+            //
+            if (tokenValidation == TokenValidationResult.STF &&
+                (token.equals(tokenIn) || token.equals(tokenOut))) {
+                return false;
+            }
+            return (tokenValidation == TokenValidationResult.FOT ||
+                tokenValidation == TokenValidationResult.STF);
+        });
+        // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.
+        const { maxSwapsPerPath } = routingConfig;
+        const routes = computeAllV4Routes(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        metric.putMetric('V4GetRoutesLoad', Date.now() - beforeGetRoutes, MetricLoggerUnit.Milliseconds);
+        return {
+            routes,
+            candidatePools,
+        };
+    }
+    async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {
+        const beforeGetQuotes = Date.now();
+        log.info('Starting to get V4 quotes');
+        if (gasModel === undefined) {
+            throw new Error('GasModel for V4RouteWithValidQuote is required to getQuotes');
+        }
+        if (routes.length == 0) {
+            return { routesWithValidQuotes: [], candidatePools };
+        }
+        // For all our routes, and all the fractional amounts, fetch quotes on-chain.
+        const quoteFn = tradeType == TradeType.EXACT_INPUT
+            ? this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider)
+            : this.onChainQuoteProvider.getQuotesManyExactOut.bind(this.onChainQuoteProvider);
+        const beforeQuotes = Date.now();
+        log.info(`Getting quotes for V4 for ${routes.length} routes with ${amounts.length} amounts per route.`);
+        const { routesWithQuotes } = await quoteFn(amounts, routes, routingConfig);
+        metric.putMetric('V4QuotesLoad', Date.now() - beforeQuotes, MetricLoggerUnit.Milliseconds);
+        metric.putMetric('V4QuotesFetched', _(routesWithQuotes)
+            .map(([, quotes]) => quotes.length)
+            .sum(), MetricLoggerUnit.Count);
+        const routesWithValidQuotes = [];
+        for (const routeWithQuote of routesWithQuotes) {
+            const [route, quotes] = routeWithQuote;
+            for (let i = 0; i < quotes.length; i++) {
+                const percent = percents[i];
+                const amountQuote = quotes[i];
+                const { quote, amount, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate, } = amountQuote;
+                if (!quote ||
+                    !sqrtPriceX96AfterList ||
+                    !initializedTicksCrossedList ||
+                    !gasEstimate) {
+                    log.debug({
+                        route: routeToString(route),
+                        amountQuote,
+                    }, 'Dropping a null V4 quote for route.');
+                    continue;
+                }
+                const routeWithValidQuote = new V4RouteWithValidQuote({
+                    route,
+                    rawQuote: quote,
+                    amount,
+                    percent,
+                    sqrtPriceX96AfterList,
+                    initializedTicksCrossedList,
+                    quoterGasEstimate: gasEstimate,
+                    gasModel,
+                    quoteToken,
+                    tradeType,
+                    v4PoolProvider: this.v4PoolProvider,
+                });
+                routesWithValidQuotes.push(routeWithValidQuote);
+            }
+        }
+        metric.putMetric('V4GetQuotesLoad', Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
+        return {
+            routesWithValidQuotes,
+            candidatePools,
+        };
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUN2QixPQUFPLEVBT0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUVMLEdBQUcsRUFDSCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLGFBQWEsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQXVCLHFCQUFxQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBTXJFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLFFBQVMsU0FBUSxVQUErQztJQUszRSxZQUNFLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixvQkFBMkMsRUFDM0MsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxLQUFLLENBQ0gsYUFBYSxFQUNiLE9BQU8sRUFDUCxRQUFRLENBQUMsRUFBRSxFQUNYLHdCQUF3QixFQUN4QixzQkFBc0IsQ0FDdkIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7SUFDbkQsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWlCLEVBQ2pCLFFBQWtCLEVBQ2xCLGdCQUFrQyxFQUNsQyxVQUFxQixFQUNyQixhQUFnQztRQUVoQyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbkMsNkVBQTZFO1FBQzdFLDhFQUE4RTtRQUM5RSx5QkFBeUI7UUFDekIsTUFBTSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQztRQUMxRCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFNUMsa0hBQWtIO1FBQ2xILE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLDBCQUEwQixDQUNqRCxRQUFRLEVBQ1IsQ0FDRSxLQUFlLEVBQ2YsZUFBa0QsRUFDekMsRUFBRTtZQUNYLDBFQUEwRTtZQUMxRSxJQUFJLENBQUMsZUFBZSxFQUFFO2dCQUNwQixPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsMkVBQTJFO1lBQzNFLGdGQUFnRjtZQUNoRiw0RUFBNEU7WUFDNUUsV0FBVztZQUNYLEVBQUU7WUFDRixJQUNFLGVBQWUsSUFBSSxxQkFBcUIsQ0FBQyxHQUFHO2dCQUM1QyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUNqRDtnQkFDQSxPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsT0FBTyxDQUNMLGVBQWUsSUFBSSxxQkFBcUIsQ0FBQyxHQUFHO2dCQUM1QyxlQUFlLElBQUkscUJBQXFCLENBQUMsR0FBRyxDQUM3QyxDQUFDO1FBQ0osQ0FBQyxDQUNGLENBQUM7UUFFRixrR0FBa0c7UUFDbEcsTUFBTSxFQUFFLGVBQWUsRUFBRSxHQUFHLGFBQWEsQ0FBQztRQUMxQyxNQUFNLE1BQU0sR0FBRyxrQkFBa0IsQ0FDL0IsT0FBTyxFQUNQLFFBQVEsRUFDUixLQUFLLEVBQ0wsZUFBZSxDQUNoQixDQUFDO1FBRUYsTUFBTSxDQUFDLFNBQVMsQ0FDZCxpQkFBaUIsRUFDakIsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLGVBQWUsRUFDNUIsZ0JBQWdCLENBQUMsWUFBWSxDQUM5QixDQUFDO1FBRUYsT0FBTztZQUNMLE1BQU07WUFDTixjQUFjO1NBQ2YsQ0FBQztJQUNKLENBQUM7SUFFTSxLQUFLLENBQUMsU0FBUyxDQUNwQixNQUFpQixFQUNqQixPQUF5QixFQUN6QixRQUFrQixFQUNsQixVQUFpQixFQUNqQixTQUFvQixFQUNwQixhQUFnQyxFQUNoQyxjQUFrRCxFQUNsRCxRQUF5QztRQUV6QyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbkMsR0FBRyxDQUFDLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1FBRXRDLElBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtZQUMxQixNQUFNLElBQUksS0FBSyxDQUNiLDZEQUE2RCxDQUM5RCxDQUFDO1NBQ0g7UUFFRCxJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQ3RCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxFQUFFLEVBQUUsY0FBYyxFQUFFLENBQUM7U0FDdEQ7UUFFRCw2RUFBNkU7UUFDN0UsTUFBTSxPQUFPLEdBQ1gsU0FBUyxJQUFJLFNBQVMsQ0FBQyxXQUFXO1lBQ2hDLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUNqRCxJQUFJLENBQUMsb0JBQW9CLENBQzFCO1lBQ0gsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQ2xELElBQUksQ0FBQyxvQkFBb0IsQ0FDMUIsQ0FBQztRQUVSLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNoQyxHQUFHLENBQUMsSUFBSSxDQUNOLDZCQUE2QixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsT0FBTyxDQUFDLE1BQU0scUJBQXFCLENBQzlGLENBQUM7UUFFRixNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxNQUFNLE9BQU8sQ0FDeEMsT0FBTyxFQUNQLE1BQU0sRUFDTixhQUFhLENBQ2QsQ0FBQztRQUVGLE1BQU0sQ0FBQyxTQUFTLENBQ2QsY0FBYyxFQUNkLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxZQUFZLEVBQ3pCLGdCQUFnQixDQUFDLFlBQVksQ0FDOUIsQ0FBQztRQUVGLE1BQU0sQ0FBQyxTQUFTLENBQ2QsaUJBQWlCLEVBQ2pCLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQzthQUNoQixHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7YUFDbEMsR0FBRyxFQUFFLEVBQ1IsZ0JBQWdCLENBQUMsS0FBSyxDQUN2QixDQUFDO1FBRUYsTUFBTSxxQkFBcUIsR0FBRyxFQUFFLENBQUM7UUFFakMsS0FBSyxNQUFNLGNBQWMsSUFBSSxnQkFBZ0IsRUFBRTtZQUM3QyxNQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLGNBQWMsQ0FBQztZQUV2QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDdEMsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBRSxDQUFDO2dCQUM3QixNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFFLENBQUM7Z0JBQy9CLE1BQU0sRUFDSixLQUFLLEVBQ0wsTUFBTSxFQUNOLHFCQUFxQixFQUNyQiwyQkFBMkIsRUFDM0IsV0FBVyxHQUNaLEdBQUcsV0FBVyxDQUFDO2dCQUVoQixJQUNFLENBQUMsS0FBSztvQkFDTixDQUFDLHFCQUFxQjtvQkFDdEIsQ0FBQywyQkFBMkI7b0JBQzVCLENBQUMsV0FBVyxFQUNaO29CQUNBLEdBQUcsQ0FBQyxLQUFLLENBQ1A7d0JBQ0UsS0FBSyxFQUFFLGFBQWEsQ0FBQyxLQUFLLENBQUM7d0JBQzNCLFdBQVc7cUJBQ1osRUFDRCxxQ0FBcUMsQ0FDdEMsQ0FBQztvQkFDRixTQUFTO2lCQUNWO2dCQUVELE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQztvQkFDcEQsS0FBSztvQkFDTCxRQUFRLEVBQUUsS0FBSztvQkFDZixNQUFNO29CQUNOLE9BQU87b0JBQ1AscUJBQXFCO29CQUNyQiwyQkFBMkI7b0JBQzNCLGlCQUFpQixFQUFFLFdBQVc7b0JBQzlCLFFBQVE7b0JBQ1IsVUFBVTtvQkFDVixTQUFTO29CQUNULGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztpQkFDcEMsQ0FBQyxDQUFDO2dCQUVILHFCQUFxQixDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO2FBQ2pEO1NBQ0Y7UUFFRCxNQUFNLENBQUMsU0FBUyxDQUNkLGlCQUFpQixFQUNqQixJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsZUFBZSxFQUM1QixnQkFBZ0IsQ0FBQyxZQUFZLENBQzlCLENBQUM7UUFFRixPQUFPO1lBQ0wscUJBQXFCO1lBQ3JCLGNBQWM7U0FDZixDQUFDO0lBQ0osQ0FBQztDQUNGIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
index 9b51cd7..716817c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
@@ -77,6 +77,42 @@ export declare const ADDITIONAL_BASES: (tokenProvider: ITokenProvider) => Promis
     324?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    11124?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    2741?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    543210?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    60808?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    7560?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    360?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    57073?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    17069?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    690?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    69000?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    6900?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    34443?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 /**
  * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these
@@ -155,5 +191,41 @@ export declare const CUSTOM_BASES: (tokenProvider: ITokenProvider) => Promise<{
     324?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    11124?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    2741?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    543210?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    60808?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    7560?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    360?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    57073?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    17069?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    690?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    69000?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    6900?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
+    34443?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
index f8037ab..856c9ed 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
@@ -1,6 +1,6 @@
 /* eslint-disable @typescript-eslint/no-non-null-assertion */
 import { ChainId } from '@uniswap/sdk-core';
-import { BTC_BNB, BUSD_BNB, DAI_AVAX, DAI_BNB, DAI_MAINNET, USDB_BLAST, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_MAINNET, USDC_ZKSYNC, USDCE_ZKSYNC, USDT_BNB, USDT_MAINNET, WBTC_MAINNET, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI } from '../../providers/token-provider';
+import { BTC_BNB, BUSD_BNB, DAI_AVAX, DAI_BNB, DAI_MAINNET, USDB_BLAST, USDCE_ZKSYNC, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_MAINNET, USDC_ZKSYNC, USDT_BNB, USDT_MAINNET, WBTC_MAINNET, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, } from '../../providers/token-provider';
 import { WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
 export const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
     return {
@@ -52,7 +52,29 @@ export const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
         [ChainId.ZORA_SEPOLIA]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZORA_SEPOLIA]],
         [ChainId.ROOTSTOCK]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROOTSTOCK]],
         [ChainId.BLAST]: [WRAPPED_NATIVE_CURRENCY[ChainId.BLAST], USDB_BLAST],
-        [ChainId.ZKSYNC]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC], USDCE_ZKSYNC, USDC_ZKSYNC],
+        [ChainId.ZKSYNC]: [
+            WRAPPED_NATIVE_CURRENCY[ChainId.ZKSYNC],
+            USDCE_ZKSYNC,
+            USDC_ZKSYNC,
+        ],
+        [ChainId.ABSTRACT_TESTNET]: [
+            WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_TESTNET],
+        ],
+        [ChainId.ZERO]: [WRAPPED_NATIVE_CURRENCY[ChainId.ZERO]],
+        [ChainId.BOB]: [WRAPPED_NATIVE_CURRENCY[ChainId.BOB]],
+        [ChainId.CYBER]: [WRAPPED_NATIVE_CURRENCY[ChainId.CYBER]],
+        [ChainId.SHAPE]: [WRAPPED_NATIVE_CURRENCY[ChainId.SHAPE]],
+        [ChainId.INK]: [WRAPPED_NATIVE_CURRENCY[ChainId.INK]],
+        [ChainId.REDSTONE]: [WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE]],
+        [ChainId.REDSTONE_GARNET]: [
+            WRAPPED_NATIVE_CURRENCY[ChainId.REDSTONE_GARNET],
+        ],
+        [ChainId.ABSTRACT_MAINNET]: [
+            WRAPPED_NATIVE_CURRENCY[ChainId.ABSTRACT_MAINNET],
+        ],
+        [ChainId.ANIME_TESTNET]: [WRAPPED_NATIVE_CURRENCY[ChainId.ANIME_TESTNET]],
+        [ChainId.ANIME]: [WRAPPED_NATIVE_CURRENCY[ChainId.ANIME]],
+        [ChainId.MODE]: [WRAPPED_NATIVE_CURRENCY[ChainId.MODE]],
     };
 };
 const getBasePairByAddress = async (tokenProvider, _chainId, fromAddress, toAddress) => {
@@ -90,4 +112,4 @@ export const CUSTOM_BASES = async (tokenProvider) => {
         },
     };
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUNMLE9BQU8sRUFDUCxRQUFRLEVBQ1IsUUFBUSxFQUNSLE9BQU8sRUFDUCxXQUFXLEVBRVgsVUFBVSxFQUNWLFNBQVMsRUFDVCxTQUFTLEVBQ1QsUUFBUSxFQUNSLFlBQVksRUFDWixXQUFXLEVBQUUsWUFBWSxFQUN6QixRQUFRLEVBQ1IsWUFBWSxFQUNaLFlBQVksRUFDWixjQUFjLEVBQ2QscUJBQXFCLEVBQ3RCLE1BQU0sZ0NBQWdDLENBQUM7QUFDeEMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFNNUQsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQUcsQ0FDM0MsY0FBOEIsRUFDZCxFQUFFO0lBQ2xCLE9BQU87UUFDTCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNqQix1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFO1lBQ3pDLFdBQVc7WUFDWCxZQUFZO1lBQ1osWUFBWTtZQUNaLFlBQVk7U0FDYjtRQUNELENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBRSxDQUFDO1FBQzVELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQzlELENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBRSxDQUFDO1FBQ2hFLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQ3pCLHVC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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUNMLE9BQU8sRUFDUCxRQUFRLEVBQ1IsUUFBUSxFQUNSLE9BQU8sRUFDUCxXQUFXLEVBRVgsVUFBVSxFQUNWLFlBQVksRUFDWixTQUFTLEVBQ1QsU0FBUyxFQUNULFFBQVEsRUFDUixZQUFZLEVBQ1osV0FBVyxFQUNYLFFBQVEsRUFDUixZQUFZLEVBQ1osWUFBWSxFQUNaLGNBQWMsRUFDZCxxQkFBcUIsR0FDdEIsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQU01RCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2pCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUU7WUFDekMsV0FBVztZQUNYLFlBQVk7WUFDWixZQUFZO1lBQ1osWUFBWTtTQUNiO1FBQ0QsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFFLENBQUM7UUFDNUQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDOUQsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDekIsdUJB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/legacy-router.js b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/legacy-router.js
index 688a29e..f35f857 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/legacy-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/legacy-router.js
@@ -229,6 +229,7 @@ export class LegacyRouter {
             const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);
             const routeCurrency = new Route(route.pools, amountCurrency.currency, quoteCurrency.currency);
             return new Trade({
+                v4Routes: [],
                 v3Routes: [
                     {
                         routev3: routeCurrency,
@@ -245,6 +246,7 @@ export class LegacyRouter {
             const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);
             const routeCurrency = new Route(route.pools, quoteCurrency.currency, amountCurrency.currency);
             return new Trade({
+                v4Routes: [],
                 v3Routes: [
                     {
                         routev3: routeCurrency,
@@ -287,4 +289,4 @@ export class LegacyRouter {
         return methodParameters;
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVnYWN5LXJvdXRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2xlZ2FjeS1yb3V0ZXIvbGVnYWN5LXJvdXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEQsT0FBTyxFQUE0QixTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsU0FBUyxFQUEwQixLQUFLLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzRSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFJdkIsT0FBTyxFQUNMLFdBQVcsRUFFWCxZQUFZLEdBQ2IsTUFBTSxnQ0FBZ0MsQ0FBQztBQUV4QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDeEQsT0FBTyxFQUFzQyxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFeEUsT0FBTyxFQUNMLGdCQUFnQixFQUNoQiw2QkFBNkIsRUFDN0IsWUFBWSxHQUNiLE1BQU0sU0FBUyxDQUFDO0FBVWpCLDJCQUEyQjtBQUMzQixNQUFNLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFNbkI7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxZQUFZO0lBT3ZCLFlBQVksRUFDVixPQUFPLEVBQ1Asa0JB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts
index 5d272ce..ec51eae 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts
@@ -1,12 +1,16 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { CondensedAddLiquidityOptions, MixedRouteSDK, Protocol, Trade } from '@uniswap/router-sdk';
 import { Currency, Fraction, Percent, Token, TradeType } from '@uniswap/sdk-core';
-import { SwapOptions as UniversalRouterSwapOptions } from '@uniswap/universal-router-sdk';
+import { SwapOptions as UniversalRouterSwapOptions, UniversalRouterVersion } from '@uniswap/universal-router-sdk';
 import { Route as V2RouteRaw } from '@uniswap/v2-sdk';
 import { MethodParameters as SDKMethodParameters, Pool, Position, Route as V3RouteRaw } from '@uniswap/v3-sdk';
+import { Route as V4RouteRaw } from '@uniswap/v4-sdk';
 import { SimulationStatus } from '../providers';
 import { CurrencyAmount } from '../util/amounts';
 import { RouteWithValidQuote } from './alpha-router';
+export declare class V4Route extends V4RouteRaw<Currency, Currency> {
+    protocol: Protocol.V4;
+}
 export declare class V3Route extends V3RouteRaw<Token, Token> {
     protocol: Protocol.V3;
 }
@@ -16,6 +20,7 @@ export declare class V2Route extends V2RouteRaw<Token, Token> {
 export declare class MixedRoute extends MixedRouteSDK<Token, Token> {
     protocol: Protocol.MIXED;
 }
+export declare type SupportedRoutes = V4Route | V3Route | V2Route | MixedRoute;
 export declare type SwapRoute = {
     /**
      * The quote for the swap.
@@ -119,6 +124,7 @@ export declare enum SwapType {
 }
 export declare type SwapOptionsUniversalRouter = UniversalRouterSwapOptions & {
     type: SwapType.UNIVERSAL_ROUTER;
+    version: UniversalRouterVersion;
     simulate?: {
         fromAddress: string;
     };
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/router.js b/node_modules/@uniswap/smart-order-router/build/module/routers/router.js
index bdcc328..0b4fb4a 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/router.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/router.js
@@ -1,6 +1,13 @@
 import { MixedRouteSDK, Protocol, } from '@uniswap/router-sdk';
 import { Route as V2RouteRaw } from '@uniswap/v2-sdk';
 import { Route as V3RouteRaw, } from '@uniswap/v3-sdk';
+import { Route as V4RouteRaw } from '@uniswap/v4-sdk';
+export class V4Route extends V4RouteRaw {
+    constructor() {
+        super(...arguments);
+        this.protocol = Protocol.V4;
+    }
+}
 export class V3Route extends V3RouteRaw {
     constructor() {
         super(...arguments);
@@ -41,4 +48,4 @@ export class IRouter {
 }
 export class ISwapToRatio {
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFFTCxhQUFhLEVBQ2IsUUFBUSxHQUVULE1BQU0scUJBQXFCLENBQUM7QUFTN0IsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBSUwsS0FBSyxJQUFJLFVBQVUsR0FDcEIsTUFBTSxpQkFBaUIsQ0FBQztBQU96QixNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sVUFBVyxTQUFRLGFBQTJCO0lBQTNEOztRQUNFLGFBQVEsR0FBbUIsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUM1QyxDQUFDO0NBQUE7QUFzRkQsTUFBTSxDQUFOLElBQVksaUJBSVg7QUFKRCxXQUFZLGlCQUFpQjtJQUMzQiwrREFBVyxDQUFBO0lBQ1gsNkVBQWtCLENBQUE7SUFDbEIsNkVBQWtCLENBQUE7QUFDcEIsQ0FBQyxFQUpXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFJNUI7QUFxQkQsTUFBTSxDQUFOLElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNsQiwrREFBZ0IsQ0FBQTtJQUNoQiwyREFBYyxDQUFBO0FBQ2hCLENBQUMsRUFIVyxRQUFRLEtBQVIsUUFBUSxRQUduQjtBQTBERDs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQWdCLE9BQU87Q0FvQjVCO0FBRUQsTUFBTSxPQUFnQixZQUFZO0NBU2pDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFFTCxhQUFhLEVBQ2IsUUFBUSxHQUVULE1BQU0scUJBQXFCLENBQUM7QUFZN0IsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBSUwsS0FBSyxJQUFJLFVBQVUsR0FDcEIsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QixPQUFPLEVBQUUsS0FBSyxJQUFJLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBT3RELE1BQU0sT0FBTyxPQUFRLFNBQVEsVUFBOEI7SUFBM0Q7O1FBQ0UsYUFBUSxHQUFnQixRQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FBQTtBQUNELE1BQU0sT0FBTyxPQUFRLFNBQVEsVUFBd0I7SUFBckQ7O1FBQ0UsYUFBUSxHQUFnQixRQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FBQTtBQUNELE1BQU0sT0FBTyxPQUFRLFNBQVEsVUFBd0I7SUFBckQ7O1FBQ0UsYUFBUSxHQUFnQixRQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FBQTtBQUNELE1BQU0sT0FBTyxVQUFXLFNBQVEsYUFBMkI7SUFBM0Q7O1FBQ0UsYUFBUSxHQUFtQixRQUFRLENBQUMsS0FBSyxDQUFDO0lBQzVDLENBQUM7Q0FBQTtBQXVGRCxNQUFNLENBQU4sSUFBWSxpQkFJWDtBQUpELFdBQVksaUJBQWlCO0lBQzNCLCtEQUFXLENBQUE7SUFDWCw2RUFBa0IsQ0FBQTtJQUNsQiw2RUFBa0IsQ0FBQTtBQUNwQixDQUFDLEVBSlcsaUJBQWlCLEtBQWpCLGlCQUFpQixRQUk1QjtBQXFCRCxNQUFNLENBQU4sSUFBWSxRQUdYO0FBSEQsV0FBWSxRQUFRO0lBQ2xCLCtEQUFnQixDQUFBO0lBQ2hCLDJEQUFjLENBQUE7QUFDaEIsQ0FBQyxFQUhXLFFBQVEsS0FBUixRQUFRLFFBR25CO0FBMkREOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBZ0IsT0FBTztDQW9CNUI7QUFFRCxNQUFNLE9BQWdCLFlBQVk7Q0FTakMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo b/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo
index 9e26b11..3ee0099 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo
+++ b/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo
@@ -1 +1 @@
-{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/basecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyamount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computepriceimpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computezksynccreate2address.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedinsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateandparseaddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isversionupdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getversionupgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/difftokenlists.d.ts","../../node_modules/@uniswap/token-lists/dist/minversionbump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextversion.d.ts","../../node_modules/@uniswap/token-lists/dist/versioncomparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/ierc20metadata.d.ts","../../src/types/v3/factories/ierc20metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/ticklistdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computepooladdress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encoderoutetopath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodesqrtratiox96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/issorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquiditymath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxliquidityforamounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostsignificantbit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestusabletick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/pricetickconversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtpricemath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklist.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfpermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblepositionmanager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveandcall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallextended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsextended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodemixedroutetopath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../src/providers/provider.ts","../../src/providers/multicall-provider.ts","../../src/types/v3/iuniswapv3poolstate.d.ts","../../src/types/v3/factories/iuniswapv3poolstate__factory.ts","../../src/providers/v3/pool-provider.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routercommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowancetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signaturetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/allowanceprovider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputtokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksrarev2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/nfttrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapweth.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routertradeadapter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/providers/portion-provider.ts","../../src/types/other/commons.ts","../../src/types/other/tokenfeedetector.d.ts","../../src/types/other/factories/tokenfeedetector__factory.ts","../../src/providers/token-fee-fetcher.ts","../../src/types/other/itokenvalidator.d.ts","../../src/types/other/factories/itokenvalidator__factory.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/iuniswapv2pair.d.ts","../../src/types/v2/factories/iuniswapv2pair__factory.ts","../../src/providers/token-properties-provider.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/gasdataarbitrum.d.ts","../../src/types/other/factories/gasdataarbitrum__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenkind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/erc20.d.ts","../../src/types/other/factories/erc20__factory.ts","../../node_modules/@types/brotli/compress.d.ts","../../node_modules/@types/brotli/decompress.d.ts","../../node_modules/@types/brotli/index.d.ts","../../src/util/l2feechains.ts","../../src/util/methodparameters.ts","../../node_modules/@eth-optimism/core-utils/dist/common/basic-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/bn.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/hex-strings.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/misc.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/test-utils.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/bcfg-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/network.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/alias.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/fees.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-node.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/deposit-transaction.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/encoding.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/hashing.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-provider.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/constants.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/gnosis-safe-checksum.d.ts","../../node_modules/@eth-optimism/core-utils/dist/etherscan.d.ts","../../node_modules/@eth-optimism/core-utils/dist/helpers/setupproxycontract.d.ts","../../node_modules/@eth-optimism/core-utils/dist/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/coercion.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/type-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/contracts.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/misc-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/merkle-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/chain-constants.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/message-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/cross-chain-messenger.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/types.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/bridge-adapter.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/standard-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eth-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/dai-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eco-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/index.d.ts","../../src/util/gas-factory-helpers.ts","../../src/util/onchainquoteproviderconfigs.ts","../../src/util/unsupported-tokens.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/gas-models/v3/gas-costs.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedroute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/permit2.d.ts","../../src/types/other/factories/permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/uniswapinterfacemulticall.d.ts","../../src/types/v3/factories/uniswapinterfacemulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/imixedroutequoterv1.d.ts","../../src/types/other/factories/imixedroutequoterv1__factory.ts","../../src/types/v3/iquoterv2.d.ts","../../src/types/v3/factories/iquoterv2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/swaprouter02.d.ts","../../src/types/other/factories/swaprouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/calldata.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupsemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/difflines.d.ts","../../node_modules/jest-diff/build/printdiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"7a63b6d780e36b4d0422f9f8b430c52f854a18ed825b463ff6cbc8e0cf854b8e","signature":"4edbc1f9bfe75cc47936b73c9269c530e71bef187b91ebb115fbbb9d3afddbf4"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"e4eeebdc035944893a777fcdda0ce930bceec1b43aa34aadd17548e6f2b2a875","signature":"c15b63cf8ed5a8054c6e01e1c3ba54b0709ec66100ef7452058ebc781ef2bc54"},"c4abeb1c1b4ba8ec6094e9c989b2ec4b0de6d1349f449e332047e6deb7b9d438","65447f0557a755485ec91bcb820b14f25b28328e5e94577c4f6d7e95cc6b4f91","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c","613dd72219d3f6e2c269824f615d0b76060d16d1a4a1270d99aacc5cf1a3e09e","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","dd6eead0d137363bf4202b0fef26a7b3af71d83c364d2ac4d729e4f1de7d82ed","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","8baa163aa726dc495ee1ea7350906b3fe5f16b383b7105b98414be264fcd27f3","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},{"version":"140c626152e3d86b891baf3eae657c961b2ff3804d830101e79075aa62584884","signature":"d86a8ab1ca180c45b8cdf800495119fddac19bb19e61a09a8e300239d72b29e5"},{"version":"c1d90e40a6f920aed2329c1c9275d9f50e85f6a3dcd03be4ac5891d0fe2ee1e1","signature":"56187c3645803aa0a97d3ebeff568f06ab178e2e5ea01be84cb699581ed48d63"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09",{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},"4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"0a65d587bf4683152a2116eedee39fe6d34b9d9016272ae82496c1c8f3f3f768","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","99c74fe04876989f8bcff169fdc590a5a5897566da8e065d93ab8317ec42e498","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c",{"version":"5eef5e3025335481bf4d32eb0600316139c148ccd0d6fc0f42e7815ab80784e7","signature":"c840dd973aad2be08239094d02e759248b57cea61fd593668bff8484ab0e6f97"},{"version":"1bc85e9c35d9119f5f5efeb163d60ddbb4faf3387216b45541c900ae0bee07fd","signature":"bba947eae2ea5a6db0659fecbc857ef2675c2a8fc3a5af1f0b4658694344cf88"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},"704772eae2105f6c150549c8d5d70393200ae8d6b75c647c19fa111970f341c4","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","043df52176481a96a59b11d588cb2a72e3a2ab1932b3d2569b3a4bbcb2252253","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","12080b465d8b3ef429739b2866523a780fbd6086b19d587bd79da6bd79f47f5f","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","b316d763aca9e1eaf3080c2ebb18c8d681be16b9ee3b580471d53666520ca31f","dc05b7cfbd7166a76bb33c9a494752fc2876684100208694ee334e92d124ff13","f4cae09b720d87d4e359a6ae91511d231176636572642fd058c4f973478df5ef","492d09043bf7d0ffd0a77db8af9c0a6838affaf7306dbb00680716f1ff51184c","660f165e1883a9ca46383d56853b2c74c13e4bd4922a74189ed244ffdc1c7216","bd63922a65e000d121bcd5c0ab479dd6b5c9c2f708bf192c256b58f1a3d8f664","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","f669773f31bfa4e50c75daea1bad438206801e212e1374b5719137bc59c0ba9b","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"4337b3d1670e9d1ee8adbf8c62ff178b37be3b35ae0a21d92ec743100354ac97","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"98f67f39aa3b83a2267032e7ee1fc7444a4b46537c42fc936be5bb24483741a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399",{"version":"15f710d6590c650f6bb45b6e31ebc8c7a9a2ebb812aa6960be39b04582eb8334","signature":"65767aa45d8ce74b69cf721e6ce1d85d1f6ec75c2b9ef37c62ca815c909a24c1"},{"version":"ba3d14d7be67bb7ee7ab914500866c7e73b17aab1df4837e25b2a0697167d7df","signature":"7d6d7d1188dc74ca4beb23df21197c3736dd314f49f3daf61683fa7b18ba6010"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"1e6e6bc153845a35d4e52d9bb43bca9bca15ba2a827160e1f98147de4f17d761","signature":"1bb1ee99c2c2fbe2012f522dbfac98ec7d316f977200c7b179deb665bf8b6f97"},"e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","6e50400e9113d818936f3405f09c5fd0e4d83ebb0a6503ed61d9d6eb68210ade","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","3629a217b5522339fb71a77707c035e522d2228b5eded788123bb2e50334003b","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","8dfbc3e9ea8cd2e97cb82488c32ece8f3e1cd9d71cad68532cb016acf4419e39","166e1a02dd0593790bc91604e7af2ca2785c56c94f3ebab8608ec4238c58b3f7","8bb7ca3a0c5c5a973de6924f07c89cc21a691f3cc89ec1aa2a1cccbcf57b4d4e",{"version":"de9583c77c5b94bbcb57a5f2ede3831ca9e2647d7d8e74c0c9e5392ac56791e3","signature":"b8a34d9067079c8ed0ab4563302ecabb535555ad2b1738f9409a4f76723ad9f6"},{"version":"c3899ebdb3a91dbb2d199694f3117c357eae3505070f4e9c97ccb51dcf5d9c36","signature":"7c5fb824cf61404ba8b311cef7937cc94ce14633a76b4b45617d74e9d5028fc2"},{"version":"981e436a6825ba44084ae4fd76af10825884ab6709cd0da040e8aa4d4c519359","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"595d2a064b793c37e6981dcf95946b28f5e86162b937d3acdda6b81f137841a6","signature":"0e9bf15f2464161a8d0b4f9895747e80b86d3f1bd9cf78c13b52b29369a690a6"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"16e136218aa988a68daffea6a12c918b164fa56167aaef5bc27f307020e25488",{"version":"a26de25b1305e49c7e39c0eb0ded935bce93ca0a77784a39895e7c53006578f5","signature":"ee2cdd2a6b3e6c50f61ef6ffb475904d3f799b852152c08df8f9e59ecf251529"},{"version":"d306e5b39de5faefc3da535e3df5de4d3dfc4e2988ef63b2b2a91c4db2e07079","signature":"04d9467a5682da7d3c0826f83734f4499c1d5bce90cee22db487b7849839c2e0"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"63d42906c9c08a4a6b3e15cb6ca02e76ca90d3dd71f840e0c57ee3eb451d3282","signature":"b1469774278f2d1c067ca66fe7300c3a193a0a10a8d424621b1709b57770cda9"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"1444ea2205dd827e67375eb8745ebf97692cb387229ce6e4624ec4027f502f4d","signature":"de8192145b38b5f8c5af2b124fca7db95f2f56ec4f0208922c53f451570c5d07"},{"version":"81a5c7fee13571f0bacaf6610b20a347af9863151a96a3ae26f10929487dc03a","signature":"c64d8c344271da5f8724b6f21fa214e0193152f94de3b5d6b9468ab6e5f69882"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},{"version":"ec61723ef4dd303a73b12ae07804946ae41699e222c5701d92d837506076796c","signature":"11ec6c7c05368eba9eb4e3760c03adba128339d08c65b7caae318dc0c72cd5e6"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"f497bdde3c33bbc9bf94e716185ad8470b1f930f48ee39baf650c009987dc43a","signature":"c155b5808e628ef0daf5d81fe886f5dca2ab780b807159e0ed7acfa45f05c839"},{"version":"a9b0422bcedfdc12d10da324fc76d9a8a30cec0b2fd696b7225302f7134d41d0","signature":"db9b8ef7e8564c5245b41d3074a241de10566c27a1d49a460a14d54cefabf0ec"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"a67afbd107f07baa83e5deca88e364424d25fce827c93155e61cb2dfbd591885","a6f0218395ecb8e0d736e0a19524223ab7a8a7ed217c4a99c165df2532e1beec","983ecff1acbaec6c7e91a04e1406f088102c7c171adae0cca26c87e8f0612307",{"version":"b3aed111d6a01331369d9d64f3d46f4e4435adae7299b820c45293e29f2a9388","signature":"1f8e8b1de161dc93d5c87924f6c5d00fda44e859dba5d3bc790091345b46196e"},{"version":"bf77e000e89723e1e0aea48977f9c91fa95026eb19913fa419f09a97be0063ae","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},"16c16ec2a5264d177d68156b545a26ff50a7d00c470991753e7065cd13baa066","03cb5283929e384d9d876b9b2cd1bc4a1ff6796ade2b5867604156e9129302f2","55949c9e272ced5625ab3b7b5874a5794c5d514195ff11453d068e1ea2f22515","5f8616b3b4a1010f16be1639c30d8c6c61a5a3eba036105164a994c527b6a701","6ea3b658cab3bf55af3c7e353b5c780a953f2cb8a736749fb11158e60a0c1794","4add59324adc56388ebe91c57aafce5cf3b067f1a31f1d795e36554a639ba2d5","5311886e264dccac6b3ac7aaa2f5e35629e77dc77aef7cae10d835a8d90186ac","2e9e9594288e71c811534b37cc988e7f8cf3eca92f4fb34bd86e68cd4c4933d8","68453980880200202d792d8ce79a5083e01b5fa08a759082447c849f3846fdb9","46439fd047f993161368be2cbcc7bf13bc3ef45bb428d01301c6de72c7b12eda","267e08d679da81ce5c20dac38a73d152167e385de88348ed58d52d9538180223","521cd3c937271dd1e75cb7f13e7d5f3480a37595418b7c1f404e3263f4a79b60","66401a77bd62ff01eaa3201ad423d8317b0c6f55769402b84ed6033579c109eb","4937c0359aa9c91e874015f23b4216604f24a7092569e586cc8e4c04efcd0716","16a9b10ef9cd6dcbb0f43b8442636ffd660da4d84f5cb69549648f57f0a559ba","54473b26a072224331f5b281a95038e3d70578b67245570e889b2a49f08352c7","0cbb8a9211e030850ebb1d73e25832eca7cde7983c7379b3948b9fa49d472b9d","68807be4cb528c6d4b627f8463e013f4ebdc22da168b1e10eb8074d00354e256","3ecd0e9c1431f735cc8ed99a9b7848a2b433b73ac59b73afcffd2810dc63d415","0f792811cec59875caf2ac7e9184b095d540f39c20c2edd84e6bf8f71d695445","acfe2a804d36efcb8f457408b48d42abbfa0674b24d8fab86a3fa67912093f98","b061f81fcc10894479abef624141513e103bd2a57c7a3b0db9b38b4054690e76","c182f8cc634978c2341cbbfe4fbc04d030c15b5e38e5fa96b980f5a284c6f91e","930a106ea8f6a722914dedbbc4e83eacaee2c34e6a3c7866031ecd1d62a14e2d","aa1fa0d91659fae4d7a087faa5fd35f9f671162423edf82fba8f4d4a0b7f2a69","9180758bca0f498eb0839372e325f83bfcf5e46d993e2cdacfab12a3ebb872d9","0f434ac807908fbb495560882b805ac1e211fb4161a68f4447fe46b0b96d039f","22bd9a747bd9f230d10370020f642e5a037a9c87fb0cdb3d22cd53b3627fa6d5","a64049a1707fdea015676e4550332055ca3afa7bfbfa346844e899ee4400a0ce","1d0447e26c96f2926a9dd8d0d8398dc379e27b92a4121e0873a7a694508139e2","92818ccd63a80377b44a64e84ac674f0b8a4a6a5374a120543b27332fca76952","50366a02489daf00d23940b93ec3f5ed78ba06c8c9c61c7b41aca5fb81a1200b","f0ebf6ad7ad0bd71eba896199a04dea5d9599e3902df901fa2caced40c48128e","088471eb708d6856f94a51d92ec5f0f1cbcb2a770ebb8dd7fbe1f79d4a4af89e","dc384b06f30fb396f2289ad67ec8bd433ea0e1a17af5e563a8025293c44f6a7a","7ee1923d8cdf7e6d7905368b7af2632cafa5db29d9b1346395297a22b0fcd51b","e1dc2510e103d3e31037b4271b4d07a053d3c1b2f9fb1119b1c07292c2c2debd","cae7890145aaef376eb9930ea6ddb95e130962a1bfc3808ed973f9f8a1fc23a4","c2387f2448a1270b48098adcc1e8caf33940560cc4749b3ad512312643e55618","5aedeb3b588f174e00ddb5603423bbae7e492201358da663a6e633dcf259f08a","31f1d0f6b688888afc2029af21124ce798a50ccf6c27bd77580325568c3b4f5a","2dc62672982c6fd7b34ca77cf88281d1166cac2019bcdada7779d6a36e01abe7","7678ae10aaceab8b2ff92f21cd0a9c6b77a66d539c61d99e00afab63b0c842c7","3101b15c9627b0cea36cdecaf75ee7f2f71a7698b728a6a1315af18e02592556",{"version":"90a834e0191556d9773b8f45a228906a4e19b5e6d0c7d03c97349e9c88034f67","signature":"8a7a418b1273caccdb061bd3292590fb089a2e0c9d849f7d299df138aa2d8d44"},{"version":"5be957f6c623c8fbfa3821b5cdc1fdc246007330ecf3bab0dd0b7df641d100a0","signature":"380405ad985bd673c6cbd4200b7b094e95bccf05f949ae1dd39747a654c15ac3"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},{"version":"d37f60e3b347d514fd7d3e144e1a6840d200c27d2c62e05edf52dd8848695dd1","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"40f6827017b8b42ed43592d1c87dd7908526ba38663dd66eb74e411d4a980d16","signature":"f9633083f921ed60c8dec9097b7c96eeaddc26df4d848504ac48272d7d066c6f"},{"version":"f11e3dc8fa22716afa971325ef54b8eb0c323917bccb6f4fa6840d1729611f8a","signature":"68b87309cea763355225b216bb38008e7b599b70359bd4df1a6d7fb44b4def3e"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2",{"version":"603d821fdcb3eeb5fdcde507b6f402c210325bd261b53ca548ada2e1d860fc34","signature":"a21fac6329181028cdccee4307ddfce411e09ed9f09a40cd266a19d0588c2af5"},{"version":"b78e02c31f83b7052ce76536524d72fd78c0fef365cd8a72cbd21d0c4bc748cd","signature":"901eecb7110f1b9e434fced70bae8f50a3e03cfa2d6f418cb89eb2439d8d1dc0"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"1c4e4bdf68a5cd3ad13ccaaa19534df21ec902d3f0661bf32835cf7aaa38363c","signature":"0c4a3ef40b0ee379e5737e3ee1703054d7958ab1ae74a47db1100ad8dff10e3c"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"5845464e53449f5c651703b8cfc2e88641b354a55247b2ecb2c4305558aa1098","signature":"c8b1d78ea8d1f16129f73fc8b182255921caed8ef417c15946d06b37ab93a65d"},{"version":"a0eb4014c9f4d77feeeb783f61ee969805b321bf9d00c25d19805a28c159fc03","signature":"ef3c72d0c9e84981e0a11bc2ec38df6effedab8fbf6070f4beb4f5d00c2035e2"},{"version":"c048ec2b3b4485d714aaa05da34bcb62823838f775538e13859261c4dce57b59","signature":"754d59daddea466bafa1f0d8448ea5865f7153f17adc3d939b61709e659179b3"},"c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"51bf928ce6ac57522f646223d50b4a252e4ab7204da4a3b88218ab2ad9aded9c","signature":"bd016744ae6ca47c077f30661af368da319085c4537214fd1063c45c22b75d77"},"e619dbf8f213c602b36bd6216bb6db78b6ed9b1c35886c28e48365f00f4ec382",{"version":"11b6a95d92ac65c6800bbcf58541515a298cfd945d2243e555501cd1486bd90c","signature":"025bbe9acf558c9142ee4566528ff0b4696179ff21e7e37f7851fa97849382cd"},{"version":"21381dc3d726e5cc231fa58def76f0f24e4c953abb59d2a632dc919d6af2b4eb","signature":"403af83b2e3bcb313a11dca8c5b8d1aee04c4aa2dffcc9e62cd3831c2fc93e1c"},"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d",{"version":"920e037ebb97433514badcb3aed91aff9f6c9f69d4291db16b2e900e2aec2dfb","signature":"b7ed1a0a6ca0eab9ae1833373c54ff7d87909c98f0f82854e49c0618e89f5232"},{"version":"66e5f6e85693dd98fab483bc5d6baa1b43f49e4709747bbf49092d177e87fef4","signature":"7bf40ec0b78ba5cb8d0dabd31f23bb021f74e36fd7cdd84d6c633fe309fb78d2"},{"version":"7b122b287b240fce05a1ac72a09ef47f858183ff011f36c51fc5f67bad4a7d0f","signature":"2ba4f98677a6c927e673141e9018e14ca02dfbe341f4cc6dc23c5a85d3ff3077"},"4e54793261bea91c0ca8b66d8fee5b44d68bb8f1d33a56faebd91c6543581d77",{"version":"286a53fcbca6f0a952ac70ef8b330838a03f959cb237ae904121bc10ab68fac9","signature":"a44c8f7dbbbc97c0914f47a1298809d88318dd5addfd9fb3f3096ad80a23018c"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"3659bed7572788ca0aa2118c5a742270d287e852b2029ddf50a784e9a1160997","signature":"bb9f357f778f67ad2d7988be76628deca1fce7581a057b599593912ed2a054cf"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"cffd8ea221794419244dc8e5ccc6b81c61fa8b72d7f45e7aa778adbdb208658f","signature":"641794828eabf7484d6e3591972dd657bd0bcc4b0121a3027b14d9a72782a46d"},{"version":"4de53ab5bb03a6df3f4ea1cf18607a83d6b3697c9c7e5e617b07be553138946b","signature":"38594fe8776daa1c6d8eda3148982fca4724fb9107b569ecc1e27d993fb4e324"},{"version":"944f97db12452e5fa492ee3e4e182c7a7ed88aa2959feb82f0b43d3437f76729","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},{"version":"e8e324d768bdbeeec83c0179002f579c77fa8df9341bb9c564cca8fde96293f7","signature":"eb0390e5fb29c8e26dd2ef43a376d769458a80ccd0a95f5cd4512b3d8ebceba3"},{"version":"43f01e42d750d463644d28e47cbc29ede3317e07cf881a5ec236b921d2281944","signature":"295e3e97b086cae6c855467c4444ebf392f18ad13b958cb0f3089a68811b4b1a"},"ea3e16f0272b2d70b81ada9fa4cc2e0d03c14f47581bfe54e9d83eee03768d9f",{"version":"cf099f553bc4f7b1a767943a5b5bb283e38a3232b86596ee1375e5e48c1db036","signature":"a963e4aa2f16d2f0f5f5ec046ed8ead51b101f179815e5fdbf909c9ca2d244f9"},"ad626d09c01e6f2cbe555662e355ae1ae6f9091d6151dd91561092c40e7002fb",{"version":"3c36d048ac4b57218aa60f89cc469bccb4a7d82c24487925400be7726ef6b0aa","signature":"623ea362e65c084a35126b8590da85679b910de9b008a6c353279bbfb5cc39b0"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"8c6832176c5ccbeda03e96135c93e1a17ad1d503cdd93434b983083bd626b6ae","signature":"8c220fff197da783e0f88214b6cd00cd73600f0312cc311f47a258f593dffd22"},{"version":"648ec9d8b9cf2a82740bcd3155297097480f70ee00c64f10aaa99bcf0395c9ef","signature":"eb902064ac24c3b91b315f9b00853426c3424061685a18f85e927fd8a3a92228"},{"version":"66ed1499444fa2c3b77d58e57bcee5b0d7b148af91afb9ec161125530afb4a0d","signature":"0a1f440173c9bfd5ecc9e3875937efb8da54a0c082afc86c4b9f41a0c87e2e1d"},{"version":"21578d48d37074b4138b6adefd415634d6474885be2f72b0cac4a09584b71e42","signature":"1d5d52e9702b651df8a219c400498592637e2012c66db3cdec1a4b6aaa872a1c"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"53583c81cf1537a2e4604e3ffeb43ec1bf24c2f20bfc06e1ef83ee20114a354a","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"ce1207514f85b3249bc181e15ca6f9557ab7f069989d1b1aee761ff5c99f9971","signature":"d5932f32d613672d16d821458915e4b4a30aef161a8c0d58ea72420de0a3a686"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"4ce0e065828a2a7cebdb6ddb382b7701ca983d8af08ed6405ea620de39e4cc57","signature":"2fb97dabdb0d19966a1873d6b41a5e99dc07f456bce6b9908a0a7c80a0979ace"},{"version":"356b189bdb90a73c34e791c04363c4704930b2bde046825d8aa93a233b105554","signature":"14e8912785520e2cdd27779002ea2fa9a79f42cde70aae682ed19ca42b6a2018"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"113bf65ad35f6e733bfbf08070af15d6ea4e24d521d9e202b2e06453d4e6897b","signature":"2ca7c79b203419a1826606167ee5b208eef29fa386bcef16d6e2b64f3509d330"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"6a3f7106815fc0110b1e5c88d5f0a7ecc20598322bbf31ec2f0303fbd1728bee","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"c8cb2807700da64268a4b96d519001c4e322026c5a55a4591dafbae9c98d5135","signature":"501a29a21faf61b3355e5cd70300b5a28b5b12de60f1caa05e56cb2d42607dff"},{"version":"743fc3db7c282521e4abce8131550ff5e380cdab8fb92cd24d4b230a9f4b3cdd","signature":"3eb10f4f746b65447b0a483da167dfc81a4974d21ea9c7f6b7c5f49b415a2cfb"},{"version":"c38684089052fb17e53e6082ea16ef58e55d2a13c4353b3df46013e9867a151e","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d829c12ae4cd7023fa5c5e4ee784c35527f6519ea39cdf8c2af8d9a41ddcf1e9","signature":"d333469f1cde151f6f317b191e3fc0e2305c72a95dfb5527ab1d9ec53959b76d"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"c6d64489e40fab6d481f4edf3049ba3cdc7c42bd3c479bc117de5b5c69939811","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"04606ad72a5599c9f9d7fba009c296d7a56b60fb7c627a05a95a2c9d47c39ead","signature":"96b65daf6681578aa161cd622806f16430dab19c5681c12db2690836b6e99163"},{"version":"e74da67164748adbe4002cd6f05ac28516d44491f49ae2722b713c4dcfb7d982","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"69b5e2602c836bcd73f59b3529abc4931f1fa9cd1806f59e0bcb9903c8972dd1","signature":"0e07f96fade13c5f4f5f73423d0b0d36d2072570d8a33ea450006897d3671df2"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},"2e2e78ab8f2e0686b89c885f0748e0971bb737a015733bf8291638a43fe7eaf7","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":99,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":5},"fileIdsList":[[92],[82,92],[349,350,351,352,353],[355],[357],[154],[356,358],[212],[354,359,368,369,370,371],[89,92,173],[360,361,362,363,364,365,366,367],[45,82,92,153],[385,386],[154,212,385,386],[386,387,388,389],[154,212,381,385],[154,157,212,372,380,385],[380,381,385,390,391],[154,212,381,382],[382,383,384],[154,212],[154,157,212,381,383],[154,212,385],[385],[154,157,212,385],[212,374,381,385],[373,374,375,376,377,378,379],[212,385],[89,127,128],[89,92],[127,129,131],[89,92,127,128,129,130],[89,92,130,151,152,153],[89,92,130,154],[89],[191],[89,90],[90,91],[185,186,187,188],[89,92,132,152,154,157],[194,195,196,197],[157],[89,157,177],[89,130,157],[89,157,180,181,182],[89,130,157,178],[150],[151,153,155,159,160],[151,153,160],[82,92,130,151,152,154,155],[151,160],[151,154,156],[92,152,154],[151,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[151,158],[82,158],[89,130,151,152,153,154,156,157],[151,153,155,158],[151,156,158],[204,205],[200,201],[89,200],[133,134,135],[89,154,157,177,178,179,183],[175,176],[174],[175],[278],[82,344,345],[45,82],[474,479],[137,139,140,141,142,143,144,145,146,147,148,149],[137,138,140,141,142,143,144,145,146,147,148,149],[138,139,140,141,142,143,144,145,146,147,148,149],[137,138,139,141,142,143,144,145,146,147,148,149],[137,138,139,140,142,143,144,145,146,147,148,149],[137,138,139,140,141,143,144,145,146,147,148,149],[137,138,139,140,141,142,144,145,146,147,148,149],[137,138,139,140,141,142,143,145,146,147,148,149],[137,138,139,140,141,142,143,144,146,147,148,149],[137,138,139,140,141,142,143,144,145,147,148,149],[137,138,139,140,141,142,143,144,145,146,148,149],[137,138,139,140,141,142,143,144,145,146,147,149],[137,138,139,140,141,142,143,144,145,146,147,148],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[92,157],[287,288,290,291],[92,172],[289],[111,132,251],[87,111],[111,251,266],[111,251,266,267],[111,251,266,267,268],[111,251,266,267,269],[255,256,257,258,267,268,269,270,271,272,273,274],[111,132],[87,111,132,251],[111,132,251,256,257,266,270,271],[111,267],[85],[87],[93,96],[93,95],[93,95,96],[87,88,93,96,97],[87,88],[97,98,99,100],[88,97],[88,96,97,98],[93,95,96,101,102,103],[94],[92,94,96],[93],[85,86,88,104,110],[104],[105,106,107,108,109],[117],[116,117,118,119,120,121,122,123],[117,119],[285],[286,303,307],[212,285,286,294,295,296,297,298,299,300,301,302],[212,285,286,303],[132,212,285,286,303],[294,295,296,297,298,299,300,302,304,306],[132,212,285,286,293,303],[111,212,275,285,286,293],[212,285,286,293],[285,305,308,309,310],[111,132,212,251,275,286,303,304],[285,292],[111,275],[261,262,263],[111],[111,261],[111,261,262],[259,260,264,265],[111,264],[217,218,219,220,221,222,223],[87,111,216,217,218],[87,111,219],[111,219],[111,217,218],[111,219,221],[216,224,243,244,245,246,247,248,249,250],[132],[111,132,220,224,225,245],[87,111,132],[111,132,224,243],[111,132,224,225],[111,132,222,225,245,247],[111,216],[111,221],[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],[87,216],[217],[87,218],[89,92,152,157,172,173,174,177,184,189,209,210],[211],[89,130,132,136,152,153,174,178,179,183,184,190,192,193,198,199,202,203,206,207,208],[337,338],[336],[334,335],[472,475],[472,475,476,477],[474],[471,478],[399],[473],[316,424,469],[30,83],[30,111,113,114],[30,111,113,124,125,126,425],[30,111,149,424,425],[431,432],[111,251,275,316],[111,149,275,316,429],[428,429,430],[111,275,430,431],[92,113,114,149,172],[92,111,172,280,284,316,317,329,393,424,437],[92,113,114,125,279],[30,84,114,115,281,284,324,328,329,340,341,425,426,427,433,434,437,438,439,440,444,445,450,451,454,456,457,458,459,460,461,462,463,464,465,466,467,468],[114,172],[92,132,280],[92,111,113,149,172,253,281,441,442,443],[111,114,434,440],[92,111,113,149,172,251,253,254,275,279,280,281,312,394,423,424,441,444,447,449],[92,111,275,316,424],[111,172,211,311,316,317,343,424,436],[114,212],[111,275,281,424,453],[48,50,111,125,172,189,211,284,311,316,317,329,343,393,424,436,437,438,455],[92,111,172,280,319,320,424],[30,92,111,280,321,324,424],[92,111,132,136,149,215,280,281,424],[30,111,149,280,281,323,424],[111,113,125,279,333,340,341],[30,111,113,149,266,280,329],[30,111,340],[92,111,113,149,266,279,280,281,324,327,328,423,424],[92,111,113,254,266,280,312,423],[111,113,149,252,266,340,425],[111,280,340,424],[111,113,126,149,279,280,333,339],[340,457],[30,111,113,149,251,280,284,424],[30,111,341],[92,111,172,280,331,424],[92,111,113,149,251,253,279,280,281,283,423],[87,111,113,149,251,252,254,280,284,341,425],[111,280,341,424],[111,149,279,280,333,339,340,424],[341,457],[83,87,92,111,113,114,124,126,149,172,251,252,254,275,277,279,284,312,317,321,324,329,332,341,343,348,393,394,395,396,397,398,402,403,405,406,407,408,409,420,424,425,426,469],[111,421],[398],[92,111,149,251,254,275,284,312,329,397,423],[87,92,111,113,126,149,254,275,312,317,398,400,401,404,421,423,424],[111,254],[111,113,251,266,312,423],[111,113,126,149,251,254,275,284,329,341,421,424,425,469],[92,111,251,254,266,280,329,332,398,424,425],[397,403],[87,92,111,149,251,254,266,275,393,397,398,402,408,424,470],[92,111,149,172,254,266,280,329,393,397,398,424],[92,111,312,469],[92,111,113,149,172,251,254,393,397,398,402,470],[404,410,420,421],[92,111,149,251,266,275,312,398,404,407,413,421,424,469],[414,416,417,418,419],[111,149,275,312,404,407,410,414,415,416,421,424,469],[413],[407,410],[312,407],[411,412],[92,111,149,275,312,332,402,404,407,410,411,412,414,415,421,424,469],[111,149,275,312,404,407,410,411,412,414,415,421,424,469],[126,312,315,422],[111,252,425],[314],[92,111,113,149,174,251,254,275,281,284,312,313,422,423,424,425,469],[92,111,251,254,266,275,311,422,469],[132,212],[89,132,172,212,318],[172,212,342],[172,212,330],[172,212,446],[172,212,322],[172,212,435],[172,212,452],[172,212,319],[172,212,326],[89,132,172,212,325],[172,212,214],[172,212,448],[172,212,282],[172,212,442],[89,132,172,212,213],[111,251,252],[87,111,208,251],[87,92,111,149,172,251,266,275,284,316,317,332,346,347,348,392,424,469],[113,126,252,253,254,276,423],[112],[111,149,251,266,275,311,470],[112,113],[111,469],[275],[111,149,251,253,266,275,312,422,424],[30,111,114],[30,111,124,425],[30,111,425],[111,275,316],[111,275,316,429],[92,114,172],[111,172,280,284,316,317,329,437],[114],[92,111,172,281],[92,111,172,254,279,280,281,312,444],[111,316,424],[111,172,316,317,424],[111,275,281],[111,172,284,316,317,329,437,438],[92,111,172,280],[30,111,280,321,324],[111,280,281],[30,111,280,281],[111,340,341],[30,111,266,280,329],[111,266,279,280,281,328],[92,254,280,312],[111,340],[111,280,340],[111,280],[30,111,251,280,284],[111,251,279,280,281],[111,280,284,341],[111,280,341],[111,114,172,251,254,275,284,312,317,324,329,332,341,397,420,425,426,469],[92,111,254,275,284,312,329,397],[92,111,254,312,317,398,404,421],[111,251,266,312],[111,275,284,329,341,421,425,469],[92,111,251,254,266,280,329,332,398],[397,398],[92,172,397,398],[92,111,312],[172,397,398],[92,111,251,266,275,312,398,404,407,413,421,424,469],[111,312,404,407,410,414,416,421,424,469],[92,111,312,332,404,407,410,411,412,414,421,424,469],[111,312,404,407,410,411,412,414,421,424,469],[111,425],[111,254,281,284,312,425,469],[111,251],[92,111,172,251,266,284,316,317,332,424,469],[111,275,470],[111,279,469],[251,266,312,422]],"referencedMap":[[350,1],[351,2],[354,3],[353,1],[356,4],[358,5],[357,6],[359,7],[371,8],[372,9],[367,8],[363,10],[364,1],[361,2],[365,1],[368,11],[366,12],[388,13],[389,13],[387,14],[390,15],[386,16],[381,17],[392,18],[383,19],[385,20],[384,21],[382,22],[391,23],[378,24],[373,25],[375,26],[380,27],[377,8],[379,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[279,68],[346,69],[112,70],[480,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[287,118],[291,1],[292,119],[289,120],[290,121],[288,118],[256,122],[255,123],[267,124],[271,125],[269,126],[270,127],[275,128],[257,129],[258,130],[272,131],[273,132],[274,125],[86,133],[88,134],[94,135],[96,136],[102,137],[98,138],[97,139],[101,140],[99,141],[100,142],[104,143],[95,144],[93,145],[103,146],[111,147],[105,148],[106,35],[110,149],[108,134],[120,150],[119,150],[124,151],[118,150],[121,152],[122,152],[123,150],[286,153],[308,154],[303,155],[299,156],[301,157],[295,157],[307,158],[302,157],[297,157],[296,157],[294,159],[298,157],[304,160],[306,161],[300,157],[311,162],[305,163],[310,8],[293,164],[309,165],[259,123],[264,166],[261,167],[262,168],[263,169],[266,170],[265,171],[216,167],[224,172],[219,173],[220,174],[221,175],[217,123],[218,167],[223,176],[222,177],[251,178],[244,179],[246,180],[247,181],[248,182],[245,129],[249,183],[250,184],[225,167],[226,185],[227,186],[228,123],[229,134],[243,187],[231,134],[232,123],[233,134],[235,134],[236,167],[237,134],[239,188],[240,134],[241,189],[242,134],[238,190],[211,191],[212,192],[209,193],[339,194],[337,195],[336,196],[476,197],[478,198],[477,197],[475,199],[479,200],[400,201],[83,70],[474,202],[470,203],[84,204],[115,205],[426,206],[427,207],[433,208],[429,209],[430,210],[431,211],[432,212],[434,213],[438,214],[439,215],[114,1],[469,216],[440,217],[281,218],[444,219],[445,220],[450,221],[317,222],[437,223],[451,224],[454,225],[456,226],[321,227],[328,228],[425,229],[324,230],[457,231],[458,232],[459,233],[329,234],[460,235],[461,236],[462,237],[340,238],[463,239],[464,240],[465,241],[332,242],[284,243],[466,244],[467,245],[341,246],[468,247],[421,248],[396,249],[410,250],[398,251],[405,252],[406,253],[415,254],[407,255],[397,256],[404,257],[409,258],[408,259],[402,260],[403,261],[422,262],[414,263],[420,264],[417,265],[416,266],[411,267],[412,268],[413,269],[418,270],[419,271],[316,272],[313,273],[315,274],[314,275],[312,276],[318,277],[342,278],[343,279],[331,280],[447,281],[323,282],[436,283],[453,284],[320,285],[330,278],[446,278],[322,278],[435,278],[452,278],[319,278],[325,277],[327,286],[326,287],[213,277],[215,288],[449,289],[283,290],[443,291],[214,292],[448,292],[282,292],[442,292],[253,293],[254,294],[252,167],[393,295],[424,296],[347,167],[113,297],[348,298],[126,299],[394,300],[276,301],[423,302]],"exportedModulesMap":[[350,1],[351,2],[354,3],[353,1],[356,4],[358,5],[357,6],[359,7],[371,8],[372,9],[367,8],[363,10],[364,1],[361,2],[365,1],[368,11],[366,12],[388,13],[389,13],[387,14],[390,15],[386,16],[381,17],[392,18],[383,19],[385,20],[384,21],[382,22],[391,23],[378,24],[373,25],[375,26],[380,27],[377,8],[379,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[279,68],[346,69],[112,70],[480,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[287,118],[291,1],[292,119],[289,120],[290,121],[288,118],[256,122],[255,123],[267,124],[271,125],[269,126],[270,127],[275,128],[257,129],[258,130],[272,131],[273,132],[274,125],[86,133],[88,134],[94,135],[96,136],[102,137],[98,138],[97,139],[101,140],[99,141],[100,142],[104,143],[95,144],[93,145],[103,146],[111,147],[105,148],[106,35],[110,149],[108,134],[120,150],[119,150],[124,151],[118,150],[121,152],[122,152],[123,150],[286,153],[308,154],[303,155],[299,156],[301,157],[295,157],[307,158],[302,157],[297,157],[296,157],[294,159],[298,157],[304,160],[306,161],[300,157],[311,162],[305,163],[310,8],[293,164],[309,165],[259,123],[264,166],[261,167],[262,168],[263,169],[266,170],[265,171],[216,167],[224,172],[219,173],[220,174],[221,175],[217,123],[218,167],[223,176],[222,177],[251,178],[244,179],[246,180],[247,181],[248,182],[245,129],[249,183],[250,184],[225,167],[226,185],[227,186],[228,123],[229,134],[243,187],[231,134],[232,123],[233,134],[235,134],[236,167],[237,134],[239,188],[240,134],[241,189],[242,134],[238,190],[211,191],[212,192],[209,193],[339,194],[337,195],[336,196],[476,197],[478,198],[477,197],[475,199],[479,200],[400,201],[83,70],[474,202],[470,203],[84,204],[115,303],[426,304],[427,305],[433,208],[429,306],[430,307],[431,211],[432,212],[434,308],[438,309],[439,310],[114,1],[469,216],[440,217],[281,218],[444,311],[445,220],[450,312],[317,313],[437,314],[451,224],[454,315],[456,316],[321,317],[328,318],[425,319],[324,320],[457,321],[458,322],[459,233],[329,323],[460,324],[461,325],[462,326],[340,327],[463,239],[464,328],[465,241],[332,317],[284,329],[466,330],[467,331],[341,326],[468,247],[421,332],[396,249],[410,250],[398,333],[405,334],[406,253],[415,335],[407,336],[397,337],[404,257],[409,338],[408,339],[402,340],[403,341],[422,262],[414,342],[420,264],[417,343],[416,266],[411,267],[412,268],[413,269],[418,344],[419,345],[316,272],[313,346],[315,274],[314,347],[312,276],[318,277],[342,278],[343,279],[331,280],[447,281],[323,282],[436,283],[453,284],[320,285],[330,278],[446,278],[322,278],[435,278],[452,278],[319,278],[325,277],[327,286],[326,287],[213,277],[215,288],[449,289],[283,290],[443,291],[214,292],[448,292],[282,292],[442,292],[253,167],[254,348],[252,167],[393,349],[424,296],[347,167],[113,297],[348,350],[394,351],[276,301],[423,352]],"semanticDiagnosticsPerFile":[349,350,351,354,352,353,370,355,356,358,357,359,369,371,372,360,367,363,364,361,365,368,362,366,388,389,387,390,386,381,392,383,385,384,382,391,378,373,375,380,377,379,376,374,129,128,127,132,131,154,157,190,191,192,193,90,91,92,89,185,186,187,189,188,173,194,198,196,195,197,178,180,183,181,182,199,174,151,150,130,161,162,156,163,164,165,155,172,167,166,168,158,169,170,160,171,159,206,204,205,207,202,201,200,179,203,133,134,136,135,152,208,184,153,177,175,176,279,333,344,345,346,112,480,138,139,137,140,141,142,143,144,145,146,147,148,149,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,278,441,277,287,291,292,289,290,288,256,255,267,271,268,269,270,275,257,258,272,273,274,86,85,88,94,96,102,98,97,101,99,100,104,95,93,103,111,105,106,110,107,108,109,120,119,124,118,121,122,116,117,123,286,308,303,299,301,295,307,302,297,296,294,298,304,306,300,311,305,310,293,285,309,259,264,261,262,263,260,266,265,216,224,219,220,221,217,218,223,222,251,244,246,247,248,245,249,250,225,226,227,228,229,243,230,231,232,233,234,235,236,237,239,240,241,242,238,125,471,210,211,212,209,339,337,338,336,334,335,472,476,478,477,475,479,87,400,401,399,83,474,473,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,470,84,30,115,426,427,433,428,429,430,431,432,434,438,439,114,469,440,281,444,445,450,317,280,437,451,454,456,321,328,425,324,457,458,459,329,460,461,462,340,463,464,465,332,284,466,467,341,468,421,396,410,398,405,406,415,407,397,404,409,408,402,403,422,414,420,417,416,411,412,413,418,419,316,313,315,314,312,318,342,343,331,447,323,436,453,320,330,446,322,435,452,319,325,327,326,213,215,449,283,443,214,448,282,442,253,254,455,252,393,424,347,113,348,126,394,276,423,395]},"version":"4.7.2"}
\ No newline at end of file
+{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computeZksyncCreate2Address.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isVersionUpdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getVersionUpgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/diffTokenLists.d.ts","../../node_modules/@uniswap/token-lists/dist/minVersionBump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextVersion.d.ts","../../node_modules/@uniswap/token-lists/dist/versionComparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/IERC20Metadata.d.ts","../../src/types/v3/factories/IERC20Metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveAndCall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallExtended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsExtended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/v4-sdk/node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v4-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v4-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/TPool.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodeMixedRouteToPath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/computeZksyncCreate2Address.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/v3swap.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routerCommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/Command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowanceTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signatureTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/AllowanceProvider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputTokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksRareV2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/NFTTrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapWETH.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routerTradeAdapter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/providers/provider.ts","../../src/providers/multicall-provider.ts","../../src/types/v3/IUniswapV3PoolState.d.ts","../../src/types/v3/factories/IUniswapV3PoolState__factory.ts","../../src/providers/pool-provider.ts","../../src/providers/v3/pool-provider.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/providers/portion-provider.ts","../../src/types/other/commons.ts","../../src/types/other/TokenFeeDetector.d.ts","../../src/types/other/factories/TokenFeeDetector__factory.ts","../../src/providers/token-fee-fetcher.ts","../../src/types/other/ITokenValidator.d.ts","../../src/types/other/factories/ITokenValidator__factory.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/IUniswapV2Pair.d.ts","../../src/types/v2/factories/IUniswapV2Pair__factory.ts","../../src/providers/token-properties-provider.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/GasDataArbitrum.d.ts","../../src/types/other/factories/GasDataArbitrum__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenKind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/providers/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/Erc20.d.ts","../../src/types/other/factories/Erc20__factory.ts","../../node_modules/@types/brotli/compress.d.ts","../../node_modules/@types/brotli/decompress.d.ts","../../node_modules/@types/brotli/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/basic-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/bn.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/hex-strings.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/misc.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/test-utils.d.ts","../../node_modules/@eth-optimism/core-utils/dist/common/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/bcfg-types.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/bcfg/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/network.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/ethers/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/external/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/alias.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/fees.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-node.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/deposit-transaction.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/encoding.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/hashing.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/op-provider.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/constants.d.ts","../../node_modules/@eth-optimism/core-utils/dist/optimism/index.d.ts","../../node_modules/@eth-optimism/core-utils/dist/gnosis-safe-checksum.d.ts","../../node_modules/@eth-optimism/core-utils/dist/etherscan.d.ts","../../node_modules/@eth-optimism/core-utils/dist/helpers/setupProxyContract.d.ts","../../node_modules/@eth-optimism/core-utils/dist/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/coercion.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/type-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/contracts.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/misc-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/merkle-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/chain-constants.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/message-utils.d.ts","../../node_modules/@eth-optimism/sdk/dist/utils/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/cross-chain-messenger.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/types.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/bridge-adapter.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/interfaces/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/standard-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eth-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/dai-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/eco-bridge.d.ts","../../node_modules/@eth-optimism/sdk/dist/adapters/index.d.ts","../../node_modules/@eth-optimism/sdk/dist/l2-provider.d.ts","../../node_modules/@eth-optimism/sdk/dist/index.d.ts","../../src/util/l2FeeChains.ts","../../src/util/methodParameters.ts","../../src/util/gas-factory-helpers.ts","../../src/util/onchainQuoteProviderConfigs.ts","../../src/util/unsupported-tokens.ts","../../src/types/other/StateView.d.ts","../../src/types/other/factories/StateView__factory.ts","../../src/providers/v4/pool-provider.ts","../../src/providers/v4/caching-pool-provider.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/gas-models/gas-costs.ts","../../src/routers/alpha-router/gas-models/tick-based-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/v4/v4-heuristic-gas-model.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/quoters/v4-quoter.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/Permit2.d.ts","../../src/types/other/factories/Permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/UniswapInterfaceMulticall.d.ts","../../src/types/v3/factories/UniswapInterfaceMulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/IMixedRouteQuoterV1.d.ts","../../src/types/other/factories/IMixedRouteQuoterV1__factory.ts","../../src/types/other/MixedRouteQuoterV2.d.ts","../../src/types/other/factories/MixedRouteQuoterV2__factory.ts","../../src/types/other/V4Quoter.d.ts","../../src/types/other/factories/V4Quoter__factory.ts","../../src/types/v3/IQuoterV2.d.ts","../../src/types/v3/factories/IQuoterV2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/SwapRouter02.d.ts","../../src/types/other/factories/SwapRouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/callData.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/caching-subgraph-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/subgraph-provider-with-fallback.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/v4/subgraph-provider.ts","../../src/providers/v4/caching-subgraph-provider.ts","../../src/providers/v4/static-subgraph-provider.ts","../../src/providers/v4/subgraph-provider-with-fallback.ts","../../src/providers/v4/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupSemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/diffLines.d.ts","../../node_modules/jest-diff/build/printDiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"7a63b6d780e36b4d0422f9f8b430c52f854a18ed825b463ff6cbc8e0cf854b8e","signature":"4edbc1f9bfe75cc47936b73c9269c530e71bef187b91ebb115fbbb9d3afddbf4"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"e4eeebdc035944893a777fcdda0ce930bceec1b43aa34aadd17548e6f2b2a875","signature":"c15b63cf8ed5a8054c6e01e1c3ba54b0709ec66100ef7452058ebc781ef2bc54"},"58a6bfcfa719f77a01c3b16611673baea9237bf8b0cb9b353aebc807b6a23c1c","5cef2a889dbc60bb4a3d29acd3e4ad9773dcff28bf5c1b24466b91f649b90c47","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c","613dd72219d3f6e2c269824f615d0b76060d16d1a4a1270d99aacc5cf1a3e09e","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","dd6eead0d137363bf4202b0fef26a7b3af71d83c364d2ac4d729e4f1de7d82ed","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","8baa163aa726dc495ee1ea7350906b3fe5f16b383b7105b98414be264fcd27f3","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},{"version":"140c626152e3d86b891baf3eae657c961b2ff3804d830101e79075aa62584884","signature":"d86a8ab1ca180c45b8cdf800495119fddac19bb19e61a09a8e300239d72b29e5"},{"version":"c1d90e40a6f920aed2329c1c9275d9f50e85f6a3dcd03be4ac5891d0fe2ee1e1","signature":"56187c3645803aa0a97d3ebeff568f06ab178e2e5ea01be84cb699581ed48d63"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09",{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},"4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"0a65d587bf4683152a2116eedee39fe6d34b9d9016272ae82496c1c8f3f3f768","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","99c74fe04876989f8bcff169fdc590a5a5897566da8e065d93ab8317ec42e498","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c","34ed0ae35b52ea51b1b356da5f4b217afafe4541666c5511356a8057f054023d","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","d87f2e0f767dcd1d95e4c173ccc097fb0f897b0ed73ea1a70846c42e8255256f","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","4cdab4d8d7a48c49952f69b4e1d86c1f85db0e3adfdc6ef5228bfc8558b01118","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","b316d763aca9e1eaf3080c2ebb18c8d681be16b9ee3b580471d53666520ca31f","d383fec7cf5d98b5f42c3b20303193adb63d57fb6b3047803e3c0ed2f93cb6da","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","c4df09299b77752dcc9b7a77e9604ad1892c540f501f608921b423b20d225572","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c","8c6c0b3fc8f51d8bd737ad6bf7086586a202c5a9988f66265d04402767df9369","8bc5554a7869b50493c324fef889a61ff0ba7cd10ec950075a52dcc18fb7849d","0e153822bf41388b5a924c8a7b21b46f0b6ce882329c40dbf049e2e4875157ca","c3718521a8c88939ecb336c34bc92e16ad39e63bccbd412e842c4c61d476eab4","730068a98f89d2edeaaa07aff57d5873b55585892e960d77d241c54c72d9c329","4f24f4ac83793c2b9704f1d58c17799e20e514ec6db6b46976f3a6518b2da248","df9d413269cac295ff10771a1d71addc0dba32d4d14280b300dcf968404c2baa","654fcd6988b7ff75de78245a6b35a7f4ffcdb15fa063d2fe4959f4deb06751ef","2d02940d19b21d63957dec97096249d205cff79c9b1fbb8ce20a3145f3f42931","c0cd099c6ce291110860778a2a2f11eb7c9f57df8bdfd023c385f67e7af39fbc","c3bdfbbf2c9eb4fabe727e65f779a6b06efc87eb4e691665e1f1a032aa661da3","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","b31f212ecdc22849c9d53fea5d20432308e217fea1a59c4cc66440bf3fa6686f","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"fab85e7cad4672932765da19ae610a433ce950942ccbc192308952db7f26d747","signature":"012383004b233e5ef8818ec283badad7030f78a0afd025a589db98d652f9f582"},{"version":"3e95f0d58ae00f825dc7b7cc947c69168d688751329074ae6df3b1659c3aae00","signature":"24276bdc4357a138d038c7f175d040a6e3e73c8ea7c8bd4c179f0e16833dac70"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},{"version":"9d4995f0136f280936ca534563ff2b7a92e39950e88cb0aa8c06470554c20b6e","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"98f67f39aa3b83a2267032e7ee1fc7444a4b46537c42fc936be5bb24483741a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399","014f572185552227aeff1f109895e16455ba58d24655062779c52ef83b080321","1284e8f2f903115f04f27f98495a97eff13ff9fe1f5199dec944a2853a408826","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","613dd72219d3f6e2c269824f615d0b76060d16d1a4a1270d99aacc5cf1a3e09e","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","dd6eead0d137363bf4202b0fef26a7b3af71d83c364d2ac4d729e4f1de7d82ed","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","8baa163aa726dc495ee1ea7350906b3fe5f16b383b7105b98414be264fcd27f3","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","19fe3a7b4a0d4615da14ba3725e96225aa32df9c29f3e6e3699b5e56dd31bf53","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","c8bd20b2e8de6e74d1e082aa8490f954679e46c0d3e44b5a6000d73dcab9a260","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","99c74fe04876989f8bcff169fdc590a5a5897566da8e065d93ab8317ec42e498","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","7b476ceb77fef7669e3734331831da78ed046e1747035f8eab3483812adf96fa","a4eb0fabe92820aa672185ea72a9e4c929303064cacc9f1ab5cfe86007f3b5f2","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","d4023568d22ae0e3c4b0726167073d21bded57f5bee879e64da8e6682f6ca9f1","6cc166c623ca0b34cefa01f500c7f4803414dd95d4304a1efa320be36f62374a","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6d17d40ccd9c166fbb72872dc4263a25d6f3066fb74e51592a8f80bdd6d22598","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c","e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","6e50400e9113d818936f3405f09c5fd0e4d83ebb0a6503ed61d9d6eb68210ade","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","3629a217b5522339fb71a77707c035e522d2228b5eded788123bb2e50334003b","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","8dfbc3e9ea8cd2e97cb82488c32ece8f3e1cd9d71cad68532cb016acf4419e39","20bb9c1e6cd702539d4ac314e841fc8e8833ddf0835e29859880eb181b3bfa0c","175217632b8b7902b16bb6126c0297374c96e79cba4e092fe6efc7bb423c69a6",{"version":"e8a03648275dfe028c99c737702eac60c59de9c5adb7a6fe6b50a4a14b0d6b19","signature":"3cb64a1407f0e7568c78ffc4e8bc6a40ba5d584ea0f1da46c1e250c4d632b146"},{"version":"ba3d14d7be67bb7ee7ab914500866c7e73b17aab1df4837e25b2a0697167d7df","signature":"7d6d7d1188dc74ca4beb23df21197c3736dd314f49f3daf61683fa7b18ba6010"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"68c6bbf29cb92adaa7876b12ecb9eee93c08e0694e1542973fe39163178f0c1d","signature":"e9e4fe568697d99368d872145d9270d4d58de2e941105d65769ef2f7108aa1ee"},{"version":"4e86abfe8e11adbe983ec2da37b58e7adbda91160121d16a94f62d3f5cafa2ca","signature":"200db6846dd1ec473f39bbf8cdf4e3d934a457a0bb2e503fefb4826677c5f515"},{"version":"353e8186841bbf5a12373241673a8cbe38b282cec7d31abd0c67b9d7c5725722","signature":"a6af66291c3b4226f580a7f9146af17d707df78f880cc8d780a689bf1b9ea0c6"},{"version":"c3b0a28038d792f6122b0bee08b37c51ac49a1c597fbd814524e60c58253cd18","signature":"0647641b70a8363c8f18110fcaa047dbb6f9ccb435cd432f59db29f47864d754"},{"version":"d42d2a234a4088956a1e157db95b731f76b817595ee263d54c48364c6344481b","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"cbdf07fb4bf6ccd1be747a7c9112e3357b2808d8fa91eaeabe0bc90ffb661894","signature":"db36527d526589fee847c741c6faf272a8cb0e7e74d850c44f4505ab520ab4e8"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a0b12d0ba8965a06dd1f195b69b05bd16551ea57e3391c19babf9e0e11ffc967",{"version":"659fb6214a0400baaa94cd7cba587f9d95d0b5de5a4caef6a9a05015bdacfdb8","signature":"7ee8554ac879d07ef153445a2be2bfb0ecbfa25cbf5b27fa4d52689d85e9c587"},{"version":"6ee90d299b37a8690736dac27f19a5324c35ce8006a42f2fe715416fbb8a8ddb","signature":"f1ea830bd6a694d717563834c84f61bac6b9b9a2aa039f8ceee0c113e46cad25"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"63d42906c9c08a4a6b3e15cb6ca02e76ca90d3dd71f840e0c57ee3eb451d3282","signature":"b1469774278f2d1c067ca66fe7300c3a193a0a10a8d424621b1709b57770cda9"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"423c5d9c9b1f70fffb831cd5b432a76063a7363c93bb2a224c6989e18397c8cc","signature":"fe02341f5602d1ffa788f1cd51d90ec197de8fc3092da9e6d0dcddc548addaf1"},{"version":"81a5c7fee13571f0bacaf6610b20a347af9863151a96a3ae26f10929487dc03a","signature":"c64d8c344271da5f8724b6f21fa214e0193152f94de3b5d6b9468ab6e5f69882"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},{"version":"ec61723ef4dd303a73b12ae07804946ae41699e222c5701d92d837506076796c","signature":"11ec6c7c05368eba9eb4e3760c03adba128339d08c65b7caae318dc0c72cd5e6"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"bdc9a62936281daa7e1ca7cc02e5cdb1fc8dd647f24f496b63835e1411a25afb","signature":"f0afae11b983d968a3a7e4597e6f4a0ed0234f779c0ed448231ede2687fdce19"},{"version":"19d29c69e48d5912093514fea5b459b10e11237c04f63dfc5ef15c2e71627faf","signature":"832c9fa8273c14d096321584b8b2d7645f08f56ebb65985a49bccd43cd179351"},{"version":"a0f88a6a607bfd5a477cd0fcdb0092385764acd3c75c3b4f4f20b19187638cf3","signature":"645d159f6d9e3eb8e9509f38f59a8fac156ee7393e96ea35400f121a7f381cad"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"a67afbd107f07baa83e5deca88e364424d25fce827c93155e61cb2dfbd591885","a6f0218395ecb8e0d736e0a19524223ab7a8a7ed217c4a99c165df2532e1beec","983ecff1acbaec6c7e91a04e1406f088102c7c171adae0cca26c87e8f0612307","16c16ec2a5264d177d68156b545a26ff50a7d00c470991753e7065cd13baa066","03cb5283929e384d9d876b9b2cd1bc4a1ff6796ade2b5867604156e9129302f2","55949c9e272ced5625ab3b7b5874a5794c5d514195ff11453d068e1ea2f22515","5f8616b3b4a1010f16be1639c30d8c6c61a5a3eba036105164a994c527b6a701","6ea3b658cab3bf55af3c7e353b5c780a953f2cb8a736749fb11158e60a0c1794","4add59324adc56388ebe91c57aafce5cf3b067f1a31f1d795e36554a639ba2d5","5311886e264dccac6b3ac7aaa2f5e35629e77dc77aef7cae10d835a8d90186ac","2e9e9594288e71c811534b37cc988e7f8cf3eca92f4fb34bd86e68cd4c4933d8","68453980880200202d792d8ce79a5083e01b5fa08a759082447c849f3846fdb9","46439fd047f993161368be2cbcc7bf13bc3ef45bb428d01301c6de72c7b12eda","267e08d679da81ce5c20dac38a73d152167e385de88348ed58d52d9538180223","521cd3c937271dd1e75cb7f13e7d5f3480a37595418b7c1f404e3263f4a79b60","66401a77bd62ff01eaa3201ad423d8317b0c6f55769402b84ed6033579c109eb","4937c0359aa9c91e874015f23b4216604f24a7092569e586cc8e4c04efcd0716","16a9b10ef9cd6dcbb0f43b8442636ffd660da4d84f5cb69549648f57f0a559ba","54473b26a072224331f5b281a95038e3d70578b67245570e889b2a49f08352c7","0cbb8a9211e030850ebb1d73e25832eca7cde7983c7379b3948b9fa49d472b9d","68807be4cb528c6d4b627f8463e013f4ebdc22da168b1e10eb8074d00354e256","3ecd0e9c1431f735cc8ed99a9b7848a2b433b73ac59b73afcffd2810dc63d415","0f792811cec59875caf2ac7e9184b095d540f39c20c2edd84e6bf8f71d695445","acfe2a804d36efcb8f457408b48d42abbfa0674b24d8fab86a3fa67912093f98","b061f81fcc10894479abef624141513e103bd2a57c7a3b0db9b38b4054690e76","c182f8cc634978c2341cbbfe4fbc04d030c15b5e38e5fa96b980f5a284c6f91e","930a106ea8f6a722914dedbbc4e83eacaee2c34e6a3c7866031ecd1d62a14e2d","aa1fa0d91659fae4d7a087faa5fd35f9f671162423edf82fba8f4d4a0b7f2a69","9180758bca0f498eb0839372e325f83bfcf5e46d993e2cdacfab12a3ebb872d9","0f434ac807908fbb495560882b805ac1e211fb4161a68f4447fe46b0b96d039f","22bd9a747bd9f230d10370020f642e5a037a9c87fb0cdb3d22cd53b3627fa6d5","a64049a1707fdea015676e4550332055ca3afa7bfbfa346844e899ee4400a0ce","1d0447e26c96f2926a9dd8d0d8398dc379e27b92a4121e0873a7a694508139e2","92818ccd63a80377b44a64e84ac674f0b8a4a6a5374a120543b27332fca76952","50366a02489daf00d23940b93ec3f5ed78ba06c8c9c61c7b41aca5fb81a1200b","f0ebf6ad7ad0bd71eba896199a04dea5d9599e3902df901fa2caced40c48128e","088471eb708d6856f94a51d92ec5f0f1cbcb2a770ebb8dd7fbe1f79d4a4af89e","dc384b06f30fb396f2289ad67ec8bd433ea0e1a17af5e563a8025293c44f6a7a","7ee1923d8cdf7e6d7905368b7af2632cafa5db29d9b1346395297a22b0fcd51b","e1dc2510e103d3e31037b4271b4d07a053d3c1b2f9fb1119b1c07292c2c2debd","cae7890145aaef376eb9930ea6ddb95e130962a1bfc3808ed973f9f8a1fc23a4","c2387f2448a1270b48098adcc1e8caf33940560cc4749b3ad512312643e55618","5aedeb3b588f174e00ddb5603423bbae7e492201358da663a6e633dcf259f08a","31f1d0f6b688888afc2029af21124ce798a50ccf6c27bd77580325568c3b4f5a","2dc62672982c6fd7b34ca77cf88281d1166cac2019bcdada7779d6a36e01abe7","7678ae10aaceab8b2ff92f21cd0a9c6b77a66d539c61d99e00afab63b0c842c7","3101b15c9627b0cea36cdecaf75ee7f2f71a7698b728a6a1315af18e02592556",{"version":"495b7f131854d7fb5cdc7492fd7bda278a841d39b25fa02a6fc32996e0db65bf","signature":"1f8e8b1de161dc93d5c87924f6c5d00fda44e859dba5d3bc790091345b46196e"},{"version":"2b7263fbcba7efd43e7dd28a01ce1329015bab453be46e61e71d79c5b2c32e56","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},{"version":"73dd315a41498a6c41aa41e7a374a13b227bf706e79d27719111543aa039e720","signature":"91d720c983c5d357121f77b49129bdfa864e1339dfe370b10411e976d9b11c5b"},{"version":"5be957f6c623c8fbfa3821b5cdc1fdc246007330ecf3bab0dd0b7df641d100a0","signature":"380405ad985bd673c6cbd4200b7b094e95bccf05f949ae1dd39747a654c15ac3"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},"2af213f32178c6dfb8a3147f74ec12bc1daad5bc07a515fbc1bcfa22f0b2903d",{"version":"a566e9b3dc113ad05515f6212f3f50ecbe8339c7ffada1e9ca8bfb4313926fd2","signature":"58842fee8ce9912730284b0eb667dad825a4d928621abc80c07fb4dde0d22d76"},{"version":"14c9cdf9d514e56300c8b0b86294e5254ce7e9c0814e9c8ddbf4004ea1cfdf72","signature":"0c2614a89e67d9189cda1b6fb39766f7b0ab7f62dc1ad1bf9d16ad5e24ac0f14"},{"version":"fba947b5f97464e0acd53c07162c1ebbd61e5679bb11031e450243b8b7db0655","signature":"5f77ed626119caabd5767216b9dc4ba3caf59504a0b9e919a35dada02e61fd0d"},{"version":"ca71c6427488ce891d019991e60ede00d0f424d1e2d788c4326ddae07ce3e349","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"113d74278764de120f19e9b649ee0f023cb9eb2502b38a2d9f9920676f306dd0","signature":"ffd6086c392be6c5aee480f0d3ec4a5d0e07b8a4225722062e301a3ecda0cee6"},{"version":"16072fdfa023438ce039ebfe1daf8254b34960545dee512801f39b9f826131e9","signature":"c77a73d23254dc8028da7c2d59034f32c06c6e0c810219cf020c96613d21c544"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2","c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"39b7519a43e8d5c20651b0b97bd880291b0afbcac9054b58497dc617b12d4428","signature":"00b0a2f945ad49ad2b8fdbd58c0391036f91c28da7f9a591b00f262c188ece8d"},{"version":"81646afabd1dbc6ca4ebbea9584a1bb6be1a128b4625615a94b12492ac4d0dab","signature":"60e9890ff42d069aeec27bf8357d3d2e6c5af49a822d69f303b6bb7524b6ca8d"},{"version":"f50847b9b4dfcea2202db87aa69a028b3fb2abb9c998fa5dafffd8e4bc01b849","signature":"ccd2c8b28fec5523388fc6c1222d2a7361c3acb79581f99a7b3dfabd486299a9"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"7aa5cec81b52007e4ed3c4fb390d0973bd07365cfc4e767fe252b49b2bf42d79","signature":"ef1ecac8b5bf35d665f6015dc72a4aee6b438b7291998bdd3815b5890f486e36"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"095c529a3167619f5bcb565367d234bd58d0a3c7c99f6898bbab0a11d9309397","signature":"295f4f6194350054047d9ddabe948adc9eb03c6667b2fee96adbcc82e7e77a46"},{"version":"ee3603e18644aaa3d79dcb5ae17d1217768e27f33a0d59749a35411356512d5b","signature":"589f48873355142b6cd1710920ada21e09851804f9c662279da3e0fb03e23ed0"},{"version":"95cae2a6280037eab9c335ae3a8b569876ec13320eaf0216ea9ebd9c0fdeb9c1","signature":"b458fdd89a8715d7fafa54d1ae62f70e3c19da7d64be6d5479d39e62952ec7cc"},{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"2148b94c3137a0fc536363bd82969de0f2197030b88e2a697ec8342c353de844","signature":"a06bc7eb2946c12a8264e18e47fbaa3ec9433c3f3766b288029f82a85910ac6a"},"e619dbf8f213c602b36bd6216bb6db78b6ed9b1c35886c28e48365f00f4ec382",{"version":"f3377f700678127c58cba1c86433624e75e3898c4a1cbc5b50a6a26a13857f26","signature":"1f4442f5426afbe8c18778c20e2d5bb3ef4457fbed445f8d4bd0a2bb6fa551be"},{"version":"b8acceae093a5f263f5980b09e7644a7496600eb2ca59ee40562d1febd1f06ed","signature":"e4b91083b332dee1c244cd19f80280c4cd6f0d77ab5b625051b1086f84f9adb6"},"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d",{"version":"509113b8f7b1f6f246d5dffe92cb0ae5936432ed5cb5b3202dc0b144e161d124","signature":"731ce5a4bd3aa2274d3550b35fa1634c4b962403371c06f84597b7347a8930be"},{"version":"15e4af355b15698db8fab41e743a7f21f5a5c1af98a5a356b5c5f3361d5f0d63","signature":"d25c71c7f721032d8ebac149bb0f47af5ad3b79107accee130796c4ab4a03859"},{"version":"51d713e2f27e890eec435942a281254bebe5b0d355b2d433af30c38690be64c3","signature":"f9c4c138ccbb615abf03a906f33da6059a464908a0c5baece5cf22134cca171e"},"4e54793261bea91c0ca8b66d8fee5b44d68bb8f1d33a56faebd91c6543581d77",{"version":"a473622c0cbbf7c4f0be8e0d8e53edb5f525659baf3de6c493e418c8a0df5f8a","signature":"acd6c9ecb6e71e3bd8df3cf03a056f4cd282e2df54e475b4d4e0ffdecddd8d93"},{"version":"b1bbc7c5a49dbe2c417846a8da34e5d29931e8690384862a9fa5774dfa43ac29","signature":"2d2e74e923091e0d4b4a5ea1d73b3630d3d65cb480a4afccbb6b32e2bc60b326"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"bd2ff5339ec641a0010ed86acec6ad167c4f59b34e7bc8aa7711e50580cfac09","signature":"e3d759ccf935b341a1111bc124d8a3234a15d4276e804e7af7406f2491d56053"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"c8993ac36d4bcc3ffb1fd924783996cb9fd2c7b2cbeb6036261128215f8bf741","signature":"9d75c2e925cebd1039cb2721c5d9ff5c65a07cbaaa35c6404215486286276ddd"},{"version":"4de53ab5bb03a6df3f4ea1cf18607a83d6b3697c9c7e5e617b07be553138946b","signature":"38594fe8776daa1c6d8eda3148982fca4724fb9107b569ecc1e27d993fb4e324"},{"version":"11484124308db507a01960db2232a5038aa75f32a29d8e3139e7c3e446b8068a","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},{"version":"5741533d37d8a3a9f32a701d1cd507db23f656ef0284f9d0327bb2a7f07a2b6c","signature":"eb824546ebfdd25070ec8a202879863b68986be4f60b36fc850f15d5943467bf"},{"version":"8c9faef9fadea69d25efc8f5274c570f5e2b11118af0639fabf8529976e9df39","signature":"f4d1fd5b8fcafcb2b22b29abc530cac26462a0fbe09687cdd56cca95aed7c0ef"},"ea3e16f0272b2d70b81ada9fa4cc2e0d03c14f47581bfe54e9d83eee03768d9f",{"version":"38a15111f85763c63039447494135a226941c4a7b42d3f868373bbb18495cfc3","signature":"4a8dd814e497d470b9090ec049e0bd21f29c078163cf549d59a177d5efe7d38b"},"ad626d09c01e6f2cbe555662e355ae1ae6f9091d6151dd91561092c40e7002fb",{"version":"3c36d048ac4b57218aa60f89cc469bccb4a7d82c24487925400be7726ef6b0aa","signature":"623ea362e65c084a35126b8590da85679b910de9b008a6c353279bbfb5cc39b0"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"5c792b0b7a65902d0409e3f7d73317bd055f5358c2dc3732918bb8542c72c92c","signature":"8c220fff197da783e0f88214b6cd00cd73600f0312cc311f47a258f593dffd22"},{"version":"aab61fbdc865b103ebf5598b30fdd687175c2a1e6b059da51d8832c940330e11","signature":"b6129fc3f5349970a493dae60cfd86d7d458188f4d80c22b2d19ee408f6b2df3"},{"version":"66ed1499444fa2c3b77d58e57bcee5b0d7b148af91afb9ec161125530afb4a0d","signature":"0a1f440173c9bfd5ecc9e3875937efb8da54a0c082afc86c4b9f41a0c87e2e1d"},{"version":"21578d48d37074b4138b6adefd415634d6474885be2f72b0cac4a09584b71e42","signature":"1d5d52e9702b651df8a219c400498592637e2012c66db3cdec1a4b6aaa872a1c"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"53583c81cf1537a2e4604e3ffeb43ec1bf24c2f20bfc06e1ef83ee20114a354a","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"3a3beb12819b62a32d24e7b7ec562c8b8b89d9ca8e3baf24f446263de87f85cd","signature":"d5932f32d613672d16d821458915e4b4a30aef161a8c0d58ea72420de0a3a686"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"51af9912b68cfc465c080adf52ad4f6c4e154121e3ebcce49b69dd13fd9e9e01",{"version":"0bf7cc796ce728c96de91d3270e165c3d923ba37ee8c7d86d864498542a0334e","signature":"573116d50d2c1223eb069078555a297b69b4b856a6b2e88692ceb01636e7113a"},"97e5ceb9cfc8e379fc247c89a821471f04d4abde0289e81434d5e8715c4e8b61",{"version":"f2751db38b7e93e7435d6d50931352c9d461176ff964f06961ced6880ef69f85","signature":"7f74f69bd6eb552eb72eaa161a4332a03c12caf2276f16c21bff13eb11bf5cea"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"d4c2592c61ddda159e4319c3490ffd8425c6df435e08e324b81ebb397e1b2f4f","signature":"f778224925b01615721dbbc78d962de302d420ac08f54152ed24400de1567f97"},{"version":"356b189bdb90a73c34e791c04363c4704930b2bde046825d8aa93a233b105554","signature":"14e8912785520e2cdd27779002ea2fa9a79f42cde70aae682ed19ca42b6a2018"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"489163e442467727fbf77e64f8f52737e72cbd0d4bca2c63ffc49ad98e8900f7","signature":"afda1c5cc9b5edb410b99e672e6cca6fcbb343089aabcb65f859829189827ee8"},{"version":"38e17e4a11c25db456f54ee6684b9825f0f20d94b3f2304747a90c3d3c7d0409","signature":"c155b5808e628ef0daf5d81fe886f5dca2ab780b807159e0ed7acfa45f05c839"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"6a3f7106815fc0110b1e5c88d5f0a7ecc20598322bbf31ec2f0303fbd1728bee","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"5c1d0cf14846cde8bea4e5459d236503f16b858004771eb038ab23f657a44f88","signature":"d170214b665597767e336cca79989277a0057ab714d2e0f83a9e10067c81451b"},{"version":"6a6160e04718350ad0c747cb3a5d683a83535b534943cdc97927130a175ac5b0","signature":"0252cd48e3109fc2c0f63e06281d8b5b0eca06b169938bb4ec13374df403476a"},{"version":"743fc3db7c282521e4abce8131550ff5e380cdab8fb92cd24d4b230a9f4b3cdd","signature":"3eb10f4f746b65447b0a483da167dfc81a4974d21ea9c7f6b7c5f49b415a2cfb"},{"version":"21a564b45c91302548c9231959dc5d4903e830242cfbfbf534b74c47b216bd9b","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d6a6353feea024f96c8a7515f43d01beadf1887e74bf14755bdae0e24456734e","signature":"2da1a7e104a32bb0c830eb50f82468d68d4f866081f130c3a0403bc53d7e7c4f"},{"version":"5a9dd50556f07d5bf241589247815c49dab6621e11a917ce4a0c1432593eb93f","signature":"8eb893304a76d647f731068170cfec88460fcca823ebbe0d3b878866debca230"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"c6d64489e40fab6d481f4edf3049ba3cdc7c42bd3c479bc117de5b5c69939811","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"5cfcfc6d61b0a7489d3904a4b4ee3d42a58400af0983cd5c6f1acebc6a9ca0fc","signature":"46d26a755d9fe92acbb24fd7ebfb9e5058f6689d861a2ea50d367d5fe94bba98"},{"version":"5911756d21a99511ff71691758064207f07c9b1009e66794901bf7505a0daff2","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"bf034e51fda4c52e7afa864ecad8da05cc2ba517612e5000e0e386c0f61be068","signature":"12ad64d4481c2899377feed3b43ef71a8c74705c128a048b1f842825a2f4bb17"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},{"version":"981f27ab126d5f098f46cc32901c94a7d566cd8bb7301f01cea399315bb78ff0","signature":"7d3de5e7256e90b4dd1f630ed54a9623a6fbe282486e442fda8c3a24620998d8"},{"version":"6252f91a20403a38bd924b3313c990a8f851b4627cfbfe43369ce843f6de92b1","signature":"464beb2dba363416cb5df8f00b29dbe3edb38ea727d6ef404ae2fb6cef36e769"},{"version":"0f7a9bb42edb64a2f7a6b26a0f632b4fa012c3148abd330047e42e550e459401","signature":"193ae303a7a3fe759b4c2223ecdfa97c06d7026e57fd9ea0c3bcd75beb77b965"},{"version":"edf8ebde627644362f16348aa02bd1d4b7b9985ceff5c3dc7e2bd73200d6af94","signature":"6c1164e5bc9963b8af0f9e885ae8dc4b36933adfadecf9b3ffd6b73eaa83392c"},{"version":"53d71a1f913516fdd6d0b02c11de6a5f45045a559ad297921aeb0a19fdba41b5","signature":"f849b6822d9f21fc9ab2be78939fdc6cf7079b28e65c98dbdda2221ad05b19f6"},"268b053c75f4f3f5eaa60324f62f7a98545f95f0d7c6719777fe353dd21fb87d","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":99,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":5},"fileIdsList":[[92],[82,92],[449,450,451,452,453],[455],[457],[154],[456,458],[212],[454,459,468,469,470,471],[89,92,173],[460,461,462,463,464,465,466,467],[45,82,92,153],[485,486],[154,212,485,486],[486,487,488,489],[154,212,481,485],[154,157,212,472,480,485],[480,481,485,490,491],[154,212,481,482],[482,483,484],[154,212],[154,157,212,481,483],[154,212,485],[485],[154,157,212,485],[212,474,481,485],[473,474,475,476,477,478,479],[212,485],[89,127,128],[89,92],[127,129,131],[89,92,127,128,129,130],[89,92,130,151,152,153],[89,92,130,154],[89],[191],[89,90],[90,91],[185,186,187,188],[89,92,132,152,154,157],[194,195,196,197],[157],[89,157,177],[89,130,157],[89,157,180,181,182],[89,130,157,178],[150],[151,153,155,159,160],[151,153,160],[82,92,130,151,152,154,155],[151,160],[151,154,156],[92,152,154],[151,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171],[151,158],[82,158],[89,130,151,152,153,154,156,157],[151,153,155,158],[151,156,158],[204,205],[200,201],[89,200],[133,134,135],[89,154,157,177,178,179,183],[175,176],[174],[175],[320],[82,446,447],[45,82],[594,599],[137,139,140,141,142,143,144,145,146,147,148,149],[137,138,140,141,142,143,144,145,146,147,148,149],[138,139,140,141,142,143,144,145,146,147,148,149],[137,138,139,141,142,143,144,145,146,147,148,149],[137,138,139,140,142,143,144,145,146,147,148,149],[137,138,139,140,141,143,144,145,146,147,148,149],[137,138,139,140,141,142,144,145,146,147,148,149],[137,138,139,140,141,142,143,145,146,147,148,149],[137,138,139,140,141,142,143,144,146,147,148,149],[137,138,139,140,141,142,143,144,145,147,148,149],[137,138,139,140,141,142,143,144,145,146,148,149],[137,138,139,140,141,142,143,144,145,146,147,149],[137,138,139,140,141,142,143,144,145,146,147,148],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[92,157],[382,383,385,386],[92,172],[384],[111,132,251],[87,111],[111,305],[111,251,305,306],[111,251,263,304,306,307],[111,251,263,304,306,308],[252,253,254,255,306,307,308,309,310,311,312,313],[111,132],[87,111,132,251],[111,132,251,253,254,263,309,310],[251,263,304],[111,306],[111,305,306],[85],[87],[93,96],[93,95],[93,95,96],[87,88,93,96,97],[87,88],[97,98,99,100],[88,97],[88,96,97,98],[93,95,96,101,102,103],[94],[92,94,96],[93],[85,86,88,104,110],[104],[105,106,107,108,109],[117],[116,117,118,119,120,121,122,123],[117,119],[380],[212,380,381,389,390,391,392,393,394,395,396,397],[381,398,402],[212,380,381,398],[132,212,380,381,398],[389,390,391,392,393,394,395,397,399,401],[132,212,380,381,388,398],[212,314,343,380,381,388],[212,380,381,388],[380,400,403,404,405],[132,212,314,343,379,381,398,399],[380,387],[314,343],[322],[325,328],[325,327],[325,327,328],[87,324,325,328,329],[87,324],[329,330,331,332],[324,329],[324,328,329,330],[325,327,328,333,334,335],[326],[92,326,328],[325],[322,323,324,336,342],[336],[337,338,339,340,341],[343],[345,346,347,348,349,350,351],[87,343,344,345,346],[87,343,347],[343,347],[87,343],[343,345,346],[343,347,349],[344,352,371,372,373,374,375,376,377,378],[132],[132,157,343,348,352,353,373],[87,132,343],[132,343,352,371],[132,343],[132,343,352,353],[132,343,350,353,373,375],[343,344],[343,349],[353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],[87,344],[345],[87,346],[258,259,260],[111],[111,258],[111,258,259],[256,257,261,262],[111,261],[217,218,219,220,221,222,223],[87,111,216,217,218],[87,111,219],[111,219],[111,217,218],[111,219,221],[216,224,243,244,245,246,247,248,249,250],[111,132,220,224,225,245],[87,111,132],[111,132,224,243],[111,132,224,225],[111,132,222,225,245,247],[111,216],[111,221],[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],[87,216],[217],[87,218],[300,301,302],[87,111,299],[111,300],[111,300,301],[303],[265,266,267,268,269,270,271],[87,111,264,265,266],[87,111,267],[111,267],[111,265,266],[111,267,269],[264,272,291,292,293,294,295,296,297,298],[111,132,268,272,273,293],[111,132,272,291],[111,132,272,273],[111,132,270,273,293,295],[111,264],[111,269],[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],[87,264],[265],[87,266],[89,92,152,157,172,173,174,177,184,189,209,210],[211],[89,130,132,136,152,153,174,178,179,183,184,190,192,193,198,199,202,203,206,207,208],[438,439],[437],[435,436],[592,595],[592,595,596,597],[594],[591,598],[505],[593],[417,532,589],[30,83],[30,111,113,114],[30,111,314,407,441,443,532,533],[30,111,113,124,125,126,533],[30,111,149,532,533],[539,540],[111,251,263,304,314,417],[111,149,314,417,537],[536,537,538],[111,314,538,539],[92,113,114,149,172],[92,111,172,407,412,417,418,430,495,500,532,545],[92,113,114,125,321],[30,84,114,115,408,411,412,425,429,430,443,500,501,533,534,535,541,542,545,546,547,548,552,553,562,563,566,568,569,570,571,573,574,575,577,578,579,580,581,582,583,584,585,586,587,588],[114,172],[92,132,407],[92,111,113,149,172,316,408,549,550,551],[111,114,493,542,548],[89,92,111,113,132,149,172,251,304,314,317,321,407,408,413,496,531,532,549,552,555,557,559,561],[92,111,149,251,304,321,407,408,532],[92,111,314,407,417,532],[406],[111,172,211,387,417,418,445,532,544],[114,212],[111,314,407,441,442,532],[111,149,314,321,407,434,440,441,532],[111,314,408,532,565],[48,50,111,125,172,189,211,387,406,412,417,418,430,445,495,500,532,544,545,546,567],[92,111,172,407,420,421,532],[30,92,111,407,422,425,532],[92,111,132,136,149,215,407,408,532],[30,111,149,407,408,424,532],[111,113,125,321,434,443,569],[30,111,113,149,263,407,430],[30,111,314,569,572],[92,111,113,149,263,321,407,408,425,428,429,531,532],[92,111,113,263,317,407,413,531],[111,113,149,263,315,533,569],[314,569,576],[111,113,126,149,321,407,434,440],[569,570],[30,111,113,149,251,407,412,532],[30,111,314,443,572],[92,111,172,407,432,532],[92,111,113,251,316,321,407,408,410,411],[87,111,113,149,251,315,317,407,412,443,533],[314,443,576],[111,314,407,442],[443,570],[30,111,149,304,407,500,532],[30,111,314,572,584],[111,304,314,321,407,408,411,499,532],[87,111,149,251,304,407,500,532,572,584],[314,576,584],[570,584],[83,87,92,111,113,114,124,126,149,172,251,314,315,317,319,321,406,407,412,413,418,422,425,430,433,441,443,445,494,495,496,497,500,501,502,503,504,509,511,513,514,515,516,517,527,528,532,533,534,589],[111,529],[504],[92,111,149,251,263,304,314,317,412,413,430,503,531,589],[87,92,111,113,126,149,314,317,407,413,418,504,506,507,512,529,531,532],[111,317],[111,113,251,263,304,305,413,531],[111,113,126,149,251,314,317,412,430,443,529,532,533,589],[92,111,314,413,589],[92,111,251,263,317,407,430,433,504,532,533],[503,511],[87,92,111,251,263,304,305,314,317,495,503,504,509,515,532,590],[92,111,172,251,495,503,508,509,532],[92,111,149,172,263,317,407,430,495,503,504,532],[172,503,504,510],[172,503,508,510],[508,512,527,529],[92,111,149,305,314,413,441,504,512,520,529,532,589],[521,523,524,525,526],[111,149,314,413,441,508,512,521,522,523,529,532,589],[520],[441,508],[413,441],[518,519],[92,111,149,314,413,433,441,508,509,512,518,519,521,522,529,532,589],[111,149,314,413,441,508,512,518,519,521,522,529,532,589],[126,413,416,530],[111,315,533],[415],[92,111,113,149,174,251,314,317,408,412,413,414,530,531,532,533,589],[92,111,251,263,304,314,317,406,530,589],[89,132,172,212,419],[132,212],[172,212,444],[172,212,431],[172,212,554],[172,212,423],[172,212,556],[172,212,543],[172,212,498],[172,212,564],[172,212,420],[172,212,558],[89,132,172,212,426],[172,212,427],[89,132,172,212,213],[172,212,214],[172,212,560],[172,212,409],[172,212,550],[111,251,314,315],[87,111,208,251],[87,92,111,149,172,251,263,314,406,407,412,417,418,433,448,492,493,494,532,589],[113,126,315,316,317,318,531],[112],[111,149,251,263,304,314,406,590],[112,113],[111,589],[314],[111,149,251,263,304,305,314,316,413,530,532,589],[30,111,114],[30,111,314,407,441,443],[30,111,124,533],[30,111,533],[111,314,417],[111,314,417,537],[92,114,172],[111,172,407,412,417,418,430,500,545],[114],[92,111,172,408],[111,114,542,548],[89,92,111,172,314,317,321,407,408,413,552],[92,111,251,304,321,407,408],[111,407,417,532],[111,172,417,418,532],[111,314,407,441,442],[111,314,407,441],[111,314,408],[111,172,412,417,418,430,500,545,546],[92,111,172,407],[30,111,407,422,425],[111,407,408],[30,111,407,408],[111,443,569],[30,111,263,407,430],[30,111,569,572],[111,263,321,407,408,429],[92,317,407,413],[111,569],[569,576],[111,407],[30,111,251,407,412],[30,111,443,572],[92,111,251,321,407,408,411],[111,407,412,443],[443,576],[111,407,442],[30,111,304,407,500],[30,111,572,584],[111,304,321,407,408,411],[111,407,500,584],[576,584],[111,114,172,251,314,317,406,412,413,418,425,430,433,443,500,503,504,527,528,533,534,589],[92,111,314,317,412,413,430,503,589],[92,111,317,407,413,418,504,512,529],[111,251,263,304,305,413],[111,314,412,430,443,529,533,589],[92,111,413],[92,111,251,263,317,407,430,433,504],[503,504],[92,111,172,503,508],[92,172,503,504],[92,111,305,314,413,441,504,512,520,529,532,589],[111,413,441,508,512,521,523,529,532,589],[92,111,413,433,441,508,512,518,519,521,529,532,589],[111,413,441,508,512,518,519,521,529,532,589],[111,533],[111,317,408,412,413,533,589],[111,251],[92,111,172,251,263,407,412,417,418,433,532,589],[111,314,590],[111,321,589],[111,305,413,530,589]],"referencedMap":[[450,1],[451,2],[454,3],[453,1],[456,4],[458,5],[457,6],[459,7],[471,8],[472,9],[467,8],[463,10],[464,1],[461,2],[465,1],[468,11],[466,12],[488,13],[489,13],[487,14],[490,15],[486,16],[481,17],[492,18],[483,19],[485,20],[484,21],[482,22],[491,23],[478,24],[473,25],[475,26],[480,27],[477,8],[479,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[321,68],[448,69],[112,70],[600,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[382,118],[386,1],[387,119],[384,120],[385,121],[383,118],[253,122],[252,123],[306,124],[310,125],[308,126],[309,127],[314,128],[254,129],[255,130],[311,131],[305,132],[312,133],[313,134],[86,135],[88,136],[94,137],[96,138],[102,139],[98,140],[97,141],[101,142],[99,143],[100,144],[104,145],[95,146],[93,147],[103,148],[111,149],[105,150],[106,35],[110,151],[108,136],[120,152],[119,152],[124,153],[118,152],[121,154],[122,154],[123,152],[381,155],[398,156],[403,157],[394,158],[396,159],[390,159],[402,160],[397,159],[392,159],[391,159],[389,161],[393,159],[399,162],[401,163],[395,159],[406,164],[400,165],[405,8],[388,166],[404,167],[323,168],[324,136],[326,169],[328,170],[334,171],[330,172],[329,173],[333,174],[331,175],[332,176],[336,177],[327,178],[325,179],[335,180],[343,181],[337,182],[338,35],[342,183],[340,136],[344,184],[352,185],[347,186],[348,187],[349,188],[345,189],[346,184],[351,190],[350,191],[379,192],[372,193],[374,194],[375,195],[376,196],[373,197],[377,198],[378,199],[353,184],[354,200],[355,201],[356,189],[357,136],[371,202],[359,136],[360,189],[361,136],[363,136],[364,184],[365,136],[367,203],[368,136],[369,204],[370,136],[366,205],[256,123],[261,206],[258,207],[259,208],[260,209],[263,210],[262,211],[216,207],[224,212],[219,213],[220,214],[221,215],[217,123],[218,207],[223,216],[222,217],[251,218],[244,193],[246,219],[247,220],[248,221],[245,129],[249,222],[250,223],[225,207],[226,224],[227,225],[228,123],[229,136],[243,226],[231,136],[232,123],[233,136],[235,136],[236,207],[237,136],[239,227],[240,136],[241,228],[242,136],[238,229],[303,230],[300,231],[301,232],[302,233],[304,234],[272,235],[267,236],[268,237],[269,238],[265,123],[266,207],[271,239],[270,240],[299,241],[292,193],[294,242],[295,220],[296,243],[293,129],[297,244],[298,245],[273,207],[274,246],[275,247],[276,123],[277,136],[291,248],[279,136],[280,123],[281,136],[283,136],[284,207],[285,136],[287,249],[288,136],[289,250],[290,136],[286,251],[211,252],[212,253],[209,254],[440,255],[438,256],[437,257],[596,258],[598,259],[597,258],[595,260],[599,261],[506,262],[83,70],[594,263],[590,264],[84,265],[115,266],[572,267],[534,268],[535,269],[541,270],[537,271],[538,272],[539,273],[540,274],[542,275],[546,276],[547,277],[114,1],[589,278],[548,279],[408,280],[552,281],[553,282],[562,283],[411,284],[418,285],[407,286],[545,287],[563,288],[576,289],[442,290],[566,291],[568,292],[422,293],[429,294],[533,295],[425,296],[570,297],[571,298],[573,299],[430,300],[574,301],[575,302],[577,303],[569,304],[578,305],[579,306],[580,307],[433,308],[412,309],[581,310],[582,311],[443,312],[583,313],[501,314],[585,315],[500,316],[586,317],[587,318],[584,312],[588,319],[529,320],[502,321],[508,322],[504,323],[513,324],[514,325],[522,326],[441,327],[509,328],[503,329],[512,330],[516,331],[510,332],[515,333],[511,334],[517,335],[530,336],[521,337],[527,338],[524,339],[523,340],[518,341],[519,342],[520,343],[525,344],[526,345],[528,339],[417,346],[414,347],[416,348],[415,349],[413,350],[444,351],[431,351],[554,351],[423,351],[556,351],[543,351],[498,351],[564,351],[420,351],[558,351],[419,352],[445,353],[432,354],[555,355],[424,356],[557,357],[544,358],[499,359],[565,360],[421,361],[559,362],[427,363],[426,352],[428,364],[214,365],[560,365],[409,365],[550,365],[213,352],[215,366],[561,367],[410,368],[551,369],[316,370],[317,371],[315,207],[495,372],[532,373],[493,207],[113,374],[494,375],[126,376],[496,377],[318,378],[531,379]],"exportedModulesMap":[[450,1],[451,2],[454,3],[453,1],[456,4],[458,5],[457,6],[459,7],[471,8],[472,9],[467,8],[463,10],[464,1],[461,2],[465,1],[468,11],[466,12],[488,13],[489,13],[487,14],[490,15],[486,16],[481,17],[492,18],[483,19],[485,20],[484,21],[482,22],[491,23],[478,24],[473,25],[475,26],[480,27],[477,8],[479,28],[129,29],[128,30],[127,1],[132,31],[131,32],[154,33],[157,34],[190,30],[191,35],[192,36],[193,35],[90,35],[91,37],[92,38],[186,1],[189,39],[173,40],[198,41],[196,35],[197,42],[178,43],[180,44],[183,45],[182,46],[199,35],[151,47],[161,48],[162,49],[156,50],[163,51],[164,52],[165,52],[155,53],[172,54],[167,48],[166,55],[168,56],[158,57],[169,51],[170,49],[160,58],[171,55],[159,59],[206,60],[207,35],[202,61],[201,62],[179,35],[133,35],[136,63],[135,35],[152,30],[208,1],[184,64],[177,65],[175,66],[176,67],[321,68],[448,69],[112,70],[600,71],[138,72],[139,73],[137,74],[140,75],[141,76],[142,77],[143,78],[144,79],[145,80],[146,81],[147,82],[148,83],[149,84],[31,85],[81,86],[34,87],[35,88],[36,89],[37,90],[38,91],[39,92],[40,93],[42,94],[43,95],[44,96],[45,96],[46,97],[47,98],[48,99],[49,100],[50,101],[82,102],[51,96],[52,103],[53,104],[55,105],[56,106],[57,107],[60,96],[61,108],[62,109],[63,110],[65,96],[66,111],[67,112],[79,113],[69,114],[70,115],[71,116],[73,110],[75,117],[76,110],[382,118],[386,1],[387,119],[384,120],[385,121],[383,118],[253,122],[252,123],[306,124],[310,125],[308,126],[309,127],[314,128],[254,129],[255,130],[311,131],[305,132],[312,133],[313,134],[86,135],[88,136],[94,137],[96,138],[102,139],[98,140],[97,141],[101,142],[99,143],[100,144],[104,145],[95,146],[93,147],[103,148],[111,149],[105,150],[106,35],[110,151],[108,136],[120,152],[119,152],[124,153],[118,152],[121,154],[122,154],[123,152],[381,155],[398,156],[403,157],[394,158],[396,159],[390,159],[402,160],[397,159],[392,159],[391,159],[389,161],[393,159],[399,162],[401,163],[395,159],[406,164],[400,165],[405,8],[388,166],[404,167],[323,168],[324,136],[326,169],[328,170],[334,171],[330,172],[329,173],[333,174],[331,175],[332,176],[336,177],[327,178],[325,179],[335,180],[343,181],[337,182],[338,35],[342,183],[340,136],[344,184],[352,185],[347,186],[348,187],[349,188],[345,189],[346,184],[351,190],[350,191],[379,192],[372,193],[374,194],[375,195],[376,196],[373,197],[377,198],[378,199],[353,184],[354,200],[355,201],[356,189],[357,136],[371,202],[359,136],[360,189],[361,136],[363,136],[364,184],[365,136],[367,203],[368,136],[369,204],[370,136],[366,205],[256,123],[261,206],[258,207],[259,208],[260,209],[263,210],[262,211],[216,207],[224,212],[219,213],[220,214],[221,215],[217,123],[218,207],[223,216],[222,217],[251,218],[244,193],[246,219],[247,220],[248,221],[245,129],[249,222],[250,223],[225,207],[226,224],[227,225],[228,123],[229,136],[243,226],[231,136],[232,123],[233,136],[235,136],[236,207],[237,136],[239,227],[240,136],[241,228],[242,136],[238,229],[303,230],[300,231],[301,232],[302,233],[304,234],[272,235],[267,236],[268,237],[269,238],[265,123],[266,207],[271,239],[270,240],[299,241],[292,193],[294,242],[295,220],[296,243],[293,129],[297,244],[298,245],[273,207],[274,246],[275,247],[276,123],[277,136],[291,248],[279,136],[280,123],[281,136],[283,136],[284,207],[285,136],[287,249],[288,136],[289,250],[290,136],[286,251],[211,252],[212,253],[209,254],[440,255],[438,256],[437,257],[596,258],[598,259],[597,258],[595,260],[599,261],[506,262],[83,70],[594,263],[590,264],[84,265],[115,380],[572,381],[534,382],[535,383],[541,270],[537,384],[538,385],[539,273],[540,274],[542,386],[546,387],[547,388],[114,1],[589,278],[548,279],[408,280],[552,389],[553,390],[562,391],[411,392],[418,393],[407,286],[545,394],[563,288],[576,395],[442,396],[566,397],[568,398],[422,399],[429,400],[533,401],[425,402],[570,403],[571,404],[573,405],[430,406],[574,407],[575,408],[577,409],[569,410],[578,305],[579,411],[580,412],[433,399],[412,413],[581,414],[582,415],[443,416],[583,313],[501,417],[585,418],[500,419],[586,420],[587,421],[584,416],[588,319],[529,422],[502,321],[508,322],[504,423],[513,424],[514,325],[522,425],[441,426],[509,427],[503,428],[512,330],[516,429],[510,430],[515,431],[511,334],[517,335],[530,336],[521,432],[527,338],[524,433],[523,340],[518,341],[519,342],[520,343],[525,434],[526,435],[528,433],[417,346],[414,436],[416,348],[415,437],[413,350],[444,351],[431,351],[554,351],[423,351],[556,351],[543,351],[498,351],[564,351],[420,351],[558,351],[419,352],[445,353],[432,354],[555,355],[424,356],[557,357],[544,358],[499,359],[565,360],[421,361],[559,362],[427,363],[426,352],[428,364],[214,365],[560,365],[409,365],[550,365],[213,352],[215,366],[561,367],[410,368],[551,369],[316,207],[317,438],[315,207],[495,439],[532,373],[493,207],[113,374],[494,440],[496,441],[318,378],[531,442]],"semanticDiagnosticsPerFile":[449,450,451,454,452,453,470,455,456,458,457,459,469,471,472,460,467,463,464,461,465,468,462,466,488,489,487,490,486,481,492,483,485,484,482,491,478,473,475,480,477,479,476,474,129,128,127,132,131,154,157,190,191,192,193,90,91,92,89,185,186,187,189,188,173,194,198,196,195,197,178,180,183,181,182,199,174,151,150,130,161,162,156,163,164,165,155,172,167,166,168,158,169,170,160,171,159,206,204,205,207,202,201,200,179,203,133,134,136,135,152,208,184,153,177,175,176,321,434,446,447,448,112,600,138,139,137,140,141,142,143,144,145,146,147,148,149,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,320,549,319,382,386,387,384,385,383,253,252,306,310,307,308,309,314,254,255,311,305,312,313,86,85,88,94,96,102,98,97,101,99,100,104,95,93,103,111,105,106,110,107,108,109,120,119,124,118,121,122,116,117,123,381,398,403,394,396,390,402,397,392,391,389,393,399,401,395,406,400,405,388,380,404,323,322,324,326,328,334,330,329,333,331,332,336,327,325,335,343,337,338,342,339,340,341,344,352,347,348,349,345,346,351,350,379,372,374,375,376,373,377,378,353,354,355,356,357,371,358,359,360,361,362,363,364,365,367,368,369,370,366,256,261,258,259,260,257,263,262,216,224,219,220,221,217,218,223,222,251,244,246,247,248,245,249,250,225,226,227,228,229,243,230,231,232,233,234,235,236,237,239,240,241,242,238,303,300,301,302,304,264,272,267,268,269,265,266,271,270,299,292,294,295,296,293,297,298,273,274,275,276,277,291,278,279,280,281,282,283,284,285,287,288,289,290,286,125,591,210,211,212,209,440,438,439,437,435,436,592,596,598,597,595,599,87,506,507,505,83,594,593,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,590,84,30,115,572,534,535,541,536,537,538,539,540,542,546,547,114,589,548,408,552,553,562,411,418,407,545,563,576,442,566,568,422,429,533,425,570,571,573,430,574,575,577,569,578,579,580,433,412,581,582,443,583,501,585,500,586,587,584,588,529,502,508,504,513,514,522,441,509,503,512,516,510,515,511,517,530,521,527,524,523,518,519,520,525,526,528,417,414,416,415,413,444,431,554,423,556,543,498,564,420,558,419,445,432,555,424,557,544,499,565,421,559,427,426,428,214,560,409,550,213,215,561,410,551,316,317,567,315,495,532,493,113,494,126,496,318,531,497]},"version":"4.7.2"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/MixedRouteQuoterV2__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/MixedRouteQuoterV2__factory.d.ts
new file mode 100644
index 0000000..f53fb00
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/MixedRouteQuoterV2__factory.d.ts
@@ -0,0 +1,86 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { MixedRouteQuoterV2, MixedRouteQuoterV2Interface } from "../MixedRouteQuoterV2";
+export declare class MixedRouteQuoterV2__factory {
+    static readonly abi: ({
+        type: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+            components: ({
+                name: string;
+                type: string;
+                internalType: string;
+                components: {
+                    name: string;
+                    type: string;
+                    internalType: string;
+                }[];
+            } | {
+                name: string;
+                type: string;
+                internalType: string;
+                components?: undefined;
+            })[];
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: ({
+            name: string;
+            type: string;
+            internalType: string;
+            components?: undefined;
+        } | {
+            name: string;
+            type: string;
+            internalType: string;
+            components: {
+                name: string;
+                type: string;
+                internalType: string;
+                components: {
+                    name: string;
+                    type: string;
+                    internalType: string;
+                }[];
+            }[];
+        })[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability?: undefined;
+        outputs?: undefined;
+    })[];
+    static createInterface(): MixedRouteQuoterV2Interface;
+    static connect(address: string, signerOrProvider: Signer | Provider): MixedRouteQuoterV2;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/MixedRouteQuoterV2__factory.js b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/MixedRouteQuoterV2__factory.js
new file mode 100644
index 0000000..7d4990e
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/MixedRouteQuoterV2__factory.js
@@ -0,0 +1,473 @@
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+import { Contract, utils } from "ethers";
+const _abi = [
+    {
+        type: "constructor",
+        inputs: [
+            {
+                name: "_uniswapV4PoolManager",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+            {
+                name: "_uniswapV3Poolfactory",
+                type: "address",
+                internalType: "address",
+            },
+            {
+                name: "_uniswapV2Poolfactory",
+                type: "address",
+                internalType: "address",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactInputSingleV4",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV4Params",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "poolManager",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "quoteExactInput",
+        inputs: [
+            {
+                name: "path",
+                type: "bytes",
+                internalType: "bytes",
+            },
+            {
+                name: "param",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.ExtraQuoteExactInputParams",
+                components: [
+                    {
+                        name: "nonEncodableData",
+                        type: "tuple[]",
+                        internalType: "struct IMixedRouteQuoterV2.NonEncodableData[]",
+                        components: [
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                ],
+            },
+            {
+                name: "amountIn",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "gasEstimate",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingleV2",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV2Params",
+                components: [
+                    {
+                        name: "tokenIn",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "tokenOut",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "amountIn",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingleV3",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV3Params",
+                components: [
+                    {
+                        name: "tokenIn",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "tokenOut",
+                        type: "address",
+                        internalType: "address",
+                    },
+                    {
+                        name: "amountIn",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                    {
+                        name: "fee",
+                        type: "uint24",
+                        internalType: "uint24",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "gasEstimate",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingleV4",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IMixedRouteQuoterV2.QuoteExactInputSingleV4Params",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint256",
+                        internalType: "uint256",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "amountOut",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "gasEstimate",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "uniswapV2Poolfactory",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "address",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "uniswapV3Poolfactory",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "address",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "uniswapV3SwapCallback",
+        inputs: [
+            {
+                name: "amount0Delta",
+                type: "int256",
+                internalType: "int256",
+            },
+            {
+                name: "amount1Delta",
+                type: "int256",
+                internalType: "int256",
+            },
+            {
+                name: "path",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        outputs: [],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "unlockCallback",
+        inputs: [
+            {
+                name: "data",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "error",
+        name: "InvalidPoolVersion",
+        inputs: [
+            {
+                name: "poolVersion",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+    },
+    {
+        type: "error",
+        name: "LockFailure",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NoLiquidityV3",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotEnoughLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+    },
+    {
+        type: "error",
+        name: "NotPoolManager",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotSelf",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "QuoteSwap",
+        inputs: [
+            {
+                name: "amount",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+    },
+    {
+        type: "error",
+        name: "SliceOutOfBounds",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "UnexpectedRevertBytes",
+        inputs: [
+            {
+                name: "revertData",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+    },
+];
+export class MixedRouteQuoterV2__factory {
+    static createInterface() {
+        return new utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new Contract(address, _abi, signerOrProvider);
+    }
+}
+MixedRouteQuoterV2__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/StateView__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/StateView__factory.d.ts
new file mode 100644
index 0000000..d3e0d4d
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/StateView__factory.d.ts
@@ -0,0 +1,32 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { StateView, StateViewInterface } from "../StateView";
+export declare class StateView__factory {
+    static readonly abi: ({
+        type: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    })[];
+    static createInterface(): StateViewInterface;
+    static connect(address: string, signerOrProvider: Signer | Provider): StateView;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/StateView__factory.js b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/StateView__factory.js
new file mode 100644
index 0000000..186e43f
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/StateView__factory.js
@@ -0,0 +1,379 @@
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+import { Contract, utils } from "ethers";
+const _abi = [
+    {
+        type: "constructor",
+        inputs: [
+            {
+                name: "_poolManager",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "getFeeGrowthGlobals",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+        outputs: [
+            {
+                name: "feeGrowthGlobal0",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthGlobal1",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getFeeGrowthInside",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tickLower",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "tickUpper",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "feeGrowthInside0X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthInside1X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getPositionInfo",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "positionId",
+                type: "bytes32",
+                internalType: "bytes32",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "feeGrowthInside0LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthInside1LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getPositionInfo",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "owner",
+                type: "address",
+                internalType: "address",
+            },
+            {
+                name: "tickLower",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "tickUpper",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "salt",
+                type: "bytes32",
+                internalType: "bytes32",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "feeGrowthInside0LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthInside1LastX128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getPositionLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "positionId",
+                type: "bytes32",
+                internalType: "bytes32",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidity",
+                type: "uint128",
+                internalType: "uint128",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getSlot0",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+        ],
+        outputs: [
+            {
+                name: "sqrtPriceX96",
+                type: "uint160",
+                internalType: "uint160",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+            {
+                name: "protocolFee",
+                type: "uint24",
+                internalType: "uint24",
+            },
+            {
+                name: "lpFee",
+                type: "uint24",
+                internalType: "uint24",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickBitmap",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int16",
+                internalType: "int16",
+            },
+        ],
+        outputs: [
+            {
+                name: "tickBitmap",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickFeeGrowthOutside",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "feeGrowthOutside0X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthOutside1X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickInfo",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidityGross",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "liquidityNet",
+                type: "int128",
+                internalType: "int128",
+            },
+            {
+                name: "feeGrowthOutside0X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+            {
+                name: "feeGrowthOutside1X128",
+                type: "uint256",
+                internalType: "uint256",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "getTickLiquidity",
+        inputs: [
+            {
+                name: "poolId",
+                type: "bytes32",
+                internalType: "PoolId",
+            },
+            {
+                name: "tick",
+                type: "int24",
+                internalType: "int24",
+            },
+        ],
+        outputs: [
+            {
+                name: "liquidityGross",
+                type: "uint128",
+                internalType: "uint128",
+            },
+            {
+                name: "liquidityNet",
+                type: "int128",
+                internalType: "int128",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "poolManager",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "view",
+    },
+];
+export class StateView__factory {
+    static createInterface() {
+        return new utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new Contract(address, _abi, signerOrProvider);
+    }
+}
+StateView__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhdGVWaWV3X19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3R5cGVzL290aGVyL2ZhY3Rvcmllcy9TdGF0ZVZpZXdfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFHcEIsT0FBTyxFQUFFLFFBQVEsRUFBVSxLQUFLLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFHakQsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRTtZQUNOO2dCQUNFLElBQUksRUFBRSxjQUFjO2dCQUNwQixJQUFJLEVBQUUsU0FBUztnQkFDZixZQUFZLEVBQUUsdUJBQXVCO2FBQ3RDO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsWUFBWTtLQUM5QjtJQUNEO1FBQ0UsSUFBSSxFQUFFLFVBQVU7UUFDaEIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsU0FBUztnQkFDZixZQUFZLEVBQUUsUUFBUTthQUN2QjtTQUNGO1FBQ0QsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsSUFBSSxFQUFFLGtCQUFrQjtnQkFDeEIsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsWUFBWSxFQUFFLFNBQVM7YUFDeEI7WUFDRDtnQkFDRSxJQUFJLEVBQUUsa0JBQWtCO2dCQUN4QixJQUFJLEVBQUUsU0FBUztnQkFDZixZQUFZLEVBQUUsU0FBUzthQUN4QjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07S0FDeEI7SUFDRDtRQUNFLElBQUksRUFBRSxVQUFVO1FBQ2hCLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsWUFBWSxFQUFFLFFBQVE7YUFDdkI7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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.d.ts
index a086b87..155d25e 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.d.ts
@@ -13,7 +13,11 @@ export declare class TokenFeeDetector__factory {
         name?: undefined;
         outputs?: undefined;
     } | {
-        inputs: never[];
+        inputs: {
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
         name: string;
         type: string;
         stateMutability?: undefined;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.js b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.js
index d817823..423472c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.js
@@ -24,6 +24,17 @@ const _abi = [
         name: "SameToken",
         type: "error",
     },
+    {
+        inputs: [
+            {
+                internalType: "string",
+                name: "reason",
+                type: "string",
+            },
+        ],
+        name: "UnknownExternalTransferFailure",
+        type: "error",
+    },
     {
         inputs: [
             {
@@ -56,6 +67,21 @@ const _abi = [
                         name: "sellFeeBps",
                         type: "uint256",
                     },
+                    {
+                        internalType: "bool",
+                        name: "feeTakenOnTransfer",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "externalTransferFailed",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "sellReverted",
+                        type: "bool",
+                    },
                 ],
                 internalType: "struct TokenFees[]",
                 name: "fotResults",
@@ -65,6 +91,57 @@ const _abi = [
         stateMutability: "nonpayable",
         type: "function",
     },
+    {
+        inputs: [
+            {
+                internalType: "contract ERC20",
+                name: "token",
+                type: "address",
+            },
+            {
+                internalType: "address",
+                name: "to",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amount",
+                type: "uint256",
+            },
+        ],
+        name: "callTransfer",
+        outputs: [],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+    {
+        inputs: [
+            {
+                internalType: "contract ERC20",
+                name: "token",
+                type: "address",
+            },
+            {
+                internalType: "address",
+                name: "to",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amount",
+                type: "uint256",
+            },
+            {
+                internalType: "uint256",
+                name: "expectedBalance",
+                type: "uint256",
+            },
+        ],
+        name: "callTransfer",
+        outputs: [],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
     {
         inputs: [
             {
@@ -125,6 +202,21 @@ const _abi = [
                         name: "sellFeeBps",
                         type: "uint256",
                     },
+                    {
+                        internalType: "bool",
+                        name: "feeTakenOnTransfer",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "externalTransferFailed",
+                        type: "bool",
+                    },
+                    {
+                        internalType: "bool",
+                        name: "sellReverted",
+                        type: "bool",
+                    },
                 ],
                 internalType: "struct TokenFees",
                 name: "fotResult",
@@ -144,4 +236,4 @@ export class TokenFeeDetector__factory {
     }
 }
 TokenFeeDetector__factory.abi = _abi;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFVLEtBQUssRUFBRSxNQUFNLFFBQVEsQ0FBQztBQU1qRCxNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxZQUFZO2dCQUNsQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLGFBQWE7S0FDcEI7SUFDRDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxXQUFXO1FBQ2pCLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxXQUFXO2dCQUN6QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsV0FBVzthQUNsQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsV0FBVztnQkFDakIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLGdCQUFnQjtnQkFDdEIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxlQUFlO1FBQ3JCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFVBQVUsRUFBRTtvQkFDVjt3QkFDRSxZ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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFVLEtBQUssRUFBRSxNQUFNLFFBQVEsQ0FBQztBQU1qRCxNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxZQUFZO2dCQUNsQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLGFBQWE7S0FDcEI7SUFDRDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxXQUFXO1FBQ2pCLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxRQUFRO2dCQUN0QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsUUFBUTthQUNmO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsZ0NBQWdDO1FBQ3RDLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxXQUFXO2dCQUN6QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsV0FBVzthQUNsQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsV0FBVztnQkFDakIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtn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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/V4Quoter__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/V4Quoter__factory.d.ts
new file mode 100644
index 0000000..7dca5fd
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/V4Quoter__factory.d.ts
@@ -0,0 +1,71 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { V4Quoter, V4QuoterInterface } from "../V4Quoter";
+export declare class V4Quoter__factory {
+    static readonly abi: ({
+        type: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+            components: ({
+                name: string;
+                type: string;
+                internalType: string;
+                components?: undefined;
+            } | {
+                name: string;
+                type: string;
+                internalType: string;
+                components: {
+                    name: string;
+                    type: string;
+                    internalType: string;
+                }[];
+            })[];
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        outputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability: string;
+    } | {
+        type: string;
+        name: string;
+        inputs: {
+            name: string;
+            type: string;
+            internalType: string;
+        }[];
+        stateMutability?: undefined;
+        outputs?: undefined;
+    })[];
+    static createInterface(): V4QuoterInterface;
+    static connect(address: string, signerOrProvider: Signer | Provider): V4Quoter;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/V4Quoter__factory.js b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/V4Quoter__factory.js
new file mode 100644
index 0000000..690a3e4
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/V4Quoter__factory.js
@@ -0,0 +1,684 @@
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+import { Contract, utils } from "ethers";
+const _abi = [
+    {
+        type: "constructor",
+        inputs: [
+            {
+                name: "_poolManager",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactInput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactInputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactOutput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "_quoteExactOutputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "poolManager",
+        inputs: [],
+        outputs: [
+            {
+                name: "",
+                type: "address",
+                internalType: "contract IPoolManager",
+            },
+        ],
+        stateMutability: "view",
+    },
+    {
+        type: "function",
+        name: "quoteExactInput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96AfterList",
+                type: "uint160[]",
+                internalType: "uint160[]",
+            },
+            {
+                name: "initializedTicksLoadedList",
+                type: "uint32[]",
+                internalType: "uint32[]",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactInputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96After",
+                type: "uint160",
+                internalType: "uint160",
+            },
+            {
+                name: "initializedTicksLoaded",
+                type: "uint32",
+                internalType: "uint32",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactOutput",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactParams",
+                components: [
+                    {
+                        name: "exactCurrency",
+                        type: "address",
+                        internalType: "Currency",
+                    },
+                    {
+                        name: "path",
+                        type: "tuple[]",
+                        internalType: "struct PathKey[]",
+                        components: [
+                            {
+                                name: "intermediateCurrency",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                            {
+                                name: "hookData",
+                                type: "bytes",
+                                internalType: "bytes",
+                            },
+                        ],
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96AfterList",
+                type: "uint160[]",
+                internalType: "uint160[]",
+            },
+            {
+                name: "initializedTicksLoadedList",
+                type: "uint32[]",
+                internalType: "uint32[]",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "quoteExactOutputSingle",
+        inputs: [
+            {
+                name: "params",
+                type: "tuple",
+                internalType: "struct IQuoter.QuoteExactSingleParams",
+                components: [
+                    {
+                        name: "poolKey",
+                        type: "tuple",
+                        internalType: "struct PoolKey",
+                        components: [
+                            {
+                                name: "currency0",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "currency1",
+                                type: "address",
+                                internalType: "Currency",
+                            },
+                            {
+                                name: "fee",
+                                type: "uint24",
+                                internalType: "uint24",
+                            },
+                            {
+                                name: "tickSpacing",
+                                type: "int24",
+                                internalType: "int24",
+                            },
+                            {
+                                name: "hooks",
+                                type: "address",
+                                internalType: "contract IHooks",
+                            },
+                        ],
+                    },
+                    {
+                        name: "zeroForOne",
+                        type: "bool",
+                        internalType: "bool",
+                    },
+                    {
+                        name: "exactAmount",
+                        type: "uint128",
+                        internalType: "uint128",
+                    },
+                    {
+                        name: "sqrtPriceLimitX96",
+                        type: "uint160",
+                        internalType: "uint160",
+                    },
+                    {
+                        name: "hookData",
+                        type: "bytes",
+                        internalType: "bytes",
+                    },
+                ],
+            },
+        ],
+        outputs: [
+            {
+                name: "deltaAmounts",
+                type: "int128[]",
+                internalType: "int128[]",
+            },
+            {
+                name: "sqrtPriceX96After",
+                type: "uint160",
+                internalType: "uint160",
+            },
+            {
+                name: "initializedTicksLoaded",
+                type: "uint32",
+                internalType: "uint32",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "function",
+        name: "unlockCallback",
+        inputs: [
+            {
+                name: "data",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        outputs: [
+            {
+                name: "",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+        stateMutability: "nonpayable",
+    },
+    {
+        type: "error",
+        name: "InsufficientAmountOut",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "InvalidLockCaller",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "InvalidQuoteBatchParams",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "LockFailure",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotPoolManager",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "NotSelf",
+        inputs: [],
+    },
+    {
+        type: "error",
+        name: "UnexpectedRevertBytes",
+        inputs: [
+            {
+                name: "revertData",
+                type: "bytes",
+                internalType: "bytes",
+            },
+        ],
+    },
+];
+export class V4Quoter__factory {
+    static createInterface() {
+        return new utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new Contract(address, _abi, signerOrProvider);
+    }
+}
+V4Quoter__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.d.ts b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.d.ts
index f313200..4194764 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.d.ts
@@ -1,4 +1,4 @@
-import { ChainId, Token } from '@uniswap/sdk-core';
+import { ChainId, Currency, Token } from '@uniswap/sdk-core';
 export declare const BNB_TICK_LENS_ADDRESS: string | undefined;
 export declare const BNB_NONFUNGIBLE_POSITION_MANAGER_ADDRESS: string | undefined;
 export declare const BNB_SWAP_ROUTER_02_ADDRESS: string;
@@ -6,9 +6,12 @@ export declare const BNB_V3_MIGRATOR_ADDRESS: string | undefined;
 export declare const V3_CORE_FACTORY_ADDRESSES: AddressMap;
 export declare const QUOTER_V2_ADDRESSES: AddressMap;
 export declare const NEW_QUOTER_V2_ADDRESSES: AddressMap;
+export declare const PROTOCOL_V4_QUOTER_ADDRESSES: AddressMap;
 export declare const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap;
+export declare const MIXED_ROUTE_QUOTER_V2_ADDRESSES: AddressMap;
 export declare const UNISWAP_MULTICALL_ADDRESSES: AddressMap;
 export declare const SWAP_ROUTER_02_ADDRESSES: (chainId: number) => string;
+export declare const STATE_VIEW_ADDRESSES: AddressMap;
 export declare const OVM_GASPRICE_ADDRESS = "0x420000000000000000000000000000000000000F";
 export declare const ARB_GASINFO_ADDRESS = "0x000000000000000000000000000000000000006C";
 export declare const TICK_LENS_ADDRESS: string | undefined;
@@ -25,3 +28,5 @@ export declare const WETH9: {
     [chainId in Exclude<ChainId, ChainId.POLYGON | ChainId.POLYGON_MUMBAI | ChainId.CELO | ChainId.CELO_ALFAJORES | ChainId.GNOSIS | ChainId.MOONBEAM | ChainId.BNB | ChainId.AVALANCHE | ChainId.ROOTSTOCK>]: Token;
 };
 export declare const BEACON_CHAIN_DEPOSIT_ADDRESS = "0x00000000219ab540356cBB839Cbe05303d7705Fa";
+export declare function getAddressLowerCase(currency: Currency): string;
+export declare function getAddress(currency: Currency): string;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
index f13d9b5..3933418 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
@@ -1,5 +1,6 @@
 import { ChainId, CHAIN_TO_ADDRESSES_MAP, SWAP_ROUTER_02_ADDRESSES as SWAP_ROUTER_02_ADDRESSES_HELPER, Token, } from '@uniswap/sdk-core';
 import { FACTORY_ADDRESS } from '@uniswap/v3-sdk';
+import { ADDRESS_ZERO } from '@uniswap/router-sdk';
 import { NETWORKS_WITH_SAME_UNISWAP_ADDRESSES } from './chains';
 export const BNB_TICK_LENS_ADDRESS = CHAIN_TO_ADDRESSES_MAP[ChainId.BNB].tickLensAddress;
 export const BNB_NONFUNGIBLE_POSITION_MANAGER_ADDRESS = CHAIN_TO_ADDRESSES_MAP[ChainId.BNB].nonfungiblePositionManagerAddress;
@@ -21,6 +22,17 @@ export const V3_CORE_FACTORY_ADDRESSES = {
     [ChainId.BLAST]: CHAIN_TO_ADDRESSES_MAP[ChainId.BLAST].v3CoreFactoryAddress,
     [ChainId.ZORA]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZORA].v3CoreFactoryAddress,
     [ChainId.ZKSYNC]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZKSYNC].v3CoreFactoryAddress,
+    [ChainId.ABSTRACT_TESTNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ABSTRACT_TESTNET].v3CoreFactoryAddress,
+    [ChainId.ZERO]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZERO].v3CoreFactoryAddress,
+    [ChainId.BOB]: CHAIN_TO_ADDRESSES_MAP[ChainId.BOB].v3CoreFactoryAddress,
+    [ChainId.CYBER]: CHAIN_TO_ADDRESSES_MAP[ChainId.CYBER].v3CoreFactoryAddress,
+    [ChainId.SHAPE]: CHAIN_TO_ADDRESSES_MAP[ChainId.SHAPE].v3CoreFactoryAddress,
+    [ChainId.INK]: CHAIN_TO_ADDRESSES_MAP[ChainId.INK].v3CoreFactoryAddress,
+    [ChainId.REDSTONE]: CHAIN_TO_ADDRESSES_MAP[ChainId.REDSTONE].v3CoreFactoryAddress,
+    [ChainId.REDSTONE_GARNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.REDSTONE_GARNET].v3CoreFactoryAddress,
+    [ChainId.ABSTRACT_MAINNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ABSTRACT_MAINNET].v3CoreFactoryAddress,
+    [ChainId.ANIME_TESTNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ANIME_TESTNET].v3CoreFactoryAddress,
+    [ChainId.MODE]: CHAIN_TO_ADDRESSES_MAP[ChainId.MODE].v3CoreFactoryAddress,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const QUOTER_V2_ADDRESSES = {
@@ -39,6 +51,17 @@ export const QUOTER_V2_ADDRESSES = {
     [ChainId.BLAST]: CHAIN_TO_ADDRESSES_MAP[ChainId.BLAST].quoterAddress,
     [ChainId.ZORA]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZORA].quoterAddress,
     [ChainId.ZKSYNC]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZKSYNC].quoterAddress,
+    [ChainId.ABSTRACT_TESTNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ABSTRACT_TESTNET].quoterAddress,
+    [ChainId.ZERO]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZERO].quoterAddress,
+    [ChainId.BOB]: CHAIN_TO_ADDRESSES_MAP[ChainId.BOB].quoterAddress,
+    [ChainId.CYBER]: CHAIN_TO_ADDRESSES_MAP[ChainId.CYBER].quoterAddress,
+    [ChainId.SHAPE]: CHAIN_TO_ADDRESSES_MAP[ChainId.SHAPE].quoterAddress,
+    [ChainId.INK]: CHAIN_TO_ADDRESSES_MAP[ChainId.INK].quoterAddress,
+    [ChainId.REDSTONE]: CHAIN_TO_ADDRESSES_MAP[ChainId.REDSTONE].quoterAddress,
+    [ChainId.REDSTONE_GARNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.REDSTONE_GARNET].quoterAddress,
+    [ChainId.ABSTRACT_MAINNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ABSTRACT_MAINNET].quoterAddress,
+    [ChainId.ANIME_TESTNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ANIME_TESTNET].quoterAddress,
+    [ChainId.MODE]: CHAIN_TO_ADDRESSES_MAP[ChainId.MODE].quoterAddress,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const NEW_QUOTER_V2_ADDRESSES = {
@@ -56,10 +79,18 @@ export const NEW_QUOTER_V2_ADDRESSES = {
     [ChainId.ZORA]: '0x9D0F15f2cf58655fDDcD1EE6129C547fDaeD01b1',
     [ChainId.ZKSYNC]: '0x071Bd2063dF031EDd110E27C6F4CDe50A3DeF2d4',
 };
+export const PROTOCOL_V4_QUOTER_ADDRESSES = {
+    ...constructSameAddressMap('0xf3a39c86dbd13c45365e57fb90fe413371f65af8'),
+    [ChainId.SEPOLIA]: '0x8C41f1696360ca987803a4c24B8b7c36dFd61c4d',
+};
 export const MIXED_ROUTE_QUOTER_V1_ADDRESSES = {
     [ChainId.MAINNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.MAINNET].mixedRouteQuoterV1Address,
     [ChainId.GOERLI]: CHAIN_TO_ADDRESSES_MAP[ChainId.GOERLI].mixedRouteQuoterV1Address,
 };
+// TODO: use CHAIN_TO_ADDRESSES_MAP[ChainId.GOERLI].mixedRouteQuoterV2Address once sdk-core finalizes deploy addresses
+export const MIXED_ROUTE_QUOTER_V2_ADDRESSES = {
+    [ChainId.SEPOLIA]: '0x4745f77b56a0e2294426e3936dc4fab68d9543cd',
+};
 export const UNISWAP_MULTICALL_ADDRESSES = {
     ...constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984'),
     [ChainId.CELO]: CHAIN_TO_ADDRESSES_MAP[ChainId.CELO].multicallAddress,
@@ -76,11 +107,27 @@ export const UNISWAP_MULTICALL_ADDRESSES = {
     [ChainId.BLAST]: CHAIN_TO_ADDRESSES_MAP[ChainId.BLAST].multicallAddress,
     [ChainId.ZORA]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZORA].multicallAddress,
     [ChainId.ZKSYNC]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZKSYNC].multicallAddress,
+    [ChainId.ABSTRACT_TESTNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ABSTRACT_TESTNET].multicallAddress,
+    [ChainId.ZERO]: CHAIN_TO_ADDRESSES_MAP[ChainId.ZERO].multicallAddress,
+    [ChainId.BOB]: CHAIN_TO_ADDRESSES_MAP[ChainId.BOB].multicallAddress,
+    [ChainId.CYBER]: CHAIN_TO_ADDRESSES_MAP[ChainId.CYBER].multicallAddress,
+    [ChainId.SHAPE]: CHAIN_TO_ADDRESSES_MAP[ChainId.SHAPE].multicallAddress,
+    [ChainId.INK]: CHAIN_TO_ADDRESSES_MAP[ChainId.INK].multicallAddress,
+    [ChainId.REDSTONE]: CHAIN_TO_ADDRESSES_MAP[ChainId.REDSTONE].multicallAddress,
+    [ChainId.REDSTONE_GARNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.REDSTONE_GARNET].multicallAddress,
+    [ChainId.ABSTRACT_MAINNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ABSTRACT_MAINNET].multicallAddress,
+    [ChainId.ANIME_TESTNET]: CHAIN_TO_ADDRESSES_MAP[ChainId.ANIME_TESTNET].multicallAddress,
+    [ChainId.ANIME]: CHAIN_TO_ADDRESSES_MAP[ChainId.ANIME].multicallAddress,
+    [ChainId.MODE]: CHAIN_TO_ADDRESSES_MAP[ChainId.MODE].multicallAddress,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const SWAP_ROUTER_02_ADDRESSES = (chainId) => {
     var _a;
-    return (_a = SWAP_ROUTER_02_ADDRESSES_HELPER(chainId)) !== null && _a !== void 0 ? _a : '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45';
+    return ((_a = SWAP_ROUTER_02_ADDRESSES_HELPER(chainId)) !== null && _a !== void 0 ? _a : '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45');
+};
+export const STATE_VIEW_ADDRESSES = {
+    ...constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984'),
+    [ChainId.SEPOLIA]: '0x6Bb7157fb50e3Ae4983Ccdc62Fb8173c03c6b0a7',
 };
 export const OVM_GASPRICE_ADDRESS = '0x420000000000000000000000000000000000000F';
 export const ARB_GASINFO_ADDRESS = '0x000000000000000000000000000000000000006C';
@@ -110,6 +157,34 @@ export const WETH9 = {
     [ChainId.ZORA]: new Token(ChainId.ZORA, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ZORA_SEPOLIA]: new Token(ChainId.ZORA_SEPOLIA, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ZKSYNC]: new Token(ChainId.ZKSYNC, '0x5aea5775959fbc2557cc8789bc1bf90a239d9a91', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ABSTRACT_TESTNET]: new Token(ChainId.ABSTRACT_TESTNET, '0x9EDCde0257F2386Ce177C3a7FCdd97787F0D841d', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ZERO]: new Token(ChainId.ZERO, '0xAc98B49576B1C892ba6BFae08fE1BB0d80Cf599c', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.BOB]: new Token(ChainId.BOB, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.CYBER]: new Token(ChainId.CYBER, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.SHAPE]: new Token(ChainId.SHAPE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.INK]: new Token(ChainId.INK, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.REDSTONE]: new Token(ChainId.REDSTONE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.REDSTONE_GARNET]: new Token(ChainId.REDSTONE_GARNET, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ABSTRACT_MAINNET]: new Token(ChainId.ABSTRACT_MAINNET, '0x3439153EB7AF838Ad19d56E1571FBD09333C2809', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ANIME_TESTNET]: new Token(ChainId.ANIME_TESTNET, '0x8f3e2785985aa4005c63f97f7cc89ce91a948267', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ANIME]: new Token(ChainId.ANIME, '0x164906a76f1A2Ea933366c446AE0Ec6a37062c42', 18, 'WANIME', 'Wrapped ANIME'),
+    [ChainId.MODE]: new Token(ChainId.MODE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
 };
 export const BEACON_CHAIN_DEPOSIT_ADDRESS = '0x00000000219ab540356cBB839Cbe05303d7705Fa';
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+export function getAddressLowerCase(currency) {
+    if (currency.isToken) {
+        return currency.address.toLowerCase();
+    }
+    else {
+        return ADDRESS_ZERO;
+    }
+}
+export function getAddress(currency) {
+    if (currency.isToken) {
+        return currency.address;
+    }
+    else {
+        return ADDRESS_ZERO;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxPQUFPLEVBQ1Asc0JBQXNCLEVBRXRCLHdCQUF3QixJQUFJLCtCQUErQixFQUMzRCxLQUFLLEdBQ04sTUFBTSxtQkFBbUIsQ0FBQztBQUMzQixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FDaEMsc0JBQXNCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGVBQWUsQ0FBQztBQUN0RCxNQUFNLENBQUMsTUFBTSx3Q0FBd0MsR0FDbkQsc0JBQXNCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0FBQ3hFLE1BQU0sQ0FBQyxNQUFNLDBCQUEwQixHQUNyQyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsbUJBQW9CLENBQUM7QUFDM0QsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQ2xDLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztBQUV4RCxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBZTtJQUNuRCxHQUFHLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztJQUMzQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsb0JBQW9CO0lBQ3pFLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUN0QixzQkFBc0IsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsb0JBQW9CO0lBQ3JF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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts b/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
index dc09920..96f24ab 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
@@ -1,6 +1,7 @@
 import { ChainId, Ether, NativeCurrency, Token } from '@uniswap/sdk-core';
 export declare const SUPPORTED_CHAINS: ChainId[];
 export declare const V2_SUPPORTED: ChainId[];
+export declare const V4_SUPPORTED: ChainId[];
 export declare const HAS_L1_FEE: ChainId[];
 export declare const NETWORKS_WITH_SAME_UNISWAP_ADDRESSES: ChainId[];
 export declare const ID_TO_CHAIN_ID: (id: number) => ChainId;
@@ -26,7 +27,19 @@ export declare enum ChainName {
     BASE_GOERLI = "base-goerli",
     BLAST = "blast-mainnet",
     ZORA = "zora-mainnet",
-    ZKSYNC = "zksync-mainnet"
+    ZKSYNC = "zksync-mainnet",
+    ABSTRACT_TESTNET = "abstract-testnet",
+    ZERO = "zero",
+    BOB = "bob",
+    CYBER = "cyeth",
+    SHAPE = "shape",
+    INK = "ink",
+    REDSTONE = "redstone",
+    REDSTONE_GARNET = "redstone-garnet",
+    ABSTRACT_MAINNET = "abstract",
+    ANIME_TESTNET = "anime-testnet",
+    ANIME = "anime",
+    MODE = "mode"
 }
 export declare enum NativeCurrencyName {
     ETHER = "ETH",
@@ -35,7 +48,9 @@ export declare enum NativeCurrencyName {
     GNOSIS = "XDAI",
     MOONBEAM = "GLMR",
     BNB = "BNB",
-    AVALANCHE = "AVAX"
+    AVALANCHE = "AVAX",
+    ANIME_TESTNET = "ANIME",
+    ANIME = "ANIME"
 }
 export declare const NATIVE_NAMES_BY_ID: {
     [chainId: number]: string[];
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/chains.js b/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
index 176103e..aa1f01a 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
@@ -1,4 +1,4 @@
-import { ChainId, Ether, NativeCurrency, Token } from '@uniswap/sdk-core';
+import { ChainId, Ether, NativeCurrency, Token, } from '@uniswap/sdk-core';
 // WIP: Gnosis, Moonbeam
 export const SUPPORTED_CHAINS = [
     ChainId.MAINNET,
@@ -19,6 +19,15 @@ export const SUPPORTED_CHAINS = [
     ChainId.BLAST,
     ChainId.ZORA,
     ChainId.ZKSYNC,
+    ChainId.ABSTRACT_TESTNET,
+    ChainId.ZERO,
+    ChainId.BOB,
+    ChainId.CYBER,
+    ChainId.SHAPE,
+    ChainId.INK,
+    ChainId.ABSTRACT_MAINNET,
+    ChainId.ANIME_TESTNET,
+    ChainId.MODE,
     // Gnosis and Moonbeam don't yet have contracts deployed yet
 ];
 export const V2_SUPPORTED = [
@@ -30,7 +39,20 @@ export const V2_SUPPORTED = [
     ChainId.BASE,
     ChainId.BNB,
     ChainId.AVALANCHE,
+    ChainId.ABSTRACT_TESTNET,
+    ChainId.ZERO,
+    ChainId.CYBER,
+    ChainId.SHAPE,
+    ChainId.INK,
+    // Enable once supported
+    // ChainId.REDSTONE,
+    // ChainId.REDSTONE_GARNET,
+    // ChainId.BOB,
+    ChainId.ABSTRACT_MAINNET,
+    ChainId.ANIME_TESTNET,
+    ChainId.MODE,
 ];
+export const V4_SUPPORTED = [ChainId.SEPOLIA];
 export const HAS_L1_FEE = [
     ChainId.OPTIMISM,
     ChainId.OPTIMISM_GOERLI,
@@ -42,6 +64,7 @@ export const HAS_L1_FEE = [
     ChainId.BASE_GOERLI,
     ChainId.BLAST,
     ChainId.ZORA,
+    //Omitting redstone
 ];
 export const NETWORKS_WITH_SAME_UNISWAP_ADDRESSES = [
     ChainId.MAINNET,
@@ -97,6 +120,28 @@ export const ID_TO_CHAIN_ID = (id) => {
             return ChainId.ZORA;
         case 324:
             return ChainId.ZKSYNC;
+        case 11124:
+            return ChainId.ABSTRACT_TESTNET;
+        case 543210:
+            return ChainId.ZERO;
+        case 60808:
+            return ChainId.BOB;
+        case 7560:
+            return ChainId.CYBER;
+        case 360:
+            return ChainId.SHAPE;
+        case 57073:
+            return ChainId.INK;
+        case 690:
+            return ChainId.REDSTONE;
+        case 17069:
+            return ChainId.REDSTONE_GARNET;
+        case 2741:
+            return ChainId.ABSTRACT_MAINNET;
+        case 6900:
+            return ChainId.ANIME_TESTNET;
+        case 34443:
+            return ChainId.MODE;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -125,6 +170,18 @@ export var ChainName;
     ChainName["BLAST"] = "blast-mainnet";
     ChainName["ZORA"] = "zora-mainnet";
     ChainName["ZKSYNC"] = "zksync-mainnet";
+    ChainName["ABSTRACT_TESTNET"] = "abstract-testnet";
+    ChainName["ZERO"] = "zero";
+    ChainName["BOB"] = "bob";
+    ChainName["CYBER"] = "cyeth";
+    ChainName["SHAPE"] = "shape";
+    ChainName["INK"] = "ink";
+    ChainName["REDSTONE"] = "redstone";
+    ChainName["REDSTONE_GARNET"] = "redstone-garnet";
+    ChainName["ABSTRACT_MAINNET"] = "abstract";
+    ChainName["ANIME_TESTNET"] = "anime-testnet";
+    ChainName["ANIME"] = "anime";
+    ChainName["MODE"] = "mode";
 })(ChainName || (ChainName = {}));
 export var NativeCurrencyName;
 (function (NativeCurrencyName) {
@@ -136,6 +193,8 @@ export var NativeCurrencyName;
     NativeCurrencyName["MOONBEAM"] = "GLMR";
     NativeCurrencyName["BNB"] = "BNB";
     NativeCurrencyName["AVALANCHE"] = "AVAX";
+    NativeCurrencyName["ANIME_TESTNET"] = "ANIME";
+    NativeCurrencyName["ANIME"] = "ANIME";
 })(NativeCurrencyName || (NativeCurrencyName = {}));
 export const NATIVE_NAMES_BY_ID = {
     [ChainId.MAINNET]: [
@@ -218,6 +277,58 @@ export const NATIVE_NAMES_BY_ID = {
         'ETHER',
         '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
     ],
+    [ChainId.ABSTRACT_TESTNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.ZERO]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.BOB]: ['ETH', 'ETHER', '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'],
+    [ChainId.CYBER]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.SHAPE]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.INK]: ['ETH', 'ETHER', '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'],
+    [ChainId.REDSTONE]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.REDSTONE_GARNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.ABSTRACT_MAINNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.ANIME_TESTNET]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.ANIME]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
+    [ChainId.MODE]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
 };
 export const NATIVE_CURRENCY = {
     [ChainId.MAINNET]: NativeCurrencyName.ETHER,
@@ -241,6 +352,18 @@ export const NATIVE_CURRENCY = {
     [ChainId.BLAST]: NativeCurrencyName.ETHER,
     [ChainId.ZORA]: NativeCurrencyName.ETHER,
     [ChainId.ZKSYNC]: NativeCurrencyName.ETHER,
+    [ChainId.ABSTRACT_TESTNET]: NativeCurrencyName.ETHER,
+    [ChainId.ZERO]: NativeCurrencyName.ETHER,
+    [ChainId.BOB]: NativeCurrencyName.ETHER,
+    [ChainId.CYBER]: NativeCurrencyName.ETHER,
+    [ChainId.SHAPE]: NativeCurrencyName.ETHER,
+    [ChainId.INK]: NativeCurrencyName.ETHER,
+    [ChainId.REDSTONE]: NativeCurrencyName.ETHER,
+    [ChainId.REDSTONE_GARNET]: NativeCurrencyName.ETHER,
+    [ChainId.ABSTRACT_MAINNET]: NativeCurrencyName.ETHER,
+    [ChainId.ANIME_TESTNET]: NativeCurrencyName.ETHER,
+    [ChainId.ANIME]: NativeCurrencyName.ANIME,
+    [ChainId.MODE]: NativeCurrencyName.ETHER,
 };
 export const ID_TO_NETWORK_NAME = (id) => {
     switch (id) {
@@ -288,6 +411,30 @@ export const ID_TO_NETWORK_NAME = (id) => {
             return ChainName.ZORA;
         case 324:
             return ChainName.ZKSYNC;
+        case 11124:
+            return ChainName.ABSTRACT_TESTNET;
+        case 543210:
+            return ChainName.ZERO;
+        case 60808:
+            return ChainName.BOB;
+        case 7560:
+            return ChainName.CYBER;
+        case 360:
+            return ChainName.SHAPE;
+        case 57073:
+            return ChainName.INK;
+        case 690:
+            return ChainName.REDSTONE;
+        case 17069:
+            return ChainName.REDSTONE_GARNET;
+        case 2741:
+            return ChainName.ABSTRACT_MAINNET;
+        case 6900:
+            return ChainName.ANIME_TESTNET;
+        case 69000:
+            return ChainName.ANIME;
+        case 34443:
+            return ChainName.MODE;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -333,6 +480,30 @@ export const ID_TO_PROVIDER = (id) => {
             return process.env.JSON_RPC_PROVIDER_ZORA;
         case ChainId.ZKSYNC:
             return process.env.JSON_RPC_PROVIDER_ZKSYNC;
+        case ChainId.ABSTRACT_TESTNET:
+            return process.env.JSON_RPC_PROVIDER_ABSTRACT_TESTNET;
+        case ChainId.ZERO:
+            return process.env.JSON_RPC_PROVIDER_ZERO;
+        case ChainId.BOB:
+            return process.env.JSON_RPC_PROVIDER_BOB;
+        case ChainId.CYBER:
+            return process.env.JSON_RPC_PROVIDER_CYBER;
+        case ChainId.SHAPE:
+            return process.env.JSON_RPC_PROVIDER_SHAPE;
+        case ChainId.INK:
+            return process.env.JSON_RPC_PROVIDER_INK;
+        case ChainId.REDSTONE:
+            return process.env.JSON_RPC_PROVIDER_REDSTONE;
+        case ChainId.REDSTONE_GARNET:
+            return process.env.JSON_RPC_PROVIDER_REDSTONE_GARNET;
+        case ChainId.ABSTRACT_MAINNET:
+            return process.env.JSON_RPC_PROVIDER_ABSTRACT_MAINNET;
+        case ChainId.ANIME_TESTNET:
+            return process.env.JSON_RPC_PROVIDER_ANIME_TESTNET;
+        case ChainId.ANIME:
+            return process.env.JSON_RPC_PROVIDER_ANIME;
+        case ChainId.MODE:
+            return process.env.JSON_RPC_PROVIDER_MODE;
         default:
             throw new Error(`Chain id: ${id} not supported`);
     }
@@ -363,6 +534,18 @@ export const WRAPPED_NATIVE_CURRENCY = {
     [ChainId.ZORA_SEPOLIA]: new Token(ChainId.ZORA_SEPOLIA, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.BLAST]: new Token(ChainId.BLAST, '0x4300000000000000000000000000000000000004', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ZKSYNC]: new Token(ChainId.ZKSYNC, '0x5aea5775959fbc2557cc8789bc1bf90a239d9a91', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ABSTRACT_TESTNET]: new Token(ChainId.ABSTRACT_TESTNET, '0x9EDCde0257F2386Ce177C3a7FCdd97787F0D841d', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ZERO]: new Token(ChainId.ZERO, '0xAc98B49576B1C892ba6BFae08fE1BB0d80Cf599c', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.BOB]: new Token(ChainId.BOB, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.CYBER]: new Token(ChainId.CYBER, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.SHAPE]: new Token(ChainId.SHAPE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.INK]: new Token(ChainId.INK, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.REDSTONE]: new Token(ChainId.REDSTONE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.REDSTONE_GARNET]: new Token(ChainId.REDSTONE_GARNET, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ABSTRACT_MAINNET]: new Token(ChainId.ABSTRACT_MAINNET, '0x3439153EB7AF838Ad19d56E1571FBD09333C2809', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ANIME_TESTNET]: new Token(ChainId.ANIME_TESTNET, '0x8f3e2785985aa4005c63f97f7cc89ce91a948267', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ANIME]: new Token(ChainId.ANIME, '0x164906a76f1A2Ea933366c446AE0Ec6a37062c42', 18, 'WANIME', 'Wrapped ANIME'),
+    [ChainId.MODE]: new Token(ChainId.MODE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
 };
 function isMatic(chainId) {
     return chainId === ChainId.POLYGON_MUMBAI || chainId === ChainId.POLYGON;
@@ -537,4 +720,4 @@ export function nativeOnChain(chainId) {
     }
     return cachedNativeCurrency[chainId];
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts
index a6dbbc3..d438371 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts
@@ -1,14 +1,15 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { ChainId, Token } from '@uniswap/sdk-core';
 import { Pool } from '@uniswap/v3-sdk';
-import { IV2PoolProvider } from '../providers';
+import { IV2PoolProvider, IV4PoolProvider } from '../providers';
 import { IPortionProvider } from '../providers/portion-provider';
 import { ArbitrumGasData } from '../providers/v3/gas-data-provider';
 import { IV3PoolProvider } from '../providers/v3/pool-provider';
 import { GasModelProviderConfig, RouteWithValidQuote, SwapOptions, SwapRoute } from '../routers';
 import { CurrencyAmount } from '../util';
-import { Pair } from '@uniswap/v2-sdk';
 import { BaseProvider } from '@ethersproject/providers';
+import { Pair } from '@uniswap/v2-sdk';
+import { ProviderConfig } from '../providers/provider';
 export declare function getV2NativePool(token: Token, poolProvider: IV2PoolProvider, providerConfig?: GasModelProviderConfig): Promise<Pair | null>;
 export declare function getHighestLiquidityV3NativePool(token: Token, poolProvider: IV3PoolProvider, providerConfig?: GasModelProviderConfig): Promise<Pool | null>;
 export declare function getHighestLiquidityV3USDPool(chainId: ChainId, poolProvider: IV3PoolProvider, providerConfig?: GasModelProviderConfig): Promise<Pool>;
@@ -23,8 +24,8 @@ export declare function calculateGasUsed(chainId: ChainId, route: SwapRoute, sim
     estimatedGasUsedGasToken?: CurrencyAmount;
     quoteGasAdjusted: CurrencyAmount;
 }>;
-export declare function initSwapRouteFromExisting(swapRoute: SwapRoute, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, portionProvider: IPortionProvider, quoteGasAdjusted: CurrencyAmount, estimatedGasUsed: BigNumber, estimatedGasUsedQuoteToken: CurrencyAmount, estimatedGasUsedUSD: CurrencyAmount, swapOptions: SwapOptions, estimatedGasUsedGasToken?: CurrencyAmount): SwapRoute;
-export declare const calculateL1GasFeesHelper: (route: RouteWithValidQuote[], chainId: ChainId, usdPool: Pair | Pool, quoteToken: Token, nativePool: Pair | Pool | null, provider: BaseProvider, l2GasData?: ArbitrumGasData) => Promise<{
+export declare function initSwapRouteFromExisting(swapRoute: SwapRoute, v2PoolProvider: IV2PoolProvider, v3PoolProvider: IV3PoolProvider, v4PoolProvider: IV4PoolProvider, portionProvider: IPortionProvider, quoteGasAdjusted: CurrencyAmount, estimatedGasUsed: BigNumber, estimatedGasUsedQuoteToken: CurrencyAmount, estimatedGasUsedUSD: CurrencyAmount, swapOptions: SwapOptions, estimatedGasUsedGasToken?: CurrencyAmount, providerConfig?: ProviderConfig): SwapRoute;
+export declare const calculateL1GasFeesHelper: (route: RouteWithValidQuote[], chainId: ChainId, usdPool: Pair | Pool, quoteToken: Token, nativePool: Pair | Pool | null, provider: BaseProvider, l2GasData?: ArbitrumGasData, providerConfig?: GasModelProviderConfig) => Promise<{
     gasUsedL1: BigNumber;
     gasUsedL1OnL2: BigNumber;
     gasCostL1USD: CurrencyAmount;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
index 172c942..73abd3d 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
@@ -5,11 +5,12 @@ import { FeeAmount } from '@uniswap/v3-sdk';
 import brotli from 'brotli';
 import JSBI from 'jsbi';
 import _ from 'lodash';
-import { getQuoteThroughNativePool, MixedRouteWithValidQuote, SwapType, usdGasTokensByChain, V2RouteWithValidQuote, V3RouteWithValidQuote, } from '../routers';
+import { getQuoteThroughNativePool, MixedRouteWithValidQuote, SwapType, usdGasTokensByChain, V2RouteWithValidQuote, V3RouteWithValidQuote, V4RouteWithValidQuote, } from '../routers';
 import { CurrencyAmount, log, WRAPPED_NATIVE_CURRENCY } from '../util';
+import { estimateL1Gas, estimateL1GasCost } from '@eth-optimism/sdk';
+import { UniversalRouterVersion } from '@uniswap/universal-router-sdk';
 import { opStackChains } from './l2FeeChains';
 import { buildSwapMethodParameters, buildTrade } from './methodParameters';
-import { estimateL1Gas, estimateL1GasCost } from '@eth-optimism/sdk';
 export async function getV2NativePool(token, poolProvider, providerConfig) {
     const chainId = token.chainId;
     const weth = WRAPPED_NATIVE_CURRENCY[chainId];
@@ -141,9 +142,12 @@ export async function calculateOptimismToL1FeeFromCalldata(calldata, chainId, pr
     const tx = {
         data: calldata,
         chainId: chainId,
-        type: 2 // sign the transaction as EIP-1559, otherwise it will fail at maxFeePerGas
+        type: 2, // sign the transaction as EIP-1559, otherwise it will fail at maxFeePerGas
     };
-    const [l1GasUsed, l1GasCost] = await Promise.all([estimateL1Gas(provider, tx), estimateL1GasCost(provider, tx)]);
+    const [l1GasUsed, l1GasCost] = await Promise.all([
+        estimateL1Gas(provider, tx),
+        estimateL1GasCost(provider, tx),
+    ]);
     return [l1GasUsed, l1GasCost];
 }
 export function getL2ToL1GasUsed(data, chainId) {
@@ -229,7 +233,7 @@ export async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolP
         quoteGasAdjusted: quoteGasAdjusted,
     };
 }
-export function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken) {
+export function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, v4PoolProvider, portionProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, swapOptions, estimatedGasUsedGasToken, providerConfig) {
     const currencyIn = swapRoute.trade.inputAmount.currency;
     const currencyOut = swapRoute.trade.outputAmount.currency;
     const tradeType = swapRoute.trade.tradeType.valueOf()
@@ -237,6 +241,20 @@ export function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvi
         : TradeType.EXACT_INPUT;
     const routesWithValidQuote = swapRoute.route.map((route) => {
         switch (route.protocol) {
+            case Protocol.V4:
+                return new V4RouteWithValidQuote({
+                    amount: CurrencyAmount.fromFractionalAmount(route.amount.currency, route.amount.numerator, route.amount.denominator),
+                    rawQuote: BigNumber.from(route.rawQuote),
+                    sqrtPriceX96AfterList: route.sqrtPriceX96AfterList.map((num) => BigNumber.from(num)),
+                    initializedTicksCrossedList: [...route.initializedTicksCrossedList],
+                    quoterGasEstimate: BigNumber.from(route.quoterGasEstimate),
+                    percent: route.percent,
+                    route: route.route,
+                    gasModel: route.gasModel,
+                    quoteToken: new Token(currencyIn.chainId, route.quoteToken.address, route.quoteToken.decimals, route.quoteToken.symbol, route.quoteToken.name),
+                    tradeType: tradeType,
+                    v4PoolProvider: v4PoolProvider,
+                });
             case Protocol.V3:
                 return new V3RouteWithValidQuote({
                     amount: CurrencyAmount.fromFractionalAmount(route.amount.currency, route.amount.numerator, route.amount.denominator),
@@ -276,14 +294,17 @@ export function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvi
                     quoteToken: new Token(currencyIn.chainId, route.quoteToken.address, route.quoteToken.decimals, route.quoteToken.symbol, route.quoteToken.name),
                     tradeType: tradeType,
                     v3PoolProvider: v3PoolProvider,
+                    v4PoolProvider: v4PoolProvider,
                 });
+            default:
+                throw new Error('Invalid protocol');
         }
     });
     const trade = buildTrade(currencyIn, currencyOut, tradeType, routesWithValidQuote);
     const quoteGasAndPortionAdjusted = swapRoute.portionAmount
         ? portionProvider.getQuoteGasAndPortionAdjusted(swapRoute.trade.tradeType, quoteGasAdjusted, swapRoute.portionAmount)
         : undefined;
-    const routesWithValidQuotePortionAdjusted = portionProvider.getRouteWithQuotePortionAdjusted(swapRoute.trade.tradeType, routesWithValidQuote, swapOptions);
+    const routesWithValidQuotePortionAdjusted = portionProvider.getRouteWithQuotePortionAdjusted(swapRoute.trade.tradeType, routesWithValidQuote, swapOptions, providerConfig);
     return {
         quote: swapRoute.quote,
         quoteGasAdjusted,
@@ -307,9 +328,11 @@ export function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvi
         portionAmount: swapRoute.portionAmount,
     };
 }
-export const calculateL1GasFeesHelper = async (route, chainId, usdPool, quoteToken, nativePool, provider, l2GasData) => {
+export const calculateL1GasFeesHelper = async (route, chainId, usdPool, quoteToken, nativePool, provider, l2GasData, providerConfig) => {
+    var _a;
     const swapOptions = {
         type: SwapType.UNIVERSAL_ROUTER,
+        version: (_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.universalRouterVersion) !== null && _a !== void 0 ? _a : UniversalRouterVersion.V1_2,
         recipient: '0x0000000000000000000000000000000000000001',
         deadlineOrPreviousBlockhash: 100,
         slippageTolerance: new Percent(5, 10000),
@@ -384,4 +407,4 @@ export const calculateL1GasFeesHelper = async (route, chainId, usdPool, quoteTok
         return calculateArbitrumToL1FeeFromCalldata(data, gasData, chainId);
     }
 };
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/l2FeeChains.js b/node_modules/@uniswap/smart-order-router/build/module/util/l2FeeChains.js
index 90c6d4a..c5cafa4 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/l2FeeChains.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/l2FeeChains.js
@@ -6,5 +6,6 @@ export const opStackChains = [
     ChainId.BASE,
     ChainId.BASE_GOERLI,
     ChainId.BLAST,
+    ChainId.ZORA,
 ];
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibDJGZWVDaGFpbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbC9sMkZlZUNoYWlucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHO0lBQzNCLE9BQU8sQ0FBQyxRQUFRO0lBQ2hCLE9BQU8sQ0FBQyxlQUFlO0lBQ3ZCLE9BQU8sQ0FBQyxnQkFBZ0I7SUFDeEIsT0FBTyxDQUFDLElBQUk7SUFDWixPQUFPLENBQUMsV0FBVztJQUNuQixPQUFPLENBQUMsS0FBSztDQUNkLENBQUMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibDJGZWVDaGFpbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbC9sMkZlZUNoYWlucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHO0lBQzNCLE9BQU8sQ0FBQyxRQUFRO0lBQ2hCLE9BQU8sQ0FBQyxlQUFlO0lBQ3ZCLE9BQU8sQ0FBQyxnQkFBZ0I7SUFDeEIsT0FBTyxDQUFDLElBQUk7SUFDWixPQUFPLENBQUMsV0FBVztJQUNuQixPQUFPLENBQUMsS0FBSztJQUNiLE9BQU8sQ0FBQyxJQUFJO0NBQ2IsQ0FBQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/methodParameters.js b/node_modules/@uniswap/smart-order-router/build/module/util/methodParameters.js
index d9859cd..02da3dc 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/methodParameters.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/methodParameters.js
@@ -3,13 +3,42 @@ import { TradeType } from '@uniswap/sdk-core';
 import { SwapRouter as UniversalRouter, UNIVERSAL_ROUTER_ADDRESS, } from '@uniswap/universal-router-sdk';
 import { Route as V2RouteRaw } from '@uniswap/v2-sdk';
 import { Route as V3RouteRaw } from '@uniswap/v3-sdk';
+import { Route as V4RouteRaw } from '@uniswap/v4-sdk';
 import _ from 'lodash';
 import { CurrencyAmount, SwapType, SWAP_ROUTER_02_ADDRESSES, } from '..';
 export function buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmounts) {
     /// Removed partition because of new mixedRoutes
+    const v4RouteAmounts = _.filter(routeAmounts, (routeAmount) => routeAmount.protocol === Protocol.V4);
     const v3RouteAmounts = _.filter(routeAmounts, (routeAmount) => routeAmount.protocol === Protocol.V3);
     const v2RouteAmounts = _.filter(routeAmounts, (routeAmount) => routeAmount.protocol === Protocol.V2);
     const mixedRouteAmounts = _.filter(routeAmounts, (routeAmount) => routeAmount.protocol === Protocol.MIXED);
+    // TODO: ROUTE-248 - refactor route objects for the trade object composition
+    const v4Routes = _.map(v4RouteAmounts, (routeAmount) => {
+        const { route, amount, quote } = routeAmount;
+        // The route, amount and quote are all in terms of wrapped tokens.
+        // When constructing the Trade object the inputAmount/outputAmount must
+        // use native currencies if specified by the user. This is so that the Trade knows to wrap/unwrap.
+        if (tradeType == TradeType.EXACT_INPUT) {
+            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);
+            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);
+            const routeRaw = new V4RouteRaw(route.pools, amountCurrency.currency, quoteCurrency.currency);
+            return {
+                routev4: routeRaw,
+                inputAmount: amountCurrency,
+                outputAmount: quoteCurrency,
+            };
+        }
+        else {
+            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);
+            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);
+            const routeCurrency = new V4RouteRaw(route.pools, quoteCurrency.currency, amountCurrency.currency);
+            return {
+                routev4: routeCurrency,
+                inputAmount: quoteCurrency,
+                outputAmount: amountCurrency,
+            };
+        }
+    });
     const v3Routes = _.map(v3RouteAmounts, (routeAmount) => {
         const { route, amount, quote } = routeAmount;
         // The route, amount and quote are all in terms of wrapped tokens.
@@ -79,14 +108,22 @@ export function buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAm
             outputAmount: quoteCurrency,
         };
     });
-    const trade = new Trade({ v2Routes, v3Routes, mixedRoutes, tradeType });
+    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
+    // @ts-ignore
+    const trade = new Trade({
+        v2Routes,
+        v3Routes,
+        v4Routes,
+        mixedRoutes,
+        tradeType,
+    });
     return trade;
 }
 export function buildSwapMethodParameters(trade, swapConfig, chainId) {
     if (swapConfig.type == SwapType.UNIVERSAL_ROUTER) {
         return {
             ...UniversalRouter.swapERC20CallParameters(trade, swapConfig),
-            to: UNIVERSAL_ROUTER_ADDRESS(chainId),
+            to: UNIVERSAL_ROUTER_ADDRESS(swapConfig.version, chainId),
         };
     }
     else if (swapConfig.type == SwapType.SWAP_ROUTER_02) {
@@ -103,4 +140,4 @@ export function buildSwapMethodParameters(trade, swapConfig, chainId) {
     }
     throw new Error(`Unsupported swap type ${swapConfig}`);
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0aG9kUGFyYW1ldGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsL21ldGhvZFBhcmFtZXRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLGFBQWEsRUFDYixRQUFRLEVBQ1IsVUFBVSxJQUFJLFlBQVksRUFDMUIsS0FBSyxHQUNOLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFxQixTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRSxPQUFPLEVBQ0wsVUFBVSxJQUFJLGVBQWUsRUFDN0Isd0JBQXdCLEdBQ3pCLE1BQU0sK0JBQStCLENBQUM7QUFDdkMsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsS0FBSyxJQUFJLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBQ0wsY0FBYyxFQUtkLFFBQVEsRUFDUix3QkFBd0IsR0FHekIsTUFBTSxJQUFJLENBQUM7QUFFWixNQUFNLFVBQVUsVUFBVSxDQUN4QixlQUF5QixFQUN6QixnQkFBMEIsRUFDMUIsU0FBcUIsRUFDckIsWUFBbUM7SUFFbkMsZ0RBQWdEO0lBQ2hELE1BQU0sY0FBYyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQzdCLFlBQVksRUFDWixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsRUFBRSxDQUN0RCxDQUFDO0lBQ0YsTUFBTSxjQUFjLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FDN0IsWUFBWSxFQUNaLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxFQUFFLENBQ3RELENBQUM7SUFDRixNQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBQyxNQUFNLENBQ2hDLFlB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0aG9kUGFyYW1ldGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsL21ldGhvZFBhcmFtZXRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLGFBQWEsRUFDYixRQUFRLEVBQ1IsVUFBVSxJQUFJLFlBQVksRUFDMUIsS0FBSyxHQUNOLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFxQixTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRSxPQUFPLEVBQ0wsVUFBVSxJQUFJLGVBQWUsRUFDN0Isd0JBQXdCLEdBQ3pCLE1BQU0sK0JBQStCLENBQUM7QUFDdkMsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsS0FBSyxJQUFJLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxLQUFLLElBQUksVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFDTCxjQUFjLEVBS2QsUUFBUSxFQUNSLHdCQUF3QixHQUl6QixNQUFNLElBQUksQ0FBQztBQUVaLE1BQU0sVUFBVSxVQUFVLENBQ3hCLGVBQXlCLEVBQ3pCLGdCQUEwQixFQUMxQixTQUFxQixFQUNyQixZQUFtQztJQUVuQyxnREFBZ0Q7SUFDaEQsTUFBTSxjQUFjLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FDN0IsWUFBWSxFQUNaLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxFQUFFLENBQ3RELENBQUM7SUFDRixNQUFNLGNBQWMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUM3QixZQUFZLEVBQ1osQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLEVBQUUsQ0FD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/protocols.js b/node_modules/@uniswap/smart-order-router/build/module/util/protocols.js
index 595402d..113b375 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/protocols.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/protocols.js
@@ -1,6 +1,8 @@
 import { Protocol } from '@uniswap/router-sdk';
 export const TO_PROTOCOL = (protocol) => {
     switch (protocol.toLowerCase()) {
+        case 'v4':
+            return Protocol.V4;
         case 'v3':
             return Protocol.V3;
         case 'v2':
@@ -11,4 +13,4 @@ export const TO_PROTOCOL = (protocol) => {
             throw new Error(`Unknown protocol: {id}`);
     }
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdG9jb2xzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcHJvdG9jb2xzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUvQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxRQUFnQixFQUFZLEVBQUU7SUFDeEQsUUFBUSxRQUFRLENBQUMsV0FBVyxFQUFFLEVBQUU7UUFDOUIsS0FBSyxJQUFJO1lBQ1AsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDO1FBQ3JCLEtBQUssSUFBSTtZQUNQLE9BQU8sUUFBUSxDQUFDLEVBQUUsQ0FBQztRQUNyQixLQUFLLE9BQU87WUFDVixPQUFPLFFBQVEsQ0FBQyxLQUFLLENBQUM7UUFDeEI7WUFDRSxNQUFNLElBQUksS0FBSyxDQUFDLHdCQUF3QixDQUFDLENBQUM7S0FDN0M7QUFDSCxDQUFDLENBQUMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdG9jb2xzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcHJvdG9jb2xzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUvQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxRQUFnQixFQUFZLEVBQUU7SUFDeEQsUUFBUSxRQUFRLENBQUMsV0FBVyxFQUFFLEVBQUU7UUFDOUIsS0FBSyxJQUFJO1lBQ1AsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDO1FBQ3JCLEtBQUssSUFBSTtZQUNQLE9BQU8sUUFBUSxDQUFDLEVBQUUsQ0FBQztRQUNyQixLQUFLLElBQUk7WUFDUCxPQUFPLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDckIsS0FBSyxPQUFPO1lBQ1YsT0FBTyxRQUFRLENBQUMsS0FBSyxDQUFDO1FBQ3hCO1lBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0tBQzdDO0FBQ0gsQ0FBQyxDQUFDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/routes.d.ts b/node_modules/@uniswap/smart-order-router/build/module/util/routes.d.ts
index 2ac4f1d..746385c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/routes.d.ts
@@ -1,8 +1,11 @@
-import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
-import { RouteWithValidQuote } from '../routers/alpha-router';
-import { MixedRoute, V2Route, V3Route } from '../routers/router';
-export declare const routeToString: (route: V3Route | V2Route | MixedRoute) => string;
+import { Currency } from '@uniswap/sdk-core';
+import { AlphaRouterConfig, RouteWithValidQuote } from '../routers/alpha-router';
+import { SupportedRoutes } from '../routers/router';
+import { TPool } from '@uniswap/router-sdk/dist/utils/TPool';
+import { CachedRoutes } from '../providers';
+export declare const routeToTokens: (route: SupportedRoutes) => Currency[];
+export declare const routeToPools: (route: SupportedRoutes) => TPool[];
+export declare const poolToString: (pool: TPool) => string;
+export declare const routeToString: (route: SupportedRoutes) => string;
 export declare const routeAmountsToString: (routeAmounts: RouteWithValidQuote[]) => string;
-export declare const routeAmountToString: (routeAmount: RouteWithValidQuote) => string;
-export declare const poolToString: (p: Pool | Pair) => string;
+export declare function shouldWipeoutCachedRoutes(cachedRoutes?: CachedRoutes, routingConfig?: AlphaRouterConfig): boolean;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/routes.js b/node_modules/@uniswap/smart-order-router/build/module/util/routes.js
index de1013f..41c358f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/routes.js
@@ -1,24 +1,69 @@
-import { Protocol } from '@uniswap/router-sdk';
+import { ADDRESS_ZERO, Protocol } from '@uniswap/router-sdk';
 import { Percent } from '@uniswap/sdk-core';
 import { Pair } from '@uniswap/v2-sdk';
-import { Pool } from '@uniswap/v3-sdk';
+import { Pool as V3Pool } from '@uniswap/v3-sdk';
+import { Pool as V4Pool } from '@uniswap/v4-sdk';
 import _ from 'lodash';
 import { V3_CORE_FACTORY_ADDRESSES } from './addresses';
 import { CurrencyAmount } from '.';
+export const routeToTokens = (route) => {
+    switch (route.protocol) {
+        case Protocol.V4:
+            return route.currencyPath;
+        case Protocol.V3:
+            return route.tokenPath;
+        case Protocol.V2:
+        case Protocol.MIXED:
+            return route.path;
+        default:
+            throw new Error(`Unsupported route ${JSON.stringify(route)}`);
+    }
+};
+export const routeToPools = (route) => {
+    switch (route.protocol) {
+        case Protocol.V4:
+        case Protocol.V3:
+        case Protocol.MIXED:
+            return route.pools;
+        case Protocol.V2:
+            return route.pairs;
+        default:
+            throw new Error(`Unsupported route ${JSON.stringify(route)}`);
+    }
+};
+export const poolToString = (pool) => {
+    if (pool instanceof V4Pool) {
+        return ` -- ${pool.fee / 10000}% [${V4Pool.getPoolId(pool.token0, pool.token1, pool.fee, 0, ADDRESS_ZERO)}]`;
+    }
+    else if (pool instanceof V3Pool) {
+        return ` -- ${pool.fee / 10000}% [${V3Pool.getAddress(pool.token0, pool.token1, pool.fee, undefined, V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`;
+    }
+    else if (pool instanceof Pair) {
+        return ` -- [${Pair.getAddress(pool.token0, pool.token1)}]`;
+    }
+    else {
+        throw new Error(`Unsupported pool ${JSON.stringify(pool)}`);
+    }
+};
 export const routeToString = (route) => {
     const routeStr = [];
-    const tokens = route.protocol === Protocol.V3
-        ? route.tokenPath
-        : // MixedRoute and V2Route have path
-            route.path;
+    const tokens = routeToTokens(route);
     const tokenPath = _.map(tokens, (token) => `${token.symbol}`);
-    const pools = route.protocol === Protocol.V3 || route.protocol === Protocol.MIXED
-        ? route.pools
-        : route.pairs;
+    const pools = routeToPools(route);
     const poolFeePath = _.map(pools, (pool) => {
-        return `${pool instanceof Pool
-            ? ` -- ${pool.fee / 10000}% [${Pool.getAddress(pool.token0, pool.token1, pool.fee, undefined, V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`
-            : ` -- [${Pair.getAddress(pool.token0, pool.token1)}]`} --> `;
+        if (pool instanceof Pair) {
+            return ` -- [${Pair.getAddress(pool.token0, pool.token1)}]`;
+        }
+        else if (pool instanceof V3Pool) {
+            return ` -- ${pool.fee / 10000}% [${V3Pool.getAddress(pool.token0, pool.token1, pool.fee, undefined, V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`;
+        }
+        else if (pool instanceof V4Pool) {
+            return ` -- ${pool.fee / 10000}% [${V4Pool.getPoolId(pool.token0, pool.token1, pool.fee, 0, ADDRESS_ZERO)}]`;
+        }
+        else {
+            throw new Error(`Unsupported pool ${JSON.stringify(pool)}`);
+        }
+        return `${poolToString(pool)} --> `;
     });
     for (let i = 0; i < tokenPath.length; i++) {
         routeStr.push(tokenPath[i]);
@@ -40,11 +85,42 @@ export const routeAmountsToString = (routeAmounts) => {
     });
     return _.join(routeStrings, ', ');
 };
-export const routeAmountToString = (routeAmount) => {
-    const { route, amount } = routeAmount;
-    return `${amount.toExact()} = ${routeToString(route)}`;
-};
-export const poolToString = (p) => {
-    return `${p.token0.symbol}/${p.token1.symbol}${p instanceof Pool ? `/${p.fee / 10000}%` : ``}`;
-};
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFLdkIsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFFbkMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLEtBQXFDLEVBQzdCLEVBQUU7SUFDVixNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDcEIsTUFBTSxNQUFNLEdBQ1YsS0FBSyxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsRUFBRTtRQUM1QixDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVM7UUFDakIsQ0FBQyxDQUFDLG1DQUFtQztZQUNuQyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQ2pCLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUNULEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxLQUFLO1FBQ2pFLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSztRQUNiLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ2xCLE1B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
\ No newline at end of file
+export function shouldWipeoutCachedRoutes(cachedRoutes, routingConfig) {
+    // In case of optimisticCachedRoutes, we don't want to wipe out the cache
+    // This is because the upstream client will indicate that it's a perf sensitive (likely online) request,
+    // such that we should still use the cached routes.
+    // In case of routing-api,
+    // when intent=quote, optimisticCachedRoutes will be true, it means it's an online quote request, and we should use the cached routes.
+    // when intent=caching, optimisticCachedRoutes will be false, it means it's an async routing lambda invocation for the benefit of
+    // non-perf-sensitive, so that we can nullify the retrieved cached routes, if certain condition meets.
+    if (routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.optimisticCachedRoutes) {
+        return false;
+    }
+    const containsExcludedProtocolPools = cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.routes.find((route) => {
+        switch (route.protocol) {
+            case Protocol.MIXED:
+                return (route.route.pools.filter((pool) => {
+                    return poolIsInExcludedProtocols(pool, routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.excludedProtocolsFromMixed);
+                }).length > 0);
+            default:
+                return false;
+        }
+    });
+    return containsExcludedProtocolPools !== undefined;
+}
+function poolIsInExcludedProtocols(pool, excludedProtocolsFromMixed) {
+    var _a, _b, _c;
+    if (pool instanceof V4Pool) {
+        return (_a = excludedProtocolsFromMixed === null || excludedProtocolsFromMixed === void 0 ? void 0 : excludedProtocolsFromMixed.includes(Protocol.V4)) !== null && _a !== void 0 ? _a : false;
+    }
+    else if (pool instanceof V3Pool) {
+        return (_b = excludedProtocolsFromMixed === null || excludedProtocolsFromMixed === void 0 ? void 0 : excludedProtocolsFromMixed.includes(Protocol.V3)) !== null && _b !== void 0 ? _b : false;
+    }
+    else if (pool instanceof Pair) {
+        return (_c = excludedProtocolsFromMixed === null || excludedProtocolsFromMixed === void 0 ? void 0 : excludedProtocolsFromMixed.includes(Protocol.V2)) !== null && _c !== void 0 ? _c : false;
+    }
+    else {
+        return false;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDN0QsT0FBTyxFQUFZLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsSUFBSSxJQUFJLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxJQUFJLElBQUksTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBUXZCLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUd4RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBR25DLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUFDLEtBQXNCLEVBQWMsRUFBRTtJQUNsRSxRQUFRLEtBQUssQ0FBQyxRQUFRLEVBQUU7UUFDdEIsS0FBSyxRQUFRLENBQUMsRUFBRTtZQUNkLE9BQU8sS0FBSyxDQUFDLFlBQVksQ0FBQztRQUM1QixLQUFLLFFBQVEsQ0FBQyxFQUFFO1lBQ2QsT0FBTyxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ3pCLEtBQUssUUFBUSxDQUFDLEVBQUUsQ0FBQztRQUNqQixLQUFLLFFBQVEsQ0FBQyxLQUFLO1lBQ2pCLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQztRQUNwQjtZQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQ2pFO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsS0FBc0Is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
\ No newline at end of file
